const Tl=new Map,Yi=[],Iw=(a,n,i)=>{if(n&&typeof n.init=="function"&&typeof n.createInferenceSessionHandler=="function"){const c=Tl.get(a);if(c===void 0)Tl.set(a,{backend:n,priority:i});else{if(c.priority>i)return;if(c.priority===i&&c.backend!==n)throw new Error(`cannot register backend "${a}" using priority ${i}`)}if(i>=0){const p=Yi.indexOf(a);p!==-1&&Yi.splice(p,1);for(let m=0;m<Yi.length;m++)if(Tl.get(Yi[m]).priority<=i){Yi.splice(m,0,a);return}Yi.push(a)}return}throw new TypeError("not a valid backend")},ww=async a=>{const n=Tl.get(a);if(!n)return"backend not found.";if(n.initialized)return n.backend;if(n.aborted)return n.error;{const i=!!n.initPromise;try{return i||(n.initPromise=n.backend.init(a)),await n.initPromise,n.initialized=!0,n.backend}catch(c){return i||(n.error=`${c}`,n.aborted=!0),n.error}finally{delete n.initPromise}}},kw=async a=>{const n=a.executionProviders||[],i=n.map(E=>typeof E=="string"?E:E.name),c=i.length===0?Yi:i;let p;const m=[],C=new Set;for(const E of c){const x=await ww(E);typeof x=="string"?m.push({name:E,err:x}):(p||(p=x),p===x&&C.add(E))}if(!p)throw new Error(`no available backend found. ERR: ${m.map(E=>`[${E.name}] ${E.err}`).join(", ")}`);for(const{name:E,err:x}of m)i.includes(E)&&console.warn(`removing requested execution provider "${E}" from session options because it is not available: ${x}`);const I=n.filter(E=>C.has(typeof E=="string"?E:E.name));return[p,new Proxy(a,{get:(E,x)=>x==="executionProviders"?I:Reflect.get(E,x)})]},Ew="1.21.0";let Hg="warning";const Xa={wasm:{},webgl:{},webgpu:{},versions:{common:Ew},set logLevel(a){if(a!==void 0){if(typeof a!="string"||["verbose","info","warning","error","fatal"].indexOf(a)===-1)throw new Error(`Unsupported logging level: ${a}`);Hg=a}},get logLevel(){return Hg}};Object.defineProperty(Xa,"logLevel",{enumerable:!0});const Mw=Xa,vw=(a,n)=>{const i=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=a.dims[3],i.height=a.dims[2];const c=i.getContext("2d");if(c!=null){let p,m;n?.tensorLayout!==void 0&&n.tensorLayout==="NHWC"?(p=a.dims[2],m=a.dims[3]):(p=a.dims[3],m=a.dims[2]);const C=n?.format!==void 0?n.format:"RGB",I=n?.norm;let E,x;I===void 0||I.mean===void 0?E=[255,255,255,255]:typeof I.mean=="number"?E=[I.mean,I.mean,I.mean,I.mean]:(E=[I.mean[0],I.mean[1],I.mean[2],0],I.mean[3]!==void 0&&(E[3]=I.mean[3])),I===void 0||I.bias===void 0?x=[0,0,0,0]:typeof I.bias=="number"?x=[I.bias,I.bias,I.bias,I.bias]:(x=[I.bias[0],I.bias[1],I.bias[2],0],I.bias[3]!==void 0&&(x[3]=I.bias[3]));const D=m*p;let y=0,M=D,S=D*2,F=-1;C==="RGBA"?(y=0,M=D,S=D*2,F=D*3):C==="RGB"?(y=0,M=D,S=D*2):C==="RBG"&&(y=0,S=D,M=D*2);for(let L=0;L<m;L++)for(let Z=0;Z<p;Z++){const z=(a.data[y++]-x[0])*E[0],N=(a.data[M++]-x[1])*E[1],K=(a.data[S++]-x[2])*E[2],f=F===-1?255:(a.data[F++]-x[3])*E[3];c.fillStyle="rgba("+z+","+N+","+K+","+f+")",c.fillRect(Z,L,1,1)}if("toDataURL"in i)return i.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},xw=(a,n)=>{const i=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let c;if(i!=null){let p,m,C;n?.tensorLayout!==void 0&&n.tensorLayout==="NHWC"?(p=a.dims[2],m=a.dims[1],C=a.dims[3]):(p=a.dims[3],m=a.dims[2],C=a.dims[1]);const I=n!==void 0&&n.format!==void 0?n.format:"RGB",E=n?.norm;let x,D;E===void 0||E.mean===void 0?x=[255,255,255,255]:typeof E.mean=="number"?x=[E.mean,E.mean,E.mean,E.mean]:(x=[E.mean[0],E.mean[1],E.mean[2],255],E.mean[3]!==void 0&&(x[3]=E.mean[3])),E===void 0||E.bias===void 0?D=[0,0,0,0]:typeof E.bias=="number"?D=[E.bias,E.bias,E.bias,E.bias]:(D=[E.bias[0],E.bias[1],E.bias[2],0],E.bias[3]!==void 0&&(D[3]=E.bias[3]));const y=m*p;if(n!==void 0&&(n.format!==void 0&&C===4&&n.format!=="RGBA"||C===3&&n.format!=="RGB"&&n.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const M=4;let S=0,F=1,L=2,Z=3,z=0,N=y,K=y*2,f=-1;I==="RGBA"?(z=0,N=y,K=y*2,f=y*3):I==="RGB"?(z=0,N=y,K=y*2):I==="RBG"&&(z=0,K=y,N=y*2),c=i.createImageData(p,m);for(let k=0;k<m*p;S+=M,F+=M,L+=M,Z+=M,k++)c.data[S]=(a.data[z++]-D[0])*x[0],c.data[F]=(a.data[N++]-D[1])*x[1],c.data[L]=(a.data[K++]-D[2])*x[2],c.data[Z]=f===-1?255:(a.data[f++]-D[3])*x[3]}else throw new Error("Can not access image data");return c},Uc=(a,n)=>{if(a===void 0)throw new Error("Image buffer must be defined");if(n.height===void 0||n.width===void 0)throw new Error("Image height and width must be defined");if(n.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:i,width:c}=n,p=n.norm??{mean:255,bias:0};let m,C;typeof p.mean=="number"?m=[p.mean,p.mean,p.mean,p.mean]:m=[p.mean[0],p.mean[1],p.mean[2],p.mean[3]??255],typeof p.bias=="number"?C=[p.bias,p.bias,p.bias,p.bias]:C=[p.bias[0],p.bias[1],p.bias[2],p.bias[3]??0];const I=n.format!==void 0?n.format:"RGBA",E=n.tensorFormat!==void 0&&n.tensorFormat!==void 0?n.tensorFormat:"RGB",x=i*c,D=E==="RGBA"?new Float32Array(x*4):new Float32Array(x*3);let y=4,M=0,S=1,F=2,L=3,Z=0,z=x,N=x*2,K=-1;I==="RGB"&&(y=3,M=0,S=1,F=2,L=-1),E==="RGBA"?K=x*3:E==="RBG"?(Z=0,N=x,z=x*2):E==="BGR"&&(N=0,z=x,Z=x*2);for(let k=0;k<x;k++,M+=y,F+=y,S+=y,L+=y)D[Z++]=(a[M]+C[0])/m[0],D[z++]=(a[S]+C[1])/m[1],D[N++]=(a[F]+C[2])/m[2],K!==-1&&L!==-1&&(D[K++]=(a[L]+C[3])/m[3]);return E==="RGBA"?new Da("float32",D,[1,4,i,c]):new Da("float32",D,[1,3,i,c])},yw=async(a,n)=>{const i=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,c=typeof ImageData<"u"&&a instanceof ImageData,p=typeof ImageBitmap<"u"&&a instanceof ImageBitmap,m=typeof a=="string";let C,I=n??{};const E=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},x=D=>typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||D instanceof OffscreenCanvas?D.getContext("2d"):null;if(i){const D=E();D.width=a.width,D.height=a.height;const y=x(D);if(y!=null){let M=a.height,S=a.width;if(n!==void 0&&n.resizedHeight!==void 0&&n.resizedWidth!==void 0&&(M=n.resizedHeight,S=n.resizedWidth),n!==void 0){if(I=n,n.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");I.tensorFormat="RGBA",I.height=M,I.width=S}else I.tensorFormat="RGBA",I.height=M,I.width=S;y.drawImage(a,0,0),C=y.getImageData(0,0,S,M).data}else throw new Error("Can not access image data")}else if(c){let D,y;if(n!==void 0&&n.resizedWidth!==void 0&&n.resizedHeight!==void 0?(D=n.resizedHeight,y=n.resizedWidth):(D=a.height,y=a.width),n!==void 0&&(I=n),I.format="RGBA",I.height=D,I.width=y,n!==void 0){const M=E();M.width=y,M.height=D;const S=x(M);if(S!=null)S.putImageData(a,0,0),C=S.getImageData(0,0,y,D).data;else throw new Error("Can not access image data")}else C=a.data}else if(p){if(n===void 0)throw new Error("Please provide image config with format for Imagebitmap");const D=E();D.width=a.width,D.height=a.height;const y=x(D);if(y!=null){const M=a.height,S=a.width;return y.drawImage(a,0,0,S,M),C=y.getImageData(0,0,S,M).data,I.height=M,I.width=S,Uc(C,I)}else throw new Error("Can not access image data")}else{if(m)return new Promise((D,y)=>{const M=E(),S=x(M);if(!a||!S)return y();const F=new Image;F.crossOrigin="Anonymous",F.src=a,F.onload=()=>{M.width=F.width,M.height=F.height,S.drawImage(F,0,0,M.width,M.height);const L=S.getImageData(0,0,M.width,M.height);I.height=M.height,I.width=M.width,D(Uc(L.data,I))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(C!==void 0)return Uc(C,I);throw new Error("Input data provided is not supported - aborted tensor creation")},Bw=(a,n)=>{const{width:i,height:c,download:p,dispose:m}=n,C=[1,c,i,4];return new Da({location:"texture",type:"float32",texture:a,dims:C,download:p,dispose:m})},Dw=(a,n)=>{const{dataType:i,dims:c,download:p,dispose:m}=n;return new Da({location:"gpu-buffer",type:i??"float32",gpuBuffer:a,dims:c,download:p,dispose:m})},Pw=(a,n)=>{const{dataType:i,dims:c,download:p,dispose:m}=n;return new Da({location:"ml-tensor",type:i??"float32",mlTensor:a,dims:c,download:p,dispose:m})},Tw=(a,n,i)=>new Da({location:"cpu-pinned",type:a,data:n,dims:i??[n.length]}),Go=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Gl=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Ug=!1;const Gw=()=>{if(!Ug){Ug=!0;const a=typeof BigInt64Array<"u"&&BigInt64Array.from,n=typeof BigUint64Array<"u"&&BigUint64Array.from,i=globalThis.Float16Array,c=typeof i<"u"&&i.from;a&&(Go.set("int64",BigInt64Array),Gl.set(BigInt64Array,"int64")),n&&(Go.set("uint64",BigUint64Array),Gl.set(BigUint64Array,"uint64")),c?(Go.set("float16",i),Gl.set(i,"float16")):Go.set("float16",Uint16Array)}},Qw=a=>{let n=1;for(let i=0;i<a.length;i++){const c=a[i];if(typeof c!="number"||!Number.isSafeInteger(c))throw new TypeError(`dims[${i}] must be an integer, got: ${c}`);if(c<0)throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${c}`);n*=c}return n},Sw=(a,n)=>{switch(a.location){case"cpu":return new Da(a.type,a.data,n);case"cpu-pinned":return new Da({location:"cpu-pinned",data:a.data,type:a.type,dims:n});case"texture":return new Da({location:"texture",texture:a.texture,type:a.type,dims:n});case"gpu-buffer":return new Da({location:"gpu-buffer",gpuBuffer:a.gpuBuffer,type:a.type,dims:n});case"ml-tensor":return new Da({location:"ml-tensor",mlTensor:a.mlTensor,type:a.type,dims:n});default:throw new Error(`tensorReshape: tensor location ${a.location} is not supported`)}};let Da=class{constructor(n,i,c){Gw();let p,m;if(typeof n=="object"&&"location"in n)switch(this.dataLocation=n.location,p=n.type,m=n.dims,n.location){case"cpu-pinned":{const I=Go.get(p);if(!I)throw new TypeError(`unsupported type "${p}" to create tensor from pinned buffer`);if(!(n.data instanceof I))throw new TypeError(`buffer should be of type ${I.name}`);this.cpuData=n.data;break}case"texture":{if(p!=="float32")throw new TypeError(`unsupported type "${p}" to create tensor from texture`);this.gpuTextureData=n.texture,this.downloader=n.download,this.disposer=n.dispose;break}case"gpu-buffer":{if(p!=="float32"&&p!=="float16"&&p!=="int32"&&p!=="int64"&&p!=="uint32"&&p!=="uint8"&&p!=="bool"&&p!=="uint4"&&p!=="int4")throw new TypeError(`unsupported type "${p}" to create tensor from gpu buffer`);this.gpuBufferData=n.gpuBuffer,this.downloader=n.download,this.disposer=n.dispose;break}case"ml-tensor":{if(p!=="float32"&&p!=="float16"&&p!=="int32"&&p!=="int64"&&p!=="uint32"&&p!=="uint64"&&p!=="int8"&&p!=="uint8"&&p!=="bool"&&p!=="uint4"&&p!=="int4")throw new TypeError(`unsupported type "${p}" to create tensor from MLTensor`);this.mlTensorData=n.mlTensor,this.downloader=n.download,this.disposer=n.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let I,E;if(typeof n=="string")if(p=n,E=c,n==="string"){if(!Array.isArray(i))throw new TypeError("A string tensor's data must be a string array.");I=i}else{const x=Go.get(n);if(x===void 0)throw new TypeError(`Unsupported tensor type: ${n}.`);if(Array.isArray(i)){if(n==="float16"&&x===Uint16Array||n==="uint4"||n==="int4")throw new TypeError(`Creating a ${n} tensor from number array is not supported. Please use ${x.name} as data.`);n==="uint64"||n==="int64"?I=x.from(i,BigInt):I=x.from(i)}else if(i instanceof x)I=i;else if(i instanceof Uint8ClampedArray)if(n==="uint8")I=Uint8Array.from(i);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(n==="float16"&&i instanceof Uint16Array&&x!==Uint16Array)I=new globalThis.Float16Array(i.buffer,i.byteOffset,i.length);else throw new TypeError(`A ${p} tensor's data must be type of ${x}`)}else if(E=i,Array.isArray(n)){if(n.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const x=typeof n[0];if(x==="string")p="string",I=n;else if(x==="boolean")p="bool",I=Uint8Array.from(n);else throw new TypeError(`Invalid element type of data array: ${x}.`)}else if(n instanceof Uint8ClampedArray)p="uint8",I=Uint8Array.from(n);else{const x=Gl.get(n.constructor);if(x===void 0)throw new TypeError(`Unsupported type for tensor data: ${n.constructor}.`);p=x,I=n}if(E===void 0)E=[I.length];else if(!Array.isArray(E))throw new TypeError("A tensor's dims must be a number array");m=E,this.cpuData=I,this.dataLocation="cpu"}const C=Qw(m);if(this.cpuData&&C!==this.cpuData.length&&!((p==="uint4"||p==="int4")&&Math.ceil(C/2)===this.cpuData.length))throw new Error(`Tensor's size(${C}) does not match data length(${this.cpuData.length}).`);this.type=p,this.dims=m,this.size=C}static async fromImage(n,i){return yw(n,i)}static fromTexture(n,i){return Bw(n,i)}static fromGpuBuffer(n,i){return Dw(n,i)}static fromMLTensor(n,i){return Pw(n,i)}static fromPinnedBuffer(n,i,c){return Tw(n,i,c)}toDataURL(n){return vw(this,n)}toImageData(n){return xw(this,n)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(n){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const i=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=i,n&&this.disposer&&(this.disposer(),this.disposer=void 0),i}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(n){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Sw(this,n)}};const Bo=Da,Z4=(a,n)=>{(typeof Xa.trace>"u"?!Xa.wasm.trace:!Xa.trace)||console.timeStamp(`${a}::ORT::${n}`)},J4=(a,n)=>{const i=new Error().stack?.split(/\r\n|\r|\n/g)||[];let c=!1;for(let p=0;p<i.length;p++){if(c&&!i[p].includes("TRACE_FUNC")){let m=`FUNC_${a}::${i[p].trim().split(" ")[1]}`;n&&(m+=`::${n}`),Z4("CPU",m);return}i[p].includes("TRACE_FUNC")&&(c=!0)}},hu=a=>{(typeof Xa.trace>"u"?!Xa.wasm.trace:!Xa.trace)||J4("BEGIN",a)},mu=a=>{(typeof Xa.trace>"u"?!Xa.wasm.trace:!Xa.trace)||J4("END",a)};let Fw=class q4{constructor(n){this.handler=n}async run(n,i,c){hu();const p={};let m={};if(typeof n!="object"||n===null||n instanceof Bo||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let C=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Bo)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");C=!1;for(const x of i){if(typeof x!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(x)===-1)throw new RangeError(`'fetches' contains invalid output name: ${x}.`);p[x]=null}if(typeof c=="object"&&c!==null)m=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else{let x=!1;const D=Object.getOwnPropertyNames(i);for(const y of this.outputNames)if(D.indexOf(y)!==-1){const M=i[y];(M===null||M instanceof Bo)&&(x=!0,C=!1,p[y]=M)}if(x){if(typeof c=="object"&&c!==null)m=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else m=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const x of this.inputNames)if(typeof n[x]>"u")throw new Error(`input '${x}' is missing in 'feeds'.`);if(C)for(const x of this.outputNames)p[x]=null;const I=await this.handler.run(n,p,m),E={};for(const x in I)if(Object.hasOwnProperty.call(I,x)){const D=I[x];D instanceof Bo?E[x]=D:E[x]=new Bo(D.type,D.data,D.dims)}return mu(),E}async release(){return this.handler.dispose()}static async create(n,i,c,p){hu();let m,C={};if(typeof n=="string"){if(m=n,typeof i=="object"&&i!==null)C=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(n instanceof Uint8Array){if(m=n,typeof i=="object"&&i!==null)C=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(n instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&n instanceof SharedArrayBuffer){const D=n;let y=0,M=n.byteLength;if(typeof i=="object"&&i!==null)C=i;else if(typeof i=="number"){if(y=i,!Number.isSafeInteger(y))throw new RangeError("'byteOffset' must be an integer.");if(y<0||y>=D.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${D.byteLength}).`);if(M=n.byteLength-y,typeof c=="number"){if(M=c,!Number.isSafeInteger(M))throw new RangeError("'byteLength' must be an integer.");if(M<=0||y+M>D.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${D.byteLength-y}].`);if(typeof p=="object"&&p!==null)C=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(typeof c<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof i<"u")throw new TypeError("'options' must be an object.");m=new Uint8Array(D,y,M)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[I,E]=await kw(C),x=await I.createInferenceSessionHandler(m,E);return mu(),new q4(x)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Ow=Fw;var _w=Object.freeze({__proto__:null,InferenceSession:Ow,TRACE:Z4,TRACE_FUNC_BEGIN:hu,TRACE_FUNC_END:mu,Tensor:Bo,env:Mw,registerBackend:Iw});/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Nu=Object.defineProperty,Nw=Object.getOwnPropertyDescriptor,zw=Object.getOwnPropertyNames,Lw=Object.prototype.hasOwnProperty,Rw=(a=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(a,{get:(n,i)=>(typeof require<"u"?require:n)[i]}):a)(function(a){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+a+'" is not supported')}),Ct=(a,n)=>()=>(a&&(n=a(a=0)),n),Ho=(a,n)=>{for(var i in n)Nu(a,i,{get:n[i],enumerable:!0})},jw=(a,n,i,c)=>{if(n&&typeof n=="object"||typeof n=="function")for(let p of zw(n))!Lw.call(a,p)&&p!==i&&Nu(a,p,{get:()=>n[p],enumerable:!(c=Nw(n,p))||c.enumerable});return a},_0=a=>jw(Nu({},"__esModule",{value:!0}),a),o0,ii,Xi,Kg,$4,e3=Ct(()=>{o0=new Map,ii=[],Xi=(a,n,i)=>{if(n&&typeof n.init=="function"&&typeof n.createInferenceSessionHandler=="function"){let c=o0.get(a);if(c===void 0)o0.set(a,{backend:n,priority:i});else{if(c.priority>i)return;if(c.priority===i&&c.backend!==n)throw new Error(`cannot register backend "${a}" using priority ${i}`)}if(i>=0){let p=ii.indexOf(a);p!==-1&&ii.splice(p,1);for(let m=0;m<ii.length;m++)if(o0.get(ii[m]).priority<=i){ii.splice(m,0,a);return}ii.push(a)}return}throw new TypeError("not a valid backend")},Kg=async a=>{let n=o0.get(a);if(!n)return"backend not found.";if(n.initialized)return n.backend;if(n.aborted)return n.error;{let i=!!n.initPromise;try{return i||(n.initPromise=n.backend.init(a)),await n.initPromise,n.initialized=!0,n.backend}catch(c){return i||(n.error=`${c}`,n.aborted=!0),n.error}finally{delete n.initPromise}}},$4=async a=>{let n=a.executionProviders||[],i=n.map(E=>typeof E=="string"?E:E.name),c=i.length===0?ii:i,p,m=[],C=new Set;for(let E of c){let x=await Kg(E);typeof x=="string"?m.push({name:E,err:x}):(p||(p=x),p===x&&C.add(E))}if(!p)throw new Error(`no available backend found. ERR: ${m.map(E=>`[${E.name}] ${E.err}`).join(", ")}`);for(let{name:E,err:x}of m)i.includes(E)&&console.warn(`removing requested execution provider "${E}" from session options because it is not available: ${x}`);let I=n.filter(E=>C.has(typeof E=="string"?E:E.name));return[p,new Proxy(a,{get:(E,x)=>x==="executionProviders"?I:Reflect.get(E,x)})]}}),Ww=Ct(()=>{e3()}),t3,Vw=Ct(()=>{t3="1.22.0-dev.20250409-89f8206ba4"}),Kc,Ba,A3=Ct(()=>{Vw(),Kc="warning",Ba={wasm:{},webgl:{},webgpu:{},versions:{common:t3},set logLevel(a){if(a!==void 0){if(typeof a!="string"||["verbose","info","warning","error","fatal"].indexOf(a)===-1)throw new Error(`Unsupported logging level: ${a}`);Kc=a}},get logLevel(){return Kc}},Object.defineProperty(Ba,"logLevel",{enumerable:!0})}),wr,Yw=Ct(()=>{A3(),wr=Ba}),r3,s3,Hw=Ct(()=>{r3=(a,n)=>{let i=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=a.dims[3],i.height=a.dims[2];let c=i.getContext("2d");if(c!=null){let p,m;n?.tensorLayout!==void 0&&n.tensorLayout==="NHWC"?(p=a.dims[2],m=a.dims[3]):(p=a.dims[3],m=a.dims[2]);let C=n?.format!==void 0?n.format:"RGB",I=n?.norm,E,x;I===void 0||I.mean===void 0?E=[255,255,255,255]:typeof I.mean=="number"?E=[I.mean,I.mean,I.mean,I.mean]:(E=[I.mean[0],I.mean[1],I.mean[2],0],I.mean[3]!==void 0&&(E[3]=I.mean[3])),I===void 0||I.bias===void 0?x=[0,0,0,0]:typeof I.bias=="number"?x=[I.bias,I.bias,I.bias,I.bias]:(x=[I.bias[0],I.bias[1],I.bias[2],0],I.bias[3]!==void 0&&(x[3]=I.bias[3]));let D=m*p,y=0,M=D,S=D*2,F=-1;C==="RGBA"?(y=0,M=D,S=D*2,F=D*3):C==="RGB"?(y=0,M=D,S=D*2):C==="RBG"&&(y=0,S=D,M=D*2);for(let L=0;L<m;L++)for(let Z=0;Z<p;Z++){let z=(a.data[y++]-x[0])*E[0],N=(a.data[M++]-x[1])*E[1],K=(a.data[S++]-x[2])*E[2],f=F===-1?255:(a.data[F++]-x[3])*E[3];c.fillStyle="rgba("+z+","+N+","+K+","+f+")",c.fillRect(Z,L,1,1)}if("toDataURL"in i)return i.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},s3=(a,n)=>{let i=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),c;if(i!=null){let p,m,C;n?.tensorLayout!==void 0&&n.tensorLayout==="NHWC"?(p=a.dims[2],m=a.dims[1],C=a.dims[3]):(p=a.dims[3],m=a.dims[2],C=a.dims[1]);let I=n!==void 0&&n.format!==void 0?n.format:"RGB",E=n?.norm,x,D;E===void 0||E.mean===void 0?x=[255,255,255,255]:typeof E.mean=="number"?x=[E.mean,E.mean,E.mean,E.mean]:(x=[E.mean[0],E.mean[1],E.mean[2],255],E.mean[3]!==void 0&&(x[3]=E.mean[3])),E===void 0||E.bias===void 0?D=[0,0,0,0]:typeof E.bias=="number"?D=[E.bias,E.bias,E.bias,E.bias]:(D=[E.bias[0],E.bias[1],E.bias[2],0],E.bias[3]!==void 0&&(D[3]=E.bias[3]));let y=m*p;if(n!==void 0&&(n.format!==void 0&&C===4&&n.format!=="RGBA"||C===3&&n.format!=="RGB"&&n.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let M=4,S=0,F=1,L=2,Z=3,z=0,N=y,K=y*2,f=-1;I==="RGBA"?(z=0,N=y,K=y*2,f=y*3):I==="RGB"?(z=0,N=y,K=y*2):I==="RBG"&&(z=0,K=y,N=y*2),c=i.createImageData(p,m);for(let k=0;k<m*p;S+=M,F+=M,L+=M,Z+=M,k++)c.data[S]=(a.data[z++]-D[0])*x[0],c.data[F]=(a.data[N++]-D[1])*x[1],c.data[L]=(a.data[K++]-D[2])*x[2],c.data[Z]=f===-1?255:(a.data[f++]-D[3])*x[3]}else throw new Error("Can not access image data");return c}}),sl,a3,n3,i3,o3,l3,Uw=Ct(()=>{zu(),sl=(a,n)=>{if(a===void 0)throw new Error("Image buffer must be defined");if(n.height===void 0||n.width===void 0)throw new Error("Image height and width must be defined");if(n.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:i,width:c}=n,p=n.norm??{mean:255,bias:0},m,C;typeof p.mean=="number"?m=[p.mean,p.mean,p.mean,p.mean]:m=[p.mean[0],p.mean[1],p.mean[2],p.mean[3]??255],typeof p.bias=="number"?C=[p.bias,p.bias,p.bias,p.bias]:C=[p.bias[0],p.bias[1],p.bias[2],p.bias[3]??0];let I=n.format!==void 0?n.format:"RGBA",E=n.tensorFormat!==void 0&&n.tensorFormat!==void 0?n.tensorFormat:"RGB",x=i*c,D=E==="RGBA"?new Float32Array(x*4):new Float32Array(x*3),y=4,M=0,S=1,F=2,L=3,Z=0,z=x,N=x*2,K=-1;I==="RGB"&&(y=3,M=0,S=1,F=2,L=-1),E==="RGBA"?K=x*3:E==="RBG"?(Z=0,N=x,z=x*2):E==="BGR"&&(N=0,z=x,Z=x*2);for(let f=0;f<x;f++,M+=y,F+=y,S+=y,L+=y)D[Z++]=(a[M]+C[0])/m[0],D[z++]=(a[S]+C[1])/m[1],D[N++]=(a[F]+C[2])/m[2],K!==-1&&L!==-1&&(D[K++]=(a[L]+C[3])/m[3]);return E==="RGBA"?new ha("float32",D,[1,4,i,c]):new ha("float32",D,[1,3,i,c])},a3=async(a,n)=>{let i=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,c=typeof ImageData<"u"&&a instanceof ImageData,p=typeof ImageBitmap<"u"&&a instanceof ImageBitmap,m=typeof a=="string",C,I=n??{},E=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},x=D=>typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||D instanceof OffscreenCanvas?D.getContext("2d"):null;if(i){let D=E();D.width=a.width,D.height=a.height;let y=x(D);if(y!=null){let M=a.height,S=a.width;if(n!==void 0&&n.resizedHeight!==void 0&&n.resizedWidth!==void 0&&(M=n.resizedHeight,S=n.resizedWidth),n!==void 0){if(I=n,n.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");I.tensorFormat="RGBA",I.height=M,I.width=S}else I.tensorFormat="RGBA",I.height=M,I.width=S;y.drawImage(a,0,0),C=y.getImageData(0,0,S,M).data}else throw new Error("Can not access image data")}else if(c){let D,y;if(n!==void 0&&n.resizedWidth!==void 0&&n.resizedHeight!==void 0?(D=n.resizedHeight,y=n.resizedWidth):(D=a.height,y=a.width),n!==void 0&&(I=n),I.format="RGBA",I.height=D,I.width=y,n!==void 0){let M=E();M.width=y,M.height=D;let S=x(M);if(S!=null)S.putImageData(a,0,0),C=S.getImageData(0,0,y,D).data;else throw new Error("Can not access image data")}else C=a.data}else if(p){if(n===void 0)throw new Error("Please provide image config with format for Imagebitmap");let D=E();D.width=a.width,D.height=a.height;let y=x(D);if(y!=null){let M=a.height,S=a.width;return y.drawImage(a,0,0,S,M),C=y.getImageData(0,0,S,M).data,I.height=M,I.width=S,sl(C,I)}else throw new Error("Can not access image data")}else{if(m)return new Promise((D,y)=>{let M=E(),S=x(M);if(!a||!S)return y();let F=new Image;F.crossOrigin="Anonymous",F.src=a,F.onload=()=>{M.width=F.width,M.height=F.height,S.drawImage(F,0,0,M.width,M.height);let L=S.getImageData(0,0,M.width,M.height);I.height=M.height,I.width=M.width,D(sl(L.data,I))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(C!==void 0)return sl(C,I);throw new Error("Input data provided is not supported - aborted tensor creation")},n3=(a,n)=>{let{width:i,height:c,download:p,dispose:m}=n,C=[1,c,i,4];return new ha({location:"texture",type:"float32",texture:a,dims:C,download:p,dispose:m})},i3=(a,n)=>{let{dataType:i,dims:c,download:p,dispose:m}=n;return new ha({location:"gpu-buffer",type:i??"float32",gpuBuffer:a,dims:c,download:p,dispose:m})},o3=(a,n)=>{let{dataType:i,dims:c,download:p,dispose:m}=n;return new ha({location:"ml-tensor",type:i??"float32",mlTensor:a,dims:c,download:p,dispose:m})},l3=(a,n,i)=>new ha({location:"cpu-pinned",type:a,data:n,dims:i??[n.length]})}),Hi,y0,Xc,c3,Kw=Ct(()=>{Hi=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),y0=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Xc=!1,c3=()=>{if(!Xc){Xc=!0;let a=typeof BigInt64Array<"u"&&BigInt64Array.from,n=typeof BigUint64Array<"u"&&BigUint64Array.from,i=globalThis.Float16Array,c=typeof i<"u"&&i.from;a&&(Hi.set("int64",BigInt64Array),y0.set(BigInt64Array,"int64")),n&&(Hi.set("uint64",BigUint64Array),y0.set(BigUint64Array,"uint64")),c?(Hi.set("float16",i),y0.set(i,"float16")):Hi.set("float16",Uint16Array)}}}),u3,d3,Xw=Ct(()=>{zu(),u3=a=>{let n=1;for(let i=0;i<a.length;i++){let c=a[i];if(typeof c!="number"||!Number.isSafeInteger(c))throw new TypeError(`dims[${i}] must be an integer, got: ${c}`);if(c<0)throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${c}`);n*=c}return n},d3=(a,n)=>{switch(a.location){case"cpu":return new ha(a.type,a.data,n);case"cpu-pinned":return new ha({location:"cpu-pinned",data:a.data,type:a.type,dims:n});case"texture":return new ha({location:"texture",texture:a.texture,type:a.type,dims:n});case"gpu-buffer":return new ha({location:"gpu-buffer",gpuBuffer:a.gpuBuffer,type:a.type,dims:n});case"ml-tensor":return new ha({location:"ml-tensor",mlTensor:a.mlTensor,type:a.type,dims:n});default:throw new Error(`tensorReshape: tensor location ${a.location} is not supported`)}}}),ha,zu=Ct(()=>{Hw(),Uw(),Kw(),Xw(),ha=class{constructor(a,n,i){c3();let c,p;if(typeof a=="object"&&"location"in a)switch(this.dataLocation=a.location,c=a.type,p=a.dims,a.location){case"cpu-pinned":{let C=Hi.get(c);if(!C)throw new TypeError(`unsupported type "${c}" to create tensor from pinned buffer`);if(!(a.data instanceof C))throw new TypeError(`buffer should be of type ${C.name}`);this.cpuData=a.data;break}case"texture":{if(c!=="float32")throw new TypeError(`unsupported type "${c}" to create tensor from texture`);this.gpuTextureData=a.texture,this.downloader=a.download,this.disposer=a.dispose;break}case"gpu-buffer":{if(c!=="float32"&&c!=="float16"&&c!=="int32"&&c!=="int64"&&c!=="uint32"&&c!=="uint8"&&c!=="bool"&&c!=="uint4"&&c!=="int4")throw new TypeError(`unsupported type "${c}" to create tensor from gpu buffer`);this.gpuBufferData=a.gpuBuffer,this.downloader=a.download,this.disposer=a.dispose;break}case"ml-tensor":{if(c!=="float32"&&c!=="float16"&&c!=="int32"&&c!=="int64"&&c!=="uint32"&&c!=="uint64"&&c!=="int8"&&c!=="uint8"&&c!=="bool"&&c!=="uint4"&&c!=="int4")throw new TypeError(`unsupported type "${c}" to create tensor from MLTensor`);this.mlTensorData=a.mlTensor,this.downloader=a.download,this.disposer=a.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let C,I;if(typeof a=="string")if(c=a,I=i,a==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");C=n}else{let E=Hi.get(a);if(E===void 0)throw new TypeError(`Unsupported tensor type: ${a}.`);if(Array.isArray(n)){if(a==="float16"&&E===Uint16Array||a==="uint4"||a==="int4")throw new TypeError(`Creating a ${a} tensor from number array is not supported. Please use ${E.name} as data.`);a==="uint64"||a==="int64"?C=E.from(n,BigInt):C=E.from(n)}else if(n instanceof E)C=n;else if(n instanceof Uint8ClampedArray)if(a==="uint8")C=Uint8Array.from(n);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(a==="float16"&&n instanceof Uint16Array&&E!==Uint16Array)C=new globalThis.Float16Array(n.buffer,n.byteOffset,n.length);else throw new TypeError(`A ${c} tensor's data must be type of ${E}`)}else if(I=n,Array.isArray(a)){if(a.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let E=typeof a[0];if(E==="string")c="string",C=a;else if(E==="boolean")c="bool",C=Uint8Array.from(a);else throw new TypeError(`Invalid element type of data array: ${E}.`)}else if(a instanceof Uint8ClampedArray)c="uint8",C=Uint8Array.from(a);else{let E=y0.get(a.constructor);if(E===void 0)throw new TypeError(`Unsupported type for tensor data: ${a.constructor}.`);c=E,C=a}if(I===void 0)I=[C.length];else if(!Array.isArray(I))throw new TypeError("A tensor's dims must be a number array");p=I,this.cpuData=C,this.dataLocation="cpu"}let m=u3(p);if(this.cpuData&&m!==this.cpuData.length&&!((c==="uint4"||c==="int4")&&Math.ceil(m/2)===this.cpuData.length))throw new Error(`Tensor's size(${m}) does not match data length(${this.cpuData.length}).`);this.type=c,this.dims=p,this.size=m}static async fromImage(a,n){return a3(a,n)}static fromTexture(a,n){return n3(a,n)}static fromGpuBuffer(a,n){return i3(a,n)}static fromMLTensor(a,n){return o3(a,n)}static fromPinnedBuffer(a,n,i){return l3(a,n,i)}toDataURL(a){return r3(this,a)}toImageData(a){return s3(this,a)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(a){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,a&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(a){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return d3(this,a)}}}),Ua,f3=Ct(()=>{zu(),Ua=ha}),N0,Zc,Za,Pa,g3=Ct(()=>{A3(),N0=(a,n)=>{(typeof Ba.trace>"u"?!Ba.wasm.trace:!Ba.trace)||console.timeStamp(`${a}::ORT::${n}`)},Zc=(a,n)=>{let i=new Error().stack?.split(/\r\n|\r|\n/g)||[],c=!1;for(let p=0;p<i.length;p++){if(c&&!i[p].includes("TRACE_FUNC")){let m=`FUNC_${a}::${i[p].trim().split(" ")[1]}`;n&&(m+=`::${n}`),N0("CPU",m);return}i[p].includes("TRACE_FUNC")&&(c=!0)}},Za=a=>{(typeof Ba.trace>"u"?!Ba.wasm.trace:!Ba.trace)||Zc("BEGIN",a)},Pa=a=>{(typeof Ba.trace>"u"?!Ba.wasm.trace:!Ba.trace)||Zc("END",a)}}),p3,Zw=Ct(()=>{e3(),f3(),g3(),p3=class h3{constructor(n){this.handler=n}async run(n,i,c){Za();let p={},m={};if(typeof n!="object"||n===null||n instanceof Ua||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let C=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Ua)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");C=!1;for(let x of i){if(typeof x!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(x)===-1)throw new RangeError(`'fetches' contains invalid output name: ${x}.`);p[x]=null}if(typeof c=="object"&&c!==null)m=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else{let x=!1,D=Object.getOwnPropertyNames(i);for(let y of this.outputNames)if(D.indexOf(y)!==-1){let M=i[y];(M===null||M instanceof Ua)&&(x=!0,C=!1,p[y]=M)}if(x){if(typeof c=="object"&&c!==null)m=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else m=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let x of this.inputNames)if(typeof n[x]>"u")throw new Error(`input '${x}' is missing in 'feeds'.`);if(C)for(let x of this.outputNames)p[x]=null;let I=await this.handler.run(n,p,m),E={};for(let x in I)if(Object.hasOwnProperty.call(I,x)){let D=I[x];D instanceof Ua?E[x]=D:E[x]=new Ua(D.type,D.data,D.dims)}return Pa(),E}async release(){return this.handler.dispose()}static async create(n,i,c,p){Za();let m,C={};if(typeof n=="string"){if(m=n,typeof i=="object"&&i!==null)C=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(n instanceof Uint8Array){if(m=n,typeof i=="object"&&i!==null)C=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(n instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&n instanceof SharedArrayBuffer){let D=n,y=0,M=n.byteLength;if(typeof i=="object"&&i!==null)C=i;else if(typeof i=="number"){if(y=i,!Number.isSafeInteger(y))throw new RangeError("'byteOffset' must be an integer.");if(y<0||y>=D.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${D.byteLength}).`);if(M=n.byteLength-y,typeof c=="number"){if(M=c,!Number.isSafeInteger(M))throw new RangeError("'byteLength' must be an integer.");if(M<=0||y+M>D.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${D.byteLength-y}].`);if(typeof p=="object"&&p!==null)C=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(typeof c<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof i<"u")throw new TypeError("'options' must be an object.");m=new Uint8Array(D,y,M)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[I,E]=await $4(C),x=await I.createInferenceSessionHandler(m,E);return Pa(),new h3(x)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),Lu,Jw=Ct(()=>{Zw(),Lu=p3}),qw=Ct(()=>{}),$w=Ct(()=>{}),e5=Ct(()=>{}),t5=Ct(()=>{}),m3={};Ho(m3,{InferenceSession:()=>Lu,TRACE:()=>N0,TRACE_FUNC_BEGIN:()=>Za,TRACE_FUNC_END:()=>Pa,Tensor:()=>Ua,env:()=>wr,registerBackend:()=>Xi});var Ja=Ct(()=>{Ww(),Yw(),Jw(),f3(),qw(),$w(),g3(),e5(),t5()}),Ru=Ct(()=>{}),C3={};Ho(C3,{default:()=>b3});var Jc,qc,b3,A5=Ct(()=>{M8(),to(),ju(),Jc="ort-wasm-proxy-worker",qc=globalThis.self?.name===Jc,qc&&(self.onmessage=a=>{let{type:n,in:i}=a.data;try{switch(n){case"init-wasm":Wu(i.wasm).then(()=>{i1(i).then(()=>{postMessage({type:n})},c=>{postMessage({type:n,err:c})})},c=>{postMessage({type:n,err:c})});break;case"init-ep":{let{epName:c,env:p}=i;o1(p,c).then(()=>{postMessage({type:n})},m=>{postMessage({type:n,err:m})});break}case"copy-from":{let{buffer:c}=i,p=Vl(c);postMessage({type:n,out:p});break}case"create":{let{model:c,options:p}=i;l1(c,p).then(m=>{postMessage({type:n,out:m})},m=>{postMessage({type:n,err:m})});break}case"release":c1(i),postMessage({type:n});break;case"run":{let{sessionId:c,inputIndices:p,inputs:m,outputIndices:C,options:I}=i;u1(c,p,m,C,new Array(C.length).fill(null),I).then(E=>{E.some(x=>x[3]!=="cpu")?postMessage({type:n,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:n,out:E},f1([...m,...E]))},E=>{postMessage({type:n,err:E})});break}case"end-profiling":d1(i),postMessage({type:n});break;default:}}catch(c){postMessage({type:n,err:c})}}),b3=qc?null:a=>new Worker(a??pa,{type:"module",name:Jc})}),I3={};Ho(I3,{default:()=>w3});var $c,e2,w3,Xg,r5=Ct(()=>{e2=($c=import.meta.url,async function(a={}){var n,i,c=a,p=new Promise((G,W)=>{n=G,i=W}),m=typeof window=="object",C=typeof WorkerGlobalScope<"u",I=C&&self.name?.startsWith("em-pthread");c.mountExternalData=(G,W)=>{G.startsWith("./")&&(G=G.substring(2)),(c.Eb||(c.Eb=new Map)).set(G,W)},c.unmountExternalData=()=>{delete c.Eb};var E=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let x=G=>async(...W)=>{try{if(c.Fb)throw Error("Session already started");let q=c.Fb={dc:W[0],errors:[]},se=await G(...W);if(c.Fb!==q)throw Error("Session mismatch");c.Jb?.flush();let ue=q.errors;if(0<ue.length){let Te=await Promise.all(ue);if(Te=Te.filter($e=>$e),0<Te.length)throw Error(Te.join(`
`))}return se}finally{c.Fb=null}};c.jsepInit=(G,W)=>{if(G==="webgpu"){[c.Jb,c.Ub,c.Yb,c.Kb,c.Xb,c.jb,c.Zb,c.ac,c.Vb,c.Wb,c.$b]=W;let q=c.Jb;c.jsepRegisterBuffer=(se,ue,Te,$e)=>q.registerBuffer(se,ue,Te,$e),c.jsepGetBuffer=se=>q.getBuffer(se),c.jsepCreateDownloader=(se,ue,Te)=>q.createDownloader(se,ue,Te),c.jsepOnCreateSession=se=>{q.onCreateSession(se)},c.jsepOnReleaseSession=se=>{q.onReleaseSession(se)},c.jsepOnRunStart=se=>q.onRunStart(se),c.bc=(se,ue)=>{q.upload(se,ue)}}else if(G==="webnn"){let q=W[0];[c.nc,c.Nb,c.webnnEnsureTensor,c.Ob,c.webnnDownloadTensor]=W.slice(1),c.webnnReleaseTensorId=c.Nb,c.webnnUploadTensor=c.Ob,c.webnnOnRunStart=se=>q.onRunStart(se),c.webnnOnRunEnd=q.onRunEnd.bind(q),c.webnnRegisterMLContext=(se,ue)=>{q.registerMLContext(se,ue)},c.webnnOnReleaseSession=se=>{q.onReleaseSession(se)},c.webnnCreateMLTensorDownloader=(se,ue)=>q.createMLTensorDownloader(se,ue),c.webnnRegisterMLTensor=(se,ue,Te,$e)=>q.registerMLTensor(se,ue,Te,$e),c.webnnCreateMLContext=se=>q.createMLContext(se),c.webnnRegisterMLConstant=(se,ue,Te,$e,dt,xt)=>q.registerMLConstant(se,ue,Te,$e,dt,c.Eb,xt),c.webnnRegisterGraphInput=q.registerGraphInput.bind(q),c.webnnIsGraphInput=q.isGraphInput.bind(q),c.webnnCreateTemporaryTensor=q.createTemporaryTensor.bind(q),c.webnnIsInt64Supported=q.isInt64Supported.bind(q)}};let D=()=>{let G=(W,q,se)=>(...ue)=>{let Te=PA,$e=q?.();ue=W(...ue);let dt=q?.();return $e!==dt&&(W=dt,se($e),q=se=null),PA!=Te?new Promise((xt,_t)=>{ur={resolve:xt,reject:_t}}):ue};(()=>{for(let W of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])c[W]=G(c[W],()=>c[W],q=>c[W]=q)})(),x!==void 0&&(c._OrtRun=x(c._OrtRun),c._OrtRunWithBinding=x(c._OrtRunWithBinding)),D=void 0};c.asyncInit=()=>{D?.()};var y,M,S=Object.assign({},c),F=(G,W)=>{throw W},L="";(m||C)&&(C?L=self.location.href:typeof document<"u"&&document.currentScript&&(L=document.currentScript.src),$c&&(L=$c),L=L.startsWith("blob:")?"":L.slice(0,L.replace(/[?#].*/,"").lastIndexOf("/")+1),C&&(M=G=>{var W=new XMLHttpRequest;return W.open("GET",G,!1),W.responseType="arraybuffer",W.send(null),new Uint8Array(W.response)}),y=async G=>{if(Oe(G))return new Promise((q,se)=>{var ue=new XMLHttpRequest;ue.open("GET",G,!0),ue.responseType="arraybuffer",ue.onload=()=>{ue.status==200||ue.status==0&&ue.response?q(ue.response):se(ue.status)},ue.onerror=se,ue.send(null)});var W=await fetch(G,{credentials:"same-origin"});if(W.ok)return W.arrayBuffer();throw Error(W.status+" : "+W.url)});var Z=console.log.bind(console),z=console.error.bind(console),N=Z,K=z;Object.assign(c,S),S=null;var f,k,e,d,B,Ae,P,O,me,ee,Ce,we,xe,De=c.wasmBinary,ye=!1,Oe=G=>G.startsWith("file://");function _e(){return f.buffer!=d.buffer&&et(),d}function ne(){return f.buffer!=d.buffer&&et(),B}function te(){return f.buffer!=d.buffer&&et(),Ae}function pe(){return f.buffer!=d.buffer&&et(),P}function le(){return f.buffer!=d.buffer&&et(),O}function Qe(){return f.buffer!=d.buffer&&et(),me}function it(){return f.buffer!=d.buffer&&et(),ee}function qe(){return f.buffer!=d.buffer&&et(),xe}if(I){let G=function(W){try{var q=W.data,se=q.Bb;if(se==="load"){let ue=[];self.onmessage=Te=>ue.push(Te),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let Te of ue)G(Te);self.onmessage=G};for(let Te of q.Rb)c[Te]&&!c[Te].proxy||(c[Te]=(...$e)=>{postMessage({Bb:"callHandler",Qb:Te,args:$e})},Te=="print"&&(N=c[Te]),Te=="printErr"&&(K=c[Te]));f=q.kc,et(),ot(q.lc)}else if(se==="run"){XA(q.Ab),sn(q.Ab,0,0,1,0,0),Es(),Ie(q.Ab),Pt||(_a(),Pt=!0);try{Xr(q.fc,q.Hb)}catch(ue){if(ue!="unwind")throw ue}}else q.target!=="setimmediate"&&(se==="checkMailbox"?Pt&&Be():se&&(K(`worker: received unknown command ${se}`),K(q)))}catch(ue){throw qn(),ue}};var ot,Pt=!1;K=function(...W){W=W.join(" "),console.error(W)},self.alert=function(...W){postMessage({Bb:"alert",text:W.join(" "),ic:rn()})},self.onunhandledrejection=W=>{throw W.reason||W},self.onmessage=G}function et(){var G=f.buffer;c.HEAP8=d=new Int8Array(G),c.HEAP16=Ae=new Int16Array(G),c.HEAPU8=B=new Uint8Array(G),c.HEAPU16=P=new Uint16Array(G),c.HEAP32=O=new Int32Array(G),c.HEAPU32=me=new Uint32Array(G),c.HEAPF32=ee=new Float32Array(G),c.HEAPF64=xe=new Float64Array(G),c.HEAP64=Ce=new BigInt64Array(G),c.HEAPU64=we=new BigUint64Array(G)}function be(){I?startWorker(c):Xt.Ca()}I||(f=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),et());var Ne,ge=0,Ve=null;function at(){if(--ge==0&&Ve){var G=Ve;Ve=null,G()}}function Ze(G){throw K(G="Aborted("+G+")"),ye=!0,G=new WebAssembly.RuntimeError(G+". Build with -sASSERTIONS for more info."),i(G),G}function Ye(){return{a:{L:rt,Aa:We,b:Ta,$:ba,A:oA,pa:Us,X:ce,Z:ke,qa:Me,na:Le,ga:st,ma:Ot,J:Ht,Y:yt,V:gA,oa:lA,W:Sr,va:Ms,E:js,Q:Ks,O:Dr,D:us,u:ut,r:ht,P:Qt,z:dn,R:Fe,ja:X,T:je,aa:Bt,M:Mt,F:Je,ia:Ie,sa:bt,t:fr,Ba:Vr,w:Zs,o:Bs,l:Wt,c:cs,n:Tr,j:Ii,v:Qa,p:Wn,f:wi,s:gn,m:Js,e:_r,k:Gt,i:ds,g:Vn,d:pn,da:Sa,ea:ki,fa:$a,ba:BA,ca:hn,N:oa,xa:Ts,ua:mn,h:Xn,C:bn,G:lt,ta:Kn,x:Ei,ra:St,U:In,q:ia,y:wn,K:Zr,S:fs,za:br,ya:kn,ka:da,la:En,_:Dt,B:An,I:kt,ha:Gs,H:Zn,a:f,wa:Ft}}}var Y={829644:(G,W,q,se,ue)=>{if(c===void 0||!c.Eb)return 1;if((G=ZA(Number(G>>>0))).startsWith("./")&&(G=G.substring(2)),!(G=c.Eb.get(G)))return 2;if(W=Number(W>>>0),q=Number(q>>>0),se=Number(se>>>0),W+q>G.byteLength)return 3;try{let Te=G.subarray(W,W+q);switch(ue){case 0:ne().set(Te,se>>>0);break;case 1:c.mc?c.mc(se,Te):c.bc(se,Te);break;default:return 4}return 0}catch{return 4}},830468:(G,W,q)=>{c.Ob(G,ne().subarray(W>>>0,W+q>>>0))},830532:()=>c.nc(),830574:G=>{c.Nb(G)},830611:()=>{c.Vb()},830642:()=>{c.Wb()},830671:()=>{c.$b()},830696:G=>c.Ub(G),830729:G=>c.Yb(G),830761:(G,W,q)=>{c.Kb(Number(G),Number(W),Number(q),!0)},830824:(G,W,q)=>{c.Kb(Number(G),Number(W),Number(q))},830881:()=>typeof wasmOffsetConverter<"u",830938:G=>{c.jb("Abs",G,void 0)},830989:G=>{c.jb("Neg",G,void 0)},831040:G=>{c.jb("Floor",G,void 0)},831093:G=>{c.jb("Ceil",G,void 0)},831145:G=>{c.jb("Reciprocal",G,void 0)},831203:G=>{c.jb("Sqrt",G,void 0)},831255:G=>{c.jb("Exp",G,void 0)},831306:G=>{c.jb("Erf",G,void 0)},831357:G=>{c.jb("Sigmoid",G,void 0)},831412:(G,W,q)=>{c.jb("HardSigmoid",G,{alpha:W,beta:q})},831491:G=>{c.jb("Log",G,void 0)},831542:G=>{c.jb("Sin",G,void 0)},831593:G=>{c.jb("Cos",G,void 0)},831644:G=>{c.jb("Tan",G,void 0)},831695:G=>{c.jb("Asin",G,void 0)},831747:G=>{c.jb("Acos",G,void 0)},831799:G=>{c.jb("Atan",G,void 0)},831851:G=>{c.jb("Sinh",G,void 0)},831903:G=>{c.jb("Cosh",G,void 0)},831955:G=>{c.jb("Asinh",G,void 0)},832008:G=>{c.jb("Acosh",G,void 0)},832061:G=>{c.jb("Atanh",G,void 0)},832114:G=>{c.jb("Tanh",G,void 0)},832166:G=>{c.jb("Not",G,void 0)},832217:(G,W,q)=>{c.jb("Clip",G,{min:W,max:q})},832286:G=>{c.jb("Clip",G,void 0)},832338:(G,W)=>{c.jb("Elu",G,{alpha:W})},832396:G=>{c.jb("Gelu",G,void 0)},832448:G=>{c.jb("Relu",G,void 0)},832500:(G,W)=>{c.jb("LeakyRelu",G,{alpha:W})},832564:(G,W)=>{c.jb("ThresholdedRelu",G,{alpha:W})},832634:(G,W)=>{c.jb("Cast",G,{to:W})},832692:G=>{c.jb("Add",G,void 0)},832743:G=>{c.jb("Sub",G,void 0)},832794:G=>{c.jb("Mul",G,void 0)},832845:G=>{c.jb("Div",G,void 0)},832896:G=>{c.jb("Pow",G,void 0)},832947:G=>{c.jb("Equal",G,void 0)},833e3:G=>{c.jb("Greater",G,void 0)},833055:G=>{c.jb("GreaterOrEqual",G,void 0)},833117:G=>{c.jb("Less",G,void 0)},833169:G=>{c.jb("LessOrEqual",G,void 0)},833228:(G,W,q,se,ue)=>{c.jb("ReduceMean",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},833403:(G,W,q,se,ue)=>{c.jb("ReduceMax",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},833577:(G,W,q,se,ue)=>{c.jb("ReduceMin",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},833751:(G,W,q,se,ue)=>{c.jb("ReduceProd",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},833926:(G,W,q,se,ue)=>{c.jb("ReduceSum",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834100:(G,W,q,se,ue)=>{c.jb("ReduceL1",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834273:(G,W,q,se,ue)=>{c.jb("ReduceL2",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834446:(G,W,q,se,ue)=>{c.jb("ReduceLogSum",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834623:(G,W,q,se,ue)=>{c.jb("ReduceSumSquare",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834803:(G,W,q,se,ue)=>{c.jb("ReduceLogSumExp",G,{keepDims:!!W,noopWithEmptyAxes:!!q,axes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},834983:G=>{c.jb("Where",G,void 0)},835036:(G,W,q)=>{c.jb("Transpose",G,{perm:W?Array.from(le().subarray(Number(W)>>>0,Number(q)>>>0)):[]})},835160:(G,W,q,se)=>{c.jb("DepthToSpace",G,{blocksize:W,mode:ZA(q),format:se?"NHWC":"NCHW"})},835293:(G,W,q,se)=>{c.jb("DepthToSpace",G,{blocksize:W,mode:ZA(q),format:se?"NHWC":"NCHW"})},835426:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr,ss)=>{c.jb("ConvTranspose",G,{format:xt?"NHWC":"NCHW",autoPad:W,dilations:[q],group:se,kernelShape:[ue],pads:[Te,$e],strides:[dt],wIsConst:()=>!!_e()[_t>>>0],outputPadding:iA?Array.from(le().subarray(Number(iA)>>>0,Number(MA)>>>0)):[],outputShape:SA?Array.from(le().subarray(Number(SA)>>>0,Number(Yr)>>>0)):[],activation:ZA(ss)})},835859:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("ConvTranspose",G,{format:dt?"NHWC":"NCHW",autoPad:W,dilations:Array.from(le().subarray(Number(q)>>>0,2+(Number(q)>>>0)>>>0)),group:se,kernelShape:Array.from(le().subarray(Number(ue)>>>0,2+(Number(ue)>>>0)>>>0)),pads:Array.from(le().subarray(Number(Te)>>>0,4+(Number(Te)>>>0)>>>0)),strides:Array.from(le().subarray(Number($e)>>>0,2+(Number($e)>>>0)>>>0)),wIsConst:()=>!!_e()[xt>>>0],outputPadding:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],outputShape:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[],activation:ZA(Yr)})},836520:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr,ss)=>{c.jb("ConvTranspose",G,{format:xt?"NHWC":"NCHW",autoPad:W,dilations:[q],group:se,kernelShape:[ue],pads:[Te,$e],strides:[dt],wIsConst:()=>!!_e()[_t>>>0],outputPadding:iA?Array.from(le().subarray(Number(iA)>>>0,Number(MA)>>>0)):[],outputShape:SA?Array.from(le().subarray(Number(SA)>>>0,Number(Yr)>>>0)):[],activation:ZA(ss)})},836953:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("ConvTranspose",G,{format:dt?"NHWC":"NCHW",autoPad:W,dilations:Array.from(le().subarray(Number(q)>>>0,2+(Number(q)>>>0)>>>0)),group:se,kernelShape:Array.from(le().subarray(Number(ue)>>>0,2+(Number(ue)>>>0)>>>0)),pads:Array.from(le().subarray(Number(Te)>>>0,4+(Number(Te)>>>0)>>>0)),strides:Array.from(le().subarray(Number($e)>>>0,2+(Number($e)>>>0)>>>0)),wIsConst:()=>!!_e()[xt>>>0],outputPadding:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],outputShape:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[],activation:ZA(Yr)})},837614:(G,W)=>{c.jb("GlobalAveragePool",G,{format:W?"NHWC":"NCHW"})},837705:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("AveragePool",G,{format:Yr?"NHWC":"NCHW",auto_pad:W,ceil_mode:q,count_include_pad:se,storage_order:ue,dilations:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[],kernel_shape:dt?Array.from(le().subarray(Number(dt)>>>0,Number(xt)>>>0)):[],pads:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],strides:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[]})},838184:(G,W)=>{c.jb("GlobalAveragePool",G,{format:W?"NHWC":"NCHW"})},838275:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("AveragePool",G,{format:Yr?"NHWC":"NCHW",auto_pad:W,ceil_mode:q,count_include_pad:se,storage_order:ue,dilations:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[],kernel_shape:dt?Array.from(le().subarray(Number(dt)>>>0,Number(xt)>>>0)):[],pads:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],strides:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[]})},838754:(G,W)=>{c.jb("GlobalMaxPool",G,{format:W?"NHWC":"NCHW"})},838841:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("MaxPool",G,{format:Yr?"NHWC":"NCHW",auto_pad:W,ceil_mode:q,count_include_pad:se,storage_order:ue,dilations:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[],kernel_shape:dt?Array.from(le().subarray(Number(dt)>>>0,Number(xt)>>>0)):[],pads:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],strides:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[]})},839316:(G,W)=>{c.jb("GlobalMaxPool",G,{format:W?"NHWC":"NCHW"})},839403:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr)=>{c.jb("MaxPool",G,{format:Yr?"NHWC":"NCHW",auto_pad:W,ceil_mode:q,count_include_pad:se,storage_order:ue,dilations:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[],kernel_shape:dt?Array.from(le().subarray(Number(dt)>>>0,Number(xt)>>>0)):[],pads:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],strides:MA?Array.from(le().subarray(Number(MA)>>>0,Number(SA)>>>0)):[]})},839878:(G,W,q,se,ue)=>{c.jb("Gemm",G,{alpha:W,beta:q,transA:se,transB:ue})},839982:G=>{c.jb("MatMul",G,void 0)},840036:(G,W,q,se)=>{c.jb("ArgMax",G,{keepDims:!!W,selectLastIndex:!!q,axis:se})},840144:(G,W,q,se)=>{c.jb("ArgMin",G,{keepDims:!!W,selectLastIndex:!!q,axis:se})},840252:(G,W)=>{c.jb("Softmax",G,{axis:W})},840315:(G,W)=>{c.jb("Concat",G,{axis:W})},840375:(G,W,q,se,ue)=>{c.jb("Split",G,{axis:W,numOutputs:q,splitSizes:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},840531:G=>{c.jb("Expand",G,void 0)},840585:(G,W)=>{c.jb("Gather",G,{axis:Number(W)})},840656:(G,W)=>{c.jb("GatherElements",G,{axis:Number(W)})},840735:(G,W)=>{c.jb("GatherND",G,{batch_dims:Number(W)})},840814:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA)=>{c.jb("Resize",G,{antialias:W,axes:q?Array.from(le().subarray(Number(q)>>>0,Number(se)>>>0)):[],coordinateTransformMode:ZA(ue),cubicCoeffA:Te,excludeOutside:$e,extrapolationValue:dt,keepAspectRatioPolicy:ZA(xt),mode:ZA(_t),nearestMode:ZA(iA)})},841176:(G,W,q,se,ue,Te,$e)=>{c.jb("Slice",G,{starts:W?Array.from(le().subarray(Number(W)>>>0,Number(q)>>>0)):[],ends:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[],axes:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[]})},841440:G=>{c.jb("Tile",G,void 0)},841492:(G,W,q)=>{c.jb("InstanceNormalization",G,{epsilon:W,format:q?"NHWC":"NCHW"})},841606:(G,W,q)=>{c.jb("InstanceNormalization",G,{epsilon:W,format:q?"NHWC":"NCHW"})},841720:G=>{c.jb("Range",G,void 0)},841773:(G,W)=>{c.jb("Einsum",G,{equation:ZA(W)})},841854:(G,W,q,se,ue)=>{c.jb("Pad",G,{mode:W,value:q,pads:se?Array.from(le().subarray(Number(se)>>>0,Number(ue)>>>0)):[]})},841997:(G,W,q,se,ue,Te)=>{c.jb("BatchNormalization",G,{epsilon:W,momentum:q,spatial:!!ue,trainingMode:!!se,format:Te?"NHWC":"NCHW"})},842166:(G,W,q,se,ue,Te)=>{c.jb("BatchNormalization",G,{epsilon:W,momentum:q,spatial:!!ue,trainingMode:!!se,format:Te?"NHWC":"NCHW"})},842335:(G,W,q)=>{c.jb("CumSum",G,{exclusive:Number(W),reverse:Number(q)})},842432:(G,W,q)=>{c.jb("DequantizeLinear",G,{axis:W,blockSize:q})},842522:(G,W,q,se,ue)=>{c.jb("GridSample",G,{align_corners:W,mode:ZA(q),padding_mode:ZA(se),format:ue?"NHWC":"NCHW"})},842692:(G,W,q,se,ue)=>{c.jb("GridSample",G,{align_corners:W,mode:ZA(q),padding_mode:ZA(se),format:ue?"NHWC":"NCHW"})},842862:(G,W)=>{c.jb("ScatterND",G,{reduction:ZA(W)})},842947:(G,W,q,se,ue,Te,$e,dt,xt)=>{c.jb("Attention",G,{numHeads:W,isUnidirectional:q,maskFilterValue:se,scale:ue,doRotary:Te,qkvHiddenSizes:$e?Array.from(le().subarray(Number(dt)>>>0,Number(dt)+$e>>>0)):[],pastPresentShareBuffer:!!xt})},843219:G=>{c.jb("BiasAdd",G,void 0)},843274:G=>{c.jb("BiasSplitGelu",G,void 0)},843335:G=>{c.jb("FastGelu",G,void 0)},843391:(G,W,q,se,ue,Te,$e,dt,xt,_t,iA,MA,SA,Yr,ss,yn)=>{c.jb("Conv",G,{format:MA?"NHWC":"NCHW",auto_pad:W,dilations:q?Array.from(le().subarray(Number(q)>>>0,Number(se)>>>0)):[],group:ue,kernel_shape:Te?Array.from(le().subarray(Number(Te)>>>0,Number($e)>>>0)):[],pads:dt?Array.from(le().subarray(Number(dt)>>>0,Number(xt)>>>0)):[],strides:_t?Array.from(le().subarray(Number(_t)>>>0,Number(iA)>>>0)):[],w_is_const:()=>!!_e()[Number(SA)>>>0],activation:ZA(Yr),activation_params:ss?Array.from(it().subarray(Number(ss)>>>0,Number(yn)>>>0)):[]})},843975:G=>{c.jb("Gelu",G,void 0)},844027:(G,W,q,se,ue,Te,$e,dt,xt)=>{c.jb("GroupQueryAttention",G,{numHeads:W,kvNumHeads:q,scale:se,softcap:ue,doRotary:Te,rotaryInterleaved:$e,smoothSoftmax:dt,localWindowSize:xt})},844244:(G,W,q,se)=>{c.jb("LayerNormalization",G,{axis:W,epsilon:q,simplified:!!se})},844355:(G,W,q,se)=>{c.jb("LayerNormalization",G,{axis:W,epsilon:q,simplified:!!se})},844466:(G,W,q,se,ue,Te)=>{c.jb("MatMulNBits",G,{k:W,n:q,accuracyLevel:se,bits:ue,blockSize:Te})},844593:(G,W,q,se,ue,Te)=>{c.jb("MultiHeadAttention",G,{numHeads:W,isUnidirectional:q,maskFilterValue:se,scale:ue,doRotary:Te})},844752:(G,W)=>{c.jb("QuickGelu",G,{alpha:W})},844816:(G,W,q,se,ue)=>{c.jb("RotaryEmbedding",G,{interleaved:!!W,numHeads:q,rotaryEmbeddingDim:se,scale:ue})},844955:(G,W,q)=>{c.jb("SkipLayerNormalization",G,{epsilon:W,simplified:!!q})},845057:(G,W,q)=>{c.jb("SkipLayerNormalization",G,{epsilon:W,simplified:!!q})},845159:(G,W,q,se)=>{c.jb("GatherBlockQuantized",G,{gatherAxis:W,quantizeAxis:q,blockSize:se})},845280:G=>{c.Zb(G)},845314:(G,W)=>c.ac(Number(G),Number(W),c.Fb.dc,c.Fb.errors)};function We(G,W,q){return rr(async()=>{await c.Xb(Number(G),Number(W),Number(q))})}function rt(){return typeof wasmOffsetConverter<"u"}class fe{name="ExitStatus";constructor(W){this.message=`Program terminated with exit(${W})`,this.status=W}}var Et=G=>{G.terminate(),G.onmessage=()=>{}},Ue=[],Lt=G=>{Tt.length==0&&(Ls(),WA(Tt[0]));var W=Tt.pop();if(!W)return 6;aA.push(W),Nt[G.Ab]=W,W.Ab=G.Ab;var q={Bb:"run",fc:G.ec,Hb:G.Hb,Ab:G.Ab};return W.postMessage(q,G.Mb),0},It=0,mt=(G,W,...q)=>{for(var se=2*q.length,ue=Os(),Te=Er(8*se),$e=Te>>>3,dt=0;dt<q.length;dt++){var xt=q[dt];typeof xt=="bigint"?(Ce[$e+2*dt]=1n,Ce[$e+2*dt+1]=xt):(Ce[$e+2*dt]=0n,qe()[$e+2*dt+1>>>0]=xt)}return G=eA(G,0,se,Te,W),Fs(ue),G};function Ft(G){if(I)return mt(0,1,G);if(e=G,!(0<It)){for(var W of aA)Et(W);for(W of Tt)Et(W);Tt=[],aA=[],Nt={},ye=!0}F(0,new fe(G))}function pt(G){if(I)return mt(1,0,G);Dt(G)}var Dt=G=>{if(e=G,I)throw pt(G),"unwind";Ft(G)},Tt=[],aA=[],jt=[],Nt={},KA=G=>{var W=G.Ab;delete Nt[W],Tt.push(G),aA.splice(aA.indexOf(G),1),G.Ab=0,Ss(W)};function Es(){jt.forEach(G=>G())}var WA=G=>new Promise(W=>{G.onmessage=ue=>{var Te=(ue=ue.data).Bb;if(ue.Gb&&ue.Gb!=rn()){var $e=Nt[ue.Gb];$e?$e.postMessage(ue,ue.Mb):K(`Internal error! Worker sent a message "${Te}" to target pthread ${ue.Gb}, but that thread no longer exists!`)}else Te==="checkMailbox"?Be():Te==="spawnThread"?Lt(ue):Te==="cleanupThread"?KA(Nt[ue.hc]):Te==="loaded"?(G.loaded=!0,W(G)):Te==="alert"?alert(`Thread ${ue.ic}: ${ue.text}`):ue.target==="setimmediate"?G.postMessage(ue):Te==="callHandler"?c[ue.Qb](...ue.args):Te&&K(`worker sent an unknown command ${Te}`)},G.onerror=ue=>{throw K(`worker sent an error! ${ue.filename}:${ue.lineno}: ${ue.message}`),ue};var q,se=[];for(q of[])c.propertyIsEnumerable(q)&&se.push(q);G.postMessage({Bb:"load",Rb:se,kc:f,lc:k})});function Ls(){var G=new Worker((()=>{let W=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new W("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});Tt.push(G)}var XA=G=>{et();var W=Qe()[G+52>>>2>>>0];G=Qe()[G+56>>>2>>>0],Nr(W,W-G),Fs(W)},Xr=(G,W)=>{It=0,G=vn(G,W),0<It?e=G:an(G)};class Ps{constructor(W){this.Ib=W-24}}function Ta(G,W,q){var se=new Ps(G>>>=0);throw W>>>=0,q>>>=0,Qe()[se.Ib+16>>>2>>>0]=0,Qe()[se.Ib+4>>>2>>>0]=W,Qe()[se.Ib+8>>>2>>>0]=q,G}function Ca(G,W,q,se){return I?mt(2,1,G,W,q,se):ba(G,W,q,se)}function ba(G,W,q,se){if(G>>>=0,q>>>=0,se>>>=0,E===void 0)return 6;var ue=[];return I&&ue.length===0?Ca(G,W>>>=0,q,se):(G={ec:q,Ab:G,Hb:se,Mb:ue},I?(G.Bb="spawnThread",postMessage(G,ue),0):Lt(G))}var wt=typeof TextDecoder<"u"?new TextDecoder:void 0,Qr=(G,W=0,q=NaN)=>{var se=(W>>>=0)+q;for(q=W;G[q]&&!(q>=se);)++q;if(16<q-W&&G.buffer&&wt)return wt.decode(G.buffer instanceof ArrayBuffer?G.subarray(W,q):G.slice(W,q));for(se="";W<q;){var ue=G[W++];if(128&ue){var Te=63&G[W++];if((224&ue)==192)se+=String.fromCharCode((31&ue)<<6|Te);else{var $e=63&G[W++];65536>(ue=(240&ue)==224?(15&ue)<<12|Te<<6|$e:(7&ue)<<18|Te<<12|$e<<6|63&G[W++])?se+=String.fromCharCode(ue):(ue-=65536,se+=String.fromCharCode(55296|ue>>10,56320|1023&ue))}}else se+=String.fromCharCode(ue)}return se},ZA=(G,W)=>(G>>>=0)?Qr(ne(),G,W):"";function oA(G,W,q){return I?mt(3,1,G,W,q):0}function Us(G,W){if(I)return mt(4,1,G,W)}var U=G=>{for(var W=0,q=0;q<G.length;++q){var se=G.charCodeAt(q);127>=se?W++:2047>=se?W+=2:55296<=se&&57343>=se?(W+=4,++q):W+=3}return W},Ee=(G,W,q)=>{var se=ne();if(W>>>=0,0<q){var ue=W;q=W+q-1;for(var Te=0;Te<G.length;++Te){var $e=G.charCodeAt(Te);if(55296<=$e&&57343>=$e&&($e=65536+((1023&$e)<<10)|1023&G.charCodeAt(++Te)),127>=$e){if(W>=q)break;se[W++>>>0]=$e}else{if(2047>=$e){if(W+1>=q)break;se[W++>>>0]=192|$e>>6}else{if(65535>=$e){if(W+2>=q)break;se[W++>>>0]=224|$e>>12}else{if(W+3>=q)break;se[W++>>>0]=240|$e>>18,se[W++>>>0]=128|$e>>12&63}se[W++>>>0]=128|$e>>6&63}se[W++>>>0]=128|63&$e}}se[W>>>0]=0,G=W-ue}else G=0;return G};function ce(G,W){if(I)return mt(5,1,G,W)}function ke(G,W,q){if(I)return mt(6,1,G,W,q)}function Me(G,W,q){return I?mt(7,1,G,W,q):0}function Le(G,W){if(I)return mt(8,1,G,W)}function st(G,W,q){if(I)return mt(9,1,G,W,q)}function Ot(G,W,q,se){if(I)return mt(10,1,G,W,q,se)}function Ht(G,W,q,se){if(I)return mt(11,1,G,W,q,se)}function yt(G,W,q,se){if(I)return mt(12,1,G,W,q,se)}function gA(G){if(I)return mt(13,1,G)}function lA(G,W){if(I)return mt(14,1,G,W)}function Sr(G,W,q){if(I)return mt(15,1,G,W,q)}var GA,kr,Ms=()=>Ze(""),DA=G=>{for(var W="";ne()[G>>>0];)W+=GA[ne()[G++>>>0]];return W},Fr={},Rs={};function xr(G,W,q={}){return function(se,ue,Te={}){var $e=ue.name;if(!se)throw new kr(`type "${$e}" must have a positive integer typeid pointer`);if(Rs.hasOwnProperty(se)){if(Te.Sb)return;throw new kr(`Cannot register type '${$e}' twice`)}Rs[se]=ue,Fr.hasOwnProperty(se)&&(ue=Fr[se],delete Fr[se],ue.forEach(dt=>dt()))}(G,W,q)}var bs=(G,W,q)=>{switch(W){case 1:return q?se=>_e()[se>>>0]:se=>ne()[se>>>0];case 2:return q?se=>te()[se>>>1>>>0]:se=>pe()[se>>>1>>>0];case 4:return q?se=>le()[se>>>2>>>0]:se=>Qe()[se>>>2>>>0];case 8:return q?se=>Ce[se>>>3]:se=>we[se>>>3];default:throw new TypeError(`invalid integer width (${W}): ${G}`)}};function js(G,W,q){q>>>=0,xr(G>>>=0,{name:W=DA(W>>>0),fromWireType:se=>se,toWireType:function(se,ue){if(typeof ue!="bigint"&&typeof ue!="number")throw ue=ue===null?"null":(se=typeof ue)=="object"||se==="array"||se==="function"?ue.toString():""+ue,new TypeError(`Cannot convert "${ue}" to ${this.name}`);return typeof ue=="number"&&(ue=BigInt(ue)),ue},Cb:LA,readValueFromPointer:bs(W,q,W.indexOf("u")==-1),Db:null})}var LA=8;function Ks(G,W,q,se){xr(G>>>=0,{name:W=DA(W>>>0),fromWireType:function(ue){return!!ue},toWireType:function(ue,Te){return Te?q:se},Cb:LA,readValueFromPointer:function(ue){return this.fromWireType(ne()[ue>>>0])},Db:null})}var Ws=[],Cr=[];function cs(G){9<(G>>>=0)&&--Cr[G+1]==0&&(Cr[G]=void 0,Ws.push(G))}var yr=G=>{if(!G)throw new kr("Cannot use deleted val. handle = "+G);return Cr[G]},Br=G=>{switch(G){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let W=Ws.pop()||Cr.length;return Cr[W]=G,Cr[W+1]=1,W}};function vs(G){return this.fromWireType(Qe()[G>>>2>>>0])}var qt={name:"emscripten::val",fromWireType:G=>{var W=yr(G);return cs(G),W},toWireType:(G,W)=>Br(W),Cb:LA,readValueFromPointer:vs,Db:null};function Dr(G){return xr(G>>>0,qt)}var Is=(G,W)=>{switch(W){case 4:return function(q){return this.fromWireType(it()[q>>>2>>>0])};case 8:return function(q){return this.fromWireType(qe()[q>>>3>>>0])};default:throw new TypeError(`invalid float width (${W}): ${G}`)}};function us(G,W,q){q>>>=0,xr(G>>>=0,{name:W=DA(W>>>0),fromWireType:se=>se,toWireType:(se,ue)=>ue,Cb:LA,readValueFromPointer:Is(W,q),Db:null})}function ut(G,W,q,se,ue){if(G>>>=0,q>>>=0,W=DA(W>>>0),ue===-1&&(ue=4294967295),ue=dt=>dt,se===0){var Te=32-8*q;ue=dt=>dt<<Te>>>Te}var $e=W.includes("unsigned")?function(dt,xt){return xt>>>0}:function(dt,xt){return xt};xr(G,{name:W,fromWireType:ue,toWireType:$e,Cb:LA,readValueFromPointer:bs(W,q,se!==0),Db:null})}function ht(G,W,q){function se(Te){var $e=Qe()[Te>>>2>>>0];return Te=Qe()[Te+4>>>2>>>0],new ue(_e().buffer,Te,$e)}var ue=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][W];xr(G>>>=0,{name:q=DA(q>>>0),fromWireType:se,Cb:LA,readValueFromPointer:se},{Sb:!0})}function Qt(G,W){xr(G>>>=0,{name:W=DA(W>>>0),fromWireType:function(q){for(var se,ue=Qe()[q>>>2>>>0],Te=q+4,$e=Te,dt=0;dt<=ue;++dt){var xt=Te+dt;dt!=ue&&ne()[xt>>>0]!=0||($e=ZA($e,xt-$e),se===void 0?se=$e:(se+="\0",se+=$e),$e=xt+1)}return Qs(q),se},toWireType:function(q,se){se instanceof ArrayBuffer&&(se=new Uint8Array(se));var ue=typeof se=="string";if(!(ue||se instanceof Uint8Array||se instanceof Uint8ClampedArray||se instanceof Int8Array))throw new kr("Cannot pass non-string to std::string");var Te=ue?U(se):se.length,$e=gr(4+Te+1),dt=$e+4;if(Qe()[$e>>>2>>>0]=Te,ue)Ee(se,dt,Te+1);else if(ue)for(ue=0;ue<Te;++ue){var xt=se.charCodeAt(ue);if(255<xt)throw Qs($e),new kr("String has UTF-16 code units that do not fit in 8 bits");ne()[dt+ue>>>0]=xt}else for(ue=0;ue<Te;++ue)ne()[dt+ue>>>0]=se[ue];return q!==null&&q.push(Qs,$e),$e},Cb:LA,readValueFromPointer:vs,Db(q){Qs(q)}})}var VA=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ia=(G,W)=>{for(var q=G>>1,se=q+W/2;!(q>=se)&&pe()[q>>>0];)++q;if(32<(q<<=1)-G&&VA)return VA.decode(ne().slice(G,q));for(q="",se=0;!(se>=W/2);++se){var ue=te()[G+2*se>>>1>>>0];if(ue==0)break;q+=String.fromCharCode(ue)}return q},na=(G,W,q)=>{if(q??=2147483647,2>q)return 0;var se=W;q=(q-=2)<2*G.length?q/2:G.length;for(var ue=0;ue<q;++ue){var Te=G.charCodeAt(ue);te()[W>>>1>>>0]=Te,W+=2}return te()[W>>>1>>>0]=0,W-se},wa=G=>2*G.length,Xs=(G,W)=>{for(var q=0,se="";!(q>=W/4);){var ue=le()[G+4*q>>>2>>>0];if(ue==0)break;++q,65536<=ue?(ue-=65536,se+=String.fromCharCode(55296|ue>>10,56320|1023&ue)):se+=String.fromCharCode(ue)}return se},qa=(G,W,q)=>{if(W>>>=0,q??=2147483647,4>q)return 0;var se=W;q=se+q-4;for(var ue=0;ue<G.length;++ue){var Te=G.charCodeAt(ue);if(55296<=Te&&57343>=Te&&(Te=65536+((1023&Te)<<10)|1023&G.charCodeAt(++ue)),le()[W>>>2>>>0]=Te,(W+=4)+4>q)break}return le()[W>>>2>>>0]=0,W-se},ka=G=>{for(var W=0,q=0;q<G.length;++q){var se=G.charCodeAt(q);55296<=se&&57343>=se&&++q,W+=4}return W};function dn(G,W,q){if(G>>>=0,W>>>=0,q=DA(q>>>=0),W===2)var se=Ia,ue=na,Te=wa,$e=dt=>pe()[dt>>>1>>>0];else W===4&&(se=Xs,ue=qa,Te=ka,$e=dt=>Qe()[dt>>>2>>>0]);xr(G,{name:q,fromWireType:dt=>{for(var xt,_t=Qe()[dt>>>2>>>0],iA=dt+4,MA=0;MA<=_t;++MA){var SA=dt+4+MA*W;MA!=_t&&$e(SA)!=0||(iA=se(iA,SA-iA),xt===void 0?xt=iA:(xt+="\0",xt+=iA),iA=SA+W)}return Qs(dt),xt},toWireType:(dt,xt)=>{if(typeof xt!="string")throw new kr(`Cannot pass non-string to C++ string type ${q}`);var _t=Te(xt),iA=gr(4+_t+W);return Qe()[iA>>>2>>>0]=_t/W,ue(xt,iA+4,_t+W),dt!==null&&dt.push(Qs,iA),iA},Cb:LA,readValueFromPointer:vs,Db(dt){Qs(dt)}})}function Fe(G,W){xr(G>>>=0,{Tb:!0,name:W=DA(W>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function X(G){sn(G>>>0,!C,1,!m,131072,!1),Es()}var de=G=>{if(!ye)try{if(G(),!(0<It))try{I?an(e):Dt(e)}catch(W){W instanceof fe||W=="unwind"||F(0,W)}}catch(W){W instanceof fe||W=="unwind"||F(0,W)}};function Ie(G){G>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(le(),G>>>2,G).value.then(Be),G+=128,Atomics.store(le(),G>>>2,1))}var Be=()=>{var G=rn();G&&(Ie(G),de(Mn))};function je(G,W){(G>>>=0)==W>>>0?setTimeout(Be):I?postMessage({Gb:G,Bb:"checkMailbox"}):(G=Nt[G])&&G.postMessage({Bb:"checkMailbox"})}var tt=[];function Bt(G,W,q,se,ue){for(W>>>=0,se/=2,tt.length=se,q=ue>>>0>>>3,ue=0;ue<se;ue++)tt[ue]=Ce[q+2*ue]?Ce[q+2*ue+1]:qe()[q+2*ue+1>>>0];return(W?Y[W]:vi[G])(...tt)}var Mt=()=>{It=0};function Je(G){G>>>=0,I?postMessage({Bb:"cleanupThread",hc:G}):KA(Nt[G])}function bt(G){}var cA=(G,W)=>{var q=Rs[G];if(q===void 0)throw G=Jn(G),q=DA(G),Qs(G),new kr(`${W} has unknown type ${q}`);return q},nA=(G,W,q)=>{var se=[];return G=G.toWireType(se,q),se.length&&(Qe()[W>>>2>>>0]=Br(se)),G};function fr(G,W,q){return W>>>=0,q>>>=0,G=yr(G>>>0),W=cA(W,"emval::as"),nA(W,q,G)}function Vr(G,W){return W>>>=0,G=yr(G>>>0),(W=cA(W,"emval::as")).toWireType(null,G)}var tr=G=>{try{G()}catch(W){Ze(W)}},QA=0,PA=null,Or=0,xs=[],cr={},ys={},Ar=0,ur=null,yA=[];function rr(G){return function(W){if(!ye){if(QA===0){var q=!1,se=!1;W((ue=0)=>{if(!ye&&(Or=ue,q=!0,se)){QA=2,tr(()=>xn(PA)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),ue=!1;try{var Te=function(){var xt=le()[PA+8>>>2>>>0];return xt=Xt[ys[xt]],--It,xt()}()}catch(xt){Te=xt,ue=!0}var $e=!1;if(!PA){var dt=ur;dt&&(ur=null,(ue?dt.reject:dt.resolve)(Te),$e=!0)}if(ue&&!$e)throw Te}}),se=!0,q||(QA=1,PA=function(){var ue=gr(65548),Te=ue+12;Qe()[ue>>>2>>>0]=Te,Qe()[ue+4>>>2>>>0]=Te+65536,Te=xs[0];var $e=cr[Te];return $e===void 0&&($e=Ar++,cr[Te]=$e,ys[$e]=Te),Te=$e,le()[ue+8>>>2>>>0]=Te,ue}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),tr(()=>nn(PA)))}else QA===2?(QA=0,tr(sr),Qs(PA),PA=null,yA.forEach(de)):Ze(`invalid state: ${QA}`);return Or}}(W=>{G().then(W)})}function Zs(G){return G>>>=0,rr(async()=>{var W=await yr(G);return Br(W)})}var dr=[];function Bs(G,W,q,se){return q>>>=0,se>>>=0,(G=dr[G>>>0])(null,W=yr(W>>>0),q,se)}var Pr={},JA=G=>{var W=Pr[G];return W===void 0?DA(G):W};function Wt(G,W,q,se,ue){return q>>>=0,se>>>=0,ue>>>=0,(G=dr[G>>>0])(W=yr(W>>>0),W[q=JA(q)],se,ue)}var wA=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Tr(G){return(G>>>=0)==0?Br(wA()):(G=JA(G),Br(wA()[G]))}var Ga=G=>{var W=dr.length;return dr.push(G),W},fn=(G,W)=>{for(var q=Array(G),se=0;se<G;++se)q[se]=cA(Qe()[W+4*se>>>2>>>0],"parameter "+se);return q},Ea=(G,W)=>Object.defineProperty(W,"name",{value:G});function Ii(G,W,q){var se=(W=fn(G,W>>>0)).shift();G--;var ue=`return function (obj, func, destructorsRef, args) {
`,Te=0,$e=[];q===0&&$e.push("obj");for(var dt=["retType"],xt=[se],_t=0;_t<G;++_t)$e.push("arg"+_t),dt.push("argType"+_t),xt.push(W[_t]),ue+=`  var arg${_t} = argType${_t}.readValueFromPointer(args${Te?"+"+Te:""});
`,Te+=W[_t].Cb;return ue+=`  var rv = ${q===1?"new func":"func.call"}(${$e.join(", ")});
`,se.Tb||(dt.push("emval_returnValue"),xt.push(nA),ue+=`  return emval_returnValue(retType, destructorsRef, rv);
`),dt.push(ue+`};
`),G=function(iA){var MA=Function;if(!(MA instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof MA} which is not a function`);var SA=Ea(MA.name||"unknownFunctionName",function(){});return SA.prototype=MA.prototype,SA=new SA,(iA=MA.apply(SA,iA))instanceof Object?iA:SA}(dt)(...xt),q=`methodCaller<(${W.map(iA=>iA.name).join(", ")}) => ${se.name}>`,Ga(Ea(q,G))}function Qa(G){return G=JA(G>>>0),Br(c[G])}function Wn(G,W){return W>>>=0,G=yr(G>>>0),W=yr(W),Br(G[W])}function wi(G){9<(G>>>=0)&&(Cr[G+1]+=1)}function gn(){return Br([])}function Js(G){G=yr(G>>>0);for(var W=Array(G.length),q=0;q<G.length;q++)W[q]=G[q];return Br(W)}function _r(G){return Br(JA(G>>>0))}function Gt(){return Br({})}function ds(G){for(var W=yr(G>>>=0);W.length;){var q=W.pop();W.pop()(q)}cs(G)}function Vn(G,W,q){W>>>=0,q>>>=0,G=yr(G>>>0),W=yr(W),q=yr(q),G[W]=q}function pn(G,W){return W>>>=0,G=(G=cA(G>>>0,"_emval_take_value")).readValueFromPointer(W),Br(G)}function Sa(G,W){G=-9007199254740992>G||9007199254740992<G?NaN:Number(G),W>>>=0,G=new Date(1e3*G),le()[W>>>2>>>0]=G.getUTCSeconds(),le()[W+4>>>2>>>0]=G.getUTCMinutes(),le()[W+8>>>2>>>0]=G.getUTCHours(),le()[W+12>>>2>>>0]=G.getUTCDate(),le()[W+16>>>2>>>0]=G.getUTCMonth(),le()[W+20>>>2>>>0]=G.getUTCFullYear()-1900,le()[W+24>>>2>>>0]=G.getUTCDay(),G=(G.getTime()-Date.UTC(G.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,le()[W+28>>>2>>>0]=G}var Yn=G=>G%4==0&&(G%100!=0||G%400==0),Hn=[0,31,60,91,121,152,182,213,244,274,305,335],Un=[0,31,59,90,120,151,181,212,243,273,304,334];function ki(G,W){G=-9007199254740992>G||9007199254740992<G?NaN:Number(G),W>>>=0,G=new Date(1e3*G),le()[W>>>2>>>0]=G.getSeconds(),le()[W+4>>>2>>>0]=G.getMinutes(),le()[W+8>>>2>>>0]=G.getHours(),le()[W+12>>>2>>>0]=G.getDate(),le()[W+16>>>2>>>0]=G.getMonth(),le()[W+20>>>2>>>0]=G.getFullYear()-1900,le()[W+24>>>2>>>0]=G.getDay();var q=(Yn(G.getFullYear())?Hn:Un)[G.getMonth()]+G.getDate()-1|0;le()[W+28>>>2>>>0]=q,le()[W+36>>>2>>>0]=-60*G.getTimezoneOffset(),q=new Date(G.getFullYear(),6,1).getTimezoneOffset();var se=new Date(G.getFullYear(),0,1).getTimezoneOffset();G=0|(q!=se&&G.getTimezoneOffset()==Math.min(se,q)),le()[W+32>>>2>>>0]=G}function $a(G){G>>>=0;var W=new Date(le()[G+20>>>2>>>0]+1900,le()[G+16>>>2>>>0],le()[G+12>>>2>>>0],le()[G+8>>>2>>>0],le()[G+4>>>2>>>0],le()[G>>>2>>>0],0),q=le()[G+32>>>2>>>0],se=W.getTimezoneOffset(),ue=new Date(W.getFullYear(),6,1).getTimezoneOffset(),Te=new Date(W.getFullYear(),0,1).getTimezoneOffset(),$e=Math.min(Te,ue);return 0>q?le()[G+32>>>2>>>0]=+(ue!=Te&&$e==se):0<q!=($e==se)&&(ue=Math.max(Te,ue),W.setTime(W.getTime()+6e4*((0<q?$e:ue)-se))),le()[G+24>>>2>>>0]=W.getDay(),q=(Yn(W.getFullYear())?Hn:Un)[W.getMonth()]+W.getDate()-1|0,le()[G+28>>>2>>>0]=q,le()[G>>>2>>>0]=W.getSeconds(),le()[G+4>>>2>>>0]=W.getMinutes(),le()[G+8>>>2>>>0]=W.getHours(),le()[G+12>>>2>>>0]=W.getDate(),le()[G+16>>>2>>>0]=W.getMonth(),le()[G+20>>>2>>>0]=W.getYear(),G=W.getTime(),BigInt(isNaN(G)?-1:G/1e3)}function BA(G,W,q,se,ue,Te,$e){return I?mt(16,1,G,W,q,se,ue,Te,$e):-52}function hn(G,W,q,se,ue,Te){if(I)return mt(17,1,G,W,q,se,ue,Te)}var Fa={},ia=()=>performance.timeOrigin+performance.now();function oa(G,W){if(I)return mt(18,1,G,W);if(Fa[G]&&(clearTimeout(Fa[G].id),delete Fa[G]),!W)return 0;var q=setTimeout(()=>{delete Fa[G],de(()=>Vs(G,performance.timeOrigin+performance.now()))},W);return Fa[G]={id:q,qc:W},0}function Ts(G,W,q,se){G>>>=0,W>>>=0,q>>>=0,se>>>=0;var ue=new Date().getFullYear(),Te=new Date(ue,0,1).getTimezoneOffset();ue=new Date(ue,6,1).getTimezoneOffset();var $e=Math.max(Te,ue);Qe()[G>>>2>>>0]=60*$e,le()[W>>>2>>>0]=+(Te!=ue),G=(W=dt=>{var xt=Math.abs(dt);return`UTC${0<=dt?"-":"+"}${String(Math.floor(xt/60)).padStart(2,"0")}${String(xt%60).padStart(2,"0")}`})(Te),W=W(ue),ue<Te?(Ee(G,q,17),Ee(W,se,17)):(Ee(G,se,17),Ee(W,q,17))}var Kn=()=>Date.now();function mn(G,W,q){return 0<=G&&3>=G?(G===0?G=Date.now():G=performance.timeOrigin+performance.now(),Ce[q>>>0>>>3]=BigInt(Math.round(1e6*G)),0):28}var la=[],Cn=(G,W)=>{la.length=0;for(var q;q=ne()[G++>>>0];){var se=q!=105;W+=(se&=q!=112)&&W%8?4:0,la.push(q==112?Qe()[W>>>2>>>0]:q==106?Ce[W>>>3]:q==105?le()[W>>>2>>>0]:qe()[W>>>3>>>0]),W+=se?8:4}return la};function Xn(G,W,q){return G>>>=0,W=Cn(W>>>0,q>>>0),Y[G](...W)}function bn(G,W,q){return G>>>=0,W=Cn(W>>>0,q>>>0),Y[G](...W)}var lt=()=>{};function Ei(G,W){return K(ZA(G>>>0,W>>>0))}var St=()=>{throw It+=1,"unwind"};function In(){return 4294901760}var wn=()=>navigator.hardwareConcurrency;function Zr(){return Ze("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function fs(G){G>>>=0;var W=ne().length;if(G<=W||4294901760<G)return!1;for(var q=1;4>=q;q*=2){var se=W*(1+.2/q);se=Math.min(se,G+100663296);e:{se=(Math.min(4294901760,65536*Math.ceil(Math.max(G,se)/65536))-f.buffer.byteLength+65535)/65536|0;try{f.grow(se),et();var ue=1;break e}catch{}ue=void 0}if(ue)return!0}return!1}var ca=()=>(Ze("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),qs={},en=G=>{G.forEach(W=>{ca()})};function br(){var G=Error().stack.toString().split(`
`);return G[0]=="Error"&&G.shift(),en(G),qs.Lb=ca(),qs.cc=G,qs.Lb}function kn(G,W,q){if(G>>>=0,W>>>=0,qs.Lb==G)var se=qs.cc;else(se=Error().stack.toString().split(`
`))[0]=="Error"&&se.shift(),en(se);for(var ue=3;se[ue]&&ca()!=G;)++ue;for(G=0;G<q&&se[G+ue];++G)le()[W+4*G>>>2>>>0]=ca();return G}var tn,Ma={},ua=()=>{if(!tn){var G,W={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(G in Ma)Ma[G]===void 0?delete W[G]:W[G]=Ma[G];var q=[];for(G in W)q.push(`${G}=${W[G]}`);tn=q}return tn};function da(G,W){if(I)return mt(19,1,G,W);G>>>=0,W>>>=0;var q=0;return ua().forEach((se,ue)=>{var Te=W+q;for(ue=Qe()[G+4*ue>>>2>>>0]=Te,Te=0;Te<se.length;++Te)_e()[ue++>>>0]=se.charCodeAt(Te);_e()[ue>>>0]=0,q+=se.length+1}),0}function En(G,W){if(I)return mt(20,1,G,W);G>>>=0,W>>>=0;var q=ua();Qe()[G>>>2>>>0]=q.length;var se=0;return q.forEach(ue=>se+=ue.length+1),Qe()[W>>>2>>>0]=se,0}function An(G){return I?mt(21,1,G):52}function kt(G,W,q,se){return I?mt(22,1,G,W,q,se):52}function Gs(G,W,q,se){return I?mt(23,1,G,W,q,se):70}var Mi=[null,[],[]];function Zn(G,W,q,se){if(I)return mt(24,1,G,W,q,se);W>>>=0,q>>>=0,se>>>=0;for(var ue=0,Te=0;Te<q;Te++){var $e=Qe()[W>>>2>>>0],dt=Qe()[W+4>>>2>>>0];W+=8;for(var xt=0;xt<dt;xt++){var _t=ne()[$e+xt>>>0],iA=Mi[G];_t===0||_t===10?((G===1?N:K)(Qr(iA)),iA.length=0):iA.push(_t)}ue+=dt}return Qe()[se>>>2>>>0]=ue,0}I||function(){for(var G=c.numThreads-1;G--;)Ls();Ue.unshift(()=>{ge++,function(W){I?W():Promise.all(Tt.map(WA)).then(W)}(()=>at())})}();for(var Oa=Array(256),$s=0;256>$s;++$s)Oa[$s]=String.fromCharCode($s);GA=Oa,kr=c.BindingError=class extends Error{constructor(G){super(G),this.name="BindingError"}},c.InternalError=class extends Error{constructor(G){super(G),this.name="InternalError"}},Cr.push(0,1,void 0,1,null,1,!0,1,!1,1),c.count_emval_handles=()=>Cr.length/2-5-Ws.length;var Xt,vi=[Ft,pt,Ca,oA,Us,ce,ke,Me,Le,st,Ot,Ht,yt,gA,lA,Sr,BA,hn,oa,da,En,An,kt,Gs,Zn];(async function(){function G(se,ue){return Xt=se.exports,Xt=function(){var Te=Xt,$e={};for(let[dt,xt]of Object.entries(Te))$e[dt]=typeof xt=="function"?(..._t)=>{xs.push(dt);try{return xt(..._t)}finally{ye||(xs.pop(),PA&&QA===1&&xs.length===0&&(QA=0,It+=1,tr($n),typeof Fibers<"u"&&Fibers.rc()))}}:xt;return $e}(),Xt=function(){var Te=Xt,$e=xt=>_t=>xt(_t)>>>0,dt=xt=>()=>xt()>>>0;return(Te=Object.assign({},Te)).Da=$e(Te.Da),Te.fb=dt(Te.fb),Te.hb=$e(Te.hb),Te.tb=$e(Te.tb),Te.ub=dt(Te.ub),Te.__cxa_get_exception_ptr=$e(Te.__cxa_get_exception_ptr),Te}(),jt.push(Xt.ib),k=ue,at(),Xt}ge++;var W=Ye();if(c.instantiateWasm)return new Promise(se=>{c.instantiateWasm(W,(ue,Te)=>{G(ue,Te),se(ue.exports)})});if(I)return new Promise(se=>{ot=ue=>{var Te=new WebAssembly.Instance(ue,Ye());se(G(Te,ue))}});Ne??=c.locateFile?c.locateFile?c.locateFile("ort-wasm-simd-threaded.jsep.wasm",L):L+"ort-wasm-simd-threaded.jsep.wasm":new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href;try{var q=await async function(se){var ue=Ne;if(!De&&typeof WebAssembly.instantiateStreaming=="function"&&!Oe(ue))try{var Te=fetch(ue,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(Te,se)}catch($e){K(`wasm streaming compile failed: ${$e}`),K("falling back to ArrayBuffer instantiation")}return async function($e,dt){try{var xt=await async function(_t){if(!De)try{var iA=await y(_t);return new Uint8Array(iA)}catch{}if(_t==Ne&&De)_t=new Uint8Array(De);else{if(!M)throw"both async and sync fetching of the wasm failed";_t=M(_t)}return _t}($e);return await WebAssembly.instantiate(xt,dt)}catch(_t){K(`failed to asynchronously prepare wasm: ${_t}`),Ze(_t)}}(ue,se)}(W);return G(q.instance,q.module)}catch(se){return i(se),Promise.reject(se)}})();var Jn=G=>(Jn=Xt.Da)(G),_a=()=>(_a=Xt.Ea)();c._OrtInit=(G,W)=>(c._OrtInit=Xt.Fa)(G,W),c._OrtGetLastError=(G,W)=>(c._OrtGetLastError=Xt.Ga)(G,W),c._OrtCreateSessionOptions=(G,W,q,se,ue,Te,$e,dt,xt,_t)=>(c._OrtCreateSessionOptions=Xt.Ha)(G,W,q,se,ue,Te,$e,dt,xt,_t),c._OrtAppendExecutionProvider=(G,W,q,se,ue)=>(c._OrtAppendExecutionProvider=Xt.Ia)(G,W,q,se,ue),c._OrtAddFreeDimensionOverride=(G,W,q)=>(c._OrtAddFreeDimensionOverride=Xt.Ja)(G,W,q),c._OrtAddSessionConfigEntry=(G,W,q)=>(c._OrtAddSessionConfigEntry=Xt.Ka)(G,W,q),c._OrtReleaseSessionOptions=G=>(c._OrtReleaseSessionOptions=Xt.La)(G),c._OrtCreateSession=(G,W,q)=>(c._OrtCreateSession=Xt.Ma)(G,W,q),c._OrtReleaseSession=G=>(c._OrtReleaseSession=Xt.Na)(G),c._OrtGetInputOutputCount=(G,W,q)=>(c._OrtGetInputOutputCount=Xt.Oa)(G,W,q),c._OrtGetInputOutputMetadata=(G,W,q,se)=>(c._OrtGetInputOutputMetadata=Xt.Pa)(G,W,q,se),c._OrtFree=G=>(c._OrtFree=Xt.Qa)(G),c._OrtCreateTensor=(G,W,q,se,ue,Te)=>(c._OrtCreateTensor=Xt.Ra)(G,W,q,se,ue,Te),c._OrtGetTensorData=(G,W,q,se,ue)=>(c._OrtGetTensorData=Xt.Sa)(G,W,q,se,ue),c._OrtReleaseTensor=G=>(c._OrtReleaseTensor=Xt.Ta)(G),c._OrtCreateRunOptions=(G,W,q,se)=>(c._OrtCreateRunOptions=Xt.Ua)(G,W,q,se),c._OrtAddRunConfigEntry=(G,W,q)=>(c._OrtAddRunConfigEntry=Xt.Va)(G,W,q),c._OrtReleaseRunOptions=G=>(c._OrtReleaseRunOptions=Xt.Wa)(G),c._OrtCreateBinding=G=>(c._OrtCreateBinding=Xt.Xa)(G),c._OrtBindInput=(G,W,q)=>(c._OrtBindInput=Xt.Ya)(G,W,q),c._OrtBindOutput=(G,W,q,se)=>(c._OrtBindOutput=Xt.Za)(G,W,q,se),c._OrtClearBoundOutputs=G=>(c._OrtClearBoundOutputs=Xt._a)(G),c._OrtReleaseBinding=G=>(c._OrtReleaseBinding=Xt.$a)(G),c._OrtRunWithBinding=(G,W,q,se,ue)=>(c._OrtRunWithBinding=Xt.ab)(G,W,q,se,ue),c._OrtRun=(G,W,q,se,ue,Te,$e,dt)=>(c._OrtRun=Xt.bb)(G,W,q,se,ue,Te,$e,dt),c._OrtEndProfiling=G=>(c._OrtEndProfiling=Xt.cb)(G),c._JsepOutput=(G,W,q)=>(c._JsepOutput=Xt.db)(G,W,q),c._JsepGetNodeName=G=>(c._JsepGetNodeName=Xt.eb)(G);var rn=()=>(rn=Xt.fb)(),Qs=c._free=G=>(Qs=c._free=Xt.gb)(G),gr=c._malloc=G=>(gr=c._malloc=Xt.hb)(G),sn=(G,W,q,se,ue,Te)=>(sn=Xt.kb)(G,W,q,se,ue,Te),qn=()=>(qn=Xt.lb)(),eA=(G,W,q,se,ue)=>(eA=Xt.mb)(G,W,q,se,ue),Ss=G=>(Ss=Xt.nb)(G),an=G=>(an=Xt.ob)(G),Vs=(G,W)=>(Vs=Xt.pb)(G,W),Mn=()=>(Mn=Xt.qb)(),Nr=(G,W)=>(Nr=Xt.rb)(G,W),Fs=G=>(Fs=Xt.sb)(G),Er=G=>(Er=Xt.tb)(G),Os=()=>(Os=Xt.ub)(),vn=c.dynCall_ii=(G,W)=>(vn=c.dynCall_ii=Xt.vb)(G,W),nn=G=>(nn=Xt.wb)(G),$n=()=>($n=Xt.xb)(),xn=G=>(xn=Xt.yb)(G),sr=()=>(sr=Xt.zb)();return c.stackSave=()=>Os(),c.stackRestore=G=>Fs(G),c.stackAlloc=G=>Er(G),c.setValue=function(G,W,q="i8"){switch(q.endsWith("*")&&(q="*"),q){case"i1":case"i8":_e()[G>>>0]=W;break;case"i16":te()[G>>>1>>>0]=W;break;case"i32":le()[G>>>2>>>0]=W;break;case"i64":Ce[G>>>3]=BigInt(W);break;case"float":it()[G>>>2>>>0]=W;break;case"double":qe()[G>>>3>>>0]=W;break;case"*":Qe()[G>>>2>>>0]=W;break;default:Ze(`invalid type for setValue: ${q}`)}},c.getValue=function(G,W="i8"){switch(W.endsWith("*")&&(W="*"),W){case"i1":case"i8":return _e()[G>>>0];case"i16":return te()[G>>>1>>>0];case"i32":return le()[G>>>2>>>0];case"i64":return Ce[G>>>3];case"float":return it()[G>>>2>>>0];case"double":return qe()[G>>>3>>>0];case"*":return Qe()[G>>>2>>>0];default:Ze(`invalid type for getValue: ${W}`)}},c.UTF8ToString=ZA,c.stringToUTF8=Ee,c.lengthBytesUTF8=U,function G(){if(0<ge)Ve=G;else if(I)n(c),be();else{for(;0<Ue.length;)Ue.shift()(c);0<ge?Ve=G:(c.calledRun=!0,ye||(be(),n(c)))}}(),c.PTR_SIZE=4,p}),w3=e2,Xg=globalThis.self?.name?.startsWith("em-pthread"),Xg&&e2()}),t2,Cu,Zg,pa,k3,al,Jg,qg,A2,$g,r2,E3,s2,M3,ju=Ct(()=>{Ru(),t2=typeof location>"u"?void 0:location.origin,Cu=import.meta.url>"file:"&&import.meta.url<"file;",Zg=()=>{{if(Cu){let a=URL;return new URL(new a("ort.bundle.min.mjs",import.meta.url).href,t2).href}return import.meta.url}},pa=Zg(),k3=()=>{if(pa&&!pa.startsWith("blob:"))return pa.substring(0,pa.lastIndexOf("/")+1)},al=(a,n)=>{try{let i=n??pa;return(i?new URL(a,i):new URL(a)).origin===t2}catch{return!1}},Jg=(a,n)=>{let i=n??pa;try{return(i?new URL(a,i):new URL(a)).href}catch{return}},qg=(a,n)=>`${n??"./"}${a}`,A2=async a=>{let n=await(await fetch(a,{credentials:"same-origin"})).blob();return URL.createObjectURL(n)},$g=async a=>(await import(a)).default,r2=(A5(),_0(C3)).default,E3=async()=>{if(!pa)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(al(pa))return[void 0,r2()];let a=await A2(pa);return[a,r2(a)]},s2=(r5(),_0(I3)).default,M3=async(a,n,i)=>{if(!a&&!n&&s2&&pa&&al(pa))return[void 0,s2];{let c="ort-wasm-simd-threaded.jsep.mjs",p=a??Jg(c,n),m=i&&p&&!al(p,n),C=m?await A2(p):p??qg(c,n);return[m?C:void 0,await $g(C)]}}}),a2,nl,l0,n2,ep,tp,Ap,Wu,mr,to=Ct(()=>{ju(),nl=!1,l0=!1,n2=!1,ep=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},tp=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ap=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},Wu=async a=>{if(nl)return Promise.resolve();if(l0)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(n2)throw new Error("previous call to 'initializeWebAssembly()' failed.");l0=!0;let n=a.initTimeout,i=a.numThreads;if(a.simd!==!1){if(a.simd==="relaxed"){if(!Ap())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!tp())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let c=ep();i>1&&!c&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+i+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),a.numThreads=i=1);let p=a.wasmPaths,m=typeof p=="string"?p:void 0,C=p?.mjs,I=C?.href??C,E=p?.wasm,x=E?.href??E,D=a.wasmBinary,[y,M]=await M3(I,m,i>1),S=!1,F=[];if(n>0&&F.push(new Promise(L=>{setTimeout(()=>{S=!0,L()},n)})),F.push(new Promise((L,Z)=>{let z={numThreads:i};if(D)z.wasmBinary=D;else if(x||m)z.locateFile=N=>x??m+N;else if(I&&I.indexOf("blob:")!==0)z.locateFile=N=>new URL(N,I).href;else if(y){let N=k3();N&&(z.locateFile=K=>N+K)}M(z).then(N=>{l0=!1,nl=!0,a2=N,L(),y&&URL.revokeObjectURL(y)},N=>{l0=!1,n2=!0,Z(N)})})),await Promise.race(F),S)throw new Error(`WebAssembly backend initializing failed due to timeout: ${n}ms`)},mr=()=>{if(nl&&a2)return a2;throw new Error("WebAssembly is not initialized yet.")}}),Ha,Nl,nr,Vu=Ct(()=>{to(),Ha=(a,n)=>{let i=mr(),c=i.lengthBytesUTF8(a)+1,p=i._malloc(c);return i.stringToUTF8(a,p,c),n.push(p),p},Nl=(a,n,i,c)=>{if(typeof a=="object"&&a!==null){if(i.has(a))throw new Error("Circular reference in options");i.add(a)}Object.entries(a).forEach(([p,m])=>{let C=n?n+p:p;if(typeof m=="object")Nl(m,C+".",i,c);else if(typeof m=="string"||typeof m=="number")c(C,m.toString());else if(typeof m=="boolean")c(C,m?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof m}`)})},nr=a=>{let n=mr(),i=n.stackSave();try{let c=n.PTR_SIZE,p=n.stackAlloc(2*c);n._OrtGetLastError(p,p+c);let m=Number(n.getValue(p,c===4?"i32":"i64")),C=n.getValue(p+c,"*"),I=C?n.UTF8ToString(C):"";throw new Error(`${a} ERROR_CODE: ${m}, ERROR_MESSAGE: ${I}`)}finally{n.stackRestore(i)}}}),v3,s5=Ct(()=>{to(),Vu(),v3=a=>{let n=mr(),i=0,c=[],p=a||{};try{if(a?.logSeverityLevel===void 0)p.logSeverityLevel=2;else if(typeof a.logSeverityLevel!="number"||!Number.isInteger(a.logSeverityLevel)||a.logSeverityLevel<0||a.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${a.logSeverityLevel}`);if(a?.logVerbosityLevel===void 0)p.logVerbosityLevel=0;else if(typeof a.logVerbosityLevel!="number"||!Number.isInteger(a.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${a.logVerbosityLevel}`);a?.terminate===void 0&&(p.terminate=!1);let m=0;return a?.tag!==void 0&&(m=Ha(a.tag,c)),i=n._OrtCreateRunOptions(p.logSeverityLevel,p.logVerbosityLevel,!!p.terminate,m),i===0&&nr("Can't create run options."),a?.extra!==void 0&&Nl(a.extra,"",new WeakSet,(C,I)=>{let E=Ha(C,c),x=Ha(I,c);n._OrtAddRunConfigEntry(i,E,x)!==0&&nr(`Can't set a run config entry: ${C} - ${I}.`)}),[i,c]}catch(m){throw i!==0&&n._OrtReleaseRunOptions(i),c.forEach(C=>n._free(C)),m}}}),rp,sp,ap,c0,np,x3,a5=Ct(()=>{to(),Vu(),rp=a=>{switch(a){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${a}`)}},sp=a=>{switch(a){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${a}`)}},ap=a=>{a.extra||(a.extra={}),a.extra.session||(a.extra.session={});let n=a.extra.session;n.use_ort_model_bytes_directly||(n.use_ort_model_bytes_directly="1"),a.executionProviders&&a.executionProviders.some(i=>(typeof i=="string"?i:i.name)==="webgpu")&&(a.enableMemPattern=!1)},c0=(a,n,i,c)=>{let p=Ha(n,c),m=Ha(i,c);mr()._OrtAddSessionConfigEntry(a,p,m)!==0&&nr(`Can't set a session config entry: ${n} - ${i}.`)},np=async(a,n,i)=>{for(let c of n){let p=typeof c=="string"?c:c.name,m=[];switch(p){case"webnn":if(p="WEBNN",typeof c!="string"){let D=c?.deviceType;D&&c0(a,"deviceType",D,i)}break;case"webgpu":if(p="JS",typeof c!="string"){let D=c;if(D?.preferredLayout){if(D.preferredLayout!=="NCHW"&&D.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${D.preferredLayout}`);c0(a,"preferredLayout",D.preferredLayout,i)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${p}`)}let C=Ha(p,i),I=m.length,E=0,x=0;if(I>0){E=mr()._malloc(I*mr().PTR_SIZE),i.push(E),x=mr()._malloc(I*mr().PTR_SIZE),i.push(x);for(let D=0;D<I;D++)mr().setValue(E+D*mr().PTR_SIZE,m[D][0],"*"),mr().setValue(x+D*mr().PTR_SIZE,m[D][1],"*")}await mr()._OrtAppendExecutionProvider(a,C,E,x,I)!==0&&nr(`Can't append execution provider: ${p}.`)}},x3=async a=>{let n=mr(),i=0,c=[],p=a||{};ap(p);try{let m=rp(p.graphOptimizationLevel??"all"),C=sp(p.executionMode??"sequential"),I=typeof p.logId=="string"?Ha(p.logId,c):0,E=p.logSeverityLevel??2;if(!Number.isInteger(E)||E<0||E>4)throw new Error(`log serverity level is not valid: ${E}`);let x=p.logVerbosityLevel??0;if(!Number.isInteger(x)||x<0||x>4)throw new Error(`log verbosity level is not valid: ${x}`);let D=typeof p.optimizedModelFilePath=="string"?Ha(p.optimizedModelFilePath,c):0;if(i=n._OrtCreateSessionOptions(m,!!p.enableCpuMemArena,!!p.enableMemPattern,C,!!p.enableProfiling,0,I,E,x,D),i===0&&nr("Can't create session options."),p.executionProviders&&await np(i,p.executionProviders,c),p.enableGraphCapture!==void 0){if(typeof p.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${p.enableGraphCapture}`);c0(i,"enableGraphCapture",p.enableGraphCapture.toString(),c)}if(p.freeDimensionOverrides)for(let[y,M]of Object.entries(p.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof M!="number"||!Number.isInteger(M)||M<0)throw new Error(`free dimension override value must be a non-negative integer: ${M}`);let S=Ha(y,c);n._OrtAddFreeDimensionOverride(i,S,M)!==0&&nr(`Can't set a free dimension override: ${y} - ${M}.`)}return p.extra!==void 0&&Nl(p.extra,"",new WeakSet,(y,M)=>{c0(i,y,M,c)}),[i,c]}catch(m){throw i!==0&&n._OrtReleaseSessionOptions(i)!==0&&nr("Can't release session options."),c.forEach(C=>n._free(C)),m}}}),Do,Ln,Ui,Yu,zl,Hu,Uu,bu,sA=Ct(()=>{Do=a=>{switch(a){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${a}`)}},Ln=a=>{switch(a){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${a}`)}},Ui=(a,n)=>{let i=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][a],c=typeof n=="number"?n:n.reduce((p,m)=>p*m,1);return i>0?Math.ceil(c*i):void 0},Yu=a=>{switch(a){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${a}`)}},zl=a=>{switch(a){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${a}`)}},Hu=a=>a==="float32"||a==="float16"||a==="int32"||a==="int64"||a==="uint32"||a==="uint8"||a==="bool"||a==="uint4"||a==="int4",Uu=a=>a==="float32"||a==="float16"||a==="int32"||a==="int64"||a==="uint32"||a==="uint64"||a==="int8"||a==="uint8"||a==="bool"||a==="uint4"||a==="int4",bu=a=>{switch(a){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${a}`)}}}),Ku,y3=Ct(()=>{Ru(),Ku=async a=>{if(typeof a=="string"){let n=await fetch(a);if(!n.ok)throw new Error(`failed to load external data file: ${a}`);let i=n.headers.get("Content-Length"),c=i?parseInt(i,10):0;if(c<1073741824)return new Uint8Array(await n.arrayBuffer());{if(!n.body)throw new Error(`failed to load external data file: ${a}, no response body.`);let p=n.body.getReader(),m;try{m=new ArrayBuffer(c)}catch(I){if(I instanceof RangeError){let E=Math.ceil(c/65536);m=new WebAssembly.Memory({initial:E,maximum:E}).buffer}else throw I}let C=0;for(;;){let{done:I,value:E}=await p.read();if(I)break;let x=E.byteLength;new Uint8Array(m,C,x).set(E),C+=x}return new Uint8Array(m,0,c)}}else return a instanceof Blob?new Uint8Array(await a.arrayBuffer()):a instanceof Uint8Array?a:new Uint8Array(a)}}),ip,op,lp,cp,Xu,up,TA,jn=Ct(()=>{sA(),ip=["V","I","W","E","F"],op=(a,n)=>{console.log(`[${ip[a]},${new Date().toISOString()}]${n}`)},Xu=(a,n)=>{lp=a,cp=n},up=(a,n)=>{let i=zl(a),c=zl(lp);i>=c&&op(i,typeof n=="function"?n():n)},TA=(...a)=>{cp&&up(...a)}}),dp,Ro,Ke,Ll,B3,D3,P3,pA=Ct(()=>{dp=class{static calcMatMulShape(a,n){return a[1]!==n[0]?void 0:[a[0],n[1]]}},Ro=class{static calcShape(a,n,i=!1){let c=a.length,p=n.length;if(c===0)return n;if(p===0)return a;let m=Math.max(a.length,n.length),C=new Array(m);if(i){if(c<2||p<2)return;let I=dp.calcMatMulShape([a[c-2],a[c-1]],[n[p-2],n[p-1]]);if(I===void 0)return;[C[m-2],C[m-1]]=I}for(let I=i?3:1;I<=m;I++){let E=c-I<0?1:a[c-I],x=p-I<0?1:n[p-I];if(E!==x&&E>1&&x>1)return;let D=Math.max(E,x);if(E&&x)C[m-I]=Math.max(E,x);else{if(D>1)return;C[m-I]=0}}return C}static isValidBroadcast(a,n){let i=a.length,c=n.length;if(i>c)return!1;for(let p=1;p<=i;p++)if(a[i-p]!==1&&a[i-p]!==n[c-p])return!1;return!0}},Ke=class Ql{static size(n){return Ql.getSizeFromDimensionRange(n,0,n.length)}static convertShape(n,i=4){let c=n.length;if(c===0)return[];let p=new Array(c),m=c-1;for(;m>=0;){if(n[m]%i===0){p[m]=n[m]/i;break}if(i%n[m]!==0)throw new Error("cannot convert shape");p[m]=1,i/=n[m],m--}for(m--;m>=0;m--)p[m]=n[m];return p}static sizeFromDimension(n,i){if(i<0||i>n.length)throw new Error(`invalid dimension of ${i} for sizeFromDimension as Tensor has ${n.length} dimensions.`);return Ql.getSizeFromDimensionRange(n,i,n.length)}static sizeToDimension(n,i){if(i<0||i>n.length)throw new Error(`invalid dimension of ${i} for sizeToDimension as Tensor has ${n.length} dimensions.`);return Ql.getSizeFromDimensionRange(n,0,i)}static getSizeFromDimensionRange(n,i,c){let p=1;for(let m=i;m<c;m++){if(n[m]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");p*=Number(n[m])}return p}static computeStrides(n){let i=n.length;if(i===0)return[];if(i===1)return[1];let c=new Array(i);c[i-1]=1,c[i-2]=n[i-1];for(let p=i-3;p>=0;--p)c[p]=c[p+1]*n[p+1];return c}static normalizeAxis(n,i){if(n<-i&&n>=i)throw new Error("unsupported axis for this operation.");return n<0?n+i:n}static normalizeAxes(n,i){return n.map(c=>this.normalizeAxis(c,i??n.length))}static sortBasedOnPerm(n,i){return i?i.map(c=>n[c]):n.slice().reverse()}static padShape(n,i){let c=n.length;return n.map((p,m)=>p+i[m]+i[m+c])}static areEqual(n,i){return n.length!==i.length?!1:n.every((c,p)=>c===i[p])}},Ll=class B0{static adjustPoolAttributes(n,i,c,p,m,C){if(!n&&c.length!==i.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(n)for(let I=0;I<i.length-2;I++)I>=c.length?c.push(i[I+2]):c[I]=i[I+2];for(let I=0;I<c.length;I++)if(I<p.length){if(p[I]<0)throw new Error("strides should be greater than or equal to 1")}else p.push(1);for(let I=0;I<c.length;I++)if(I<m.length){if(m[I]<0)throw new Error("dilations should be greater than or equal to 1")}else m.push(1);for(let I=0;I<c.length*2;I++)if(I<C.length){if(C[I]<0)throw new Error("pad should be greater than or equal to 1")}else C.push(0);for(let I=0;I<c.length;I++){if(c[I]<=0)throw new Error("kernel shapes need to be greater than 0");if(C[I]>=c[I]||C[I+c.length]>=c[I])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(n,i,c,p,m,C,I){if(I){if(m.length!==2*(n.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(i.length!==n.length-2)throw new Error("length of strides should be the length of data dimensions");if(p.length!==n.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let E=0;E<n.length-2;E++)B0.adjustPadAndReturnShape(n[E+(C?1:2)],i[E],c[E],p[E],m,E,E+n.length-2,I)}}static computePoolOutputShape(n,i,c,p,m,C,I){if(i.length<=0)throw new Error("input shape must be of size greater than 0");let E=[i[0],i[1]];return B0.computeShapeHelper(n,i,E,c,p,m,C,I),E}static computeConvOutputShape(n,i,c,p,m,C,I){if(n.length<=0||i.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let E=[n[0],i[0]];return B0.computeShapeHelper(!1,n,E,c,p,m,C,I),E}static computeShapeHelper(n,i,c,p,m,C,I,E){if(n)for(let x=0;x<i.length-2;x++)c.push(1);else for(let x=0;x<i.length-2;x++)c.push(B0.adjustPadAndReturnShape(i[x+2],p[x],m[x],C[x],I,x,x+i.length-2,E))}static adjustPadAndReturnShape(n,i,c,p,m,C,I,E){let x=c*(p-1)+1;if(E&&E!=="NOTSET")switch(E){case"VALID":return m[C]=0,m[I]=0,Math.floor((n-x)/i+1);case"SAME_LOWER":case"SAME_UPPER":if(c!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let D=((n+i-1)/i-1)*i+p-n;return m[C]=Math.floor(E==="SAME_LOWER"?(D+1)/2:D/2),m[I]=D-m[C],Math.floor((n+D-p)/i+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((n+m[C]+m[I]-x)/i+1)}},B3=class{static getShapeOfGemmResult(a,n,i,c,p){if(a.length!==2||i.length!==2)throw new Error("shape need to be of size 2");let m,C,I;n?(m=a[1],C=a[0]):(m=a[0],C=a[1]);let E=-1;if(c?(I=i[0],E=1):(I=i[1],E=0),i[E]!==C)throw new Error("dimension mismatch");if(m<=0||I<=0||C<=0)throw new Error("invalid shape specified");if(p&&!Ro.isValidBroadcast(p,[m,I]))throw new Error("gemm: invalid bias shape for broadcast");return[m,I,C]}},D3=-34028234663852886e22,P3=34028234663852886e22}),Zu,T3=Ct(()=>{sA(),Zu=(a,n)=>new(Yu(n))(a)}),Iu,i2,fp,o2,gp,l2,c2,u2,pp,G3,n5=Ct(()=>{jn(),Iu=(a,n=!0)=>{if(a.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let i=a.byteLength/8,c=new BigInt64Array(a.buffer,a.byteOffset,i),p=new Int32Array(i);for(let m=0;m<i;m++){let C=c[m];if(C>2147483647n||C<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${m}: ${C}`);p[m]=Number(C)}return n?new Uint8Array(p.buffer):p},i2=(a,n=!0)=>{if(a.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let i=a.byteLength/4,c=new Int32Array(a.buffer,a.byteOffset,i),p=BigInt64Array.from(c,BigInt);return n?new Uint8Array(p.buffer):p},fp=1,o2=()=>fp++,gp=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),l2=(a,n)=>{let i=gp.get(a);if(!i)throw new Error("Unsupported data type.");return n.length>0?Math.ceil(n.reduce((c,p)=>c*p)*i/8):0},c2=class{constructor(a){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:n,context:i,tensor:c,dataType:p,shape:m,shouldConvertInt64toInt32:C=!1}=a;this.sessionId=n,this.mlContext=i,this.mlTensor=c,this.dataType=p,this.tensorShape=m,this.shouldConvertInt64toInt32=C}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return l2(this.dataType,this.tensorShape)}destroy(){TA("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(a){this.mlContext.writeTensor(this.mlTensor,a)}async read(a,n){if(a){let i=await this.mlContext.readTensor(this.mlTensor),c=i2(new Uint8Array(i));if(n){(n instanceof ArrayBuffer?new Uint8Array(n):new Uint8Array(n.buffer,n.byteOffset,n.byteLength)).set(c);return}else return c.buffer}else return n?this.mlContext.readTensor(this.mlTensor,n):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(a,n,i){return this.mlContext===a&&this.dataType===n&&this.tensorShape.length===i.length&&this.tensorShape.every((c,p)=>c===i[p])}setIsInt64ToInt32Converted(a){this.isInt64ToInt32Converted=a}},u2=class{constructor(a,n){this.tensorManager=a,this.wrapper=n}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(a,n,i,c){let p=n,m=this.tensorManager.getMLContext(a),C=p==="int64"&&!m.opSupportLimits().input.dataTypes.includes("int64");if(C&&(p="int32",TA("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(m,p,i))return this.wrapper.tensor;if(c){if(this.wrapper.byteLength!==l2(p,i))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let I=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(a,p,i,I,!0,!0,C),c&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(a){let n=a;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(n=Iu(a,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),n.byteLength===this.wrapper.byteLength){this.wrapper.write(n);return}else TA("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(n):this.activeUpload=new Uint8Array(n)}async download(a){if(this.activeUpload){let n=this.wrapper?.isInt64ToInt32Converted?i2(this.activeUpload):this.activeUpload;if(a){a instanceof ArrayBuffer?new Uint8Array(a).set(n):new Uint8Array(a.buffer,a.byteOffset,a.byteLength).set(n);return}else return n.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return a?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,a):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},pp=class{constructor(a){this.backend=a,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(a){let n=this.backend.getMLContext(a);if(!n)throw new Error("MLContext not found for session.");return n}reserveTensorId(){let a=o2();return this.tensorTrackersById.set(a,new u2(this)),a}releaseTensorId(a){let n=this.tensorTrackersById.get(a);n&&(this.tensorTrackersById.delete(a),n.tensorWrapper&&this.releaseTensor(n.tensorWrapper))}async ensureTensor(a,n,i,c,p){TA("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${n}, dataType: ${i}, shape: ${c}, copyOld: ${p}}`);let m=this.tensorTrackersById.get(n);if(!m)throw new Error("Tensor not found.");return m.ensureTensor(a,i,c,p)}upload(a,n){let i=this.tensorTrackersById.get(a);if(!i)throw new Error("Tensor not found.");i.upload(n)}async download(a,n){TA("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${a}, dstBuffer: ${n?.byteLength}}`);let i=this.tensorTrackersById.get(a);if(!i)throw new Error("Tensor not found.");return i.download(n)}releaseTensorsForSession(a){for(let n of this.freeTensors)n.sessionId===a&&n.destroy();this.freeTensors=this.freeTensors.filter(n=>n.sessionId!==a)}registerTensor(a,n,i,c){let p=this.getMLContext(a),m=o2(),C=new c2({sessionId:a,context:p,tensor:n,dataType:i,shape:c});return this.tensorTrackersById.set(m,new u2(this,C)),this.externalTensors.add(C),m}async getCachedTensor(a,n,i,c,p,m,C=!1){let I=this.getMLContext(a);for(let[x,D]of this.freeTensors.entries())if(D.canReuseTensor(I,n,i)){TA("verbose",()=>`[WebNN] Reusing tensor {dataType: ${n}, shape: ${i}}`);let y=this.freeTensors.splice(x,1)[0];return y.sessionId=a,y}TA("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${n}, shape: ${i}}`);let E=await I.createTensor({dataType:n,shape:i,dimensions:i,usage:c,writable:p,readable:m});return new c2({sessionId:a,context:I,tensor:E,dataType:n,shape:i,shouldConvertInt64toInt32:C})}releaseTensor(a){this.externalTensors.has(a)&&this.externalTensors.delete(a),this.freeTensors.push(a)}},G3=(...a)=>new pp(...a)}),il,hp,Q3,i5=Ct(()=>{sA(),to(),T3(),n5(),jn(),il=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),hp=(a,n)=>{if(a===n)return!0;if(a===void 0||n===void 0)return!1;let i=Object.keys(a).sort(),c=Object.keys(n).sort();return i.length===c.length&&i.every((p,m)=>p===c[m]&&a[p]===n[p])},Q3=class{constructor(a){this.tensorManager=G3(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,Xu(a.logLevel,!!a.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(a){TA("verbose",()=>`[WebNN] onRunStart {sessionId: ${a}}`),this.activeSessionId=a}onRunEnd(a){TA("verbose",()=>`[WebNN] onRunEnd {sessionId: ${a}}`);let n=this.temporarySessionTensorIds.get(a);if(n){for(let i of n)TA("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${i}}`),this.tensorManager.releaseTensorId(i);this.temporarySessionTensorIds.delete(a),this.activeSessionId=void 0}}async createMLContext(a){if(a instanceof GPUDevice){let i=this.mlContextCache.findIndex(c=>c.gpuDevice===a);if(i!==-1)return this.mlContextCache[i].mlContext;{let c=await navigator.ml.createContext(a);return this.mlContextCache.push({gpuDevice:a,mlContext:c}),c}}else if(a===void 0){let i=this.mlContextCache.findIndex(c=>c.options===void 0&&c.gpuDevice===void 0);if(i!==-1)return this.mlContextCache[i].mlContext;{let c=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:c}),c}}let n=this.mlContextCache.findIndex(i=>hp(i.options,a));if(n!==-1)return this.mlContextCache[n].mlContext;{let i=await navigator.ml.createContext(a);return this.mlContextCache.push({options:a,mlContext:i}),i}}registerMLContext(a,n){this.mlContextBySessionId.set(a,n);let i=this.sessionIdsByMLContext.get(n);i||(i=new Set,this.sessionIdsByMLContext.set(n,i)),i.add(a),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(a,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(a){this.sessionGraphInputs.delete(a);let n=this.mlContextBySessionId.get(a);if(!n)return;this.tensorManager.releaseTensorsForSession(a),this.mlContextBySessionId.delete(a);let i=this.sessionIdsByMLContext.get(n);if(i.delete(a),i.size===0){this.sessionIdsByMLContext.delete(n);let c=this.mlContextCache.findIndex(p=>p.mlContext===n);c!==-1&&this.mlContextCache.splice(c,1)}}getMLContext(a){return this.mlContextBySessionId.get(a)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(a){TA("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${a}}`),this.tensorManager.releaseTensorId(a)}async ensureTensor(a,n,i,c,p){let m=il.get(i);if(!m)throw new Error(`Unsupported ONNX data type: ${i}`);return this.tensorManager.ensureTensor(a??this.currentSessionId,n,m,c,p)}async createTemporaryTensor(a,n,i){TA("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${n}, shape: ${i}}`);let c=il.get(n);if(!c)throw new Error(`Unsupported ONNX data type: ${n}`);let p=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(a,p,c,i,!1);let m=this.temporarySessionTensorIds.get(a);return m?m.push(p):this.temporarySessionTensorIds.set(a,[p]),p}uploadTensor(a,n){if(!mr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");TA("verbose",()=>`[WebNN] uploadTensor {tensorId: ${a}, data: ${n.byteLength}}`),this.tensorManager.upload(a,n)}async downloadTensor(a,n){return this.tensorManager.download(a,n)}createMLTensorDownloader(a,n){return async()=>{let i=await this.tensorManager.download(a);return Zu(i,n)}}registerMLTensor(a,n,i,c){let p=il.get(i);if(!p)throw new Error(`Unsupported ONNX data type: ${i}`);let m=this.tensorManager.registerTensor(a,n,p,c);return TA("verbose",()=>`[WebNN] registerMLTensor {tensor: ${n}, dataType: ${p}, dimensions: ${c}} -> {tensorId: ${m}}`),m}registerMLConstant(a,n,i,c,p,m,C=!1){if(!m)throw new Error("External mounted files are not available.");let I=a;a.startsWith("./")&&(I=a.substring(2));let E=m.get(I);if(!E)throw new Error(`File with name ${I} not found in preloaded files.`);if(n+i>E.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let x=E.slice(n,n+i).buffer,D;switch(p.dataType){case"float32":D=new Float32Array(x);break;case"float16":D=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(x):new Uint16Array(x);break;case"int32":D=new Int32Array(x);break;case"uint32":D=new Uint32Array(x);break;case"int64":C?(D=Iu(new Uint8Array(x),!1),p.dataType="int32"):D=new BigInt64Array(x);break;case"uint64":D=new BigUint64Array(x);break;case"int8":D=new Int8Array(x);break;case"int4":case"uint4":case"uint8":D=new Uint8Array(x);break;default:throw new Error(`Unsupported data type: ${p.dataType} in creating WebNN Constant from external data.`)}return TA("verbose",()=>`[WebNN] registerMLConstant {dataType: ${p.dataType}, shape: ${p.shape}}} ${C?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),c.constant(p,D)}registerGraphInput(a){this.temporaryGraphInputs.push(a)}isGraphInput(a,n){let i=this.sessionGraphInputs.get(a);return i?i.includes(n):!1}isInt64Supported(a){return!!this.mlContextBySessionId.get(a)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),Ju=Ct(()=>{}),d2,ol,ll,mp,Cp,f2,wu,bp,S3,o5=Ct(()=>{jn(),Ju(),d2=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ol=[],ll=a=>Math.ceil(Number(a)/16)*16,mp=a=>{for(let n=0;n<ol.length;n++){let i=ol[n];if(a<=i)return i}return Math.ceil(a/16)*16},Cp=1,f2=()=>Cp++,wu=async(a,n,i,c)=>{let p=ll(i),m=a.device.createBuffer({size:p,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let C=a.getCommandEncoder();a.endComputePass(),C.copyBufferToBuffer(n,0,m,0,p),a.flush(),await m.mapAsync(GPUMapMode.READ);let I=m.getMappedRange();if(c){let E=c();return E.set(new Uint8Array(I,0,i)),E}else return new Uint8Array(I.slice(0,i))}finally{m.destroy()}},bp=class{constructor(a){this.backend=a,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[n]of d2)ol.push(n),this.freeBuffers.set(n,[]),this.freeUniformBuffers.set(n,[]);this.sessionCount=0}upload(a,n){let i=n.buffer,c=n.byteOffset,p=n.byteLength,m=ll(p),C=this.storageCache.get(a);if(!C)throw new Error("gpu data for uploading does not exist");if(Number(C.originalSize)!==p)throw new Error(`inconsistent data size. gpu data size=${C.originalSize}, data size=${p}`);let I=this.backend.device.createBuffer({mappedAtCreation:!0,size:m,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),E=I.getMappedRange();new Uint8Array(E).set(new Uint8Array(i,c,p)),I.unmap();let x=this.backend.device.createCommandEncoder();x.copyBufferToBuffer(I,0,C.gpuData.buffer,0,m),this.backend.device.queue.submit([x.finish()]),I.destroy(),TA("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${a})`)}memcpy(a,n){let i=this.storageCache.get(a);if(!i)throw new Error("source gpu data for memcpy does not exist");let c=this.storageCache.get(n);if(!c)throw new Error("destination gpu data for memcpy does not exist");if(i.originalSize!==c.originalSize)throw new Error("inconsistent source and destination gpu data size");let p=ll(i.originalSize),m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(i.gpuData.buffer,0,c.gpuData.buffer,0,p)}registerExternalBuffer(a,n,i){let c;if(i){if(c=i[0],a===i[1])return TA("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${c}, buffer is the same, skip.`),c;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else c=f2();return this.storageCache.set(c,{gpuData:{id:c,type:0,buffer:a},originalSize:n}),TA("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${c}, registered.`),c}unregisterExternalBuffer(a){a!==void 0&&(this.storageCache.delete(a),TA("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${a}`))}create(a,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let i=mp(a),c,p=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,m=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(p||m){let I=(p?this.freeBuffers:this.freeUniformBuffers).get(i);I?I.length>0?c=I.pop():c=this.backend.device.createBuffer({size:i,usage:n}):c=this.backend.device.createBuffer({size:i,usage:n})}else c=this.backend.device.createBuffer({size:i,usage:n});let C={id:f2(),type:0,buffer:c};return this.storageCache.set(C.id,{gpuData:C,originalSize:Number(a)}),TA("verbose",()=>`[WebGPU] GpuDataManager.create(size=${a}) => id=${C.id}`),C}get(a){return this.storageCache.get(a)?.gpuData}release(a){let n=typeof a=="bigint"?Number(a):a,i=this.storageCache.get(n);if(!i){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return TA("verbose",()=>`[WebGPU] GpuDataManager.release(id=${n}), gpuDataId=${i.gpuData.id}`),this.storageCache.delete(n),this.buffersPending.push(i.gpuData.buffer),i.originalSize}async download(a,n){let i=this.storageCache.get(Number(a));if(!i)throw new Error("data does not exist");await wu(this.backend,i.gpuData.buffer,i.originalSize,n)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let a of this.buffersPending){let n=d2.get(a.size);if((a.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let i=this.freeBuffers.get(a.size)||[];n===void 0||i.length>=n?a.destroy():i.push(a)}else if((a.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let i=this.freeUniformBuffers.get(a.size)||[];n===void 0||i.length>=n?a.destroy():i.push(a)}else a.destroy()}this.buffersPending=[]}else{let a=this.capturedPendingBuffers.get(this.backend.currentSessionId);a||(a=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,a));for(let n of this.buffersPending)a.push(n);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(a=>{a.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(a=>{a.forEach(n=>{n.destroy()})}),this.storageCache.forEach(a=>{a.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(a=>{a.forEach(n=>{n.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(a){let n=this.capturedPendingBuffers.get(a);n&&(n.forEach(i=>{i.destroy()}),this.capturedPendingBuffers.delete(a)),this.sessionCount-=1,this.sessionCount===0&&(TA("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(i=>{i.gpuData.buffer.destroy()}),this.storageCache=new Map)}},S3=(...a)=>new bp(...a)}),Ip,UA,Kr=Ct(()=>{Ip=class{constructor(a){Object.assign(this,a)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(a=>`${this[a]}`).join(";")),this.key}},UA=a=>new Ip(a)}),jo,cl,Cs,_s,Jt,Wr,ku,Qo,mi,Kt,u0,At,Ut,F3,qu,wp,O3,CA=Ct(()=>{sA(),pA(),jo=64,cl=(a,n)=>{if(n===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(a)){case 10:return n>1?`vec${n}<f16>`:"f16";case 1:return n>1?`vec${n}<f32>`:"f32";case 6:return n>1?`vec${n}<i32>`:"i32";case 12:return n>1?`vec${n}<u32>`:"u32";case 7:if(n>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(n>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(n!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${a}`)}},Cs=(a,n=1)=>{let i=cl(a,n);return typeof i=="string"?i:i[0]},_s=(a,n=1)=>{let i=cl(a,n);return typeof i=="string"?i:i[1]},Jt=(...a)=>{let n=[];return a.forEach(i=>{i.length!==0&&n.push({type:12,data:i},{type:12,data:Ke.computeStrides(i)})}),n},Wr=a=>a%4===0?4:a%2===0?2:1,ku=(a="f32",n,i="0")=>!n||n===1?`${a}(${i})`:`vec${n}<${a}>(${i})`,Qo=(a,n,i)=>a==="f32"?i:n===1?`f32(${i})`:`vec${n}<f32>(${i})`,mi=(a,n)=>n===4?`(${a}.x + ${a}.y + ${a}.z + ${a}.w)`:n===2?`(${a}.x + ${a}.y)`:n===3?`(${a}.x + ${a}.y + ${a}.z)`:a,Kt=(a,n,i,c)=>a.startsWith("uniforms.")&&i>4?typeof n=="string"?c==="f16"?`${a}[(${n}) / 8][(${n}) % 8 / 4][(${n}) % 8 % 4]`:`${a}[(${n}) / 4][(${n}) % 4]`:c==="f16"?`${a}[${Math.floor(n/8)}][${Math.floor(n%8/4)}][${n%8%4}]`:`${a}[${Math.floor(n/4)}][${n%4}]`:i>1?`${a}[${n}]`:a,u0=(a,n,i,c,p)=>{let m=typeof i=="number",C=m?i:i.length,I=[...new Array(C).keys()],E=C<2?"u32":C<=4?`vec${C}<u32>`:`array<u32, ${C}>`,x=cl(n,p),D=typeof x=="string"?x:x[1],y=typeof x=="string"?x:x[0],M={indices:E,value:D,storage:y,tensor:n},S=ne=>typeof ne=="string"?ne:`${ne}u`,F={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},L=m?"uniforms.":"",Z=`${L}${a}_shape`,z=`${L}${a}_strides`,N="";for(let ne=0;ne<C-1;ne++)N+=`
    let dim${ne} = current / ${Kt(z,ne,C)};
    let rest${ne} = current % ${Kt(z,ne,C)};
    indices[${ne}] = dim${ne};
    current = rest${ne};
    `;N+=`indices[${C-1}] = current;`;let K=C<2?"":`
  fn o2i_${a}(offset: u32) -> ${M.indices} {
    var indices: ${M.indices};
    var current = offset;
    ${N}
    return indices;
  }`,f=ne=>(F.offsetToIndices=!0,C<2?ne:`o2i_${a}(${ne})`),k=[];if(C>=2)for(let ne=C-1;ne>=0;ne--)k.push(`${Kt(z,ne,C)} * (indices[${ne}])`);let e=C<2?"":`
  fn i2o_${a}(indices: ${M.indices}) -> u32 {
    return ${k.join("+")};
  }`,d=ne=>(F.indicesToOffset=!0,C<2?ne:`i2o_${a}(${ne})`),B=(...ne)=>C===0?"0u":`${M.indices}(${ne.map(S).join(",")})`,Ae=(ne,te)=>C<2?`${ne}`:`${Kt(ne,te,C)}`,P=(ne,te,pe)=>C<2?`${ne}=${pe};`:`${Kt(ne,te,C)}=${pe};`,O={},me=(ne,te)=>{F.broadcastedIndicesToOffset=!0;let pe=`${te.name}broadcastedIndicesTo${a}Offset`;if(pe in O)return`${pe}(${ne})`;let le=[];for(let Qe=C-1;Qe>=0;Qe--){let it=te.indicesGet("outputIndices",Qe+te.rank-C);le.push(`${Ae(z,Qe)} * (${it} % ${Ae(Z,Qe)})`)}return O[pe]=`fn ${pe}(outputIndices: ${te.type.indices}) -> u32 {
             return ${le.length>0?le.join("+"):"0u"};
           }`,`${pe}(${ne})`},ee=(ne,te)=>(()=>{if(M.storage===M.value)return`${a}[${ne}]=${te};`;if(M.storage==="vec2<u32>"&&M.value==="i32")return`${a}[${ne}]=vec2<u32>(u32(${te}), select(0u, 0xFFFFFFFFu, ${te} < 0));`;if(M.storage==="vec2<u32>"&&M.value==="u32")return`${a}[${ne}]=vec2<u32>(u32(${te}), 0u);`;if(M.storage==="u32"&&M.value==="vec4<bool>")return`${a}[${ne}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${te}));`;throw new Error(`not supported combination of storage type ${M.storage} and value type ${M.value} yet`)})(),Ce=ne=>(()=>{if(M.storage===M.value)return`${a}[${ne}]`;if(M.storage==="vec2<u32>"&&M.value==="i32")return`i32(${a}[${ne}].x)`;if(M.storage==="vec2<u32>"&&M.value==="u32")return`u32(${a}[${ne}].x)`;if(M.storage==="u32"&&M.value==="vec4<bool>")return`vec4<bool>(bool(${a}[${ne}] & 0xFFu), bool(${a}[${ne}] & 0xFF00u), bool(${a}[${ne}] & 0xFF0000u), bool(${a}[${ne}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${M.storage} and value type ${M.value} yet`)})(),we=C<2?"":`
  fn get_${a}ByIndices(indices: ${M.indices}) -> ${D} {
    return ${Ce(`i2o_${a}(indices)`)};
  }`,xe=C<2?"":(()=>{let ne=I.map(pe=>`d${pe}: u32`).join(", "),te=I.map(pe=>`d${pe}`).join(", ");return`
  fn get_${a}(${ne}) -> ${D} {
    return get_${a}ByIndices(${B(te)});
  }`})(),De=(...ne)=>{if(ne.length!==C)throw new Error(`indices length must be ${C}`);let te=ne.map(S).join(",");return C===0?Ce("0u"):C===1?Ce(te[0]):(F.get=!0,F.getByIndices=!0,F.indicesToOffset=!0,`get_${a}(${te})`)},ye=ne=>C<2?Ce(ne):(F.getByIndices=!0,F.indicesToOffset=!0,`get_${a}ByIndices(${ne})`),Oe=C<2?"":`
  fn set_${a}ByIndices(indices: ${M.indices}, value: ${D}) {
    ${ee(`i2o_${a}(indices)`,"value")}
  }`,_e=C<2?"":(()=>{let ne=I.map(pe=>`d${pe}: u32`).join(", "),te=I.map(pe=>`d${pe}`).join(", ");return`
  fn set_${a}(${ne}, value: ${D}) {
    set_${a}ByIndices(${B(te)}, value);
  }`})();return{impl:()=>{let ne=[],te=!1;return F.offsetToIndices&&(ne.push(K),te=!0),F.indicesToOffset&&(ne.push(e),te=!0),F.broadcastedIndicesToOffset&&(Object.values(O).forEach(pe=>ne.push(pe)),te=!0),F.set&&(ne.push(_e),te=!0),F.setByIndices&&(ne.push(Oe),te=!0),F.get&&(ne.push(xe),te=!0),F.getByIndices&&(ne.push(we),te=!0),!m&&te&&ne.unshift(`const ${Z} = ${M.indices}(${i.join(",")});`,`const ${z} = ${M.indices}(${Ke.computeStrides(i).join(",")});`),ne.join(`
`)},type:M,offsetToIndices:f,indicesToOffset:d,broadcastedIndicesToOffset:me,indices:B,indicesGet:Ae,indicesSet:P,set:(...ne)=>{if(ne.length!==C+1)throw new Error(`indices length must be ${C}`);let te=ne[C];if(typeof te!="string")throw new Error("value must be string");let pe=ne.slice(0,C).map(S).join(",");return C===0?ee("0u",te):C===1?ee(pe[0],te):(F.set=!0,F.setByIndices=!0,F.indicesToOffset=!0,`set_${a}(${pe}, ${te})`)},setByOffset:ee,setByIndices:(ne,te)=>C<2?ee(ne,te):(F.setByIndices=!0,F.indicesToOffset=!0,`set_${a}ByIndices(${ne}, ${te});`),get:De,getByOffset:Ce,getByIndices:ye,usage:c,name:a,strides:z,shape:Z,rank:C}},At=(a,n,i,c=1)=>u0(a,n,i,"input",c),Ut=(a,n,i,c=1)=>u0(a,n,i,"output",c),F3=(a,n,i)=>u0(a,n,i,"atomicOutput",1),qu=(a,n,i,c=1)=>u0(a,n,i,"internal",c),wp=class{constructor(a,n){this.normalizedDispatchGroup=a,this.limits=n,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(a){return`if (global_idx >= ${typeof a=="number"?`${a}u`:a}) { return; }`}mainStart(a=jo){let n=typeof a=="number"?a:a[0],i=typeof a=="number"?1:a[1],c=typeof a=="number"?1:a[2];if(n>this.limits.maxComputeWorkgroupSizeX||i>this.limits.maxComputeWorkgroupSizeY||c>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${n}, ${i}, ${c}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(n*i*c>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${n}, ${i}, ${c}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let p=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,m=p?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,C=p?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${n*i*c}u + local_idx;`;return`@compute @workgroup_size(${n}, ${i}, ${c})
  fn main(${m}) {
    ${C}
  `}appendVariableUniforms(a){a.rank!==0&&(a.shape.startsWith("uniforms.")&&this.uniforms.push({name:a.shape.replace("uniforms.",""),type:"u32",length:a.rank}),a.strides.startsWith("uniforms.")&&this.uniforms.push({name:a.strides.replace("uniforms.",""),type:"u32",length:a.rank}))}declareVariable(a,n){if(a.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(a),this.appendVariableUniforms(a);let i=a.usage==="input"?"read":"read_write",c=a.usage==="atomicOutput"?"atomic<i32>":a.type.storage;return`@group(0) @binding(${n}) var<storage, ${i}> ${a.name}: array<${c}>;`}declareVariables(...a){return a.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(a){if(a.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(a),this.appendVariableUniforms(a)}registerInternalVariables(...a){return a.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(a,n,i=1){return this.uniforms.push({name:a,type:n,length:i}),this}registerUniforms(a){return this.uniforms=this.uniforms.concat(a),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let a=[];for(let{name:n,type:i,length:c}of this.uniforms)if(c&&c>4)i==="f16"?a.push(`@align(16) ${n}:array<mat2x4<${i}>, ${Math.ceil(c/8)}>`):a.push(`${n}:array<vec4<${i}>, ${Math.ceil(c/4)}>`);else{let p=c==null||c===1?i:`vec${c}<${i}>`;a.push(`${n}:${p}`)}return`
      struct Uniforms { ${a.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(a=>a.impl()).join(`
`)+this.internalVariables.map(a=>a.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let a=n=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(n)];return this.uniforms.map(n=>[a(n.type),n.length??1])}},O3=(a,n)=>new wp(a,n)}),kp,g2,Ep,Mp,vp,xp,ma,_3,N3,bi=Ct(()=>{sA(),pA(),Kr(),CA(),kp=(a,n)=>{if(!a||a.length!==1)throw new Error("Transpose requires 1 input.");if(n.length!==0&&n.length!==a[0].dims.length)throw new Error(`perm size ${n.length} does not match input rank ${a[0].dims.length}`)},g2=(a,n)=>n.length!==0?n:[...new Array(a).keys()].reverse(),Ep=(a,n)=>Ke.sortBasedOnPerm(a,g2(a.length,n)),Mp=(a,n,i,c)=>{let p=`fn perm(i: ${c.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`;for(let m=0;m<n;++m)p+=`a[${a[m]}]=i[${m}];`;return p+="return a;}"},vp=(a,n)=>{let i=[],c=[];for(let p=0;p<a.length;++p)a[p]!==1&&i.push(a[p]),a[n[p]]!==1&&c.push(n[p]);return{newShape:i,newPerm:c}},xp=(a,n)=>{let i=0;for(let c=0;c<a.length;++c)if(n[a[c]]!==1){if(a[c]<i)return!1;i=a[c]}return!0},ma=(a,n)=>{let i=a.dataType,c=a.dims.length,p=g2(c,n),m=Ep(a.dims,p),C=a.dims,I=m,E=c<2||xp(p,a.dims),x;if(E)return x=F=>{let L=At("input",i,C,4),Z=Ut("output",i,I,4);return`
  ${F.registerUniform("output_size","u32").declareVariables(L,Z)}
  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let F=Ke.size(m);return{outputs:[{dims:m,dataType:a.dataType}],dispatchGroup:{x:Math.ceil(F/64/4)},programUniforms:[{type:12,data:Math.ceil(F/4)}]}},getShaderSource:x};let{newShape:D,newPerm:y}=vp(a.dims,p),M=Ke.areEqual(y,[2,3,1]),S=Ke.areEqual(y,[3,1,2]);if(D.length===2||M||S){C=M?[D[0],D[1]*D[2]]:S?[D[0]*D[1],D[2]]:D,I=[C[1],C[0]];let F=16;return x=L=>{let Z=At("a",i,C.length),z=Ut("output",i,I.length);return`
  ${L.registerUniform("output_size","u32").declareVariables(Z,z)}
  var<workgroup> tile : array<array<${z.type.value}, ${F+1}>, ${F}>;
  ${L.mainStart([F,F,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${F} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${F}u + local_id.x;
    let input_row = workgroup_id_x * ${F}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${Z.getByIndices(`${Z.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${F}u + local_id.x;
    let output_row = workgroup_id_y * ${F}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${z.setByIndices(`${z.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let L=Ke.size(m);return{outputs:[{dims:m,dataType:a.dataType}],dispatchGroup:{x:Math.ceil(I[1]/F),y:Math.ceil(I[0]/F)},programUniforms:[{type:12,data:L},...Jt(C,I)]}},getShaderSource:x}}return x=F=>{let L=At("a",i,C.length),Z=Ut("output",i,I.length);return`
  ${F.registerUniform("output_size","u32").declareVariables(L,Z)}

  ${Mp(p,c,L,Z)}

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Z.setByOffset("global_idx",L.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>{let F=Ke.size(m);return{outputs:[{dims:m,dataType:a.dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:[{type:12,data:F},...Jt(C,I)]}},getShaderSource:x}},_3=(a,n)=>{kp(a.inputs,n.perm),a.compute(ma(a.inputs[0],n.perm))},N3=a=>UA({perm:a.perm})}),yp,Bp,Dp,Pp,Tp,Gp,Qp,Sp,Fp,Op,Ra,z3,L3,R3,j3,W3,V3,Y3,H3,U3,K3,l5=Ct(()=>{sA(),pA(),CA(),$u(),bi(),yp={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Bp={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Dp={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Pp={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Tp=(a,n)=>{let i=[];for(let c=n-a;c<n;++c)i.push(c);return i},Gp=(a,n)=>{let i=[],c=a.length;for(let m=0;m<c;m++)n.indexOf(m)===-1&&i.push(a[m]);let p=n.map(m=>a[m]);return[i,p]},Qp=(a,n)=>{let i=a.length+n.length,c=[],p=0;for(let m=0;m<i;m++)n.indexOf(m)===-1?c.push(a[p++]):c.push(1);return c},Sp=(a,n)=>{for(let i=0;i<a.length;++i)if(a[a.length-i-1]!==n-1-i)return!1;return!0},Fp=(a,n)=>{let i=[];if(!Sp(a,n)){for(let c=0;c<n;++c)a.indexOf(c)===-1&&i.push(c);a.forEach(c=>i.push(c))}return i},Op=(a,n,i,c,p,m,C)=>{let I=i[0].dims,E=Ke.size(m),x=Ke.size(C),D=At("_A",i[0].dataType,I),y=Ut("output",p,m),M=64;E===1&&(M=256);let S=`
          var<workgroup> aBestValues : array<f32, ${M}>;
       `,F=L=>`
        ${L.registerUniform("reduceSize","u32").declareVariables(D,y)}
        ${S}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${L.mainStart(M)}

          let outputIndex = global_idx / ${M};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Dp[c]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${M}) {
           let candidate = f32(${D.getByOffset("offset + k")});
           bestValue = ${yp[c]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${M}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Bp[c]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${y.setByOffset("outputIndex",`${c==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Pp[c]})`}`)};
         }
        }`;return{name:a,shaderCache:{hint:`${n};${M}`,inputDependencies:["type"]},getShaderSource:F,getRunData:()=>({outputs:[{dims:m,dataType:p}],dispatchGroup:{x:E},programUniforms:[{type:12,data:x}]})}},Ra=(a,n,i,c)=>{let p=a.inputs.length===1?i:Eu(a.inputs,i),m=p.axes;m.length===0&&!p.noopWithEmptyAxes&&(m=a.inputs[0].dims.map((S,F)=>F));let C=Ke.normalizeAxes(m,a.inputs[0].dims.length),I=C,E=a.inputs[0],x=Fp(I,a.inputs[0].dims.length);x.length>0&&(E=a.compute(ma(a.inputs[0],x),{inputs:[0],outputs:[-1]})[0],I=Tp(I.length,E.dims.length));let[D,y]=Gp(E.dims,I),M=D;p.keepDims&&(M=Qp(D,C)),a.compute(Op(n,p.cacheKey,[E],c,a.inputs[0].dataType,M,y),{inputs:[E]})},z3=(a,n)=>{Ra(a,"ReduceMeanShared",n,"mean")},L3=(a,n)=>{Ra(a,"ReduceL1Shared",n,"l1")},R3=(a,n)=>{Ra(a,"ReduceL2Shared",n,"l2")},j3=(a,n)=>{Ra(a,"ReduceLogSumExpShared",n,"logSumExp")},W3=(a,n)=>{Ra(a,"ReduceMaxShared",n,"max")},V3=(a,n)=>{Ra(a,"ReduceMinShared",n,"min")},Y3=(a,n)=>{Ra(a,"ReduceProdShared",n,"prod")},H3=(a,n)=>{Ra(a,"ReduceSumShared",n,"sum")},U3=(a,n)=>{Ra(a,"ReduceSumSquareShared",n,"sumSquare")},K3=(a,n)=>{Ra(a,"ReduceLogSumShared",n,"logSum")}}),ja,_p,Rl,Eu,Wa,Np,zp,Lp,Rp,jp,Wp,Vp,Yp,Hp,Up,Va,X3,Z3,J3,q3,$3,eC,tC,AC,rC,sC,$u=Ct(()=>{sA(),pA(),Kr(),CA(),l5(),ja=a=>{if(!a||a.length===0||a.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(a.length===2&&a[1].dims.length!==1)throw new Error("Invalid axes input dims.")},_p=a=>["","",`var value = ${a.getByIndices("input_indices")};`,""],Rl=(a,n,i,c,p,m,C=!1,I=!1)=>{let E=[],x=i[0].dims,D=x.length,y=Ke.normalizeAxes(p,D),M=!I&&y.length===0;x.forEach((L,Z)=>{M||y.indexOf(Z)>=0?C&&E.push(1):E.push(L)});let S=E.length,F=Ke.size(E);return{name:a,shaderCache:n,getShaderSource:L=>{let Z=[],z=At("_A",i[0].dataType,D),N=Ut("output",m,S),K=c(z,N,y),f=K[2];for(let k=0,e=0;k<D;k++)M||y.indexOf(k)>=0?(C&&e++,f=`for(var j${k}: u32 = 0; j${k} < ${x[k]}; j${k}++) {
                  ${K[2].includes("last_index")?`let last_index = j${k};`:""}
                  ${z.indicesSet("input_indices",k,`j${k}`)}
                  ${f}
                }`):(Z.push(`${z.indicesSet("input_indices",k,N.indicesGet("output_indices",e))};`),e++);return`

        ${L.registerUniform("output_size","u32").declareVariables(z,N)}

        ${L.mainStart()}
          ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${z.type.indices};
          let output_indices = ${N.offsetToIndices("global_idx")};

          ${Z.join(`
`)}
          ${K[0]}       // init ops for reduce max/min
          ${K[1]}
          ${f}
          ${K[3]}
          ${K.length===4?N.setByOffset("global_idx","value"):K.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:E,dataType:m}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:[{type:12,data:F},...Jt(x,E)]})}},Eu=(a,n)=>{let i=[];return a[1].dims[0]>0&&a[1].getBigInt64Array().forEach(c=>i.push(Number(c))),UA({axes:i,keepDims:n.keepDims,noopWithEmptyAxes:n.noopWithEmptyAxes})},Wa=(a,n,i,c)=>{let p=a.inputs,m=p.length===1?i:Eu(p,i);a.compute(Rl(n,{hint:m.cacheKey,inputDependencies:["rank"]},[p[0]],m.noopWithEmptyAxes&&m.axes.length===0?_p:c,m.axes,p[0].dataType,m.keepDims,m.noopWithEmptyAxes),{inputs:[0]})},Np=(a,n)=>{ja(a.inputs),Wa(a,"ReduceLogSum",n,(i,c)=>[`var value = ${c.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,"value = log(value);"])},zp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceL1",n,(i,c)=>[`var value = ${c.type.storage}(0);`,"",`value += abs(${i.getByIndices("input_indices")});`,""])},Lp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceL2",n,(i,c)=>[`var t = ${c.type.value}(0); var value = ${c.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Rp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceLogSumExp",n,(i,c)=>[`var value = ${c.type.storage}(0);`,"",`value += exp(${i.getByIndices("input_indices")});`,"value = log(value);"])},jp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceMax",n,(i,c,p)=>{let m=[];for(let C=0;C<i.rank;C++)(p.indexOf(C)>=0||p.length===0)&&m.push(i.indicesSet("input_indices",C,0));return[`${m.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = max(value, ${i.getByIndices("input_indices")});`,""]})},Wp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceMean",n,(i,c,p)=>{let m=1;for(let C=0;C<i.rank;C++)(p.indexOf(C)>=0||p.length===0)&&(m*=a.inputs[0].dims[C]);return["var sum = f32(0);","",`sum += f32(${i.getByIndices("input_indices")});`,`let value = ${c.type.value}(sum / ${m});`]})},Vp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceMin",n,(i,c,p)=>{let m=[];for(let C=0;C<i.rank;C++)(p.indexOf(C)>=0||p.length===0)&&m.push(`input_indices[${C}] = 0;`);return[`${m.join(`
`)}`,`var value = ${i.getByIndices("input_indices")};`,`value = min(value, ${i.getByIndices("input_indices")});`,""]})},Yp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceProd",n,(i,c)=>[`var value = ${c.type.storage}(1);`,"",`value *= ${i.getByIndices("input_indices")};`,""])},Hp=(a,n)=>{ja(a.inputs),Wa(a,"ReduceSum",n,(i,c)=>[`var value = ${c.type.storage}(0);`,"",`value += ${i.getByIndices("input_indices")};`,""])},Up=(a,n)=>{ja(a.inputs),Wa(a,"ReduceSumSquare",n,(i,c)=>[`var t = ${c.type.value}(0); var value = ${c.type.value}(0);`,"",`t = ${i.getByIndices("input_indices")}; value += t * t;`,""])},Va=(a,n,i)=>{if(n.length===0)return i;let c=1,p=1;for(let m=0;m<n.length;m++)n.indexOf(m)===-1?c*=a[m]:p*=a[m];return p<32&&c>1024},X3=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Wp(a,n):z3(a,n)},Z3=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?zp(a,n):L3(a,n)},J3=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Lp(a,n):R3(a,n)},q3=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Rp(a,n):j3(a,n)},$3=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?jp(a,n):W3(a,n)},eC=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Vp(a,n):V3(a,n)},tC=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Yp(a,n):Y3(a,n)},AC=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Hp(a,n):H3(a,n)},rC=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Up(a,n):U3(a,n)},sC=(a,n)=>{Va(a.inputs[0].dims,n.axes,n.noopWithEmptyAxes)?Np(a,n):K3(a,n)}}),p2,aC,nC,Mu,c5=Ct(()=>{sA(),Kr(),$u(),p2=a=>{if(!a||a.length===0||a.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(a[0].dataType!==1)throw new Error("Invalid input type.")},aC=(a,n)=>{p2(a.inputs);let i=(c,p,m)=>{let C=[];for(let I=0;I<c.rank;I++)(m.indexOf(I)>=0||m.length===0)&&C.push(`input_indices[${I}] = 0;`);return[`${C.join(`
`)}`,`var value = ${c.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${c.getByIndices("input_indices")} ${n.selectLastIndex>0?"<=":"<"} value) {
         value = ${c.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",p.setByOffset("global_idx","best_index")]};a.compute(Rl("ArgMin",{hint:n.cacheKey,inputDependencies:["rank"]},[a.inputs[0]],i,[n.axis],7,n.keepDims),{inputs:[0]})},nC=(a,n)=>{p2(a.inputs);let i=(c,p,m)=>{let C=[];for(let I=0;I<c.rank;I++)(m.indexOf(I)>=0||m.length===0)&&C.push(`input_indices[${I}] = 0;`);return[`${C.join(`
`)}`,`var value = ${c.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${c.getByIndices("input_indices")} ${n.selectLastIndex>0?">=":">"} value) {
         value = ${c.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",p.setByOffset("global_idx","best_index")]};a.compute(Rl("argMax",{hint:n.cacheKey,inputDependencies:["rank"]},[a.inputs[0]],i,[n.axis],7,n.keepDims),{inputs:[0]})},Mu=a=>UA(a)}),Kp,ul,Xp,Zp,Jp,z0,qp,iC,e1=Ct(()=>{sA(),pA(),Ju(),CA(),Kp=(a,n)=>{let i=a[0],c=a[1],p=a[2],m=a[3],C=a[4],I=a[5];if(C&&I)throw new Error("Attention cannot have both past and attention_bias");if(i.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let E=i.dims[0],x=i.dims[1],D=i.dims[2];if(p.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(c.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(c.dims[0]!==D)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(p.dims[0]!==c.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let y=p.dims[0]/3,M=y,S=M;if(n.qkvHiddenSizes.length>0){if(n.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let K of n.qkvHiddenSizes)if(K%n.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=n.qkvHiddenSizes[0],M=n.qkvHiddenSizes[1],S=n.qkvHiddenSizes[2]}let F=x;if(y!==M)throw new Error("qkv_hidden_sizes first element should be same as the second");if(p.dims[0]!==y+M+S)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let L=0;if(C){if(M!==S)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(C.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(C.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(C.dims[1]!==E)throw new Error('Input "past" second dimension must be batch_size');if(C.dims[2]!==n.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(C.dims[4]!==M/n.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');n.pastPresentShareBuffer||(L=C.dims[3])}let Z=F+L,z=-1,N=0;if(m)throw new Error("Mask not supported");if(C)throw new Error("past is not supported");if(I){if(I.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(I.dims[0]!==E||I.dims[1]!==n.numHeads||I.dims[2]!==x||I.dims[3]!==Z)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:E,sequenceLength:x,pastSequenceLength:L,kvSequenceLength:F,totalSequenceLength:Z,maxSequenceLength:z,inputHiddenSize:D,hiddenSize:y,vHiddenSize:S,headSize:Math.floor(y/n.numHeads),vHeadSize:Math.floor(S/n.numHeads),numHeads:n.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:n.maskFilterValue,maskType:N,scale:n.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ul=(a,n,i)=>n&&a?`
      let total_sequence_length_input = u32(${n.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${a?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${i?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Xp=(a,n,i,c,p,m,C,I)=>{let E=Wr(C?1:m),x=64,D=m/E;D<x&&(x=32);let y=Math.ceil(m/E/x),M=[{type:12,data:n},{type:12,data:i},{type:12,data:c},{type:12,data:p},{type:12,data:D},{type:12,data:y}],S=Cs(a.dataType,E),F=_s(1,E),L=["type"];C&&L.push("type"),I&&L.push("type");let Z=z=>{let N=Ut("x",a.dataType,a.dims,E),K=[N],f=C?At("seq_lens",C.dataType,C.dims):void 0;f&&K.push(f);let k=I?At("total_sequence_length_input",I.dataType,I.dims):void 0;k&&K.push(k);let e=_s(a.dataType),d=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${x}>;
  var<workgroup> thread_sum: array<f32, ${x}>;
  ${z.registerUniforms(d).declareVariables(...K)}
  ${z.mainStart([x,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${ul(f,k,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${x}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${C?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${F}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${F}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(E){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${E}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${x}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${F}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${F}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(E){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${E}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${x}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${N.type.value}(${e}(1.0) / ${e}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${F}(x[offset + i]);
        x[offset + i] = ${N.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${C?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${N.type.value}(${e}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${x};${S};${E}`,inputDependencies:L},getShaderSource:Z,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:p,z:n*i},programUniforms:M})}},Zp=(a,n,i,c,p,m,C,I,E)=>{let x=C+m.kvSequenceLength,D=[m.batchSize,m.numHeads,m.sequenceLength,x],y=a>1&&c,M=m.kvNumHeads?m.kvNumHeads:m.numHeads,S=y?[m.batchSize,M,x,m.headSize]:void 0,F=m.nReps?m.nReps:1,L=m.scale===0?1/Math.sqrt(m.headSize):m.scale,Z=Wr(m.headSize),z=m.headSize/Z,N=12,K={x:Math.ceil(x/N),y:Math.ceil(m.sequenceLength/N),z:m.batchSize*m.numHeads},f=[{type:12,data:m.sequenceLength},{type:12,data:z},{type:12,data:x},{type:12,data:m.numHeads},{type:12,data:m.headSize},{type:1,data:L},{type:12,data:C},{type:12,data:m.kvSequenceLength},{type:12,data:F}],k=y&&c&&Ke.size(c.dims)>0,e=["type","type"];k&&e.push("type"),p&&e.push("type"),I&&e.push("type"),E&&e.push("type");let d=[{dims:D,dataType:n.dataType,gpuDataType:0}];y&&d.push({dims:S,dataType:n.dataType,gpuDataType:0});let B=Ae=>{let P=At("q",n.dataType,n.dims,Z),O=At("key",i.dataType,i.dims,Z),me=[P,O];if(k){let Oe=At("past_key",c.dataType,c.dims,Z);me.push(Oe)}p&&me.push(At("attention_bias",p.dataType,p.dims));let ee=I?At("seq_lens",I.dataType,I.dims):void 0;ee&&me.push(ee);let Ce=E?At("total_sequence_length_input",E.dataType,E.dims):void 0;Ce&&me.push(Ce);let we=Ut("output",n.dataType,D),xe=[we];y&&xe.push(Ut("present_key",n.dataType,S,Z));let De=_s(1,Z),ye=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${N}u;

  var<workgroup> tileQ: array<${P.type.storage}, ${N*N}>;
  var<workgroup> tileK: array<${P.type.storage}, ${N*N}>;
  ${Ae.registerUniforms(ye).declareVariables(...me,...xe)}
  ${Ae.mainStart([N,N,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${F===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${F===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${ul(ee,Ce,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${k&&y?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${y?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${De}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${k&&y?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${y?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${De}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Z){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Z}`)}})()};
        output[outputIdx] = ${we.type.value} (sum * uniforms.alpha) + ${p?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Z};${p!==void 0};${c!==void 0};${a}`,inputDependencies:e},getRunData:()=>({outputs:d,dispatchGroup:K,programUniforms:f}),getShaderSource:B}},Jp=(a,n,i,c,p,m,C=void 0,I=void 0)=>{let E=m+p.kvSequenceLength,x=p.nReps?p.nReps:1,D=p.vHiddenSize*x,y=a>1&&c,M=p.kvNumHeads?p.kvNumHeads:p.numHeads,S=y?[p.batchSize,M,E,p.headSize]:void 0,F=[p.batchSize,p.sequenceLength,D],L=12,Z={x:Math.ceil(p.vHeadSize/L),y:Math.ceil(p.sequenceLength/L),z:p.batchSize*p.numHeads},z=[{type:12,data:p.sequenceLength},{type:12,data:E},{type:12,data:p.vHeadSize},{type:12,data:p.numHeads},{type:12,data:p.headSize},{type:12,data:D},{type:12,data:m},{type:12,data:p.kvSequenceLength},{type:12,data:x}],N=y&&c&&Ke.size(c.dims)>0,K=["type","type"];N&&K.push("type"),C&&K.push("type"),I&&K.push("type");let f=[{dims:F,dataType:n.dataType,gpuDataType:0}];y&&f.push({dims:S,dataType:n.dataType,gpuDataType:0});let k=e=>{let d=At("probs",n.dataType,n.dims),B=At("v",i.dataType,i.dims),Ae=[d,B];N&&Ae.push(At("past_value",c.dataType,c.dims));let P=C?At("seq_lens",C.dataType,C.dims):void 0;C&&Ae.push(P);let O=I?At("total_sequence_length_input",I.dataType,I.dims):void 0;I&&Ae.push(O);let me=[Ut("output",n.dataType,F)];y&&me.push(Ut("present_value",n.dataType,S));let ee=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${L}u;
  var<workgroup> tileQ: array<${d.type.value}, ${L*L}>;
  var<workgroup> tileV: array<${d.type.value}, ${L*L}>;
  ${e.registerUniforms(ee).declareVariables(...Ae,...me)}
  ${e.mainStart([L,L,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${x===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${x===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${ul(P,O,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${N&&y?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${y?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${N&&y?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${y?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${c!==void 0};${a}`,inputDependencies:K},getRunData:()=>({outputs:f,dispatchGroup:Z,programUniforms:z}),getShaderSource:k}},z0=(a,n,i,c,p,m,C,I,E,x,D=void 0,y=void 0)=>{let M=Math.min(a.outputCount,1+(C?1:0)+(I?1:0)),S=M>1?x.pastSequenceLength:0,F=S+x.kvSequenceLength,L=E&&Ke.size(E.dims)>0?E:void 0,Z=[n,i];M>1&&C&&Ke.size(C.dims)>0&&Z.push(C),L&&Z.push(L),D&&Z.push(D),y&&Z.push(y);let z=a.compute(Zp(M,n,i,C,L,x,S,D,y),{inputs:Z,outputs:M>1?[-1,1]:[-1]})[0];a.compute(Xp(z,x.batchSize,x.numHeads,S,x.sequenceLength,F,D,y),{inputs:D&&y?[z,D,y]:[z],outputs:[]});let N=[z,c];M>1&&I&&Ke.size(I.dims)>0&&N.push(I),D&&N.push(D),y&&N.push(y),a.compute(Jp(M,z,c,I,x,S,D,y),{inputs:N,outputs:M>1?[0,2]:[0]})},qp=(a,n)=>{let i=[n.batchSize,n.numHeads,n.sequenceLength,n.headSize],c=n.sequenceLength,p=n.inputHiddenSize,m=n.headSize,C=12,I={x:Math.ceil(n.headSize/C),y:Math.ceil(n.sequenceLength/C),z:n.batchSize*n.numHeads},E=[a.inputs[0],a.inputs[1],a.inputs[2]],x=[{type:12,data:c},{type:12,data:p},{type:12,data:m},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:n.hiddenSize},{type:12,data:n.hiddenSize+n.hiddenSize+n.vHiddenSize}],D=y=>{let M=Ut("output_q",E[0].dataType,i),S=Ut("output_k",E[0].dataType,i),F=Ut("output_v",E[0].dataType,i),L=At("input",E[0].dataType,E[0].dims),Z=At("weight",E[1].dataType,E[1].dims),z=At("bias",E[2].dataType,E[2].dims),N=L.type.storage,K=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileInput: array<${N}, ${C*C}>;
  var<workgroup> tileWeightQ: array<${N}, ${C*C}>;
  var<workgroup> tileWeightK: array<${N}, ${C*C}>;
  var<workgroup> tileWeightV: array<${N}, ${C*C}>;
  ${y.registerUniforms(K).declareVariables(L,Z,z,M,S,F)}
  ${y.mainStart([C,C,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${N}(0);
    var valueK = ${N}(0);
    var valueV = ${N}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return a.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:a.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:a.inputs[0].dataType,gpuDataType:0},{dims:i,dataType:a.inputs[0].dataType,gpuDataType:0}],dispatchGroup:I,programUniforms:x}),getShaderSource:D},{inputs:E,outputs:[-1,-1,-1]})},iC=(a,n)=>{let i=Kp(a.inputs,n),[c,p,m]=qp(a,i);return z0(a,c,p,m,a.inputs[4],void 0,void 0,void 0,a.inputs[5],i)}}),$p,eh,th,oC,u5=Ct(()=>{Ja(),sA(),pA(),Kr(),CA(),$p=(a,n)=>{if(!a||a.length!==5)throw new Error("BatchNormalization requires 5 inputs");let i=(c,p,m)=>{let C=p.length;if(C!==c.length)throw new Error(`${m}: num dimensions != ${C}`);p.forEach((I,E)=>{if(I!==c[E])throw new Error(`${m}: dim[${E}] do not match`)})};if(a[0].dims.length>1){let c=n.format==="NHWC"?n.spatial?a[0].dims.slice(-1):a[0].dims.slice(-1).concat(a[0].dims.slice(1,a[0].dims.length-1)):a[0].dims.slice(1,n.spatial?2:void 0);i(a[1].dims,c,"Invalid input scale"),i(a[2].dims,c,"Invalid input B"),i(a[3].dims,c,"Invalid input mean"),i(a[4].dims,c,"Invalid input var")}else i(a[1].dims,[1],"Invalid input scale"),i(a[2].dims,[1],"Invalid input B"),i(a[3].dims,[1],"Invalid input mean"),i(a[4].dims,[1],"Invalid input var")},eh=(a,n)=>{let{epsilon:i,spatial:c,format:p}=n,m=a[0].dims,C=c?Wr(m[m.length-1]):1,I=p==="NHWC"&&m.length>1?C:1,E=Ke.size(m)/C,x=c,D=x?m.length:m,y=At("x",a[0].dataType,a[0].dims,C),M=At("scale",a[1].dataType,a[1].dims,I),S=At("bias",a[2].dataType,a[2].dims,I),F=At("inputMean",a[3].dataType,a[3].dims,I),L=At("inputVar",a[4].dataType,a[4].dims,I),Z=Ut("y",a[0].dataType,D,C),z=()=>{let K="";if(c)K=`let cOffset = ${m.length===1?"0u":p==="NHWC"?`outputIndices[${m.length-1}] / ${C}`:"outputIndices[1]"};`;else if(p==="NCHW")K=`
            ${Z.indicesSet("outputIndices","0","0")}
            let cOffset = ${Z.indicesToOffset("outputIndices")};`;else{K=`var cIndices = ${M.type.indices}(0);
                       cIndices[0] = outputIndices[${m.length-1}];`;for(let f=1;f<M.rank;f++)K+=`cIndices[${f}] = outputIndices[${f}];`;K+=`let cOffset = ${M.indicesToOffset("cIndices")};`}return K},N=K=>`
  const epsilon = ${i};
  ${K.registerUniform("outputSize","u32").declareVariables(y,M,S,F,L,Z)}
  ${K.mainStart()}
  ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Z.offsetToIndices(`global_idx * ${C}`)};
    ${z()}
    let scale = ${M.getByOffset("cOffset")};
    let bias = ${S.getByOffset("cOffset")};
    let inputMean = ${F.getByOffset("cOffset")};
    let inputVar = ${L.getByOffset("cOffset")};
    let x = ${y.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Z.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${n.epsilon}_${n.format}_${c}_${C}`,inputDependencies:x?["rank","type","type","type","type"]:void 0},getShaderSource:N,getRunData:()=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:x?[{type:12,data:E},...Jt(m)]:[{type:12,data:E}]})}},th=a=>UA(a),oC=(a,n)=>{let{inputs:i,outputCount:c}=a,p=th({...n,outputCount:c});if(wr.webgpu.validateInputContent&&$p(i,p),n.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");a.compute(eh(i,p))}}),Ah,rh,lC,d5=Ct(()=>{pA(),CA(),Ah=a=>{if(a[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(a[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(a[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(a[0].dims[2]!==a[1].dims[0])throw new Error("last dimension of input and bias are not the same")},rh=a=>{let n=a[0].dims,i=a[0].dims[2],c=Ke.size(n)/4,p=a[0].dataType,m=At("input",p,n,4),C=At("bias",p,[i],4),I=At("residual",p,n,4),E=Ut("output",p,n,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:n,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)}}),getShaderSource:x=>`
  const channels = ${i}u / 4;
  ${x.declareVariables(m,C,I,E)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes(c)}
    let value = ${m.getByOffset("global_idx")}
      + ${C.getByOffset("global_idx % channels")} + ${I.getByOffset("global_idx")};
    ${E.setByOffset("global_idx","value")}
  }`}},lC=a=>{Ah(a.inputs),a.compute(rh(a.inputs))}}),sh,RA,cC,uC,dC,fC,gC,pC,hC,mC,CC,ah,bC,IC,wC,kC,D0,EC,Sl,MC,vC,xC,yC,BC,DC,PC,TC,GC,QC,SC,FC,OC,_C,NC,zC,h2,LC,vu,xu,RC,jC,WC,nh,ih,VC,t1=Ct(()=>{sA(),pA(),Kr(),CA(),sh=(a,n,i,c,p,m,C)=>{let I=Math.ceil(n/4),E="";typeof p=="string"?E=`${p}(a)`:E=p("a");let x=At("inputData",i,[I],4),D=Ut("outputData",c,[I],4),y=[{name:"vec_size",type:"u32"}];return C&&y.push(...C),`
      ${a.registerUniforms(y).declareVariables(x,D)}

  ${m??""}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${x.getByOffset("global_idx")};
    ${D.setByOffset("global_idx",E)}
  }`},RA=(a,n,i,c,p,m=a.dataType,C,I)=>{let E=[{type:12,data:Math.ceil(Ke.size(a.dims)/4)}];return C&&E.push(...C),{name:n,shaderCache:{hint:p,inputDependencies:["type"]},getShaderSource:x=>sh(x,Ke.size(a.dims),a.dataType,m,i,c,I),getRunData:x=>({outputs:[{dims:a.dims,dataType:m}],dispatchGroup:{x:Math.ceil(Ke.size(x[0].dims)/64/4)},programUniforms:E})}},cC=a=>{a.compute(RA(a.inputs[0],"Abs","abs"))},uC=a=>{a.compute(RA(a.inputs[0],"Acos","acos"))},dC=a=>{a.compute(RA(a.inputs[0],"Acosh","acosh"))},fC=a=>{a.compute(RA(a.inputs[0],"Asin","asin"))},gC=a=>{a.compute(RA(a.inputs[0],"Asinh","asinh"))},pC=a=>{a.compute(RA(a.inputs[0],"Atan","atan"))},hC=a=>{a.compute(RA(a.inputs[0],"Atanh","atanh"))},mC=a=>UA(a),CC=(a,n)=>{let i;switch(n.to){case 10:i="vec4<f16>";break;case 1:i="vec4<f32>";break;case 12:i="vec4<u32>";break;case 6:i="vec4<i32>";break;case 9:i="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${n.to}`)}a.compute(RA(a.inputs[0],"Cast",i,void 0,n.cacheKey,n.to))},ah=a=>{let n,i,c=a.length>=2&&a[1].data!==0,p=a.length>=3&&a[2].data!==0;switch(a[0].dataType){case 1:n=c?a[1].getFloat32Array()[0]:-34028234663852886e22,i=p?a[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:n=c?a[1].getUint16Array()[0]:64511,i=p?a[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return UA({min:n,max:i})},bC=(a,n)=>{let i=n||ah(a.inputs),c=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"Clip",p=>`clamp(${p}, vec4<${c}>(uniforms.min), vec4<${c}>(uniforms.max))`,void 0,i.cacheKey,void 0,[{type:a.inputs[0].dataType,data:i.min},{type:a.inputs[0].dataType,data:i.max}],[{name:"min",type:c},{name:"max",type:c}]),{inputs:[0]})},IC=a=>{a.compute(RA(a.inputs[0],"Ceil","ceil"))},wC=a=>{a.compute(RA(a.inputs[0],"Cos","cos"))},kC=a=>{a.compute(RA(a.inputs[0],"Cosh","cosh"))},D0=a=>UA(a),EC=(a,n)=>{let i=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"Elu",c=>`elu_vf32(${c})`,`
  const elu_alpha_ = ${i}(${n.alpha});

  fn elu_f32(a: ${i}) -> ${i} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${i}>) -> vec4<${i}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,n.cacheKey))},Sl=(a="f32")=>`
const r0: ${a} = 0.3275911;
const r1: ${a} = 0.254829592;
const r2: ${a} = -0.284496736;
const r3: ${a} = 1.421413741;
const r4: ${a} = -1.453152027;
const r5: ${a} = 1.061405429;

fn erf_vf32(v: vec4<${a}>) -> vec4<${a}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,MC=a=>{let n=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"Erf",i=>`erf_vf32(${i})`,Sl(n)))},vC=a=>{a.compute(RA(a.inputs[0],"Exp","exp"))},xC=a=>{a.compute(RA(a.inputs[0],"Floor","floor"))},yC=a=>{let n=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"Gelu",i=>`0.5 * ${i} * (1.0 + erf_vf32(${i} * 0.7071067811865475))`,Sl(n)))},BC=(a,n)=>{let i=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"LeakyRelu",c=>`select(leaky_relu_alpha_ * ${c}, ${c}, ${c} >= vec4<${i}>(0.0))`,`const leaky_relu_alpha_ = ${i}(${n.alpha});`,n.cacheKey))},DC=a=>{a.compute(RA(a.inputs[0],"Not",n=>`!${n}`))},PC=a=>{a.compute(RA(a.inputs[0],"Neg",n=>`-${n}`))},TC=a=>{a.compute(RA(a.inputs[0],"Reciprocal",n=>`1.0/${n}`))},GC=a=>{let n=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"Relu",i=>`select(vec4<${n}>(0.0), ${i}, ${i} > vec4<${n}>(0.0))`))},QC=a=>{a.compute(RA(a.inputs[0],"Sigmoid",n=>`(1.0 / (1.0 + exp(-${n})))`))},SC=a=>UA(a),FC=(a,n)=>{let i=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"HardSigmoid",c=>`max(vec4<${i}>(0.0), min(vec4<${i}>(1.0), ${n.alpha} * ${c} + vec4<${i}>(${n.beta})))`,void 0,n.cacheKey))},OC=a=>{a.compute(RA(a.inputs[0],"Sin","sin"))},_C=a=>{a.compute(RA(a.inputs[0],"Sinh","sinh"))},NC=a=>{a.compute(RA(a.inputs[0],"Sqrt","sqrt"))},zC=a=>{a.compute(RA(a.inputs[0],"Tan","tan"))},h2=a=>`sign(${a}) * (1 - exp(-2 * abs(${a}))) / (1 + exp(-2 * abs(${a})))`,LC=a=>{a.compute(RA(a.inputs[0],"Tanh",h2))},vu=(a="f32")=>`
const fast_gelu_a: ${a} = 0.5;
const fast_gelu_b: ${a} = 0.7978845608028654;
const fast_gelu_c: ${a} = 0.035677408136300125;

fn tanh_v(v: vec4<${a}>) -> vec4<${a}> {
  return ${h2("v")};
}
`,xu=a=>`(fast_gelu_a + fast_gelu_a * tanh_v(${a} * (fast_gelu_c * ${a} * ${a} + fast_gelu_b))) * ${a}`,RC=a=>{let n=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"FastGelu",xu,vu(n),void 0,a.inputs[0].dataType))},jC=(a,n)=>{let i=_s(a.inputs[0].dataType);return a.compute(RA(a.inputs[0],"ThresholdedRelu",c=>`select(vec4<${i}>(0.0), ${c}, ${c} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${i}>(${n.alpha});`,n.cacheKey)),0},WC=a=>{a.compute(RA(a.inputs[0],"Log","log"))},nh=(a,n)=>`
const alpha = vec4<${a}>(${n});
const one = ${a}(1.0);
const zero = ${a}(0.0);

fn quick_gelu_impl(x: vec4<${a}>) -> vec4<${a}> {
  let v = x *alpha;
  var x1 : vec4<${a}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,ih=a=>`quick_gelu_impl(${a})`,VC=(a,n)=>{let i=_s(a.inputs[0].dataType);a.compute(RA(a.inputs[0],"QuickGelu",ih,nh(i,n.alpha),n.cacheKey,a.inputs[0].dataType))}}),oh,lh,YC,f5=Ct(()=>{pA(),CA(),t1(),oh=a=>{if(a[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(a[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(a[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(a[0].dims[2]!==a[1].dims[0])throw new Error("last dimension of input and bias are not the same")},lh=a=>{let n=a[0].dims.slice();n[2]=n[2]/2;let i=At("input",a[0].dataType,a[0].dims,4),c=At("bias",a[0].dataType,[a[0].dims[2]],4),p=Ut("output",a[0].dataType,n,4),m=Ke.size(n)/4,C=Cs(a[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:n,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:I=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${a[0].dims[2]/4/2}u;

  ${I.declareVariables(i,c,p)}

  ${Sl(C)}

  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes(m)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${p.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},YC=a=>{oh(a.inputs),a.compute(lh(a.inputs))}}),ch,uh,Ya,HC,UC,KC,XC,ZC,JC,qC,$C,eb,tb,g5=Ct(()=>{sA(),pA(),CA(),ch=(a,n,i,c,p,m,C,I,E,x,D,y)=>{let M,S;typeof I=="string"?M=S=(N,K)=>`${I}((${N}),(${K}))`:typeof I=="function"?M=S=I:(M=I.scalar,S=I.vector);let F=Ut("outputData",D,c.length,4),L=At("aData",E,n.length,4),Z=At("bData",x,i.length,4),z;if(p)if(m){let N=Ke.size(n)===1,K=Ke.size(i)===1,f=n.length>0&&n[n.length-1]%4===0,k=i.length>0&&i[i.length-1]%4===0;N||K?z=F.setByOffset("global_idx",S(N?`${L.type.value}(${L.getByOffset("0")}.x)`:L.getByOffset("global_idx"),K?`${Z.type.value}(${Z.getByOffset("0")}.x)`:Z.getByOffset("global_idx"))):z=`
            let outputIndices = ${F.offsetToIndices("global_idx * 4u")};
            let offsetA = ${L.broadcastedIndicesToOffset("outputIndices",F)};
            let offsetB = ${Z.broadcastedIndicesToOffset("outputIndices",F)};
            ${F.setByOffset("global_idx",S(C||f?L.getByOffset("offsetA / 4u"):`${L.type.value}(${L.getByOffset("offsetA / 4u")}[offsetA % 4u])`,C||k?Z.getByOffset("offsetB / 4u"):`${Z.type.value}(${Z.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else z=F.setByOffset("global_idx",S(L.getByOffset("global_idx"),Z.getByOffset("global_idx")));else{if(!m)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let N=(K,f,k="")=>{let e=`aData[indexA${f}][componentA${f}]`,d=`bData[indexB${f}][componentB${f}]`;return`
            let outputIndices${f} = ${F.offsetToIndices(`global_idx * 4u + ${f}u`)};
            let offsetA${f} = ${L.broadcastedIndicesToOffset(`outputIndices${f}`,F)};
            let offsetB${f} = ${Z.broadcastedIndicesToOffset(`outputIndices${f}`,F)};
            let indexA${f} = offsetA${f} / 4u;
            let indexB${f} = offsetB${f} / 4u;
            let componentA${f} = offsetA${f} % 4u;
            let componentB${f} = offsetB${f} % 4u;
            ${K}[${f}] = ${k}(${M(e,d)});
          `};D===9?z=`
            var data = vec4<u32>(0);
            ${N("data",0,"u32")}
            ${N("data",1,"u32")}
            ${N("data",2,"u32")}
            ${N("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:z=`
            ${N("outputData[global_idx]",0)}
            ${N("outputData[global_idx]",1)}
            ${N("outputData[global_idx]",2)}
            ${N("outputData[global_idx]",3)}
          `}return`
        ${a.registerUniform("vec_size","u32").declareVariables(L,Z,F)}

        ${y??""}

        ${a.mainStart()}
        ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${z}
      }`},uh=(a,n,i,c,p,m,C=i.dataType)=>{let I=i.dims.map(L=>Number(L)??1),E=c.dims.map(L=>Number(L)??1),x=!Ke.areEqual(I,E),D=I,y=Ke.size(I),M=!1,S=!1,F=[x];if(x){let L=Ro.calcShape(I,E,!1);if(!L)throw new Error("Can't perform binary op on the given tensors");D=L.slice(),y=Ke.size(D);let Z=Ke.size(I)===1,z=Ke.size(E)===1,N=I.length>0&&I[I.length-1]%4===0,K=E.length>0&&E[E.length-1]%4===0;F.push(Z),F.push(z),F.push(N),F.push(K);let f=1;for(let k=1;k<D.length;k++){let e=I[I.length-k],d=E[E.length-k];if(e===d)f*=e;else break}f%4===0?(S=!0,M=!0):(Z||z||N||K)&&(M=!0)}else M=!0;return F.push(M),{name:a,shaderCache:{hint:n+F.map(L=>L.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:L=>ch(L,I,E,D,M,x,S,p,i.dataType,c.dataType,C,m),getRunData:()=>({outputs:[{dims:D,dataType:C}],dispatchGroup:{x:Math.ceil(y/64/4)},programUniforms:[{type:12,data:Math.ceil(Ke.size(D)/4)},...Jt(I,E,D)]})}},Ya=(a,n,i,c,p,m)=>{a.compute(uh(n,p??"",a.inputs[0],a.inputs[1],i,c,m))},HC=a=>{Ya(a,"Add",(n,i)=>`${n}+${i}`)},UC=a=>{Ya(a,"Div",(n,i)=>`${n}/${i}`)},KC=a=>{Ya(a,"Equal",{scalar:(n,i)=>`u32(${n}==${i})`,vector:(n,i)=>`vec4<u32>(${n}==${i})`},void 0,void 0,9)},XC=a=>{Ya(a,"Mul",(n,i)=>`${n}*${i}`)},ZC=a=>{let n=At("input",a.inputs[0].dataType,a.inputs[0].dims).type.value;Ya(a,"Pow",{scalar:(i,c)=>`pow_custom(${i},${c})`,vector:(i,c)=>`pow_vector_custom(${i},${c})`},`
    fn pow_custom(a : ${n}, b : ${n}) -> ${n} {
      if (b == ${n}(0.0)) {
        return ${n}(1.0);
      } else if (a < ${n}(0.0) && f32(b) != floor(f32(b))) {
        return ${n}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${n}(1.0), round(f32(abs(b) % ${n}(2.0))) != 1.0) * ${n}(${n==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${n}>, b : vec4<${n}>) -> vec4<${n}> {
      // TODO: implement vectorized pow
      return vec4<${n}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},JC=a=>{Ya(a,"Sub",(n,i)=>`${n}-${i}`)},qC=a=>{Ya(a,"Greater",{scalar:(n,i)=>`u32(${n}>${i})`,vector:(n,i)=>`vec4<u32>(${n}>${i})`},void 0,void 0,9)},$C=a=>{Ya(a,"Less",{scalar:(n,i)=>`u32(${n}<${i})`,vector:(n,i)=>`vec4<u32>(${n}<${i})`},void 0,void 0,9)},eb=a=>{Ya(a,"GreaterOrEqual",{scalar:(n,i)=>`u32(${n}>=${i})`,vector:(n,i)=>`vec4<u32>(${n}>=${i})`},void 0,void 0,9)},tb=a=>{Ya(a,"LessOrEqual",{scalar:(n,i)=>`u32(${n}<=${i})`,vector:(n,i)=>`vec4<u32>(${n}<=${i})`},void 0,void 0,9)}}),dh,fh,gh,ph,Ab,rb,p5=Ct(()=>{sA(),pA(),Kr(),CA(),dh=(a,n)=>{if(!a||a.length<1)throw new Error("too few inputs");let i=0,c=a[i],p=c.dataType,m=c.dims.length;a.forEach((C,I)=>{if(I!==i){if(C.dataType!==p)throw new Error("input tensors should be one type");if(C.dims.length!==m)throw new Error("input tensors should have the same shape");C.dims.forEach((E,x)=>{if(x!==n&&E!==c.dims[x])throw new Error("non concat dimensions must match")})}})},fh=(a,n)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${a}u>(${n});
    for (var i: u32 = 0u; i < ${a}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${a}u;
  }`,gh=(a,n)=>{let i=a.length,c=[];for(let p=0;p<i;++p){let m=n.setByOffset("global_idx",a[p].getByIndices("indices"));i===1?c.push(m):p===0?c.push(`if (inputIndex == ${p}u) { ${m} }`):p===i-1?c.push(`else { ${m} }`):c.push(`else if (inputIndex == ${p}) { ${m} }`)}return c.join(`
`)},ph=(a,n,i,c)=>{let p=Ke.size(i),m=new Array(a.length),C=new Array(a.length),I=0,E=[],x=[],D=[{type:12,data:p}];for(let L=0;L<a.length;++L)I+=a[L].dims[n],m[L]=I,x.push(a[L].dims.length),C[L]=At(`input${L}`,c,x[L]),E.push("rank"),D.push({type:12,data:m[L]});for(let L=0;L<a.length;++L)D.push(...Jt(a[L].dims));D.push(...Jt(i));let y=Ut("output",c,i.length),M=y.indicesGet("indices",n),S=Array.from(Array(m.length).keys()).map(L=>`uniforms.sizeInConcatAxis${L}`).join(","),F=L=>`

  ${(()=>{L.registerUniform("outputSize","u32");for(let Z=0;Z<a.length;Z++)L.registerUniform(`sizeInConcatAxis${Z}`,"u32");return L.declareVariables(...C,y)})()}

  ${fh(m.length,S)}

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${y.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${M});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${m.length}u>(${S});
      ${M} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${gh(C,y)}
  }`;return{name:"Concat",shaderCache:{hint:`${n}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:i,dataType:c}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:D}),getShaderSource:F}},Ab=(a,n)=>{let i=a.inputs,c=i[0].dims,p=Ke.normalizeAxis(n.axis,c.length);dh(i,p);let m=c.slice();m[p]=i.reduce((I,E)=>I+(E.dims.length>p?E.dims[p]:0),0);let C=i.filter(I=>Ke.size(I.dims)>0);a.compute(ph(C,p,m,i[0].dataType),{inputs:C})},rb=a=>UA({axis:a.axis})}),qi,$i,eo,A1,Ao=Ct(()=>{sA(),pA(),qi=(a,n,i="f32")=>{switch(a.activation){case"Relu":return`value = max(value, ${n}(0.0));`;case"Sigmoid":return`value = (${n}(1.0) / (${n}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${n}(${i}(uniforms.clip_min)), ${n}(${i}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${n}(0.0), min(${n}(1.0), ${i}(uniforms.alpha) * value + ${i}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${i}(uniforms.alpha) * value, value, value >= ${n}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${a.activation}`)}},$i=(a,n)=>{a.activation==="Clip"?n.push({type:1,data:a.clipMax},{type:1,data:a.clipMin}):a.activation==="HardSigmoid"?n.push({type:1,data:a.alpha},{type:1,data:a.beta}):a.activation==="LeakyRelu"&&n.push({type:1,data:a.alpha})},eo=(a,n)=>{a.activation==="Clip"?n.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):a.activation==="HardSigmoid"?n.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):a.activation==="LeakyRelu"&&n.push({name:"alpha",type:"f32"})},A1=a=>{let n=a?.activation||"";if(n==="HardSigmoid"){let[i,c]=a?.activation_params||[.2,.5];return{activation:n,alpha:i,beta:c}}else if(n==="Clip"){let[i,c]=a?.activation_params||[D3,P3];return{activation:n,clipMax:c,clipMin:i}}else if(n==="LeakyRelu"){let[i]=a?.activation_params||[.01];return{activation:n,alpha:i}}return{activation:n}}}),ks,sb,r1=Ct(()=>{ks=(a,n)=>{switch(a){case 1:return n;case 2:return`vec2<${n}>`;case 3:return`vec3<${n}>`;case 4:return`vec4<${n}>`;default:throw new Error(`${a}-component is not supported.`)}},sb=a=>`
      ${a?"value = value + getBiasByOutputCoords(coords);":""}
      `}),ab,h5=Ct(()=>{ab=a=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${a}.x), i32(${a}.y), i32(${a}.z), 1));
}
`}),T0,s1,a1=Ct(()=>{sA(),pA(),CA(),Ao(),T0=(a,n,i,c,p)=>{let m=c-i;return`
      ${Array.from({length:i}).map((C,I)=>`
      if (${Kt(n.shape,I,n.rank)} != 1) {
        ${n.indicesSet(a,I,Kt(p,I+m,c))}
      } else {
        ${n.indicesSet(a,I,0)}
      }`).join("")}
`},s1=(a,n,i,c,p=!1,m)=>{let C=a[0].dims,I=a[1].dims,E=C[C.length-2],x=I[I.length-1],D=C[C.length-1],y=Wr(x),M=Wr(D),S=Wr(E),F=Ke.size(i)/y/S,L=a.length>2,Z=c?c.slice(0,-2):i.slice(0,-2),z=[Ke.size(Z),E,x],N=[{type:12,data:F},{type:12,data:E},{type:12,data:x},{type:12,data:D}];$i(n,N),N.push(...Jt(Z,C,I)),L&&N.push(...Jt(a[2].dims)),N.push(...Jt(z));let K=f=>{let k=qu("batch_dims",a[0].dataType,Z.length),e=At("a",a[0].dataType,C.length,M),d=At("b",a[1].dataType,I.length,y),B=Ut("output",a[0].dataType,z.length,y),Ae=Cs(B.type.tensor),P=qi(n,B.type.value,Ae),O=[e,d],me="";if(L){let we=p?y:1;O.push(At("bias",a[2].dataType,a[2].dims.length,we)),me=`${p?`value += bias[col / ${we}];`:`value += ${B.type.value}(bias[row + i]);`}`}let ee=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];eo(n,ee);let Ce=()=>{let we=`var a_data: ${e.type.value};`;for(let xe=0;xe<M;xe++)we+=`
              let b_data${xe} = b[(b_offset + (k + ${xe}) * uniforms.N + col) / ${y}];`;for(let xe=0;xe<S;xe++){we+=`a_data = a[(a_offset + (row + ${xe}) * uniforms.K + k) / ${M}];`;for(let De=0;De<M;De++)we+=`
            values[${xe}] = fma(${d.type.value}(a_data${M===1?"":`[${De}]`}), b_data${De}, values[${xe}]);
`}return we};return`
  ${f.registerUniforms(ee).registerInternalVariables(k).declareVariables(...O,B)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${y})) * ${y};
    var index1 = global_idx / (uniforms.N / ${y});
    let stride1 = uniforms.M / ${S};
    let row = (index1 % stride1) * ${S};
    let batch = index1 / stride1;

    ${i.length===2?"":`let batch_indices = ${k.offsetToIndices("batch")};`}

    var a_indices: ${e.type.indices};
    ${T0("a_indices",e,e.rank-2,k.rank,"batch_indices")}
    ${e.indicesSet("a_indices",e.rank-2,0)}
    ${e.indicesSet("a_indices",e.rank-1,0)}
    let a_offset = ${e.indicesToOffset("a_indices")};

    var b_indices: ${d.type.indices};
    ${T0("b_indices",d,d.rank-2,k.rank,"batch_indices")}
    ${d.indicesSet("b_indices",d.rank-2,0)}
    ${d.indicesSet("b_indices",d.rank-1,0)}
    let b_offset = ${d.indicesToOffset("b_indices")};
    var values: array<${B.type.value}, ${S}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${M}) {
      ${Ce()}
    }
    for (var i = 0u; i < ${S}u; i++) {
      var value = values[i];
      ${me}
      ${P}
      let cur_indices = ${B.type.indices}(batch, row + i, col);
      let offset = ${B.indicesToOffset("cur_indices")};
      ${B.setByOffset(`offset / ${y}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${n.activation};${y};${M};${S};${p}`,inputDependencies:L?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:m?m(i):i,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:N}),getShaderSource:K}}}),hh,mh,yu,m2,Ch,Bu,bh,jl,n1=Ct(()=>{sA(),pA(),CA(),Ao(),a1(),r1(),hh=(a,n)=>a?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${n?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${n?", batchIndices":""});
        `,mh=(a,n)=>a?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${n===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${n===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${n===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,yu=(a,n,i="f32",c,p=!1,m=32,C=!1,I=32)=>{let E=n[1]*a[1],x=n[0]*a[0],D=p?E:m,y=p?m:E,M=D/n[0],S=m/n[1];if(!((p&&M===4&&a[1]===4||!p&&(M===3||M===4))&&D%n[0]===0&&m%n[1]===0&&a[0]===4))throw new Error(`If transposeA ${p} is true, innerElementSize ${M} and workPerThread[1] ${a[1]} must be 4.
      Otherwise, innerElementSize ${M} must be 3 or 4.
  tileAWidth ${D} must be divisible by workgroupSize[0]${n[0]}. tileInner ${m} must be divisible by workgroupSize[1] ${n[1]}. colPerThread ${a[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${M}<${i}>, ${D/M}>, ${y}>;
var<workgroup> mm_Bsub: array<array<vec4<${i}>, ${x/a[0]}>, ${m}>;

const rowPerThread = ${a[1]};
const colPerThread = ${a[0]};
const innerElementSize = ${M};
const tileInner = ${m};

@compute @workgroup_size(${n[0]}, ${n[1]}, ${n[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${C?"0":"i32(globalId.z)"};
  ${c?`let batchIndices = ${c.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${E};

  let num_tiles = ${C?`${Math.ceil(I/m)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${C?`i32(globalId.z) * ${I}`:"0"};

  var acc: array<vec4<${i}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${S};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${hh(p,c)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${c?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${M===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${mh(p,M)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},m2=(a,n)=>a?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${n?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${n?", batchIndices":""});
            `,Ch=a=>a?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Bu=(a,n,i="f32",c,p=!1,m=32,C=!1,I=32,E=!1)=>{let x=a[1]*n[1],D=a[0]*n[0],y=p?x:m,M=p?m:x;if(!(M%n[1]===0&&y%n[0]===0&&m%n[1]===0))throw new Error(`tileAHight ${M} must be divisible by workgroupSize[1]${n[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${n[0]}, tileInner ${m} must be divisible by workgroupSize[1]${n[1]}`);let S=M/n[1],F=y/n[0],L=m/n[1],Z=E?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${x};
    let globalColStart = i32(workgroupId.x) * ${D};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${M}; inputRow = inputRow + ${n[1]}) {
        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${n[0]}) {
          ${m2(p,c)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${n[1]}) {
            for (var inputCol = localCol; inputCol < ${D}; inputCol = inputCol + ${n[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${c?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${i}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${n[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${p?`mm_Asub[k][localRow + innerRow * ${n[1]}];`:`mm_Asub[localRow + innerRow * ${n[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${n[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${n[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${x};

let tileRowA = i32(localId.y) * ${S};
let tileColA = i32(localId.x) * ${F};
let tileRowB = i32(localId.y) * ${L};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${F}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${m2(p,c)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${L}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${c?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${i}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Ch(p)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${i}, ${y}>, ${M}>;
  var<workgroup> mm_Bsub : array<array<${i}, ${D}>, ${m}>;
  const rowPerThread = ${a[1]};
  const colPerThread = ${a[0]};
  const tileInner = ${m};

@compute @workgroup_size(${n[0]}, ${n[1]}, ${n[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${C?"0":"i32(globalId.z)"};
    ${c?`let batchIndices = ${c.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${C?`${Math.ceil(I/m)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${C?`i32(globalId.z) * ${I}`:"0"};

    var acc : array<array<${i}, colPerThread>, rowPerThread>;
    ${Z}
  }
`},bh=(a,n,i,c,p=!1)=>{let[m,C,I,E]=c,x=Cs(c[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${ks(a,x)} {
      var value = ${ks(a,x)}(0.0);
      let col = colIn * ${a};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${C.type.indices};
        ${T0("aIndices",C,C.rank-2,m.rank,"batchIndices")}
        ${C.indicesSet("aIndices",C.rank-2,"u32(row)")}
        ${C.indicesSet("aIndices",C.rank-1,"u32(colIn)")}
        value = ${C.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${ks(a,x)} {
      var value = ${ks(a,x)}(0.0);
      let col = colIn * ${a};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${I.type.indices};
        ${T0("bIndices",I,I.rank-2,m.rank,"batchIndices")}
        ${I.indicesSet("bIndices",I.rank-2,"u32(row)")}
        ${I.indicesSet("bIndices",I.rank-1,"u32(colIn)")}
        value = ${I.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ks(a,x)}) {
      let col = colIn * ${a};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${n?`value = value + ${p?"bias[colIn]":`${ks(a,x)}(bias[row])`};`:""}
        ${i}
        ${E.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},jl=(a,n,i,c,p=!1,m)=>{let C=a[0].dims,I=a[1].dims,E=C.slice(0,-2),x=I.slice(0,-2),D=c?c.slice(0,-2):i.slice(0,-2),y=Ke.size(D),M=C[C.length-2],S=C[C.length-1],F=I[I.length-1],L=S%4===0&&F%4===0,Z=M<=8?[4,1,1]:[4,4,1],z=[8,8,1],N=[Math.ceil(F/z[0]/Z[0]),Math.ceil(M/z[1]/Z[1]),Math.ceil(y/z[2]/Z[2])],K=L?4:1,f=[...E,M,S/K],k=f.length,e=[...x,S,F/K],d=e.length,B=[y,M,F/K],Ae=[{type:6,data:M},{type:6,data:F},{type:6,data:S}];$i(n,Ae),Ae.push(...Jt(D,f,e));let P=["rank","rank"],O=a.length>2;O&&(Ae.push(...Jt(a[2].dims)),P.push("rank")),Ae.push(...Jt(B));let me=ee=>{let Ce=D.length,we=qu("batchDims",a[0].dataType,Ce,1),xe=Cs(a[0].dataType),De=At("a",a[0].dataType,k,K),ye=At("b",a[1].dataType,d,K),Oe=Ut("result",a[0].dataType,B.length,K),_e=[De,ye];if(O){let Qe=p?K:1;_e.push(At("bias",a[2].dataType,a[2].dims.length,Qe))}let ne=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];eo(n,ne);let te=Cs(Oe.type.tensor),pe=qi(n,Oe.type.value,te),le=bh(K,O,pe,[we,De,ye,Oe],p);return`
  ${ee.registerUniforms(ne).registerInternalVariables(we).declareVariables(..._e,Oe)}
  ${le}
  ${L?yu(Z,z,xe,we):Bu(Z,z,xe,we)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Z};${n.activation};${L};${p}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:m?m(i):i,dataType:a[0].dataType}],dispatchGroup:{x:N[0],y:N[1],z:N[2]},programUniforms:Ae}),getShaderSource:me}}}),Ih,nb,m5=Ct(()=>{sA(),jn(),CA(),Ao(),r1(),h5(),n1(),Ih=(a,n,i,c,p=!1,m,C=4,I=4,E=4,x="f32")=>{let D=Ae=>{switch(Ae){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${x}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Ae} is not supported.`)}},y=Ae=>{switch(Ae){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Ae} is not supported.`)}},M=a?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,S=a?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,F=a?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",L=a?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Z=a?"row":"col",z=a?"col":"row",N=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${a?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Z} / outWidth;
    let outCol = ${Z} % outWidth;

    let WRow = ${z} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${z} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${z} % inChannels;
    var resData = ${ks(C,x)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${F} && xCol >= 0 && xCol < ${L}) {
      ${M}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${D(C)}
    }
    return resData;`,K=a?n&&c?`
    let col = colIn * ${C};
    ${N}`:`
    let col = colIn * ${C};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${N}
    }
    return ${ks(C,x)}(0.0);`:c&&i?`
    let col = colIn * ${C};
    ${N}`:`
    let col = colIn * ${C};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${N}
    }
    return ${ks(C,x)}(0.0);`,f=a?c&&i?y(I):`
    let col = colIn * ${I};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${y(I)}
    }
    return ${ks(I,x)}(0.0);`:`
    let col = colIn * ${I};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${y(I)}
    }
    return ${ks(I,x)}(0.0);`,k=ks(E,x),e=ks(a?C:I,x),d=ks(a?I:C,x),B=qi(m,k,x);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${e} {
      ${a?K:f}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${d} {
      ${a?f:K}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
      let col = colIn * ${E};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${a?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${S}
      ${sb(p)}
      ${B}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},nb=(a,n,i,c,p,m,C,I,E)=>{let x=n.format==="NHWC",D=x?a[0].dims[3]:a[0].dims[1],y=i[0],M=x?i[2]:i[3],S=x?i[1]:i[2],F=x?i[3]:i[1],L=x&&(D%4===0||D%3===0)&&F%4===0,Z=x?F:M*S,z=x?M*S:F,N=[8,8,1],K=c<=8?[4,1,1]:[4,4,1],f=[Math.ceil(Z/N[0]/K[0]),Math.ceil(z/N[1]/K[1]),Math.ceil(y/N[2]/K[2])];TA("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${f}`);let k=L?x&&D%4!==0?3:4:1,e=N[1]*K[1],d=N[0]*K[0],B=Math.max(N[0]*k,N[1]),Ae=c%e===0,P=p%d===0,O=m%B===0,me=L?[k,4,4]:[1,1,1],ee=[{type:6,data:c},{type:6,data:p},{type:6,data:m},{type:6,data:[n.pads[0],n.pads[1]]},{type:6,data:n.strides},{type:6,data:n.dilations}];$i(n,ee),ee.push(...Jt(a[0].dims,a[1].dims));let Ce=["rank","rank"];C&&(ee.push(...Jt(a[2].dims)),Ce.push("rank")),ee.push(...Jt(i));let we=xe=>{let De=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];eo(n,De);let ye=L?4:1,Oe=Cs(a[0].dataType),_e=`
      fn setOutputAtIndex(flatIndex : i32, value : ${L?`vec4<${Oe}>`:Oe}) {
        result[flatIndex] = ${L?`vec4<${Oe}>`:Oe}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${L?`vec4<${Oe}>`:Oe}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${L?"/ 4":""}, value);
      }`,ne=At("x",a[0].dataType,a[0].dims.length,k===3?1:k),te=At("w",a[1].dataType,a[1].dims.length,ye),pe=[ne,te],le=Ut("result",a[0].dataType,i.length,ye);if(C){let Qe=At("bias",a[2].dataType,a[2].dims.length,ye);pe.push(Qe),_e+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${L?`vec4<${Oe}>`:Oe} {
          return bias[coords.${x?"w":"y"}${L?"/ 4":""}];
        }`}return`
        ${ab("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${xe.registerUniforms(De).declareVariables(...pe,le)}
        ${_e}
        ${Ih(x,Ae,P,O,C,n,me[0],me[1],me[2],Oe)}
        ${L?yu(K,N,Oe,void 0,!x,B):Bu(K,N,Oe,void 0,!x,B,!1,void 0,I)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${n.cacheKey};${k};${L};${Ae};${P};${O};${e};${d};${B}`,inputDependencies:Ce},getRunData:()=>({outputs:[{dims:E?E(i):i,dataType:a[0].dataType}],dispatchGroup:{x:f[0],y:f[1],z:f[2]},programUniforms:ee}),getShaderSource:we}}}),wh,C2,d0,kh,b2,Eh,ib,ob,C5=Ct(()=>{sA(),jn(),pA(),CA(),Ao(),r1(),wh=a=>{let n=1;for(let i=0;i<a.length;i++)n*=a[i];return n},C2=a=>typeof a=="number"?[a,a,a]:a,d0=(a,n)=>n<=1?a:a+(a-1)*(n-1),kh=(a,n,i,c=1)=>{let p=d0(n,c);return Math.floor((a[0]*(i-1)-i+p)/2)},b2=(a,n,i,c,p)=>{p==null&&(p=kh(a,n[0],c[0]));let m=[0,0,0,i];for(let C=0;C<3;C++)a[C]+2*p>=n[C]&&(m[C]=Math.trunc((a[C]-n[C]+2*p)/c[C]+1));return m},Eh=(a,n,i,c,p,m,C,I,E,x)=>{let D,y,M,S;if(a==="VALID"&&(a=0),typeof a=="number"){D={top:a,bottom:a,left:a,right:a,front:a,back:a};let F=b2([n,i,c,1],[I,E,x],1,[p,m,C],a);y=F[0],M=F[1],S=F[2]}else if(Array.isArray(a)){if(!a.every((L,Z,z)=>L===z[0]))throw Error(`Unsupported padding parameter: ${a}`);D={top:a[0],bottom:a[1],left:a[2],right:a[3],front:a[4],back:a[5]};let F=b2([n,i,c,1],[I,E,x],1,[p,m,C],a[0]);y=F[0],M=F[1],S=F[2]}else if(a==="SAME_UPPER"){y=Math.ceil(n/p),M=Math.ceil(i/m),S=Math.ceil(c/C);let F=(y-1)*p+I-n,L=(M-1)*m+E-i,Z=(S-1)*C+x-c,z=Math.floor(F/2),N=F-z,K=Math.floor(L/2),f=L-K,k=Math.floor(Z/2),e=Z-k;D={top:K,bottom:f,left:k,right:e,front:z,back:N}}else throw Error(`Unknown padding parameter: ${a}`);return{padInfo:D,outDepth:y,outHeight:M,outWidth:S}},ib=(a,n,i,c,p,m=!1,C="channelsLast")=>{let I,E,x,D,y;if(C==="channelsLast")[I,E,x,D,y]=a;else if(C==="channelsFirst")[I,y,E,x,D]=a;else throw new Error(`Unknown dataFormat ${C}`);let[M,,S,F,L]=n,[Z,z,N]=C2(i),[K,f,k]=C2(c),e=d0(S,K),d=d0(F,f),B=d0(L,k),{padInfo:Ae,outDepth:P,outHeight:O,outWidth:me}=Eh(p,E,x,D,Z,z,N,e,d,B),ee=m?M*y:M,Ce=[0,0,0,0,0];return C==="channelsFirst"?Ce=[I,ee,P,O,me]:C==="channelsLast"&&(Ce=[I,P,O,me,ee]),{batchSize:I,dataFormat:C,inDepth:E,inHeight:x,inWidth:D,inChannels:y,outDepth:P,outHeight:O,outWidth:me,outChannels:ee,padInfo:Ae,strideDepth:Z,strideHeight:z,strideWidth:N,filterDepth:S,filterHeight:F,filterWidth:L,effectiveFilterDepth:e,effectiveFilterHeight:d,effectiveFilterWidth:B,dilationDepth:K,dilationHeight:f,dilationWidth:k,inShape:a,outShape:Ce,filterShape:n}},ob=(a,n,i,c,p,m)=>{let C=m==="channelsLast";C?a[0].dims[3]:a[0].dims[1];let I=[64,1,1],E={x:i.map((Z,z)=>z)},x=[Math.ceil(wh(E.x.map(Z=>i[Z]))/I[0]),1,1];TA("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${x}`);let D=1,y=Ke.size(i),M=[{type:12,data:y},{type:12,data:c},{type:12,data:p},{type:12,data:n.strides},{type:12,data:n.dilations}];$i(n,M),M.push(...Jt(a[0].dims,a[1].dims));let S=["rank","rank"],F=a.length===3;F&&(M.push(...Jt(a[2].dims)),S.push("rank")),M.push(...Jt(i));let L=Z=>{let z=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:c.length},{name:"pads",type:"u32",length:p.length},{name:"strides",type:"u32",length:n.strides.length},{name:"dilations",type:"u32",length:n.dilations.length}];eo(n,z);let N=1,K=Cs(a[0].dataType),f=At("x",a[0].dataType,a[0].dims.length,D),k=At("W",a[1].dataType,a[1].dims.length,N),e=[f,k],d=Ut("result",a[0].dataType,i.length,N),B="";if(F){let O=At("bias",a[2].dataType,a[2].dims.length,N);e.push(O),B+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${K} {
          return bias[${C?Kt("coords",4,5):Kt("coords",1,5)}];
        }`}let Ae=ks(D,K),P=qi(n,Ae,K);return`
            ${B}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${f.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${k.getByIndices("aIndices")};
            }
          ${Z.registerUniforms(z).declareVariables(...e,d)}
          ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${d.offsetToIndices("global_idx")};
              let batch = ${Kt("coords",0,f.rank)};
              let d2 = ${C?Kt("coords",f.rank-1,f.rank):Kt("coords",1,f.rank)};
              let xFRCCorner = vec3<u32>(${C?Kt("coords",1,f.rank):Kt("coords",2,f.rank)},
              ${C?Kt("coords",2,f.rank):Kt("coords",3,f.rank)},
              ${C?Kt("coords",3,f.rank):Kt("coords",4,f.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${C?Kt("uniforms.x_shape",1,f.rank):Kt("uniforms.x_shape",2,f.rank)};
              let xShapeZ = ${C?Kt("uniforms.x_shape",2,f.rank):Kt("uniforms.x_shape",3,f.rank)};
              let xShapeW = ${C?Kt("uniforms.x_shape",3,f.rank):Kt("uniforms.x_shape",4,f.rank)};
              let xShapeU = ${C?Kt("uniforms.x_shape",4,f.rank):Kt("uniforms.x_shape",1,f.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${C?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${C?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${C?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${C?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${F?"value = value + getBiasByOutputCoords(coords)":""};
              ${P}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${n.cacheKey};${C};${D};${F}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:i,dataType:a[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:M}),getShaderSource:L}}}),lb,cb,b5=Ct(()=>{sA(),pA(),CA(),Ao(),lb=(a,n,i,c)=>{let p=a.length>2,m=p?"value += b[output_channel];":"",C=a[0].dims,I=a[1].dims,E=n.format==="NHWC",x=E?i[3]:i[1],D=x/n.group,y=E&&D>=4?Wr(x):1,M=Ke.size(i)/y,S=[{type:12,data:M},{type:12,data:n.dilations},{type:12,data:[n.strides[0],n.strides[1]]},{type:12,data:[n.pads[0],n.pads[1]]},{type:12,data:D}];$i(n,S),S.push(...Jt(C,[I[0],I[1],I[2],I[3]/y]));let F=p?["rank","rank","rank"]:["rank","rank"];S.push(...Jt([i[0],i[1],i[2],i[3]/y]));let L=Z=>{let z=Ut("output",a[0].dataType,i.length,y),N=Cs(z.type.tensor),K=qi(n,z.type.value,N),f=At("x",a[0].dataType,C.length),k=At("w",a[1].dataType,I.length,y),e=[f,k];p&&e.push(At("b",a[2].dataType,a[2].dims,y));let d=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:n.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];eo(n,d);let B=E?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${f.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${k.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${f.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${k.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Z.registerUniforms(d).declareVariables(...e,z)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${z.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${E?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${E?1:2}], outputIndices[${E?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${y} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${E?2:1}];

    var value: ${z.type.value} = ${z.type.value}(0);
    ${B}
    ${m}
    ${K}
    ${z.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${n.cacheKey}_${y}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:c?c(i):i,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:S}),getShaderSource:L}},cb=(a,n,i,c)=>{let p=a.length>2,m=Wr(i[3]),C=Wr(i[2]),I=Ke.size(i)/m/C,E=[a[0].dims[0],a[0].dims[1],a[0].dims[2],a[0].dims[3]/m],x=[a[1].dims[0],a[1].dims[1],a[1].dims[2],a[1].dims[3]/m],D=[i[0],i[1],i[2],i[3]/m],y=[{type:12,data:I},{type:6,data:[n.strides[0],n.strides[1]]},{type:6,data:[n.pads[0],n.pads[1]]}];$i(n,y),y.push(...Jt(E,x,D));let M=(C-1)*n.strides[1]+x[1],S=F=>{let L=Ut("output",a[0].dataType,D.length,m),Z=Cs(L.type.tensor),z=qi(n,L.type.value,Z),N=At("x",a[0].dataType,E.length,m),K=At("w",a[1].dataType,x.length,m),f=[N,K];p&&f.push(At("b",a[2].dataType,a[2].dims,m));let k=p?"value += b[output_channel];":"",e=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return eo(n,e),`
  ${F.registerUniforms(e).declareVariables(...f,L)}
  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${C}u;
    let col = (index1 % width1) * ${C}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${N.type.value}, ${M}>;
    var values: array<${L.type.value}, ${C}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${x[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${M}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${N.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${N.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${x[1]}; w_width++) {
          let w_val = ${K.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${C}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${C}u; i++) {
      var value = values[i];
      ${k}
      ${z}
      ${L.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${n.cacheKey};${m};${C};${M};${x[0]};${x[1]}`,inputDependencies:p?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:c?c(i):i,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(I/64)},programUniforms:y}),getShaderSource:S}}}),Mh,dl,vh,fl,Du,I2,xh,yh,Pu,I5=Ct(()=>{pA(),m5(),C5(),n1(),b5(),Ao(),a1(),bi(),Mh=(a,n,i,c,p,m)=>{let C=a[0],I=a.slice(m?1:2,m?3:4),E=I.length,x=n[0],D=n.slice(2).map((M,S)=>M+(M-1)*(i[S]-1)),y=I.map((M,S)=>M+c[S]+c[S+E]).map((M,S)=>Math.floor((M-D[S]+p[S])/p[S]));return y.splice(0,0,C),y.splice(m?3:1,0,x),y},dl=[2,3,1,0],vh=(a,n)=>{if(!a||a.length!==2&&a.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(a[0].dims.length>5)throw new Error("greater than 5D is not supported");if(a[0].dims.length!==a[1].dims.length)throw new Error("filter does not have same dimension as input");let i=a[0].dims[n.format==="NHWC"?a[0].dims.length-1:1],c=a[1].dims[1]*n.group;if(i!==c)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(a.length===3&&(a[2].dims.length!==1||a[1].dims[0]!==a[2].dims[0]))throw new Error("invalid bias");let p=a[0].dims.length-2;if(n.dilations.length!==p)throw new Error(`dilations should be ${p}D`);if(n.strides.length!==p)throw new Error(`strides should be ${p}D`);if(n.pads.length!==p*2)throw new Error(`pads should be ${p*2}D`);if(n.kernelShape.length!==0&&n.kernelShape.length!==a[1].dims.length-2)throw new Error("invalid kernel shape")},fl=(a,n)=>{let i=a.kernelShape.slice();i.length<n[1].dims.length-2&&i.push(...Array(n[1].dims.length-2-i.length).fill(0));for(let m=2;m<n[1].dims.length;++m)i[m-2]===0&&(i[m-2]=n[1].dims[m]);let c=a.pads.slice();Ll.adjustPadsBasedOnAutoPad(n[0].dims,a.strides,a.dilations,i,c,a.format==="NHWC",a.autoPad);let p=Object.assign({},a);return Object.assign(p,{kernelShape:i,pads:c}),p},Du=a=>{let n=A1(a),i=a.format,c=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][a.auto_pad],p=a.dilations,m=a.group,C=a.kernel_shape,I=a.pads,E=a.strides,x=a.w_is_const();return{autoPad:c,format:i,dilations:p,group:m,kernelShape:C,pads:I,strides:E,wIsConst:x,...n,cacheKey:`${a.format};${n.activation};`}},I2=(a,n,i,c)=>{let p=i.format==="NHWC",m=Mh(n[0].dims,n[1].dims,i.dilations,i.pads,i.strides,p);if(i.group!==1){let e=[n[0]];if(p){let d=a.kernelCustomData.wT??a.compute(ma(n[1],dl),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!a.kernelCustomData.wT&&(a.kernelCustomData.wT=d),e.push(d)}else e.push(n[1]);n.length===3&&e.push(n[2]),!a.adapterInfo.isArchitecture("ampere")&&p&&n[1].dims[0]===i.group&&n[1].dims[1]===1&&i.dilations[0]===1&&i.dilations[1]===1?a.compute(cb(e,i,m,c),{inputs:e}):a.compute(lb(e,i,m,c),{inputs:e});return}let C=n.length===3,I=n[0].dims[p?1:2],E=n[0].dims[p?2:3],x=n[0].dims[p?3:1],D=n[1].dims[2],y=n[1].dims[3],M=m[p?1:2],S=m[p?2:3],F=m[p?3:1],L=p&&D===I&&y===E&&i.pads[0]===0&&i.pads[1]===0;if(L||D===1&&y===1&&i.dilations[0]===1&&i.dilations[1]===1&&i.strides[0]===1&&i.strides[1]===1&&i.pads[0]===0&&i.pads[1]===0){let e=m[0],d,B,Ae,P=[];if(p){let ee=a.kernelCustomData.wT??a.compute(ma(n[1],dl),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];if(i.wIsConst&&!a.kernelCustomData.wT&&(a.kernelCustomData.wT=ee),L){let Ce=I*E*x;d=n[0].reshape([1,e,Ce]),B=ee.reshape([1,Ce,F]),Ae=[1,e,F]}else d=n[0].reshape([e,I*E,x]),B=ee.reshape([1,x,F]),Ae=[e,M*S,F];P.push(d),P.push(B)}else d=n[0].reshape([e,x,I*E]),B=n[1].reshape([1,F,x]),Ae=[e,F,M*S],P.push(B),P.push(d);C&&P.push(n[2]);let O=Ae[2],me=P[0].dims[P[0].dims.length-1];O<8&&me<8?a.compute(s1(P,i,m,Ae,p,c),{inputs:P}):a.compute(jl(P,i,m,Ae,p,c),{inputs:P});return}let Z=!0,z=a.kernelCustomData.wT??a.compute(ma(n[1],dl),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!a.kernelCustomData.wT&&(a.kernelCustomData.wT=z);let N=[n[0],z];C&&N.push(n[2]);let K=p?M*S:F,f=p?F:M*S,k=D*y*x;a.compute(nb(N,i,m,K,f,k,C,Z,c),{inputs:N})},xh=(a,n)=>{let i=n.format==="NHWC",c=[a.inputs[0].reshape(i?[a.inputs[0].dims[0],1,a.inputs[0].dims[1],a.inputs[0].dims[2]]:[a.inputs[0].dims[0],a.inputs[0].dims[1],1,a.inputs[0].dims[2]]),a.inputs[1].reshape([a.inputs[1].dims[0],a.inputs[1].dims[1],1,a.inputs[1].dims[2]])];a.inputs.length===3&&c.push(a.inputs[2]);let p=[0,n.pads[0],0,n.pads[1]],m=[1].concat(n.strides),C=[1].concat(n.dilations),I=[1].concat(n.kernelShape),E=fl({...n,pads:p,strides:m,dilations:C,kernelShape:I},c);I2(a,c,E,x=>i?[x[0],x[2],x[3]]:[x[0],x[1],x[3]])},yh=(a,n,i)=>{let c=i.format==="NHWC"?"channelsLast":"channelsFirst",p=fl(i,n),m=i.autoPad==="NOTSET"?i.pads:i.autoPad,C=ib(n[0].dims,n[1].dims,i.strides,i.dilations,m,!1,c);a.compute(ob(n,p,C.outShape,[C.filterDepth,C.filterHeight,C.filterWidth],[C.padInfo.front,C.padInfo.top,C.padInfo.left],c))},Pu=(a,n)=>{if(vh(a.inputs,n),a.inputs[0].dims.length===3)xh(a,n);else if(a.inputs[0].dims.length===5)yh(a,a.inputs,n);else{let i=fl(n,a.inputs);I2(a,a.inputs,i)}}}),ub,w5=Ct(()=>{sA(),jn(),pA(),CA(),ub=(a,n,i)=>{let c=a.length>2,p=n.outputShape,m=n.format==="NHWC",C=n.group,I=a[1].dims,E=I[2]/C,x=I[3],D=m?Wr(E):1,y=m&&x===1&&E>=4,M=y?Math.floor(E/4)*4:Math.floor(E/D)*D,S=E-M,F=m?Wr(x):1,L=m?x===1?D:F:1,Z=Ke.size(p)/F,z=[Math.ceil(Z/64),1,1];TA("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${z}`);let N=["rank","rank"],K=[n.strides[0],n.strides[1]],f=[n.kernelShape[m?1:2],n.kernelShape[m?2:3]],k=[n.dilations[0],n.dilations[1]],e=[f[0]+(n.dilations[0]<=1?0:(n.kernelShape[m?1:2]-1)*(n.dilations[0]-1)),f[1]+(n.dilations[1]<=1?0:(n.kernelShape[m?2:3]-1)*(n.dilations[1]-1))],d=[e[0]-1-Math.floor((n.pads[0]+n.pads[2])/2),e[1]-1-Math.floor((n.pads[1]+n.pads[3])/2)],B=[{type:12,data:Z},{type:12,data:K},{type:12,data:f},{type:12,data:k},{type:12,data:e},{type:6,data:d},{type:12,data:M},{type:12,data:E},{type:12,data:x},...Jt(a[0].dims,a[1].dims)];c&&(B.push(...Jt(a[2].dims)),N.push("rank")),B.push(...Jt(p));let Ae=P=>{let O=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:K.length},{name:"filter_dims",type:"u32",length:f.length},{name:"dilations",type:"u32",length:f.length},{name:"effective_filter_dims",type:"u32",length:e.length},{name:"pads",type:"i32",length:d.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],me=Cs(a[0].dataType),ee=m?1:2,Ce=m?2:3,we=m?3:1,xe=At("W",a[1].dataType,a[1].dims.length,L),De=At("Dy",a[0].dataType,a[0].dims.length,D),ye=[De,xe];c&&ye.push(At("bias",a[2].dataType,[p[we]].length,F));let Oe=Ut("result",a[0].dataType,p.length,F),_e=()=>{let pe="";if(y)D===4?pe+=`
        let xValue = ${De.getByOffset("x_offset")};
        let wValue = ${xe.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:D===2?pe+=`
          dotProd = dotProd + dot(vec4<${me}>(${De.getByOffset("x_offset")}, ${De.getByOffset("x_offset + 1u")}), vec4<${me}>(${xe.getByOffset("w_offset")}, ${xe.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:D===1&&(pe+=`
          dotProd = dotProd + dot(vec4<${me}>(${De.getByOffset("x_offset")}, ${De.getByOffset("x_offset + 1u")}, ${De.getByOffset("x_offset + 2u")}, ${De.getByOffset("x_offset + 3u")}), vec4<${me}>(${xe.getByOffset("w_offset")}, ${xe.getByOffset("w_offset + 1u")}, ${xe.getByOffset("w_offset + 2u")}, ${xe.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(pe+=`
                  let xValue = ${m?De.getByOffset(`${De.indicesToOffset(`${De.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${D}`):De.get("batch","inputChannel","idyR","idyC")};
        `,D===1)pe+=`
          let w_offset = ${xe.indicesToOffset(`${xe.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${xe.getByOffset(`w_offset / ${L}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let le=0;le<D;le++)pe+=`
            let wValue${le} = ${xe.getByOffset(`${xe.indicesToOffset(`${xe.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${le}, wOutChannel)`)} / ${L}`)};
            dotProd = dotProd + xValue[${le}] * wValue${le};`;return pe},ne=()=>{if(S===0)return"";if(!y)throw new Error(`packInputAs4 ${y} is not true.`);let pe="";if(D===1){pe+="dotProd = dotProd";for(let le=0;le<S;le++)pe+=`
            + ${De.getByOffset(`x_offset + ${le}`)} * ${xe.getByOffset(`w_offset + ${le}`)}`;pe+=";"}else if(D===2){if(S!==2)throw new Error(`Invalid inputChannelsRemainder ${S}.`);pe+=`
          let xValue = ${De.getByOffset("x_offset")};
          let wValue = ${xe.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return pe},te=`
            let outputIndices = ${Oe.offsetToIndices(`global_idx * ${F}`)};
            let batch = ${Oe.indicesGet("outputIndices",0)};
            let d1 = ${Oe.indicesGet("outputIndices",we)};
            let r = ${Oe.indicesGet("outputIndices",ee)};
            let c = ${Oe.indicesGet("outputIndices",Ce)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${Oe.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${me}(dyRCorner) + ${me}(wR)) / ${me}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${me}(uniforms.Dy_shape[${ee}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${me}(dyCCorner) + ${me}(wC)) / ${me}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${me}(uniforms.Dy_shape[${Ce}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${y?`
                var x_offset = ${De.indicesToOffset(`${De.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${D};
                var w_offset = ${xe.indicesToOffset(`${xe.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${L};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${y?4:D}) {
                  ${_e()}
                  inputChannel = inputChannel + ${y?4:D};
                }
                ${ne()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${c?` + bias[d1 / ${F}]`:""};
            ${Oe.setByOffset("global_idx","value")};
          `;return`
    ${P.registerUniforms(O).declareVariables(...ye,Oe)}
      ${P.mainStart()}
      ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${te}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${n.cacheKey};${D}${L}${F}${y}${S}`,inputDependencies:N},getRunData:()=>({dispatchGroup:{x:z[0],y:z[1],z:z[2]},outputs:[{dims:i?i(p):p,dataType:a[0].dataType}],programUniforms:B}),getShaderSource:Ae}}}),Bh,Dh,Ph,w2,db,Th,k2,Gh,fb,k5=Ct(()=>{w5(),Ao(),bi(),Bh=(a,n,i,c,p,m)=>(a-1)*n+i+(c-1)*p+1-m,Dh=(a,n,i,c,p)=>{let m=Math.floor(a/2);n==="SAME_UPPER"?(i[c]=m,i[p]=a-m):n==="SAME_LOWER"&&(i[c]=a-m,i[p]=m)},Ph=(a,n,i,c,p,m,C,I,E,x)=>{let D=a.length-2,y=x.length===0;E.length<D&&E.push(...Array(D-E.length).fill(0));let M=a[0],S=n[I?3:1]*p;for(let F=0,L=a.length-D-(I?1:0);F<D;++F,++L){let Z=a[L],z=y?Z*C[F]:x[F],N=Bh(Z,C[F],m[F],n[L],i[F],z);Dh(N,c,m,F,F+D),y&&x.push(C[F]*(Z-1)+E[F]+(n[L]-1)*i[F]+1-m[F]-m[F+D])}x.splice(0,0,M),x.splice(I?3:1,0,S)},w2=(a,n)=>{let i=a.kernelShape.slice();if(a.kernelShape.length===0||a.kernelShape.reduce((y,M)=>y*M,1)===0){i.length=0;for(let y=2;y<n[1].dims.length;++y)i.push(n[1].dims[y])}let c=a.format==="NHWC";i.splice(0,0,n[1].dims[0]),i.splice(c?3:1,0,n[1].dims[1]);let p=a.pads.slice(),m=a.outputShape.slice(),C=a.outputPadding.slice(),I=n[0].dims,E=a.dilations.slice();if(E.reduce((y,M)=>y+M,0)===0){let y=n[0].dims.length-2;E=new Array(y).fill(1)}let x=a.strides.slice();if(x.reduce((y,M)=>y+M,0)===0){let y=n[0].dims.length-2;x=new Array(y).fill(1)}Ph(I,i,E,a.autoPad,a.group,p,x,c,C,m);let D=Object.assign({},a);return Object.assign(D,{kernelShape:i,pads:p,outputPadding:C,outputShape:m,dilations:E,strides:x}),D},db=a=>{let n=A1(a),i=a.format,c=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof a.autoPad>"u"?0:a.autoPad],p=a.dilations,m=a.group,C=a.kernelShape,I=a.pads,E=a.strides,x=a.wIsConst(),D=a.outputPadding,y=a.outputShape;return{autoPad:c,format:i,dilations:p,group:m,kernelShape:C,outputPadding:D,outputShape:y,pads:I,strides:E,wIsConst:x,...n,cacheKey:`${a.format};${n.activation};`}},Th=(a,n)=>{if(!a||a.length!==2&&a.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(a[0].dims.length!==4&&a[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(a[0].dims.length!==a[1].dims.length)throw new Error("filter does not have same dimension as input");let i=a[0].dims[n.format==="NHWC"?a[0].dims.length-1:1],c=a[1].dims[0];if(i!==c)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let p=a[1].dims[1]*n.group;if(a.length===3&&(a[2].dims.length!==1||a[2].dims[0]!==p))throw new Error("invalid bias");let m=a[0].dims.length-2;if(n.dilations.reduce((C,I)=>C+I,0)>0&&n.dilations.length!==m)throw new Error(`dilations should be ${m}D`);if(n.strides.reduce((C,I)=>C+I,0)>0&&n.strides.length!==m)throw new Error(`strides should be ${m}D`);if(n.pads.reduce((C,I)=>C+I,0)>0&&n.pads.length!==m*2)throw new Error(`pads should be ${m*2}D`);if(n.outputPadding.length!==m&&n.outputPadding.length!==0)throw new Error(`output_padding should be ${m}D`);if(n.kernelShape.reduce((C,I)=>C+I,0)>0&&n.kernelShape.length!==0&&n.kernelShape.length!==a[1].dims.length-2)throw new Error("invalid kernel shape");if(n.outputShape.length!==0&&n.outputShape.length!==a[0].dims.length-2)throw new Error("invalid output shape")},k2=(a,n,i,c)=>{let p=a.kernelCustomData.wT??a.compute(ma(n[1],[2,3,0,1]),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!a.kernelCustomData.wT&&(a.kernelCustomData.wT=p);let m=[n[0],p];n.length===3&&m.push(n[2]),a.compute(ub(m,i,c),{inputs:m})},Gh=(a,n)=>{let i=n.format==="NHWC",c=[a.inputs[0].reshape(i?[a.inputs[0].dims[0],1,a.inputs[0].dims[1],a.inputs[0].dims[2]]:[a.inputs[0].dims[0],a.inputs[0].dims[1],1,a.inputs[0].dims[2]]),a.inputs[1].reshape([a.inputs[1].dims[0],a.inputs[1].dims[1],1,a.inputs[1].dims[2]])];a.inputs.length===3&&c.push(a.inputs[2]);let p=n.kernelShape;(p.length===0||p[0]===0)&&(p=[a.inputs[1].dims[2]]);let m=n.dilations;(m.length===0||m[0]===0)&&(m=[1]);let C=n.strides;(C.length===0||C[0]===0)&&(C=[1]);let I=n.pads;I.length===0&&(I=[0,0]),I=[0,I[0],0,I[1]],C=[1].concat(C),m=[1].concat(m),p=[1].concat(p);let E=n.outputPadding;E=[0].concat(E);let x=w2({...n,pads:I,strides:C,dilations:m,kernelShape:p,outputPadding:E},c);k2(a,c,x,D=>i?[D[0],D[2],D[3]]:[D[0],D[1],D[3]])},fb=(a,n)=>{if(Th(a.inputs,n),a.inputs[0].dims.length===3)Gh(a,n);else{let i=w2(n,a.inputs);k2(a,a.inputs,i)}}}),Qh,gb,pb,E5=Ct(()=>{sA(),pA(),Kr(),CA(),Qh=(a,n,i,c)=>{let p=Ke.size(n),m=n.length,C=At("input",a,m),I=Ut("output",a,m),E=i.dataType===6?i.getInt32Array()[0]:Number(i.getBigInt64Array()[0]),x=Ke.normalizeAxis(E,m),D=y=>{let M=` i32(${C.indicesGet("inputIndices","uniforms.axis")}) `,S=Kt("uniforms.input_shape","uniforms.axis",m),F=c.reverse?M+(c.exclusive?" + 1":""):"0",L=c.reverse?S:M+(c.exclusive?"":" + 1");return`
                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(C,I)}
                ${y.mainStart()}
                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${I.offsetToIndices("global_idx")};
                  var sum = ${I.type.value}(0);
                  let first : i32 = ${F};
                  let last : i32 = ${L};
                  for (var i : i32 = first; i < last; i++) {
                    ${C.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${C.getByIndices("inputIndices")};
                  }
                  ${I.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:c.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:a}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:12,data:x},...Jt(n,n)]}),getShaderSource:D}},gb=(a,n)=>{let i=a.inputs[0].dims,c=a.inputs[0].dataType,p=a.inputs[1];a.compute(Qh(c,i,p,n),{inputs:[0]})},pb=a=>{let n=a.exclusive===1,i=a.reverse===1;return UA({exclusive:n,reverse:i})}}),Sh,Fh,Oh,hb,mb,M5=Ct(()=>{sA(),pA(),Kr(),CA(),Sh=a=>{if(!a||a.length!==1)throw new Error("DepthToSpace requires 1 input.");if(a[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Fh=(a,n,i,c)=>{let p=[];p.push(`fn perm(i: ${c.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`);for(let m=0;m<n;++m)p.push(i.indicesSet("a",a[m],`i[${m}]`));return p.push("return a;}"),p.join(`
`)},Oh=(a,n)=>{let i,c,p,m,C,I,E=n.format==="NHWC",x=n.blocksize,D=n.mode==="DCR";E?([i,c,p,m]=a.dims,C=D?[i,c,p,x,x,m/x**2]:[i,c,p,m/x**2,x,x],I=D?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([i,c,p,m]=[a.dims[0],a.dims[2],a.dims[3],a.dims[1]],C=D?[i,x,x,m/x**2,c,p]:[i,m/x**2,x,x,c,p],I=D?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=a.reshape(C),M=y.dims.length,S=a.dataType,F=At("a",S,M),L=Ut("output",S,M),Z=z=>`
  ${z.registerUniform("output_size","u32").declareVariables(F,L)}

  ${Fh(I,M,F,L)}

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${L.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${L.setByOffset("global_idx",F.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${a.dims};${n.blocksize};${n.mode}`,inputDependencies:["rank"]},getRunData:z=>{let N=E?[i,c*x,p*x,m/x**2]:[i,m/x**2,c*x,p*x],K=Ke.size(N),f=y.dims,k=Ke.sortBasedOnPerm(f,I);return{outputs:[{dims:N,dataType:z[0].dataType}],dispatchGroup:{x:Math.ceil(K/64)},programUniforms:[{type:12,data:K},...Jt(f,k)]}},getShaderSource:Z}},hb=(a,n)=>{Sh(a.inputs),a.compute(Oh(a.inputs[0],n))},mb=a=>UA({blocksize:a.blocksize,mode:a.mode,format:a.format})}),gl,f0,E2,_h,Nh,zh,Lh,M2,Rh,Cb,bb,v5=Ct(()=>{sA(),pA(),Kr(),CA(),gl="[a-zA-Z]|\\.\\.\\.",f0="("+gl+")+",E2="^"+f0+"$",_h="("+f0+",)*"+f0,Nh="^"+_h+"$",zh=class{constructor(a=-1){this.symbolToIndices=new Map,this.inputIndex=a}addSymbol(a,n){let i=this.symbolToIndices.get(a);i===void 0?i=[n]:i.push(n),this.symbolToIndices.set(a,i)}},Lh=class{constructor(a,n){this.equation=n,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[i,c]=n.includes("->")?n.split("->",2):[n,""];if(!i.match(RegExp(Nh)))throw new Error("Invalid LHS term");if(i.split(",").forEach((p,m)=>{let C=a[m].dims.slice();if(!p.match(RegExp(E2)))throw new Error("Invalid LHS term");let I=this.processTerm(p,!0,C,m);this.lhs.push(I)}),c==="")c+=[...this.symbolToInfo.entries()].filter(([p,m])=>m.count===1||p==="...").map(([p])=>p).join("");else if(!c.match(RegExp(f0)))throw new Error("Invalid RHS");c.match(RegExp(gl,"g"))?.forEach(p=>{if(p==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(p);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(c,!1,this.outputDims)}addSymbol(a,n,i){let c=this.symbolToInfo.get(a);if(c!==void 0){if(c.dimValue!==n&&c.count!==1)throw new Error("Dimension mismatch");c.count++,c.inputIndices.push(i)}else c={count:1,dimValue:n,inputIndices:[i]};this.symbolToInfo.set(a,c)}processTerm(a,n,i,c=-1){let p=i.length,m=!1,C=[],I=0;if(!a.match(RegExp(E2))&&!n&&a!=="")throw new Error("Invalid LHS term");let E=a.match(RegExp(gl,"g")),x=new zh(c);return E?.forEach((D,y)=>{if(D==="..."){if(m)throw new Error("Only one ellipsis is allowed per input term");m=!0;let M=p-E.length+1;if(M<0)throw new Error("Ellipsis out of bounds");if(C=i.slice(I,I+M),this.hasEllipsis){if(this.ellipsisDims.length!==C.length||this.ellipsisDims.toString()!==C.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=C;else throw new Error("Ellipsis must be specified in the LHS");for(let S=0;S<C.length;S++){let F=String.fromCharCode(48+S);x.addSymbol(F,y+S),this.addSymbol(F,i[I++],c)}}else x.addSymbol(D,y+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(D,i[I++],c)}),x}},M2=a=>a+"_max",Rh=(a,n,i,c)=>{let p=a.map(x=>x.length).map((x,D)=>At(`input${D}`,n,x)),m=Ke.size(c),C=Ut("output",n,c.length),I=[...i.symbolToInfo.keys()].filter(x=>!i.rhs.symbolToIndices.has(x)),E=x=>{let D=[],y="var prod = 1.0;",M="var sum = 0.0;",S="sum += prod;",F=[],L=[],Z=[],z=[],N=i.symbolToInfo.size===i.rhs.symbolToIndices.size;i.symbolToInfo.forEach((f,k)=>{if(i.rhs.symbolToIndices.has(k)){let e=i.rhs.symbolToIndices.get(k)?.[0];e!==void 0&&i.lhs.forEach((d,B)=>{if(f.inputIndices.includes(B)){let Ae=d.symbolToIndices.get(k);if(Ae===void 0)throw new Error("Invalid symbol error");Ae.forEach(P=>{D.push(`${p[B].indicesSet(`input${B}Indices`,P,C.indicesGet("outputIndices",e))}`)})}})}else i.lhs.forEach((e,d)=>{if(f.inputIndices.includes(d)){let B=e.symbolToIndices.get(k);if(B===void 0)throw new Error("Invalid symbol error");B.forEach(Ae=>{F.push(`${p[d].indicesSet(`input${d}Indices`,Ae,`${k}`)}`)}),z.push(`prod *= ${p[d].getByIndices(`input${d}Indices`)};`)}}),L.push(`for(var ${k}: u32 = 0; ${k} < uniforms.${M2(k)}; ${k}++) {`),Z.push("}")});let K=N?[...D,`let sum = ${p.map((f,k)=>f.getByIndices(`input${k}Indices`)).join(" * ")};`]:[...D,M,...L,...F,y,...z,S,...Z];return`
            ${x.registerUniforms(I.map(f=>({name:`${M2(f)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...p,C)}

            ${x.mainStart()}
            ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${C.offsetToIndices("global_idx")};
            ${p.map((f,k)=>`var input${k}Indices: ${p[k].type.indices};`).join(`
`)}
            ${K.join(`
`)};
            ${C.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:i.equation,inputDependencies:a.map(()=>"rank")},getRunData:()=>{let x=I.filter(y=>i.symbolToInfo.has(y)).map(y=>({type:12,data:i.symbolToInfo.get(y)?.dimValue||0}));x.push({type:12,data:m});let D=a.map((y,M)=>[...Jt(y)]).reduce((y,M)=>y.concat(M),x);return D.push(...Jt(c)),{outputs:[{dims:c,dataType:n}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:D}},getShaderSource:E}},Cb=(a,n)=>{let i=new Lh(a.inputs,n.equation),c=i.outputDims,p=a.inputs.map((m,C)=>m.dims);a.compute(Rh(p,a.inputs[0].dataType,i,c))},bb=a=>{let n=a.equation.replace(/\s+/g,"");return UA({equation:n})}}),jh,v2,Wh,Vh,Ib,x5=Ct(()=>{sA(),pA(),CA(),jh=a=>{if(!a||a.length!==2)throw new Error("Expand requires 2 input.");let n=a[0].dims,i=Array.from(a[1].getBigInt64Array(),Number),c=i.length<n.length?0:i.length-n.length,p=n.length<i.length?0:n.length-i.length;for(;c<i.length&&p<n.length;++c,++p)if(i[c]!==n[p]&&i[c]!==1&&n[p]!==1)throw new Error("Expand requires shape to be broadcastable to input")},v2=(a,n)=>{let i=a.length-n.length,c=[];for(let p=0;p<i;++p)c.push(a[p]);for(let p=0;p<n.length;++p)c.push(n[p]===1?a[p+i]:n[p]);return c},Wh=(a,n)=>a.length>n.length?v2(a,n):v2(n,a),Vh=a=>{let n=a[0].dims,i=Array.from(a[1].getBigInt64Array(),Number),c=Wh(n,i),p=a[0].dataType,m=p===9||Ke.size(n)===1,C=p===9||n.length>0&&n[n.length-1]%4===0?4:1,I=m||c.length>0&&c[c.length-1]%4===0?4:1,E=Math.ceil(Ke.size(c)/I),x=y=>{let M=At("input",p,n.length,C),S=Ut("output",p,c.length,I),F;if(p===9){let L=(Z,z,N="")=>`
          let outputIndices${z} = ${S.offsetToIndices(`outputOffset + ${z}u`)};
          let offset${z} = ${M.broadcastedIndicesToOffset(`outputIndices${z}`,S)};
          let index${z} = offset${z} / 4u;
          let component${z} = offset${z} % 4u;
          ${Z}[${z}] = ${N}(${M.getByOffset(`index${z}`)}[component${z}]);
        `;F=`
        let outputOffset = global_idx * ${I};
        var data = vec4<u32>(0);
        ${L("data",0,"u32")}
        ${L("data",1,"u32")}
        ${L("data",2,"u32")}
        ${L("data",3,"u32")}
        ${S.setByOffset("global_idx","data")}
      }`}else F=`
        let outputIndices = ${S.offsetToIndices(`global_idx * ${I}`)};
        let inputOffset = ${M.broadcastedIndicesToOffset("outputIndices",S)};
        let data = ${S.type.value}(${M.getByOffset(`inputOffset / ${C}`)});
        ${S.setByOffset("global_idx","data")}
      }`;return`
    ${y.registerUniform("vec_size","u32").declareVariables(M,S)}
    ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${F}`},D=[{type:12,data:E},...Jt(n,c)];return{name:"Expand",shaderCache:{hint:`${c.length};${C}${I}`,inputDependencies:["rank"]},getShaderSource:x,getRunData:()=>({outputs:[{dims:c,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:D})}},Ib=a=>{jh(a.inputs),a.compute(Vh(a.inputs),{inputs:[0]})}}),Yh,wb,y5=Ct(()=>{sA(),pA(),CA(),t1(),Yh=a=>{let n=a[0].dataType,i=Ke.size(a[0].dims),c=Ke.size(a[1].dims),p=c%4===0,m=C=>{let I=At("x",n,[1],4),E=At("bias",n,[1],4),x=Ut("y",n,[1],4),D=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=S=>`
      let bias${S}_offset: u32 = (global_idx * 4 + ${S}) % uniforms.bias_size;
      let bias${S} = ${E.getByOffset(`bias${S}_offset / 4`)}[bias${S}_offset % 4];`,M=p?`
      let bias = ${E.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}
      let bias = ${I.type.value}(bias0, bias1, bias2, bias3);`;return`${C.registerUniforms(D).declareVariables(I,E,x)}

    ${vu(_s(n))}

    ${C.mainStart(jo)}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${I.getByOffset("global_idx")};
      ${M}
      let x_in = x + bias;
      ${x.setByOffset("global_idx",xu("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${p}`,inputDependencies:["type","type"]},getShaderSource:m,getRunData:C=>({outputs:[{dims:C[0].dims,dataType:C[0].dataType}],programUniforms:[{type:12,data:Math.ceil(i/4)},{type:12,data:c}],dispatchGroup:{x:Math.ceil(i/jo/4)}})}},wb=a=>{a.inputs.length<2||Ke.size(a.inputs[1].dims)===0?RC(a):a.compute(Yh(a.inputs))}}),Hh,Uh,kb,Eb,B5=Ct(()=>{sA(),pA(),Kr(),CA(),Hh=a=>{if(!a||a.length!==2)throw new Error("Gather requires 2 inputs.")},Uh=(a,n)=>{let i=a[0].dims,c=a[1].dims,p=i.length,m=Ke.normalizeAxis(n.axis,p),C=i.slice(0);C.splice(m,1,...c);let I=i[m],E=a[0].dataType===9?4:1,x=Math.ceil(Ke.size(C)/E),D=[{type:12,data:x},{type:6,data:I},{type:12,data:m},...Jt(a[0].dims,a[1].dims,C)],y=M=>{let S=At("data",a[0].dataType,a[0].dims.length,E),F=At("inputIndices",a[1].dataType,a[1].dims.length),L=Ut("output",a[0].dataType,C.length,E),Z=N=>{let K=c.length,f=`var indicesIndices${N}  = ${F.type.indices}(0);`;for(let k=0;k<K;k++)f+=`${K>1?`indicesIndices${N}[${k}]`:`indicesIndices${N}`} = ${C.length>1?`outputIndices${N}[uniforms.axis + ${k}]`:`outputIndices${N}`};`;f+=`
          var idx${N} = ${F.getByIndices(`indicesIndices${N}`)};
          if (idx${N} < 0) {
            idx${N} = idx${N} + uniforms.axisDimLimit;
          }
          var dataIndices${N} : ${S.type.indices};
        `;for(let k=0,e=0;k<p;k++)k===m?(f+=`${p>1?`dataIndices${N}[${k}]`:`dataIndices${N}`} = u32(idx${N});`,e+=K):(f+=`${p>1?`dataIndices${N}[${k}]`:`dataIndices${N}`} = ${C.length>1?`outputIndices${N}[${e}]`:`outputIndices${N}`};`,e++);return f},z;if(a[0].dataType===9){let N=(K,f,k="")=>`
          let outputIndices${f} = ${L.offsetToIndices(`outputOffset + ${f}u`)};
          ${Z(f)};
          let offset${f} = ${S.indicesToOffset(`dataIndices${f}`)};
          let index${f} = offset${f} / 4u;
          let component${f} = offset${f} % 4u;
          ${K}[${f}] = ${k}(${S.getByOffset(`index${f}`)}[component${f}]);
        `;z=`
        let outputOffset = global_idx * ${E};
        var value = vec4<u32>(0);
        ${N("value",0,"u32")}
        ${N("value",1,"u32")}
        ${N("value",2,"u32")}
        ${N("value",3,"u32")}
        ${L.setByOffset("global_idx","value")}
      `}else z=`
      let outputIndices = ${L.offsetToIndices("global_idx")};
      ${Z("")};
      let value = ${S.getByIndices("dataIndices")};
      ${L.setByOffset("global_idx","value")};
      `;return`
      ${M.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(S,F,L)}
      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${z}
      }`};return{name:"Gather",shaderCache:{hint:n.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:D}),getShaderSource:y}},kb=a=>UA({axis:a.axis}),Eb=(a,n)=>{let i=a.inputs;Hh(i),a.compute(Uh(a.inputs,n))}}),Kh,Mb,vb,D5=Ct(()=>{sA(),pA(),CA(),Kh=(a,n,i,c,p,m,C,I,E)=>{let x=[{type:12,data:m},{type:12,data:c},{type:12,data:p},{type:12,data:i},{type:12,data:C},{type:12,data:I},{type:12,data:E}],D=[m];x.push(...Jt(n.dims,D));let y=M=>{let S=At("indices_data",n.dataType,n.dims.length),F=Ut("input_slice_offsets_data",12,1,1),L=[S,F],Z=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:p.length},{name:"sizes_from_slice_dims_data",type:"u32",length:i.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${M.registerUniforms(Z).declareVariables(...L)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${p.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${i.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return a.compute({name:"computeSliceOffsets",shaderCache:{hint:`${p.length}_${i.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:D,dataType:a.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:y},{inputs:[n],outputs:[-1]})[0]},Mb=(a,n)=>{let i=a.inputs,c=i[0].dims,p=i[0].dataType,m=i[1].dims,C=m[m.length-1],I=Ke.sizeToDimension(m,m.length-1),E=Ke.sizeFromDimension(c,n.batchDims+C),x=Ke.sizeToDimension(c,n.batchDims),D=Ke.sizeFromDimension(c,n.batchDims),y=I/x,M=new Array(C),S=E;for(let f=0;f<C;++f)M[C-1-f]=S,S*=c[n.batchDims+C-1-f];let F=Kh(a,i[1],M,n.batchDims,c,I,y,D,C),L=n.batchDims+C;if(L>c.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let Z=m.slice(0,-1).concat(c.slice(L)),z=Ke.size(Z),N=[{type:12,data:z},{type:12,data:E},...Jt(i[0].dims,F.dims,Z)],K=f=>{let k=At("data",i[0].dataType,i[0].dims.length),e=At("slice_offsets",12,F.dims.length),d=Ut("output",i[0].dataType,Z.length);return`
          ${f.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(k,e,d)}
            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};a.compute({name:"GatherND",shaderCache:{hint:n.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:Z,dataType:p}],dispatchGroup:{x:Math.ceil(z/64)},programUniforms:N}),getShaderSource:K},{inputs:[i[0],F]})},vb=a=>({batchDims:a.batch_dims,cacheKey:""})}),Xh,Zh,xb,yb,P5=Ct(()=>{sA(),pA(),Kr(),CA(),Xh=(a,n)=>{if(a.length<3||a.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let i=Ke.normalizeAxis(n.quantizeAxis,a[0].dims.length),c=n.blockSize,p=a[0],m=a[2],C=a.length===4?a[3]:void 0;if(m.dims.length!==p.dims.length||!p.dims.map((I,E)=>E===i?Math.ceil(I/c)===m.dims[E]:I===m.dims[E]).reduce((I,E)=>I&&E,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(C){if(C.dataType!==p.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(C.dims.length!==m.dims.length||!C.dims.map((I,E)=>I===m.dims[E]).reduce((I,E)=>I&&E,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Zh=(a,n)=>{let i=a[0].dims,c=a[1].dims,p=i.length,m=Ke.normalizeAxis(n.gatherAxis,p),C=Ke.normalizeAxis(n.quantizeAxis,p),I=i.slice(0);I.splice(m,1,...c);let E=Ke.size(I),x=a[2].dataType,D=a[0].dataType===22,y=[{type:12,data:E},{type:12,data:C},{type:12,data:m},{type:12,data:n.blockSize},...Jt(...a.map((S,F)=>S.dims),I)],M=S=>{let F=At("data",a[0].dataType,a[0].dims.length),L=At("inputIndices",a[1].dataType,a[1].dims.length),Z=At("scales",a[2].dataType,a[2].dims.length),z=a.length>3?At("zeroPoint",a[3].dataType,a[3].dims.length):void 0,N=Ut("output",x,I.length),K=[F,L,Z];z&&K.push(z);let f=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${S.registerUniforms(f).declareVariables(...K,N)}
        ${S.mainStart()}
        let output_indices = ${N.offsetToIndices("global_idx")};
        var indices_indices = ${L.type.indices}(0);
        ${c.length>1?`
          for (var i: u32 = 0; i < ${c.length}; i++) {
            let index = ${N.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${L.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${N.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${F.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${N.indicesGet("output_indices","i")};
          ${F.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${L.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${i[m]};
        }
        ${F.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${I.length}; i++) {
          let index = ${N.indicesGet("output_indices",`i + ${c.length} - 1`)};
          ${F.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${F.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${F.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${D?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Z.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Z.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Z.getByIndices("scale_indices")};
        ${z?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${z.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${z.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${D?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${_s(x)}(quantized_data - zero_point) * scale;
        ${N.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${n.cacheKey};${a.filter((S,F)=>F!==1).map(S=>S.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:a.length},(S,F)=>"rank")},getRunData:()=>({outputs:[{dims:I,dataType:x}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:y}),getShaderSource:M}},xb=(a,n)=>{let i=a.inputs;Xh(i,n),a.compute(Zh(a.inputs,n))},yb=a=>UA({blockSize:a.blockSize,gatherAxis:a.gatherAxis,quantizeAxis:a.quantizeAxis})}),Jh,qh,Bb,Db,T5=Ct(()=>{sA(),pA(),Kr(),CA(),Jh=a=>{if(!a||a.length!==2)throw new Error("GatherElements requires 2 inputs.");if(a[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(a[0].dims.length!==a[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},qh=(a,n)=>{let i=a[0].dims,c=a[0].dataType,p=i.length,m=a[1].dims,C=a[1].dataType,I=Ke.normalizeAxis(n.axis,p),E=i[I],x=m.slice(0),D=Ke.size(x),y=At("input",c,p),M=At("indicesInput",C,m.length),S=Ut("output",c,x.length),F=[{type:12,data:D},{type:6,data:E},{type:12,data:I}];return F.push(...Jt(i,m,x)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:x,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(D/64)},programUniforms:F}),getShaderSource:L=>`
      ${L.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,M,S)}
      ${L.mainStart()}
      ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${S.offsetToIndices("global_idx")};

      var idx = ${M.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${y.type.indices}(outputIndices);
      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${y.getByIndices("inputIndices")};

      ${S.setByOffset("global_idx","value")};
  }`}},Bb=a=>UA({axis:a.axis}),Db=(a,n)=>{let i=a.inputs;Jh(i),a.compute(qh(a.inputs,n))}}),$h,em,Pb,Tb,G5=Ct(()=>{sA(),pA(),CA(),$h=a=>{if(!a)throw new Error("Input is missing");if(a.length<2||a.length>3)throw new Error("Invaid input number.");if(a.length===3&&a[2].dims.length>2)throw new Error("Invalid input shape of C");if(a[0].dataType!==a[1].dataType||a.length===3&&a[0].dataType!==a[2].dataType)throw new Error("Input types are mismatched")},em=(a,n)=>{let i=a[0].dims.slice(),c=a[1].dims.slice(),[p,m,C]=B3.getShapeOfGemmResult(i,n.transA,c,n.transB,a.length===3?a[2].dims:void 0),I=[p,m];if(!I)throw new Error("Can't use gemm on the given tensors");let E=16,x=Math.ceil(m/E),D=Math.ceil(p/E),y=!0,M=Ke.size(I),S=[{type:12,data:y?x:M},{type:12,data:p},{type:12,data:m},{type:12,data:C},{type:1,data:n.alpha},{type:1,data:n.beta}],F=["type","type"];a.length===3&&(S.push(...Jt(a[2].dims)),F.push("rank")),S.push(...Jt(I));let L=z=>{let N="";n.transA&&n.transB?N="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":n.transA&&!n.transB?N="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!n.transA&&n.transB?N="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!n.transA&&!n.transB&&(N="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let K=n.alpha===1?"":"value *= uniforms.alpha;",f=At("a",a[0].dataType,a[0].dims),k=At("b",a[1].dataType,a[1].dims),e=f.type.value,d=null,B=[f,k];a.length===3&&(d=At("c",a[2].dataType,a[2].dims.length),B.push(d));let Ae=Ut("output",a[0].dataType,I.length);B.push(Ae);let P=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${z.registerUniforms(P).declareVariables(...B)}

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${e}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${N}
    }

    ${K}
    ${d!=null?`let cOffset = ${d.broadcastedIndicesToOffset("vec2(m, n)",Ae)}; value += ${e}(uniforms.beta) * ${d.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},Z=z=>{let N=At("a",a[0].dataType,a[0].dims),K=At("b",a[1].dataType,a[1].dims),f=null,k=[N,K];a.length===3&&(f=At("c",a[2].dataType,a[2].dims.length),k.push(f));let e=Ut("output",a[0].dataType,I.length);k.push(e);let d=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],B="",Ae="";n.transA&&n.transB?(Ae=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${N.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${K.type.value}(0);
      }
      `,B="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):n.transA&&!n.transB?(Ae=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${N.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${K.type.value}(0);
      }
      `,B="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!n.transA&&n.transB?(Ae=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${N.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${K.type.value}(0);
      }
      `,B="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!n.transA&&!n.transB&&(Ae=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${N.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${K.type.value}(0);
      }
      `,B="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let P=n.alpha===1?"":"value *= uniforms.alpha;";return`
  ${z.registerUniforms(d).declareVariables(...k)}
  var<workgroup> tile_a: array<array<${N.type.storage}, ${E}>, ${E}>;
  var<workgroup> tile_b: array<array<${K.type.storage}, ${E}>, ${E}>;
  ${z.mainStart([E,E,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${E};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${E};
    let num_tiles = (uniforms.K - 1) / ${E} + 1;
    var k_start = 0u;
    var value = ${e.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${Ae}
      k_start = k_start + ${E};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${E}; k++) {
        ${B}
      }
      workgroupBarrier();
    }

    ${P}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${f!=null?`let cOffset = ${f.broadcastedIndicesToOffset("vec2(m, n)",e)}; value += ${e.type.value}(uniforms.beta) * ${f.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return y?{name:"GemmShared",shaderCache:{hint:`${n.cacheKey}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:I,dataType:a[0].dataType}],dispatchGroup:{x:x*D},programUniforms:S}),getShaderSource:Z}:{name:"Gemm",shaderCache:{hint:`${n.cacheKey}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:I,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:S}),getShaderSource:L}},Pb=a=>{let n=a.transA,i=a.transB,c=a.alpha,p=a.beta;return{transA:n,transB:i,alpha:c,beta:p,cacheKey:`${a.transA};${a.transB};${a.alpha===1}`}},Tb=(a,n)=>{$h(a.inputs),a.compute(em(a.inputs,n))}}),cn,Sn,Li,Ri,tm,Am,rm,sm,am,nm,im,om,Gb,Qb,Q5=Ct(()=>{sA(),pA(),Kr(),CA(),[cn,Sn,Li,Ri]=[0,1,2,3],tm=a=>{if(a[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(a[0].dims.length!==a[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(a[0].dims.length-2!==a[1].dims[a[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${a[0].dims.length-2}`);if(a[0].dims[0]!==a[1].dims[0])throw new Error("grid batch size must match input batch size")},Am=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,rm=a=>`
  fn gs_bicubic_interpolate(p: mat4x4<${a}>, x: f32, y: f32) -> ${a} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${a}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,sm=a=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${a.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,am=a=>`
  ${a.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,nm=(a,n,i)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${n} {
     var pixel = ${n}(0);
     var indices = vec4<u32>(0);
     indices[${cn}] = batch;
     indices[${Sn}] = channel;`+(()=>{switch(i.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Li}] = u32(r);
            indices[${Ri}] = u32(c);
          } else {
            return ${n}(0);
          }
        `;case"border":return`
          indices[${Li}] = u32(clamp(r, 0, H - 1));
          indices[${Ri}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Li}] = gs_reflect(r, border[1], border[3]);
          indices[${Ri}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${i.paddingMode} is not supported`)}})()+`
    return ${a.getByIndices("indices")};
  }
`,im=(a,n,i)=>(()=>{switch(i.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${cn}], indices[${Sn}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${cn}], indices[${Sn}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${cn}], indices[${Sn}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${cn}], indices[${Sn}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${cn}], indices[${Sn}], border);

          let dx2 = ${n}(f32(x2) - x);
          let dx1 = ${n}(x - f32(x1));
          let dy2 = ${n}(f32(y2) - y);
          let dy1 = ${n}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${n}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${cn}], indices[${Sn}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${i.mode} is not supported`)}})()+`${a.setByOffset("global_idx","result")}`,om=(a,n)=>{let i=At("x",a[0].dataType,a[0].dims.length),c=[a[1].dims[0],a[1].dims[1],a[1].dims[2]],p=At("grid",a[1].dataType,c.length,2),m=[a[0].dims[0],a[0].dims[1],a[1].dims[1],a[1].dims[2]];n.format==="NHWC"&&(m=[a[0].dims[0],a[1].dims[1],a[1].dims[2],a[0].dims[3]],[cn,Sn,Li,Ri]=[0,3,1,2]);let C=Ut("output",a[0].dataType,m.length),I=i.type.value,E=Ke.size(m),x=[{type:12,data:E},...Jt(a[0].dims,c,m)],D=y=>`
  ${y.registerUniform("output_size","u32").declareVariables(i,p,C)}
  ${Am}
  ${rm(I)}
  ${sm(n)}
  ${am(n)}
  ${nm(i,I,n)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Li}]);
      let W_in = i32(uniforms.x_shape[${Ri}]);

      ${n.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${C.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${cn}], indices[${Li}], indices[${Ri}]);
      let nxy = ${p.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${im(C,I,n)}
  }`;return{name:"GridSample",shaderCache:{hint:`${n.cacheKey}`,inputDependencies:["type","type"]},getRunData:y=>{let M=Ke.size(m);return{outputs:[{dims:m,dataType:y[0].dataType}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:x}},getShaderSource:D}},Gb=(a,n)=>{tm(a.inputs),a.compute(om(a.inputs,n))},Qb=a=>UA({alignCorners:a.align_corners,mode:a.mode,paddingMode:a.padding_mode,format:a.format})}),Hs,lm,Sb,x2,cm,P0,Fb,Ob=Ct(()=>{sA(),pA(),Kr(),Ju(),e1(),CA(),bi(),Hs=(a,n)=>a.length>n&&a[n].dims.length>0?a[n]:void 0,lm=(a,n)=>{let i=a[0],c=Hs(a,1),p=Hs(a,2),m=Hs(a,3),C=Hs(a,4),I=Hs(a,5),E=Hs(a,6),x=Hs(a,7);if(i.dims.length!==3&&i.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let D=i.dims[0],y=i.dims[1],M=i.dims.length===3?i.dims[2]:n.numHeads*i.dims[4],S=y,F=0,L=0,Z=Math.floor(M/n.numHeads);if(E&&x&&Ke.size(E.dims)&&Ke.size(x.dims)){if(E.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(E.dims[0]!==D||E.dims[1]!==n.numHeads||E.dims[3]!==Z)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(x.dims[0]!==D||x.dims[1]!==n.numHeads||x.dims[3]!==Z)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(E.dims[2]!==x.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(x.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');F=E.dims[2],L=E.dims[2]}else if(E&&Ke.size(E.dims)||x&&Ke.size(x.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let z;if(c&&Ke.size(c.dims)>0){if(i.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(c.dims.length<3||c.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==c.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(c.dims.length===3){if(c.dims[2]!==i.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');z=2,S=c.dims[1]}else if(c.dims.length===5){if(c.dims[2]!==n.numHeads||c.dims[3]!==2||c.dims[4]!==Z)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(p)throw new Error('Expect "value" be none when "key" has packed kv format.');z=5,S=c.dims[1]}else{if(c.dims[1]!==n.numHeads||c.dims[3]!==Z)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');z=0,S=c.dims[2]}}else{if(i.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(i.dims[2]!==n.numHeads||i.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');z=3}if(m&&Ke.size(m.dims)>0){if(m.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(c&&c.dims.length===5&&c.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let N=F+S,K=0;if(C&&Ke.size(C.dims)>0){K=8;let d=C.dims;throw d.length===1?d[0]===D?K=1:d[0]===3*D+2&&(K=3):d.length===2&&d[0]===D&&d[1]===N&&(K=5),K===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let f=!1,k=M;if(p&&Ke.size(p.dims)>0){if(p.dims.length!==3&&p.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==p.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(p.dims.length===3){if(S!==p.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');k=p.dims[2]}else{if(S!==p.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');k=p.dims[1]*p.dims[3],f=!0}}let e=!1;if(C&&Ke.size(C.dims)>0)throw new Error("Key padding mask is not supported");if(I&&Ke.size(I.dims)>0){if(I.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(I.dims[0]!==D||I.dims[1]!==n.numHeads||I.dims[2]!==y||I.dims[3]!==N)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:D,sequenceLength:y,pastSequenceLength:F,kvSequenceLength:S,totalSequenceLength:N,maxSequenceLength:L,inputHiddenSize:0,hiddenSize:M,vHiddenSize:k,headSize:Z,vHeadSize:Math.floor(k/n.numHeads),numHeads:n.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:n.maskFilterValue,maskType:K,scale:n.scale,broadcastResPosBias:e,passPastInKv:f,qkvFormat:z}},Sb=a=>UA({...a}),x2=UA({perm:[0,2,1,3]}),cm=(a,n,i,c,p,m,C)=>{let I=[c,p,m],E=Ke.size(I),x=[{type:12,data:E},{type:12,data:C},{type:12,data:m}],D=y=>{let M=Ut("qkv_with_bias",n.dataType,I),S=At("qkv",n.dataType,I),F=At("bias",i.dataType,I),L=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${y.registerUniforms(L).declareVariables(S,F,M)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return a.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:I,dataType:n.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:x}),getShaderSource:D},{inputs:[n,i],outputs:[-1]})[0]},P0=(a,n,i,c,p,m,C,I)=>{let E=m;if(C&&Ke.size(C.dims)>0){if(c===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return E=cm(a,m,C,n,c,i*p,I),E=E.reshape([n,c,i,p]),i===1||c===1?E:a.compute(ma(E,x2.perm),{inputs:[E],outputs:[-1]})[0]}else return m.dims.length===3&&(E=m.reshape([n,c,i,p])),i===1||c===1?E:a.compute(ma(E,x2.perm),{inputs:[E],outputs:[-1]})[0]},Fb=(a,n)=>{let i=lm(a.inputs,n),c=a.inputs[0],p=Hs(a.inputs,1),m=Hs(a.inputs,2),C=Hs(a.inputs,3),I=Hs(a.inputs,4),E=Hs(a.inputs,5),x=Hs(a.inputs,6),D=Hs(a.inputs,7);if(c.dims.length===5)throw new Error("Packed QKV is not implemented");if(p?.dims.length===5)throw new Error("Packed KV is not implemented");let y=p&&m&&p.dims.length===4&&m.dims.length===4,M=P0(a,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,c,C,0);if(y)return z0(a,M,p,m,I,void 0,x,D,E,i);if(!p||!m)throw new Error("key and value must be provided");let S=P0(a,i.batchSize,i.numHeads,i.kvSequenceLength,i.headSize,p,C,i.hiddenSize),F=P0(a,i.batchSize,i.numHeads,i.kvSequenceLength,i.vHeadSize,m,C,2*i.hiddenSize);z0(a,M,S,F,I,void 0,x,D,E,i)}}),um,dm,fm,gm,Tu,_b,Nb,zb=Ct(()=>{sA(),pA(),Kr(),CA(),um=a=>{if(!a||a.length<1)throw new Error("too few inputs")},dm=(a,n)=>{let i=[],c=n.numOutputs;return a[1].dims[0]>0&&(a[1].getBigInt64Array().forEach(p=>i.push(Number(p))),c=i.length),UA({numOutputs:c,axis:n.axis,splitSizes:i})},fm=a=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${a}u; i += 1u ) {
    if (index < ${Kt("uniforms.size_in_split_axis","i",a)}) {
        return i;
    }
    }
    return ${a}u;
}`,gm=a=>{let n=a.length,i=[];for(let c=0;c<n;++c){let p=a[c].setByIndices("indices","input[global_idx]");n===1?i.push(p):c===0?i.push(`if (output_number == ${c}u) { ${p} }`):c===n-1?i.push(`else { ${p} }`):i.push(`else if (output_number == ${c}) { ${p} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${a[0].type.indices}, global_idx: u32) {
        ${i.join(`
`)}
      }`},Tu=(a,n)=>{let i=a[0].dims,c=Ke.size(i),p=a[0].dataType,m=Ke.normalizeAxis(n.axis,i.length),C=new Array(n.numOutputs),I=At("input",p,i.length),E=new Array(n.numOutputs),x=[],D=[],y=0,M=[{type:12,data:c}];for(let F=0;F<n.numOutputs;F++){y+=n.splitSizes[F],E[F]=y;let L=i.slice();L[m]=n.splitSizes[F],D.push(L),C[F]=Ut(`output${F}`,p,L.length),x.push({dims:D[F],dataType:a[0].dataType})}M.push({type:12,data:E},...Jt(i,...D));let S=F=>`
  ${F.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",E.length).declareVariables(I,...C)}
  ${fm(E.length)}
  ${gm(C)}

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${I.offsetToIndices("global_idx")};
    var index = ${I.indicesGet("indices",m)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Kt("uniforms.size_in_split_axis","output_number - 1u",E.length)};
      ${I.indicesSet("indices",m,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:M})}},_b=(a,n)=>{um(a.inputs);let i=a.inputs.length===1?n:dm(a.inputs,n);a.compute(Tu(a.inputs,i),{inputs:[0]})},Nb=a=>{let n=a.axis,i=a.splitSizes,c=a.numOutputs<0?i.length:a.numOutputs;if(c!==i.length)throw new Error("numOutputs and splitSizes lengh must be equal");return UA({axis:n,numOutputs:c,splitSizes:i})}}),pm,Wl,Lb,Rb=Ct(()=>{sA(),pA(),Kr(),CA(),pm=(a,n)=>{let[i,c,p,m]=a,{numHeads:C,rotaryEmbeddingDim:I}=n;if(i.dims.length!==3&&i.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${i.dims.length}`);if(!Ke.areEqual(c.dims,[])&&!Ke.areEqual(c.dims,[1])&&c.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${c.dims.length}`);if(p.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${p.dims.length}`);if(m.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${m.dims.length}`);if(!Ke.areEqual(p.dims,m.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(I>0&&C===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let E=i.dims[0],x=i.dims[i.dims.length-2],D=p.dims[0],y=Ke.sizeFromDimension(i.dims,1)/x,M=I===0?p.dims[1]*2:y/C;if(I>M)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(c.dims.length===2){if(E!==c.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${c.dims[0]}`);if(x!==c.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${c.dims[1]}`)}if(M/2!==p.dims[1]&&I/2!==p.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${p.dims[1]}`);if(x>D)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Wl=(a,n)=>{let{interleaved:i,numHeads:c,rotaryEmbeddingDim:p,scale:m}=n,C=a[0].dims[0],I=Ke.sizeFromDimension(a[0].dims,1),E=a[0].dims[a[0].dims.length-2],x=I/E,D=a[2].dims[1],y=p===0?D*2:x/c,M=new Array(C,E,x/y,y-D),S=Ke.computeStrides(M),F=[{type:1,data:m},{type:12,data:M},{type:12,data:S},...a[0].dims.length===3?new Array({type:12,data:[I,x,y,1]}):[],...a[0].dims.length===4?new Array({type:12,data:[I,y,E*y,1]}):[],...Jt(a[0].dims,a[1].dims,a[2].dims,a[3].dims,a[0].dims)],L=Z=>{let z=At("input",a[0].dataType,a[0].dims.length),N=At("position_ids",a[1].dataType,a[1].dims.length),K=At("cos_cache",a[2].dataType,a[2].dims.length),f=At("sin_cache",a[3].dataType,a[3].dims.length),k=Ut("output",a[0].dataType,a[0].dims.length);return Z.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:M.length},{name:"global_strides",type:"u32",length:S.length},{name:"input_output_strides",type:"u32",length:S.length}]),`
        ${Z.declareVariables(z,N,K,f,k)}

        ${Z.mainStart(jo)}
          let half_rotary_emb_dim = uniforms.${K.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${N.broadcastedIndicesToOffset("bsnh.xy",Ut("",N.type.tensor,2))};
            let position_id =
                u32(${N.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${i});
            let j = i + select(half_rotary_emb_dim, 1, ${i});
            let re = ${z.getByOffset("i")} * ${K.get("position_id","bsnh[3]")} -
                ${z.getByOffset("j")} * ${f.get("position_id","bsnh[3]")};
            ${k.setByOffset("i","re")}
            let im = ${z.getByOffset("i")} * ${f.get("position_id","bsnh[3]")} +
                ${z.getByOffset("j")} * ${K.get("position_id","bsnh[3]")};
            ${k.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${k.setByOffset("k",z.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:UA({interleaved:i}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:L,getRunData:()=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(Ke.size(M)/jo)},programUniforms:F})}},Lb=(a,n)=>{pm(a.inputs,n),a.compute(Wl(a.inputs,n))}}),hm,mm,y2,Cm,jb,S5=Ct(()=>{Kr(),sA(),e1(),Ob(),zb(),bi(),Rb(),CA(),hm=(a,n)=>{if(n.doRotary&&a.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let i=a[0],c=a[1],p=a[2],m=a[3],C=a[4];if(n.doRotary!==0&&a.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(n.localWindowSize!==-1)throw new Error("Local attention is not supported");if(n.softcap!==0)throw new Error("Softcap is not supported");if(n.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(n.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(i.dims.length!==3&&i.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let I=!1,E=i.dims[0],x=i.dims[1],D=i.dims.length===3?I?i.dims[2]/3:i.dims[2]:n.numHeads*i.dims[4],y=x,M=0,S=!c||c.dims.length===0,F=Math.floor(S?D/(n.numHeads+2*n.kvNumHeads):D/n.numHeads);S&&(D=F*n.numHeads);let L=m&&m.dims.length!==0,Z=C&&C.dims.length!==0;if(L&&m.dims.length===4&&m.dims[0]===E&&m.dims[1]!==n.kvNumHeads&&m.dims[2]===n.kvNumHeads&&m.dims[3]===F)throw new Error("BSNH pastKey/pastValue is not supported");if(L&&Z){if(m.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(C.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');M=m.dims[2]}else if(L||Z)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let z=1;if(c&&c.dims.length>0){if(i.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(c.dims.length<3||c.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==c.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(c.dims.length===3){if(i.dims[2]%c.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');y=c.dims[1]}else if(c.dims.length===5){if(c.dims[2]!==n.numHeads||c.dims[3]!==2||c.dims[4]!==F)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(p)throw new Error('Expect "value" be none when "key" has packed kv format.');y=c.dims[1]}else{if(c.dims[1]!==n.numHeads||c.dims[3]!==F)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');y=c.dims[2]}}else{if(i.dims.length!==3&&i.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(i.dims.length===5&&(i.dims[2]!==n.numHeads||i.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');z=3}let N=0,K=!1,f=n.kvNumHeads?F*n.kvNumHeads:D;if(p&&p.dims.length>0){if(p.dims.length!==3&&p.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==p.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(p.dims.length===3){if(y!==p.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');f=p.dims[2]}else{if(y!==p.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');f=p.dims[1]*p.dims[3],K=!0}}let k=a.length>4?a[5]:void 0;if(k&&k.dims.length!==1&&k.dims[0]!==E)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:E,sequenceLength:x,pastSequenceLength:M,kvSequenceLength:y,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:D,vHiddenSize:f,headSize:F,vHeadSize:Math.floor(f/n.kvNumHeads),numHeads:n.numHeads,kvNumHeads:n.kvNumHeads,nReps:n.numHeads/n.kvNumHeads,pastPresentShareBuffer:!1,maskType:N,scale:n.scale,broadcastResPosBias:!1,passPastInKv:K,qkvFormat:z}},mm=UA({perm:[0,2,1,3]}),y2=(a,n,i)=>{let c=n,p=i.kvNumHeads;return n.dims.length===3&&i.kvSequenceLength!==0&&(c=n.reshape([i.batchSize,i.kvSequenceLength,p,i.headSize]),c=a.compute(ma(c,mm.perm),{inputs:[c],outputs:[-1]})[0]),c},Cm=(a,n,i,c)=>{let p=7,m=["type","type"],C=[a*n],I=a*n,E=[{type:12,data:I},{type:12,data:n},{type:12,data:a}],x=D=>{let y=At("seq_lens",i.dataType,i.dims),M=At("total_seq_lens",c.dataType,c.dims),S=Ut("pos_ids",p,C),F=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${D.registerUniforms(F).declareVariables(y,M,S)}
  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${M.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${y.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${S.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${S.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${S.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${a};${n}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:C,dataType:p}],dispatchGroup:{x:Math.ceil(I/64)},programUniforms:E}),getShaderSource:x}},jb=(a,n)=>{let i=hm(a.inputs,n);if(a.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(a.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let c=a.inputs[0],p=a.inputs[1]&&a.inputs[1].dims.length>0?a.inputs[1]:void 0,m=a.inputs[2]&&a.inputs[2].dims.length>0?a.inputs[2]:void 0,C=a.inputs[3]&&a.inputs[3].dims.length!==0?a.inputs[3]:void 0,I=a.inputs[4]&&a.inputs[4].dims.length!==0?a.inputs[4]:void 0,E=a.inputs.length>4?a.inputs[5]:void 0,x=a.inputs.length>5?a.inputs[6]:void 0,D=i.kvNumHeads?i.kvNumHeads:i.numHeads,y=UA({axis:2,numOutputs:3,splitSizes:[i.numHeads*i.headSize,D*i.headSize,D*i.headSize]}),[M,S,F]=!p&&!m?a.compute(Tu([c],y),{inputs:[c],outputs:[-1,-1,-1]}):[c,p,m],L,Z;if(n.doRotary){let f=a.compute(Cm(i.batchSize,i.sequenceLength,E,x),{inputs:[E,x],outputs:[-1]})[0],k=a.inputs[7],e=a.inputs[8],d=UA({interleaved:n.rotaryInterleaved!==0,numHeads:i.numHeads,rotaryEmbeddingDim:0,scale:n.scale}),B=[M,f,k,e],Ae=[-1];L=a.compute(Wl(B,d),{inputs:B,outputs:Ae})[0],B.splice(0,1,S);let P=UA({interleaved:n.rotaryInterleaved!==0,numHeads:i.kvNumHeads,rotaryEmbeddingDim:0,scale:n.scale});Z=a.compute(Wl(B,P),{inputs:B,outputs:Ae})[0]}let z=P0(a,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,n.doRotary?L:M,void 0,0),N=y2(a,n.doRotary?Z:S,i),K=y2(a,F,i);z0(a,z,N,K,void 0,void 0,C,I,void 0,i,E,x)}}),B2,bm,Im,Wb,F5=Ct(()=>{sA(),pA(),bi(),CA(),B2=(a,n,i,c,p,m,C,I)=>{let E=Wr(m),x=E===1?"f32":`vec${E}f`,D=E===1?"vec2f":`mat2x${E}f`,y=p*C,M=64;y===1&&(M=256);let S=[p,C,m/E],F=[p,C,2],L=["rank","type","type"],Z=[];Z.push(...Jt(S,F));let z=N=>{let K=At("x",n.dataType,3,E),f=At("scale",i.dataType,i.dims),k=At("bias",c.dataType,c.dims),e=Ut("output",1,3,2),d=[K,f,k,e];return`
  var<workgroup> workgroup_shared : array<${D}, ${M}>;
  const workgroup_size = ${M}u;
  ${N.declareVariables(...d)}
  ${N.mainStart(M)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${x}(0);
    var squared_sum = ${x}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${x}(${K.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${D}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${mi("workgroup_shared[0][0]",E)} / f32(hight * ${E});
      let squared_sum_final = ${mi("workgroup_shared[0][1]",E)} / f32(hight * ${E});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${I}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return a.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${E};${I};${M}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:F,dataType:1}],dispatchGroup:{x:y},programUniforms:Z}),getShaderSource:z},{inputs:[n,i,c],outputs:[-1]})[0]},bm=(a,n,i)=>{let c=n[0].dims,p=c,m=2,C=c[0],I=c[1],E=Ke.sizeFromDimension(c,m),x=Wr(E),D=Ke.size(p)/x,y=B2(a,n[0],n[1],n[2],C,E,I,i.epsilon),M=[C,I,E/x],S=[C,I],F=["type","none"],L=Z=>{let z=At("x",n[0].dataType,M.length,x),N=At("scale_shift",1,S.length,2),K=Ut("output",n[0].dataType,M.length,x),f=[z,N,K];return`
  ${Z.registerUniform("output_size","u32").declareVariables(...f)}
  ${Z.mainStart()}
  ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${K.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${N.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${z.getByOffset("global_idx")} * ${K.type.value}(scale_shift.x) + ${K.type.value}(scale_shift.y);
      ${K.setByOffset("global_idx","value")};
  }`};a.compute({name:"InstanceNormalization",shaderCache:{hint:`${x}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(D/64)},programUniforms:[{type:12,data:D},...Jt(M,S,M)]}),getShaderSource:L},{inputs:[n[0],y]})},Im=(a,n,i)=>{let c=n[0].dims,p=c,m=c[0],C=c[c.length-1],I=Ke.sizeFromDimension(c,1)/C,E=Wr(C),x=Ke.size(p)/E,D=[{type:12,data:I},{type:12,data:Math.floor(C/E)}],y=["type","type"],M=!1,S=[0,c.length-1];for(let z=0;z<c.length-2;z++)M=M||c[z+1]!==1,S.push(z+1);M=M&&c[c.length-1]!==1;let F=M?a.compute(ma(a.inputs[0],S),{inputs:[a.inputs[0]],outputs:[-1]})[0]:a.inputs[0].reshape(Array.from({length:c.length},(z,N)=>c[S[N]])),L=B2(a,F,n[1],n[2],m,I,C,i.epsilon),Z=z=>{let N=Cs(n[0].dataType),K=E===1?"vec2f":`mat${E}x2f`,f=d=>{let B=d===0?"x":"y",Ae=E===1?"f32":`vec${E}f`;switch(E){case 1:return`${N}(${Ae}(scale.${B}))`;case 2:return`vec2<${N}>(${Ae}(scale[0].${B}, scale[1].${B}))`;case 4:return`vec4<${N}>(${Ae}(scale[0].${B}, scale[1].${B}, scale[2].${B}, scale[3].${B}))`;default:throw new Error(`Not supported compoents ${E}`)}},k=At("input",n[0].dataType,n[0].dims,E),e=Ut("output",n[0].dataType,p,E);return`
  @group(0) @binding(0) var<storage, read> input : array<${k.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${K}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${e.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${z.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${f(0)}, ${f(1)});
  }`};a.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${E}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:D}),getShaderSource:Z},{inputs:[n[0],L]})},Wb=(a,n)=>{n.format==="NHWC"?Im(a,a.inputs,n):bm(a,a.inputs,n)}}),wm,km,Vb,O5=Ct(()=>{sA(),pA(),CA(),wm=a=>{if(!a||a.length<2)throw new Error("layerNorm requires at least 2 inputs.")},km=(a,n,i)=>{let c=n.simplified,p=a[0].dims,m=a[1],C=!c&&a[2],I=p,E=Ke.normalizeAxis(n.axis,p.length),x=Ke.sizeToDimension(p,E),D=Ke.sizeFromDimension(p,E),y=Ke.size(m.dims),M=C?Ke.size(C.dims):0;if(y!==D||C&&M!==D)throw new Error(`Size of X.shape()[axis:] == ${D}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${y} and bias size of ${M}`);let S=[];for(let k=0;k<p.length;++k)k<E?S.push(p[k]):S.push(1);let F=Wr(D),L=["type","type"],Z=[{type:12,data:x},{type:1,data:D},{type:12,data:Math.floor(D/F)},{type:1,data:n.epsilon}];C&&L.push("type");let z=i>1,N=i>2,K=k=>{let e=Cs(a[0].dataType),d=[At("x",a[0].dataType,a[0].dims,F),At("scale",m.dataType,m.dims,F)];C&&d.push(At("bias",C.dataType,C.dims,F)),d.push(Ut("output",a[0].dataType,I,F)),z&&d.push(Ut("mean_data_output",1,S)),N&&d.push(Ut("inv_std_output",1,S));let B=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${k.registerUniforms(B).declareVariables(...d)}
  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ku("f32",F)};
    var mean_square_vector = ${ku("f32",F)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Qo(e,F,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${mi("mean_vector",F)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${mi("mean_square_vector",F)} / uniforms.norm_size ${c?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Qo(e,F,"x[j + offset]")};
      let f32scale = ${Qo(e,F,"scale[j]")};
      output[j + offset] = ${d[0].type.value}((f32input ${c?"":"- mean"}) * inv_std_dev * f32scale
        ${C?`+ ${Qo(e,F,"bias[j]")}`:""}
      );
    }

    ${z?"mean_data_output[global_idx] = mean":""};
    ${N?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},f=[{dims:I,dataType:a[0].dataType}];return z&&f.push({dims:S,dataType:1}),N&&f.push({dims:S,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${F};${i};${c}`,inputDependencies:L},getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(x/64)},programUniforms:Z}),getShaderSource:K}},Vb=(a,n)=>{wm(a.inputs),a.compute(km(a.inputs,n,a.outputCount))}}),Em,Yb,_5=Ct(()=>{pA(),a1(),n1(),Em=a=>{if(!a||a.length!==2)throw new Error("MatMul requires 2 inputs.");if(a[0].dims[a[0].dims.length-1]!==a[1].dims[a[1].dims.length-2])throw new Error("shared dimension does not match.")},Yb=a=>{Em(a.inputs);let n=Ro.calcShape(a.inputs[0].dims,a.inputs[1].dims,!0);if(!n)throw new Error("Can't use matmul on the given tensors");let i=n[n.length-1],c=a.inputs[0].dims[a.inputs[0].dims.length-1];if(i<8&&c<8)a.compute(s1(a.inputs,{activation:""},n));else{let p=n[n.length-2],m=Ke.size(a.inputs[0].dims.slice(0,-2)),C=Ke.size(a.inputs[1].dims.slice(0,-2));if(m!==1&&p===1&&C===1){let I=a.inputs[0].reshape([1,m,c]),E=a.inputs[1].reshape([1,c,i]),x=[1,m,i],D=[I,E];a.compute(jl(D,{activation:""},n,x),{inputs:D})}else a.compute(jl(a.inputs,{activation:""},n))}}}),Mm,vm,xm,Hb,Ub,N5=Ct(()=>{sA(),pA(),Kr(),CA(),Mm=(a,n)=>{if(a.length<3||a.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let i=a[0],c=i.dims.length;if(i.dims[c-1]!==n.k)throw new Error("The last dim of input shape does not match the k value");let p=Math.floor((n.k+n.blockSize-1)/n.blockSize),m=n.blockSize/8*n.bits,C=a[1];if(!Ke.areEqual(C.dims,[n.n,p,m]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let I=a[2].dims;if(Ke.size(I)!==n.n*p)throw new Error("scales input size error.");if(a.length===4){let E=a[3].dims,x=n.bits>4?n.n*p:n.n*Math.floor((p+1)/2);if(Ke.size(E)!==x)throw new Error("zeroPoints input size error.")}},vm=(a,n)=>{let i=a[0].dims,c=i.length,p=i[c-2],m=n.k,C=n.n,I=i.slice(0,c-2),E=Ke.size(I),x=a[1].dims[2]/4,D=a[0].dataType,y=Wr(n.k),M=Wr(x),S=Wr(C),F=I.concat([p,C]),L=p>1&&C/S%2===0?2:1,Z=Ke.size(F)/S/L,z=64,N=[],K=[E,p,m/y],f=Ke.convertShape(a[1].dims).slice();f.splice(-1,1,x/M),N.push(...Jt(K)),N.push(...Jt(f)),N.push(...Jt(a[2].dims)),a.length===4&&N.push(...Jt(Ke.convertShape(a[3].dims)));let k=[E,p,C/S];N.push(...Jt(k));let e=d=>{let B=K.length,Ae=At("a",a[0].dataType,B,y),P=At("b",12,f.length,M),O=At("scales",a[2].dataType,a[2].dims.length),me=[Ae,P,O],ee=a.length===4?At("zero_points",12,a[3].dims.length):void 0;ee&&me.push(ee);let Ce=k.length,we=Ut("output",a[0].dataType,Ce,S),xe=Cs(a[0].dataType),De=(()=>{switch(y){case 1:return`array<${xe}, 8>`;case 2:return`mat4x2<${xe}>`;case 4:return`mat2x4<${xe}>`;default:throw new Error(`${y}-component is not supported.`)}})(),ye=()=>{let ne=`
          // reuse a data
            var input_offset = ${Ae.indicesToOffset(`${Ae.type.indices}(batch, row, word_offset)`)};
            var a_data: ${De};
            for (var j: u32 = 0; j < ${8/y}; j++) {
              a_data[j] = ${Ae.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let te=0;te<S*L;te++)ne+=`
            b_value = ${M===1?`b${te}_data`:`b${te}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${De}(${Array.from({length:4},(pe,le)=>`${xe}(b_value_lower[${le}]), ${xe}(b_value_upper[${le}])`).join(", ")});
            b_dequantized_values = ${y===1?`${De}(${Array.from({length:8},(pe,le)=>`(b_quantized_values[${le}] - ${ee?`zero_point${te}`:"zero_point"}) * scale${te}`).join(", ")});`:`(b_quantized_values - ${De}(${Array(8).fill(`${ee?`zero_point${te}`:"zero_point"}`).join(",")})) * scale${te};`};
            workgroup_shared[local_id.x * ${L} + ${Math.floor(te/S)}]${S>1?`[${te%S}]`:""} += ${Array.from({length:8/y},(pe,le)=>`${y===1?`a_data[${le}] * b_dequantized_values[${le}]`:`dot(a_data[${le}], b_dequantized_values[${le}])`}`).join(" + ")};
          `;return ne},Oe=()=>{let ne=`
            var col_index = col * ${S};
            ${ee?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${xe}(8);`}
            `;for(let te=0;te<S*L;te++)ne+=`
            let scale${te} = ${O.getByOffset("col_index * nBlocksPerCol + block")};
            ${ee?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ee.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${te} = ${xe}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return ne},_e=()=>{let ne=`col_index = col * ${S};`;for(let te=0;te<S*L;te++)ne+=`
            let b${te}_data = ${P.getByIndices(`${P.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return ne+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${De};
            var b_dequantized_values: ${De};`,ne};return`
        var<workgroup> workgroup_shared: array<${we.type.value}, ${L*z}>;
        ${d.declareVariables(...me,we)}
        ${d.mainStart([z,1,1])}
          let output_indices = ${we.offsetToIndices(`(global_idx / ${z}) * ${L}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${z}) {
            //process one block
            var word_offset: u32 = block * ${n.blockSize/y};
            ${Oe()}
            for (var word: u32 = 0; word < ${x}; word += ${M}) {
              ${_e()}
              for (var i: u32 = 0; i < ${M}; i++) {
                ${ye()}
                word_offset += ${8/y};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${L}) {
            var output_value: ${we.type.value} = ${we.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${z}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${L};
            }
            ${we.setByIndices(`${we.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${n.blockSize};${n.bits};${y};${M};${S};${L};${z}`,inputDependencies:Array(a.length).fill("rank")},getRunData:()=>({outputs:[{dims:F,dataType:D}],dispatchGroup:{x:Z},programUniforms:N}),getShaderSource:e}},xm=(a,n)=>{let i=a[0].dims,c=i.length,p=i[c-2],m=n.k,C=n.n,I=i.slice(0,c-2),E=Ke.size(I),x=a[1].dims[2]/4,D=a[0].dataType,y=Wr(n.k),M=Wr(x),S=I.concat([p,C]),F=128,L=C%8===0?8:C%4===0?4:1,Z=F/L,z=Z*M*8,N=z/y,K=z/n.blockSize,f=Ke.size(S)/L,k=[],e=[E,p,m/y],d=Ke.convertShape(a[1].dims).slice();d.splice(-1,1,x/M),k.push(...Jt(e)),k.push(...Jt(d)),k.push(...Jt(a[2].dims)),a.length===4&&k.push(...Jt(Ke.convertShape(a[3].dims)));let B=[E,p,C];k.push(...Jt(B));let Ae=P=>{let O=e.length,me=At("a",a[0].dataType,O,y),ee=At("b",12,d.length,M),Ce=At("scales",a[2].dataType,a[2].dims.length),we=[me,ee,Ce],xe=a.length===4?At("zero_points",12,a[3].dims.length):void 0;xe&&we.push(xe);let De=B.length,ye=Ut("output",a[0].dataType,De),Oe=Cs(a[0].dataType),_e=()=>{switch(y){case 1:return`
          let a_data0 = vec4<${Oe}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Oe}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Oe}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Oe}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${y}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${me.type.value}, ${N}>;
        var<workgroup> inter_results: array<array<${ye.type.value}, ${Z}>, ${L}>;
        ${P.declareVariables(...we,ye)}
        ${P.mainStart([Z,L,1])}
          let output_indices = ${ye.offsetToIndices(`workgroup_index * ${L}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${K} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${N};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${N}; a_offset += ${F})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${me.getByIndices(`${me.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${me.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${K} + local_id.x;
            ${xe?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${xe.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Oe}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Oe}(8);`}
            let scale = ${Ce.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ee.getByIndices(`${ee.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${n.blockSize/y};
            for (var i: u32 = 0; i < ${M}; i++) {
              ${_e()}
              let b_value = ${M===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Oe}>(${Array.from({length:4},(ne,te)=>`${Oe}(b_value_lower[${te}]), ${Oe}(b_value_upper[${te}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Oe}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(ne,te)=>`${`dot(a_data${te}, b_dequantized_values[${te}])`}`).join(" + ")};
              word_offset += ${8/y};
            }
            workgroupBarrier();
          }

          if (local_idx < ${L}) {
            var output_value: ${ye.type.value} = ${ye.type.value}(0);
            for (var b = 0u; b < ${Z}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ye.setByIndices(`${ye.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${n.blockSize};${y};${M};${Z};${L}`,inputDependencies:Array(a.length).fill("rank")},getRunData:()=>({outputs:[{dims:S,dataType:D}],dispatchGroup:{x:f},programUniforms:k}),getShaderSource:Ae}},Hb=(a,n)=>{Mm(a.inputs,n),n.blockSize===32&&a.adapterInfo.isVendor("intel")&&a.adapterInfo.isArchitecture("gen-12lp")?a.compute(xm(a.inputs,n)):a.compute(vm(a.inputs,n))},Ub=a=>UA(a)}),ym,Bm,Dm,Pm,Tm,Gm,Qm,Sm,Kb,z5=Ct(()=>{sA(),pA(),CA(),ym=a=>{if(!a||a.length<1)throw new Error("Too few inputs");if(a[0].dataType!==1&&a[0].dataType!==10)throw new Error("Input type must be float or float16.");if(a.length>=2){let n=a[0].dims.length*2===a[1].dims[0];if(a.length===4&&(n=a[3].dims[0]*2===a[1].dims[0]),!n)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Bm=(a,n,i)=>{let c="";for(let p=n-1;p>=0;--p)c+=`
            k = i32(${a.indicesGet("indices",p)}) - ${Kt("uniforms.pads",p,i)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Kt("uniforms.x_shape",p,n)})) {
              break;
            }
            offset += k * i32(${Kt("uniforms.x_strides",p,n)});
        `;return`
          value = ${a.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${c}
            value = x[offset];
          }
      `},Dm=(a,n,i)=>{let c="";for(let p=n-1;p>=0;--p)c+=`
                k = i32(${a.indicesGet("indices",p)}) - ${Kt("uniforms.pads",p,i)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Kt("uniforms.x_shape",p,n)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Kt("uniforms.x_shape",p,n)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Kt("uniforms.x_strides",p,n)});
            `;return`
              var offset = 0;
              var k = 0;
              ${c}
              value = x[offset];
          `},Pm=(a,n,i)=>{let c="";for(let p=n-1;p>=0;--p)c+=`
                k = i32(${a.indicesGet("indices",p)}) - ${Kt("uniforms.pads",p,i)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Kt("uniforms.x_shape",p,n)})) {
                  k = i32(${Kt("uniforms.x_shape",p,n)}) - 1;
                }
                offset += k * i32(${Kt("uniforms.x_strides",p,n)});
            `;return`
              var offset = 0;
              var k = 0;
              ${c}
              value = x[offset];
          `},Tm=(a,n,i)=>{let c="";for(let p=n-1;p>=0;--p)c+=`
                k = i32(${a.indicesGet("indices",p)}) - ${Kt("uniforms.pads",p,i)};
                if (k < 0)  {
                  k += i32(${Kt("uniforms.x_shape",p,n)}]);
                }
                if (k >= i32(${Kt("uniforms.x_shape",p,n)})) {
                  k -= i32(${Kt("uniforms.x_shape",p,n)});
                }
                offset += k * i32(${Kt("uniforms.x_strides",p,n)});
            `;return`
              var offset = 0;
              var k = 0;
              ${c}
              value = x[offset];
          `},Gm=(a,n,i)=>{switch(i.mode){case 0:return Bm(a,n,i.pads.length);case 1:return Dm(a,n,i.pads.length);case 2:return Pm(a,n,i.pads.length);case 3:return Tm(a,n,i.pads.length);default:throw new Error("Invalid mode")}},Qm=(a,n)=>{let i=Ke.padShape(a[0].dims.slice(),n.pads),c=a[0].dims,p=Ke.size(i),m=[{type:12,data:p},{type:6,data:n.pads}],C=a.length>=3&&a[2].data;n.mode===0&&m.push({type:C?a[2].dataType:1,data:n.value}),m.push(...Jt(a[0].dims,i));let I=["rank"],E=x=>{let D=Ut("output",a[0].dataType,i.length),y=At("x",a[0].dataType,c.length),M=y.type.value,S=Gm(D,c.length,n),F=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:n.pads.length}];return n.mode===0&&F.push({name:"constant_value",type:C?M:"f32"}),`
            ${x.registerUniforms(F).declareVariables(y,D)}
            ${x.mainStart()}
            ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${D.offsetToIndices("global_idx")};

            var value = ${M}(0);
            ${S}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${n.mode}${C}`,inputDependencies:I},getRunData:()=>({outputs:[{dims:i,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(Ke.size(i)/64)},programUniforms:m}),getShaderSource:E}},Sm=(a,n)=>{if(a.length>1){let i=a[1].getBigInt64Array(),c=a.length>=3&&a[2].data?a[2].dataType===10?a[2].getUint16Array()[0]:a[2].getFloat32Array()[0]:0,p=a[0].dims.length,m=new Int32Array(2*p).fill(0);if(a.length>=4){let I=a[3].getBigInt64Array();for(let E=0;E<I.length;E++)m[Number(I[E])]=Number(i[E]),m[Number(I[E])+p]=Number(i[E+I.length])}else i.forEach((I,E)=>m[Number(E)]=Number(I));let C=[];return m.forEach(I=>C.push(I)),{mode:n.mode,value:c,pads:C}}else return n},Kb=(a,n)=>{ym(a.inputs);let i=Sm(a.inputs,n);a.compute(Qm(a.inputs,i),{inputs:[0]})}}),g0,D2,P2,T2,G2,Fm,Om,Q2,S2,Xb,Zb,F2,Jb,qb,O2,$b,e8,t8,A8,L5=Ct(()=>{Ja(),sA(),pA(),CA(),g0=a=>{if(wr.webgpu.validateInputContent&&(!a||a.length!==1))throw new Error("Pool ops requires 1 input.")},D2=(a,n,i)=>{let c=n.format==="NHWC",p=a.dims.slice();c&&p.splice(1,0,p.pop());let m=Object.hasOwnProperty.call(n,"dilations"),C=n.kernelShape.slice(),I=n.strides.slice(),E=m?n.dilations.slice():[],x=n.pads.slice();Ll.adjustPoolAttributes(i,p,C,I,E,x);let D=Ll.computePoolOutputShape(i,p,I,E,C,x,n.autoPad),y=Object.assign({},n);m?Object.assign(y,{kernelShape:C,strides:I,pads:x,dilations:E,cacheKey:n.cacheKey}):Object.assign(y,{kernelShape:C,strides:I,pads:x,cacheKey:n.cacheKey});let M=D.slice();return M.push(M.splice(1,1)[0]),[y,c?M:D]},P2=(a,n)=>{let i=n.format==="NHWC",c=Ke.size(a),p=Ke.size(n.kernelShape),m=[{type:12,data:c},{type:12,data:p}],C=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(n.kernelShape.length<=2){let I=n.kernelShape[n.kernelShape.length-1],E=n.strides[n.strides.length-1],x=n.pads[n.pads.length/2-1],D=n.pads[n.pads.length-1],y=!!(x+D);m.push({type:12,data:I},{type:12,data:E},{type:12,data:x},{type:12,data:D}),C.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let M=!1;if(n.kernelShape.length===2){let S=n.kernelShape[n.kernelShape.length-2],F=n.strides[n.strides.length-2],L=n.pads[n.pads.length/2-2],Z=n.pads[n.pads.length-2];M=!!(L+Z),m.push({type:12,data:S},{type:12,data:F},{type:12,data:L},{type:12,data:Z}),C.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[m,C,!0,y,M]}else{if(i)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let I=Ke.computeStrides(n.kernelShape);m.push({type:12,data:I},{type:12,data:n.pads},{type:12,data:n.strides}),C.push({name:"kernelStrides",type:"u32",length:I.length},{name:"pads",type:"u32",length:n.pads.length},{name:"strides",type:"u32",length:n.strides.length});let E=n.pads.reduce((x,D)=>x+D);return[m,C,!!E,!1,!1]}},T2=(a,n,i,c,p,m,C,I,E,x,D,y)=>{let M=p.format==="NHWC",S=n.type.value,F=Ut("output",n.type.tensor,c);if(p.kernelShape.length<=2){let L="",Z="",z="",N=i-(M?2:1);if(D?L=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${N}] = indices[${N}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${N}] < 0 || xIndices[${N}]
                      >= uniforms.x_shape[${N}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${n.indicesToOffset("xIndices")}];
                  ${m}
                }`:L=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${N}] = indices[${N}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${n.indicesToOffset("xIndices")}];
                  ${m}
                }`,p.kernelShape.length===2){let K=i-(M?3:2);y?Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${K}] = indices[${K}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${K}] < 0 || xIndices[${K}] >= uniforms.x_shape[${K}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${K}] = indices[${K}] * uniforms.sh - uniforms.phStart + j;
                `,z=`
              }
            `}return`
            ${a.registerUniforms(E).declareVariables(n,F)}

            ${a.mainStart()}
              ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${F.offsetToIndices("global_idx")};
              var xIndices = ${F.offsetToIndices("global_idx")};

              var value = ${S}(${I});
              var pad = 0;
              ${Z}
              ${L}
              ${z}
              ${C}

              output[global_idx] = value;
            }`}else{if(M)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let L=p.kernelShape.length,Z=p.pads.length,z="";return x?z=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${n.indicesToOffset("xIndices")}];
                ${m}
              }`:z=`
              }
              let x_val = x[${n.indicesToOffset("xIndices")}];
              ${m}
            `,`
            ${a.registerUniforms(E).declareVariables(n,F)}

            ${a.mainStart()}
              ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${F.offsetToIndices("global_idx")};
              var xIndices = ${F.offsetToIndices("global_idx")};

              var offsets: array<u32, ${L}>;

              var value = ${S}(${I});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${L-1}u; j++) {
                  offsets[j] = offset / ${Kt("uniforms.kernelStrides","j",L)};
                  offset -= offsets[j] * ${Kt("uniforms.kernelStrides","j",L)};
                }
                offsets[${L-1}] = offset;

                isPad = false;
                for (var j = ${i-L}u; j < ${i}u; j++) {
                  xIndices[j] = indices[j] * ${Kt("uniforms.strides",`j - ${i-L}u`,L)}
                    + offsets[j - ${i-L}u] - ${Kt("uniforms.pads","j - 2u",Z)};
                  ${z}
              }
              ${C}

              output[global_idx] = value;
            }`}},G2=a=>`${a.format};${a.ceilMode};${a.autoPad};${a.kernelShape.length}`,Fm=a=>`${G2(a)};${a.countIncludePad}`,Om=a=>`${G2(a)};${a.storageOrder};${a.dilations}`,Q2=a=>({format:a.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][a.auto_pad],ceilMode:a.ceil_mode,kernelShape:a.kernel_shape,strides:a.strides,pads:a.pads}),S2=(a,n,i,c)=>{let[p,m]=D2(n,c,i),C=At("x",n.dataType,n.dims.length),I=C.type.value,E="value += x_val;",x="";p.countIncludePad?x+=`value /= ${I}(uniforms.kernelSize);`:x+=`value /= ${I}(i32(uniforms.kernelSize) - pad);`;let[D,y,M,S,F]=P2(m,p);D.push(...Jt(n.dims,m));let L=["rank"];return{name:a,shaderCache:{hint:`${c.cacheKey};${M};${S};${F}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:m,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(Ke.size(m)/64)},programUniforms:D}),getShaderSource:Z=>T2(Z,C,n.dims.length,m.length,p,E,x,0,y,M,S,F)}},Xb=a=>{let n=a.count_include_pad!==0,i=Q2(a);if(i.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let c={countIncludePad:n,...i,cacheKey:""};return{...c,cacheKey:Fm(c)}},Zb=(a,n)=>{g0(a.inputs),a.compute(S2("AveragePool",a.inputs[0],!1,n))},F2={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Jb=a=>{let n=a.format;return{format:n,...F2,cacheKey:n}},qb=(a,n)=>{g0(a.inputs),a.compute(S2("GlobalAveragePool",a.inputs[0],!0,n))},O2=(a,n,i,c)=>{let[p,m]=D2(n,c,i),C=`
      value = max(x_val, value);
    `,I="",E=At("x",n.dataType,n.dims.length),x=["rank"],[D,y,M,S,F]=P2(m,p);return D.push(...Jt(n.dims,m)),{name:a,shaderCache:{hint:`${c.cacheKey};${M};${S};${F}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:m,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(Ke.size(m)/64)},programUniforms:D}),getShaderSource:L=>T2(L,E,n.dims.length,m.length,p,C,I,n.dataType===10?-65504:-1e5,y,M,S,F)}},$b=(a,n)=>{g0(a.inputs),a.compute(O2("MaxPool",a.inputs[0],!1,n))},e8=a=>{let n=a.storage_order,i=a.dilations,c=Q2(a);if(n!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(c.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let p={storageOrder:n,dilations:i,...c,cacheKey:""};return{...p,cacheKey:Om(p)}},t8=a=>{let n=a.format;return{format:n,...F2,cacheKey:n}},A8=(a,n)=>{g0(a.inputs),a.compute(O2("GlobalMaxPool",a.inputs[0],!0,n))}}),_m,Nm,r8,s8,R5=Ct(()=>{sA(),pA(),Kr(),CA(),_m=(a,n)=>{if(a.length<2||a.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(a.length===3&&a[1].dims===a[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(a.length===3&&a[0].dataType!==a[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(a[0].dataType===6&&a.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(a[1].dims.length!==0&&a[1].dims.length!==1&&a[1].dims.length!==a[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(a.length>2){if(a[0].dataType!==a[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(a[1].dims.length!==a[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!a[1].dims.map((i,c)=>i===a[2].dims[c]).reduce((i,c)=>i&&c,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(n.blockSize>0){if(a[1].dims.length===0||a[1].dims.length===1&&a[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!a[1].dims.map((p,m)=>m===n.axis||p===a[0].dims[m]).reduce((p,m)=>p&&m,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(a[1].dims.length!==a[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let i=a[0].dims[n.axis],c=a[1].dims[n.axis];if(n.blockSize<Math.ceil(i/c)||n.blockSize>Math.ceil(i/(c-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Nm=(a,n)=>{let i=Ke.normalizeAxis(n.axis,a[0].dims.length),c=a[0].dataType,p=c===3,m=a[0].dims,C=a[1].dataType,I=Ke.size(m),E=c===3||c===2,x=E?[Math.ceil(Ke.size(a[0].dims)/4)]:a[0].dims,D=a[1].dims,y=a.length>2?a[2]:void 0,M=y?E?[Math.ceil(Ke.size(y.dims)/4)]:y.dims:void 0,S=D.length===0||D.length===1&&D[0]===1,F=S===!1&&D.length===1,L=Wr(I),Z=S&&(!E||L===4),z=Z?L:1,N=Z&&!E?L:1,K=At("input",E?12:c,x.length,N),f=At("scale",C,D.length),k=y?At("zero_point",E?12:c,M.length):void 0,e=Ut("output",C,m.length,z),d=[K,f];k&&d.push(k);let B=[x,D];y&&B.push(M);let Ae=[{type:12,data:I/z},{type:12,data:i},{type:12,data:n.blockSize},...Jt(...B,m)],P=O=>{let me=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${O.registerUniforms(me).declareVariables(...d,e)}
      ${O.mainStart()}
          ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${e.offsetToIndices("global_idx")};

          // Set input x
          ${E?`
            let input = ${K.getByOffset("global_idx / 4")};
            let x_vec = ${p?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${z===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${K.getByOffset("global_idx")};`};

          // Set scale input
          ${S?`let scale_value= ${f.getByOffset("0")}`:F?`
            let scale_index = ${e.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${f.getByOffset("scale_index")};`:`
            var scale_indices: ${f.type.indices} = output_indices;
            let index = ${f.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${f.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${f.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${k?S?E?`
                let zero_point_input = ${k.getByOffset("0")};
                let zero_point_vec =  ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${k.getByOffset("0")}`:F?E?`
                let zero_point_index = ${e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${k.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${k.getByOffset("zero_point_index")};`:E?`
                let zero_point_offset = ${f.indicesToOffset("scale_indices")};
                let zero_point_input = ${k.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${k.getByIndices("scale_indices")};`:`let zero_point_value = ${E?p?"i32":"u32":K.type.value}(0);`};
      // Compute and write output
      ${e.setByOffset("global_idx",`${e.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:n.cacheKey,inputDependencies:k?["rank","rank","rank"]:["rank","rank"]},getShaderSource:P,getRunData:()=>({outputs:[{dims:m,dataType:C}],dispatchGroup:{x:Math.ceil(I/z/64),y:1,z:1},programUniforms:Ae})}},r8=(a,n)=>{_m(a.inputs,n),a.compute(Nm(a.inputs,n))},s8=a=>UA({axis:a.axis,blockSize:a.blockSize})}),zm,Lm,a8,j5=Ct(()=>{Ja(),sA(),CA(),zm=(a,n,i)=>{let c=a===n,p=a<n&&i<0,m=a>n&&i>0;if(c||p||m)throw new Error("Range these inputs' contents are invalid.")},Lm=(a,n,i,c)=>{let p=Math.abs(Math.ceil((n-a)/i)),m=[p],C=p,I=[{type:12,data:C},{type:c,data:a},{type:c,data:i},...Jt(m)],E=x=>{let D=Ut("output",c,m.length),y=D.type.value,M=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`
        ${x.registerUniforms(M).declareVariables(D)}
        ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${c}`},getShaderSource:E,getRunData:()=>({outputs:[{dims:m,dataType:c}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:I})}},a8=a=>{let n=0,i=0,c=0;a.inputs[0].dataType===6?(n=a.inputs[0].getInt32Array()[0],i=a.inputs[1].getInt32Array()[0],c=a.inputs[2].getInt32Array()[0]):a.inputs[0].dataType===1&&(n=a.inputs[0].getFloat32Array()[0],i=a.inputs[1].getFloat32Array()[0],c=a.inputs[2].getFloat32Array()[0]),wr.webgpu.validateInputContent&&zm(n,i,c),a.compute(Lm(n,i,c,a.inputs[0].dataType),{inputs:[]})}}),Rm,_2,N2,jm,n8,i8,W5=Ct(()=>{sA(),pA(),Kr(),CA(),Rm=(a,n,i,c)=>{if(a!=="none"&&c!=="i32"&&c!=="u32"&&c!=="f32")throw new Error(`Input ${c} is not supported with reduction ${a}.`);let p=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,m=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${n}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(a){case"none":return`${n}=${i};`;case"add":return c==="i32"||c==="u32"?`atomicAdd(&${n}, bitcast<${c}>(${i}));`:`
              ${p}bitcast<${c}>(oldValue) + (${i})${m}`;case"max":return c==="i32"||c==="u32"?`atomicMax(&${n}, bitcast<${c}>(${i}));`:`
                ${p}max(bitcast<f32>(oldValue), (${i}))${m}`;case"min":return c==="i32"||c==="u32"?`atomicMin(&${n}, bitcast<${c}>(${i}));`:`${p}min(bitcast<${c}>(oldValue), (${i}))${m}`;case"mul":return`${p}(bitcast<${c}>(oldValue) * (${i}))${m}`;default:throw new Error(`Reduction ${a} is not supported.`)}},_2=(a,n)=>`${a===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${n?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${n?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,N2=(a,n,i)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${i?"global_idx":"idx"} + i];
        ${Rm(a.reduction,"output[data_offset + i]","value",n)}
      }`,jm=(a,n)=>{let i=a[0].dims,c=a[1].dims,p=i,m=1,C=Math.ceil(Ke.size(c)/m),I=c[c.length-1],E=Ke.sizeFromDimension(i,I),x=Ke.sizeFromDimension(c,0)/I,D=[{type:12,data:C},{type:12,data:I},{type:12,data:E},...Jt(a[1].dims,a[2].dims,p)],y=M=>{let S=At("indices",a[1].dataType,a[1].dims.length),F=At("updates",a[2].dataType,a[2].dims.length,m),L=n.reduction!=="none"&&n.reduction!==""?F3("output",a[0].dataType,p.length):Ut("output",a[0].dataType,p.length,m);return`
      ${M.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(S,F,L)}
      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${n.reduction==="none"}) {
    for (var i = 0; i < ${x}; i = i + 1) {
      for (var j = i + 1; j < ${x}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${n.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${x}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${_2(i.length,!1)}
      }
      ${N2(n,L.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${_2(i.length,!0)}
  }
  ${N2(n,L.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${n.cacheKey}_${n.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:D}),getShaderSource:y}},n8=a=>UA({reduction:a.reduction}),i8=(a,n)=>{a.compute(jm(a.inputs,n),{inputs:[a.inputs[1],a.inputs[2]],outputs:[]})}}),Wm,Vm,Ym,z2,Hm,Um,Km,Xm,Zm,Jm,qm,$m,L2,e4,t4,A4,r4,s4,o8,l8,V5=Ct(()=>{sA(),pA(),Kr(),CA(),Wm=(a,n)=>{if(a.every(i=>i>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),a.length>0){if(n.mode==="linear"){if(!(a.length===2||a.length===3||a.length===4&&a[0]===1&&a[1]===1||a.length===4&&a[0]===1&&a[3]===1||a.length===5&&a[0]===1&&a[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(n.mode==="cubic"&&!(a.length===2||a.length===4&&a[0]===1&&a[1]===1||a.length===4&&a[0]===1&&a[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Vm=(a,n,i)=>{n.every(p=>p>=0&&p<i||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let c=new Array(i).fill(1);return n.forEach((p,m)=>c[p]=a[m]),c},Ym=(a,n,i,c,p,m)=>{let[C,I,E]=i>10?[1,2,3]:[-1,a.length>1?1:-1,-1],x=a[0].dims.length;if(C>0&&a.length>C&&a[C].dims.length>0)a[C].getFloat32Array().forEach(D=>m.push(D));else if(n.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(I>0&&a.length>I&&a[I].dims.length===1&&a[I].dims[0]>0){if(a[I].getFloat32Array().forEach(D=>c.push(D)),c.length!==0&&c.length!==x&&i>=18&&c.length!==n.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Wm(c,n),n.axes.length>0&&Vm(c,n.axes,x).forEach((D,y)=>c[y]=D)}if(E>0&&a.length>E&&a[E].dims.length===1&&a[E].dims[0]>0&&(a[E].getBigInt64Array().forEach(D=>p.push(Number(D))),p.length!==0&&p.length!==x&&i>=18&&p.length!==n.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(n.axes.length>0){if(c.length!==0&&c.length!==n.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(p.length!==0&&p.length!==n.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof c<"u"&&typeof p<"u"&&c.length>0&&p.length>x)throw new Error("Resize requires only of scales or sizes to be specified")},z2=(a,n,i,c)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${a}) * (${n});
  let whole = ${c}(big / (${i}));
  let fract = ${c}(big % (${i})) / ${c}(${i});
  return whole + fract;
`,Hm=(a,n)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${n} { `+(()=>{switch(a){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${n}(xResized) / ${n}(xScale);
          } else {
            ${z2("xResized","lengthOriginal","lengthResized",n)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${n}(xResized) + 0.5) / ${n}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${n}(xResized) + 0.5) / ${n}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${z2("xResized","lengthOriginal - 1","lengthResized - 1",n)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${n}(roiStart) * ${n}(lengthOriginal - 1) +
                        (${n}(xResized) * ${n}(roiEnd - roiStart) * ${n}(lengthOriginal - 1)) /
                        ${n}(lengthResized - 1);
                  } else {
                    return 0.5 * ${n}(roiStart + roiEnd) * ${n}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${n}xScale * ${n}(lengthResized);
                  const adjustment = ${n}(lengthResized) / outputWidth;
                  const center = ${n}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${n}(xResized) + 0.5) / ${n}(xScale)) - 0.5;`;case"half_pixel":return`return ((${n}(xResized) + 0.5) / ${n}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${a} is not supported`)}})()+"}",Um=(a,n,i)=>`fn getNearestPixelFromOriginal(xOriginal: ${i}, isDownSample: bool) -> ${i} {`+(()=>{switch(a){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(n<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${a} is not supported`)}})()+"}",Km=(a,n,i)=>{let c=new Array(i).fill(0).concat(new Array(i).fill(1)),p=a.length===0?c:a.slice();return n.length>0?(n.forEach((m,C)=>{c[m]=p[C],c[C+i]=p[n.length+C]}),c):p},Xm=(a,n,i,c)=>{let p=[];if(i.length>0)if(c.length>0){if(a.forEach(m=>p.push(m)),Math.max(...c)>a.length)throw new Error("axes is out of bound");c.forEach((m,C)=>p[m]=i[C])}else i.forEach(m=>p.push(m));else{if(n.length===0)throw new Error("Resize requires either scales or sizes.");p=a.map((m,C)=>Math.round(m*n[C]))}return p},Zm=(a,n,i)=>{let c=(()=>{switch(i.keepAspectRatioPolicy){case"not_larger":return i.axes.length>0?Math.min(...i.axes.map(m=>n[m]),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return i.axes.length>0?Math.max(...i.axes.map(m=>n[m]),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${i.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);let p=a.slice();return i.axes.length>0?(i.axes.forEach(m=>n[m]=c),i.axes.forEach(m=>p[m]=Math.round(a[m]*n[m]))):(n.fill(c,0,n.length),p.forEach((m,C)=>p[C]=Math.round(m*n[C]))),p},Jm=(a,n,i,c,p)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${a.type.indices}) -> array<${a.type.value}, ${i.length}> {
      var original_indices: array<${a.type.value}, ${i.length}>;
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${a.indicesGet("output_indices","i")};
        var scale = ${Kt("uniforms.scales","i",c)};
        var roi_low = ${Kt("uniforms.roi","i",p)};
        var roi_hi = ${Kt("uniforms.roi",`i + ${n.length}`,p)};
        if (scale == 1.0) {
          original_indices[i] = ${a.type.value}(output_index);
        } else {
          var input_shape_i = ${Kt("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${Kt("uniforms.output_shape","i",i.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,qm=(a,n,i,c,p,m,C)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${n.type.indices}) -> ${a.type.indices} {
      var input_indices: ${a.type.indices};
      for (var i:u32 = 0; i < ${c.length}; i++) {
        var output_index = ${n.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Kt("uniforms.scales","i",p)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Kt("uniforms.roi","i",m)};
          var roi_hi = ${Kt("uniforms.roi",`i + ${i.length}`,m)};
          var input_shape_i = ${Kt("uniforms.input_shape","i",i.length)};
          var output_shape_i = ${Kt("uniforms.output_shape","i",c.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${C} || (original_idx >= 0 && original_idx < ${n.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${n.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${a.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,$m=(a,n)=>`
    fn checkInputIndices(input_indices: ${a.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var input_index = ${a.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Kt("uniforms.input_shape","i",n.length)}) {
          return false;
        }
      }
      return true;
    }`,L2=(a,n,i,c)=>a.rank>c?`
    ${a.indicesSet("input_indices",n,"channel")};
    ${a.indicesSet("input_indices",i,"batch")};
`:"",e4=(a,n,i,c,p)=>{let[m,C,I,E]=i.length===2?[-1,0,1,-1]:[0,2,3,1],x=a.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${x} {
      var input_indices: ${a.type.indices};
      ${a.indicesSet("input_indices",C,`max(0, min(row, ${i[C]} - 1))`)};
      ${a.indicesSet("input_indices",I,`max(0, min(col, ${i[I]} - 1))`)};
      ${L2(a,E,m,2)}
      return ${a.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${n.type.indices}) -> ${x} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${x} = originalIndices[${C}];
      var col:${x} = originalIndices[${I}];
      ${c?`if (row < 0 || row > (${i[C]} - 1) || col < 0 || col > (${i[I]} - 1)) {
        return ${p};
      }`:""};
      row = max(0, min(row, ${i[C]} - 1));
      col = max(0, min(col, ${i[I]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${i.length>2?`u32(originalIndices[${E}])`:"0"};
      var batch: u32 =  ${i.length>2?`u32(originalIndices[${m}])`:"0"};
      var x11: ${x} = getInputValue(batch, channel, row1, col1);
      var x12: ${x} = getInputValue(batch, channel, row1, col2);
      var x21: ${x} = getInputValue(batch, channel, row2, col1);
      var x22: ${x} = getInputValue(batch, channel, row2, col2);
      var dx1: ${x} = abs(row - ${x}(row1));
      var dx2: ${x} = abs(${x}(row2) - row);
      var dy1: ${x} = abs(col - ${x}(col1));
      var dy2: ${x} = abs(${x}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},t4=(a,n,i,c,p,m,C,I,E,x)=>{let D=i.length===2,[y,M]=D?[0,1]:[2,3],S=a.type.value,F=L=>{let Z=L===y?"row":"col";return`
      fn ${Z}CubicInterpolation(input_indices: ${a.type.indices}, output_indices: ${n.type.indices}) -> ${S} {
        var output_index = ${n.indicesGet("output_indices",L)};
        var originalIdx: ${S} = getOriginalCoordinateFromResizedCoordinate(output_index, ${p[L]},
        ${c[L]}, ${i[L]}, ${m[L]}, ${m[L]} + ${i.length});
        var fractOriginalIdx: ${S} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${I} && (originalIdx < 0 || originalIdx > (${i[L]} - 1))) {
          return ${E};
        }
        var data: array<${S}, 4> = array<${S}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Z}: ${S} = originalIdx + ${S}(i);
          if (${Z} < 0 || ${Z} >= ${i[L]}) {
            ${x?`coefs[i + 1] = 0.0;
                        continue;`:I?`return ${E};`:`${Z} = max(0, min(${Z}, ${i[L]} - 1));`};
          }
        var input_indices_copy: ${a.type.indices} = input_indices;
          ${a.indicesSet("input_indices_copy",L,`u32(${Z})`)};
          data[i + 1] = ${L===y?a.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${F(y)};
    ${F(M)};
  fn getCubicInterpolationCoefs(s: ${S}) -> array<${S}, 4> {
    var absS = abs(s);
    var coeffs: array<${S}, 4> = array<${S}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${S} = 1.0 - absS;
    var twoMinusAbsS: ${S} = 2.0 - absS;
    var onePlusAbsS: ${S} = 1.0 + absS;
    coeffs[0] = ((${C} * onePlusAbsS - 5 * ${C}) * onePlusAbsS + 8 * ${C}) * onePlusAbsS - 4 * ${C};
    coeffs[1] = ((${C} + 2) * absS - (${C} + 3)) * absS * absS + 1;
    coeffs[2] = ((${C} + 2) * oneMinusAbsS - (${C} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${C} * twoMinusAbsS - 5 * ${C}) * twoMinusAbsS + 8 * ${C}) * twoMinusAbsS - 4 * ${C};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${S}, 4>, coefs: array<${S}, 4>) -> ${S} {
    var coefsSum: ${S} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${n.type.indices}) -> ${S} {
    var input_indices: ${a.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},A4=(a,n,i,c,p)=>{let[m,C,I,E,x]=i.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],D=a.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${D} {
      var input_indices: ${a.type.indices};
      ${a.indicesSet("input_indices",C,`max(0, min(depth, ${i[C]} - 1))`)};
      ${a.indicesSet("input_indices",I,`max(0, min(height, ${i[I]} - 1))`)};
      ${a.indicesSet("input_indices",E,`max(0, min(width, ${i[E]} - 1))`)};
      ${L2(a,x,m,3)}
      return ${a.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${n.type.indices}) -> ${D} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${D} = originalIndices[${C}];
      var height:${D} = originalIndices[${I}];
      var width:${D} = originalIndices[${E}];
      ${c?`if (depth < 0 || depth > (${i[C]} - 1) || height < 0 || height > (${i[I]} - 1) || width < 0 || (width > ${i[E]} - 1)) {
      return ${p};
        }`:""};

    depth = max(0, min(depth, ${i[C]} - 1));
      height = max(0, min(height, ${i[I]} - 1));
      width = max(0, min(width, ${i[E]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${i.length>3?`u32(originalIndices[${x}])`:"0"};
      var batch: u32 =  ${i.length>3?`u32(originalIndices[${m}])`:"0"};

      var x111: ${D} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${D} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${D} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${D} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${D} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${D} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${D} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${D} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${D} = abs(depth - ${D}(depth1));
      var dx2: ${D} = abs(${D}(depth2) - depth);
      var dy1: ${D} = abs(height - ${D}(height1));
      var dy2: ${D} = abs(${D}(height2) - height);
      var dz1: ${D} = abs(width - ${D}(width1));
      var dz2: ${D} = abs(${D}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},r4=(a,n,i,c,p,m)=>{let C=a.dims,I=Km(m,n.axes,C.length),E=Xm(C,c,p,n.axes),x=c.slice();c.length===0&&(x=C.map((N,K)=>N===0?1:E[K]/N),n.keepAspectRatioPolicy!=="stretch"&&(E=Zm(C,x,n)));let D=Ut("output",a.dataType,E.length),y=At("input",a.dataType,C.length),M=Ke.size(E),S=C.length===E.length&&C.every((N,K)=>N===E[K]),F=n.coordinateTransformMode==="tf_crop_and_resize",L=n.extrapolationValue,Z=y.type.value,z=N=>`
      ${S?"":`
      ${Hm(n.coordinateTransformMode,Z)};
      ${(()=>{switch(n.mode){case"nearest":return`
              ${$m(y,C)};
              ${Um(n.nearestMode,i,Z)};
              ${qm(y,D,C,E,x.length,I.length,F)};
              `;case"linear":return`
              ${Jm(D,C,E,x.length,I.length)};
              ${(()=>{if(C.length===2||C.length===4)return`${e4(y,D,C,F,L)}`;if(C.length===3||C.length===5)return`${A4(y,D,C,F,L)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(C.length===2||C.length===4)return`${t4(y,D,C,E,x,I,n.cubicCoeffA,F,n.extrapolationValue,n.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${N.registerUniform("output_size","u32").registerUniform("scales","f32",x.length).registerUniform("roi","f32",I.length).declareVariables(y,D)}
      ${N.mainStart()}
        ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${S?"output[global_idx] = input[global_idx];":`
        let output_indices = ${D.offsetToIndices("global_idx")};
        var input_indices: ${y.type.indices};
        ${(()=>{switch(n.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${y.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${n.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${C.length===2||C.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${n.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${n.cacheKey}|${i}|${x.length>0?n.mode==="cubic"?x:x.length:""}|${p.length>0?p:""}|${I.length>0?I:""}|${S}|${n.mode==="nearest"?C.length:C}`,inputDependencies:["rank"]},getShaderSource:z,getRunData:()=>({outputs:[{dims:E,dataType:a.dataType}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:[{type:12,data:M},{type:1,data:x},{type:1,data:I},...Jt(C,E)]})}},s4=a=>{let n=a.customDataBuffer;return new Uint32Array(n,n.byteOffset,1)[0]},o8=(a,n)=>{let i=[],c=[],p=[],m=s4(a);if(n.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Ym(a.inputs,n,m,i,c,p),a.compute(r4(a.inputs[0],n,m,i,c,p),{inputs:[0]})},l8=a=>{let n=a.antialias,i=a.axes,c=a.coordinateTransformMode,p=a.cubicCoeffA,m=a.excludeOutside!==0,C=a.extrapolationValue,I=a.keepAspectRatioPolicy,E=a.mode,x=a.nearestMode===""?"simple":a.nearestMode;return UA({antialias:n,axes:i,coordinateTransformMode:c,cubicCoeffA:p,excludeOutside:m,extrapolationValue:C,keepAspectRatioPolicy:I,mode:E,nearestMode:x})}}),a4,n4,c8,Y5=Ct(()=>{sA(),pA(),CA(),a4=a=>{if(!a||a.length<3)throw new Error("layerNorm requires at least 3 inputs.");let n=a[0],i=a[1],c=a[2];if(n.dataType!==i.dataType||n.dataType!==c.dataType)throw new Error("All inputs must have the same data type");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Input must be 2D or 3D");if(i.dims.length!==3&&i.dims.length!==2)throw new Error("Skip must be 2D or 3D");let p=n.dims[n.dims.length-1],m=n.dims[n.dims.length-2];if(i.dims[i.dims.length-1]!==p)throw new Error("Skip must have the same hidden size as input");if(i.dims[i.dims.length-2]!==m)throw new Error("Skip must have the same sequence length as input");if(c.dims.length!==1)throw new Error("Gamma must be 1D");if(c.dims[c.dims.length-1]!==p)throw new Error("Gamma must have the same hidden size as input");if(a.length>3){let C=a[3];if(C.dims.length!==1)throw new Error("Beta must be 1D");if(C.dims[C.dims.length-1]!==p)throw new Error("Beta must have the same hidden size as input")}if(a.length>4){let C=a[4];if(C.dims.length!==1)throw new Error("Bias must be 1D");if(C.dims[C.dims.length-1]!==p)throw new Error("Bias must have the same hidden size as input")}},n4=(a,n,i,c)=>{let p=n.simplified,m=a[0].dims,C=Ke.size(m),I=m,E=C,x=m.slice(-1)[0],D=c?m.slice(0,-1).concat(1):[],y=!p&&a.length>3,M=a.length>4,S=c&&i>1,F=c&&i>2,L=i>3,Z=64,z=Wr(x),N=[{type:12,data:E},{type:12,data:z},{type:12,data:x},{type:1,data:n.epsilon}],K=k=>{let e=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],d=[At("x",a[0].dataType,a[0].dims,z),At("skip",a[1].dataType,a[1].dims,z),At("gamma",a[2].dataType,a[2].dims,z)];y&&d.push(At("beta",a[3].dataType,a[3].dims,z)),M&&d.push(At("bias",a[4].dataType,a[4].dims,z)),d.push(Ut("output",a[0].dataType,I,z)),S&&d.push(Ut("mean_output",1,D)),F&&d.push(Ut("inv_std_output",1,D)),L&&d.push(Ut("input_skip_bias_sum",a[0].dataType,I,z));let B=Cs(a[0].dataType),Ae=Cs(1,z);return`

      ${k.registerUniforms(e).declareVariables(...d)}
      var<workgroup> sum_shared : array<${Ae}, ${Z}>;
      var<workgroup> sum_squared_shared : array<${Ae}, ${Z}>;

      ${k.mainStart([Z,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Z};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Z};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Z-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${M?"bias[offset1d + i]":B+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${L?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Qo(B,z,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Z};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${mi("sum",z)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${mi("square_sum",z)} / f32(uniforms.hidden_size) ${p?"":"- mean * mean"} + uniforms.epsilon);
        ${S?"mean_output[global_idx] = mean;":""}
        ${F?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${p?"":`- ${B}(mean)`}) *
            ${B}(inv_std_dev) * gamma[offset1d + i]
            ${y?"+ beta[offset1d + i]":""};
        }
      }`},f=[{dims:I,dataType:a[0].dataType}];return i>1&&f.push({dims:D,dataType:1}),i>2&&f.push({dims:D,dataType:1}),i>3&&f.push({dims:m,dataType:a[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${z};${S};${F};${L}`,inputDependencies:a.map((k,e)=>"type")},getShaderSource:K,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(E/x)},programUniforms:N})}},c8=(a,n)=>{a4(a.inputs);let i=[0];a.outputCount>1&&i.push(-3),a.outputCount>2&&i.push(-3),a.outputCount>3&&i.push(3),a.compute(n4(a.inputs,n,a.outputCount,!1),{outputs:i})}}),i4,p0,o4,R2,l4,c4,u8,d8,H5=Ct(()=>{sA(),pA(),Kr(),CA(),i4=(a,n)=>{if(!a||a.length<1)throw new Error("too few inputs");if(n.axes.length!==0){if(n.axes.length!==n.starts.length||n.axes.length!==n.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(n.starts.length!==n.ends.length)throw new Error("starts and ends must have the same length");a.slice(1).forEach((i,c)=>{if(a[c+1].dataType!==6&&a[c+1].dataType!==7)throw new Error(`Input ${c} must be an array of int32 or int64`)})},p0=(a,n)=>{let i=[];if(a.length>n)if(a[n].dataType===7)a[n].getBigInt64Array().forEach(c=>i.push(Number(c)));else if(a[n].dataType===6)a[n].getInt32Array().forEach(c=>i.push(Number(c)));else throw new Error(`Input ${n} must be an array of int32 or int64`);return i},o4=(a,n)=>{if(a.length>1){let i=p0(a,1),c=p0(a,2),p=p0(a,3);return p.length===0&&(p=[...Array(a[0].dims.length).keys()]),UA({starts:i,ends:c,axes:p})}else return n},R2=(a,n,i,c,p)=>{let m=a;return a<0&&(m+=i[c[n]]),p[n]<0?Math.max(0,Math.min(m,i[c[n]]-1)):Math.max(0,Math.min(m,i[c[n]]))},l4=(a,n,i)=>`fn calculateInputIndices(output_indices: ${n.type.indices}) -> ${a.type.indices} {
          var input_indices: ${a.type.indices};
          var carry = 0u;
          for (var i = ${i.length}; i >= 0; i--) {
            let input_shape_i = ${Kt("uniforms.input_shape","i",i.length)};
            let steps_i = ${Kt("uniforms.steps","i",i.length)};
            let signs_i = ${Kt("uniforms.signs","i",i.length)};
            let starts_i = ${Kt("uniforms.starts","i",i.length)};
            var output_index = ${n.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${a.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,c4=(a,n)=>{let i=a[0].dims,c=Ke.size(i),p=n.axes.length>0?Ke.normalizeAxes(n.axes,i.length):[...Array(i.length).keys()],m=p0(a,4);m.forEach(z=>z!==0||(()=>{throw new Error("step cannot be 0")})),m.length===0&&(m=Array(p.length).fill(1));let C=n.starts.map((z,N)=>R2(z,N,i,p,m)),I=n.ends.map((z,N)=>R2(z,N,i,p,m));if(p.length!==C.length||p.length!==I.length)throw new Error("start, ends and axes should have the same number of elements");if(p.length!==i.length)for(let z=0;z<i.length;++z)p.includes(z)||(C.splice(z,0,0),I.splice(z,0,i[z]),m.splice(z,0,1));let E=m.map(z=>Math.sign(z));m.forEach((z,N,K)=>{if(z<0){let f=(I[N]-C[N])/z,k=C[N],e=k+f*m[N];C[N]=e,I[N]=k,K[N]=-z}});let x=i.slice(0);p.forEach((z,N)=>{x[z]=Math.ceil((I[z]-C[z])/m[z])});let D={dims:x,dataType:a[0].dataType},y=Ut("output",a[0].dataType,x.length),M=At("input",a[0].dataType,a[0].dims.length),S=Ke.size(x),F=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:C.length},{name:"signs",type:"i32",length:E.length},{name:"steps",type:"u32",length:m.length}],L=[{type:12,data:S},{type:12,data:C},{type:6,data:E},{type:12,data:m},...Jt(a[0].dims,x)],Z=z=>`
      ${z.registerUniforms(F).declareVariables(M,y)}
        ${l4(M,y,i)}
        ${z.mainStart()}
          ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${y.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${y.setByOffset("global_idx",M.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${E.length}_${C.length}_${m.length}`,inputDependencies:["rank"]},getShaderSource:Z,getRunData:()=>({outputs:[D],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:L})}},u8=(a,n)=>{i4(a.inputs,n);let i=o4(a.inputs,n);a.compute(c4(a.inputs,i),{inputs:[0]})},d8=a=>{let n=a.starts,i=a.ends,c=a.axes;return UA({starts:n,ends:i,axes:c})}}),u4,d4,f8,g8,U5=Ct(()=>{sA(),pA(),Kr(),bi(),CA(),u4=a=>{if(!a||a.length!==1)throw new Error("Softmax op requires 1 input.")},d4=(a,n)=>{let i=a.inputs[0],c=i.dims,p=Ke.size(c),m=c.length,C=Ke.normalizeAxis(n.axis,m),I=C<c.length-1,E,x=[];I?(x=Array.from({length:m},(d,B)=>B),x[C]=m-1,x[m-1]=C,E=a.compute(ma(i,x),{inputs:[i],outputs:[-1]})[0]):E=i;let D=E.dims,y=D[m-1],M=p/y,S=Wr(y),F=y/S,L=64;M===1&&(L=256);let Z=(d,B)=>B===4?`max(max(${d}.x, ${d}.y), max(${d}.z, ${d}.w))`:B===2?`max(${d}.x, ${d}.y)`:B===3?`max(max(${d}.x, ${d}.y), ${d}.z)`:d,z=At("x",E.dataType,E.dims,S),N=Ut("result",E.dataType,E.dims,S),K=z.type.value,f=Cs(E.dataType)==="f32"?`var threadMax = ${K}(-3.402823e+38f);`:`var threadMax = ${K}(-65504.0h);`,k=d=>`
      var<workgroup> rowMaxShared : ${K};
      var<workgroup> rowSumShared : ${K};
      var<workgroup> threadShared : array<${K}, ${L}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${K} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${K}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${d.registerUniform("packedCols","i32").declareVariables(z,N)}
      ${d.mainStart(L)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${L};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${f}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${K}(${Z("threadShared[0]",S)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${K}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${K}(${mi("threadShared[0]",S)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,e=a.compute({name:"Softmax",shaderCache:{hint:`${S};${L}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:D,dataType:E.dataType}],dispatchGroup:{x:M},programUniforms:[{type:6,data:F}]}),getShaderSource:k},{inputs:[E],outputs:[I?-1:0]})[0];I&&a.compute(ma(e,x),{inputs:[e]})},f8=(a,n)=>{u4(a.inputs),d4(a,n)},g8=a=>UA({axis:a.axis})}),j2,f4,g4,p4,p8,K5=Ct(()=>{sA(),pA(),CA(),j2=a=>Array.from(a.getBigInt64Array(),Number),f4=a=>{if(!a||a.length!==2)throw new Error("Tile requires 2 inputs.");if(a[0].dataType!==1&&a[0].dataType!==10&&a[0].dataType!==6&&a[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(a[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(a[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(j2(a[1]).length!==a[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},g4=(a,n)=>{let i=[];for(let c=0;c<a.length;++c)i.push(a[c]*n[c]);return i},p4=(a,n)=>{let i=a[0].dims,c=n??j2(a[1]),p=g4(i,c),m=Ke.size(p),C=a[0].dataType,I=At("input",C,i.length),E=Ut("output",C,p.length),x=D=>`
      const inputShape = ${I.indices(...i)};
      ${D.registerUniform("output_size","u32").declareVariables(I,E)}
      ${D.mainStart()}
      ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${E.offsetToIndices("global_idx")};
      var input_indices: ${I.type.indices};
      for (var i = 0; i < ${i.length}; i++) {
        let input_dim_i = ${I.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${E.indicesGet("output_indices","i")}  % input_dim_i;

        ${I.indicesSet("input_indices","i","input_dim_value")}
      }
      ${E.setByOffset("global_idx",I.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:a[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...Jt(a[0].dims,p)]}),getShaderSource:x}},p8=a=>{f4(a.inputs),a.compute(p4(a.inputs),{inputs:[0]})}}),h4,m4,h8,X5=Ct(()=>{sA(),pA(),CA(),h4=(a,n,i,c,p)=>{let m=Ut("output_data",p,i.length,4),C=At("a_data",n[1].dataType,n[1].dims.length,4),I=At("b_data",n[2].dataType,n[2].dims.length,4),E=At("c_data",n[0].dataType,n[0].dims.length,4),x,D=(y,M,S)=>`select(${M}, ${y}, ${S})`;if(!c)x=m.setByOffset("global_idx",D(C.getByOffset("global_idx"),I.getByOffset("global_idx"),E.getByOffset("global_idx")));else{let y=(M,S,F="")=>{let L=`a_data[index_a${S}][component_a${S}]`,Z=`b_data[index_b${S}][component_b${S}]`,z=`bool(c_data[index_c${S}] & (0xffu << (component_c${S} * 8)))`;return`
            let output_indices${S} = ${m.offsetToIndices(`global_idx * 4u + ${S}u`)};
            let offset_a${S} = ${C.broadcastedIndicesToOffset(`output_indices${S}`,m)};
            let offset_b${S} = ${I.broadcastedIndicesToOffset(`output_indices${S}`,m)};
            let offset_c${S} = ${E.broadcastedIndicesToOffset(`output_indices${S}`,m)};
            let index_a${S} = offset_a${S} / 4u;
            let index_b${S} = offset_b${S} / 4u;
            let index_c${S} = offset_c${S} / 4u;
            let component_a${S} = offset_a${S} % 4u;
            let component_b${S} = offset_b${S} % 4u;
            let component_c${S} = offset_c${S} % 4u;
            ${M}[${S}] = ${F}(${D(L,Z,z)});
          `};p===9?x=`
            var data = vec4<u32>(0);
            ${y("data",0,"u32")}
            ${y("data",1,"u32")}
            ${y("data",2,"u32")}
            ${y("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`
            ${y("output_data[global_idx]",0)}
            ${y("output_data[global_idx]",1)}
            ${y("output_data[global_idx]",2)}
            ${y("output_data[global_idx]",3)}
          `}return`
        ${a.registerUniform("vec_size","u32").declareVariables(E,C,I,m)}
        ${a.mainStart()}
        ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${x}
      }`},m4=a=>{let n=a[1].dims,i=a[2].dims,c=a[0].dims,p=a[1].dataType,m=!(Ke.areEqual(n,i)&&Ke.areEqual(i,c)),C=n,I=Ke.size(n);if(m){let x=Ro.calcShape(Ro.calcShape(n,i,!1),c,!1);if(!x)throw new Error("Can't perform where op on the given tensors");C=x,I=Ke.size(C)}let E=Math.ceil(I/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:x=>h4(x,a,C,m,p),getRunData:()=>({outputs:[{dims:C,dataType:p}],dispatchGroup:{x:Math.ceil(I/64/4)},programUniforms:[{type:12,data:E},...Jt(c,n,i,C)]})}},h8=a=>{a.compute(m4(a.inputs))}}),m8,Z5=Ct(()=>{c5(),e1(),u5(),d5(),f5(),g5(),p5(),I5(),k5(),E5(),M5(),v5(),x5(),y5(),B5(),D5(),P5(),T5(),G5(),Q5(),S5(),F5(),O5(),_5(),N5(),Ob(),z5(),L5(),R5(),j5(),W5(),$u(),V5(),Rb(),Y5(),H5(),U5(),zb(),K5(),bi(),t1(),X5(),m8=new Map([["Abs",[cC]],["Acos",[uC]],["Acosh",[dC]],["Add",[HC]],["ArgMax",[nC,Mu]],["ArgMin",[aC,Mu]],["Asin",[fC]],["Asinh",[gC]],["Atan",[pC]],["Atanh",[hC]],["Attention",[iC]],["AveragePool",[Zb,Xb]],["BatchNormalization",[oC]],["BiasAdd",[lC]],["BiasSplitGelu",[YC]],["Cast",[CC,mC]],["Ceil",[IC]],["Clip",[bC]],["Concat",[Ab,rb]],["Conv",[Pu,Du]],["ConvTranspose",[fb,db]],["Cos",[wC]],["Cosh",[kC]],["CumSum",[gb,pb]],["DepthToSpace",[hb,mb]],["DequantizeLinear",[r8,s8]],["Div",[UC]],["Einsum",[Cb,bb]],["Elu",[EC,D0]],["Equal",[KC]],["Erf",[MC]],["Exp",[vC]],["Expand",[Ib]],["FastGelu",[wb]],["Floor",[xC]],["FusedConv",[Pu,Du]],["Gather",[Eb,kb]],["GatherElements",[Db,Bb]],["GatherBlockQuantized",[xb,yb]],["GatherND",[Mb,vb]],["Gelu",[yC]],["Gemm",[Tb,Pb]],["GlobalAveragePool",[qb,Jb]],["GlobalMaxPool",[A8,t8]],["Greater",[qC]],["GreaterOrEqual",[eb]],["GridSample",[Gb,Qb]],["GroupQueryAttention",[jb]],["HardSigmoid",[FC,SC]],["InstanceNormalization",[Wb]],["LayerNormalization",[Vb]],["LeakyRelu",[BC,D0]],["Less",[$C]],["LessOrEqual",[tb]],["Log",[WC]],["MatMul",[Yb]],["MatMulNBits",[Hb,Ub]],["MaxPool",[$b,e8]],["Mul",[XC]],["MultiHeadAttention",[Fb,Sb]],["Neg",[PC]],["Not",[DC]],["Pad",[Kb]],["Pow",[ZC]],["QuickGelu",[VC,D0]],["Range",[a8]],["Reciprocal",[TC]],["ReduceMin",[eC]],["ReduceMean",[X3]],["ReduceMax",[$3]],["ReduceSum",[AC]],["ReduceProd",[tC]],["ReduceL1",[Z3]],["ReduceL2",[J3]],["ReduceLogSum",[sC]],["ReduceLogSumExp",[q3]],["ReduceSumSquare",[rC]],["Relu",[GC]],["Resize",[o8,l8]],["RotaryEmbedding",[Lb]],["ScatterND",[i8,n8]],["Sigmoid",[QC]],["Sin",[OC]],["Sinh",[_C]],["Slice",[u8,d8]],["SkipLayerNormalization",[c8]],["Split",[_b,Nb]],["Sqrt",[NC]],["Softmax",[f8,g8]],["Sub",[JC]],["Tan",[zC]],["Tanh",[LC]],["ThresholdedRelu",[jC,D0]],["Tile",[p8]],["Transpose",[_3,N3]],["Where",[h8]]])}),C8,J5=Ct(()=>{Ja(),jn(),CA(),C8=class{constructor(a){this.backend=a,this.repo=new Map,this.attributesBound=!1}getArtifact(a){return this.repo.get(a)}setArtifact(a,n){this.repo.set(a,n)}run(a,n,i,c,p){Za(a.programInfo.name);let m=this.backend.device,C=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let I=[];for(let x of n)I.push({binding:I.length,resource:{buffer:x.buffer}});for(let x of i)I.push({binding:I.length,resource:{buffer:x.buffer}});p&&I.push({binding:I.length,resource:p});let E=m.createBindGroup({layout:a.computePipeline.getBindGroupLayout(0),entries:I,label:a.programInfo.name});if(this.backend.sessionStatus==="capturing"){let x={kernelId:this.backend.currentKernelId,computePipeline:a.computePipeline,bindGroup:E,dispatchGroup:c};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(x)}C.setPipeline(a.computePipeline),C.setBindGroup(0,E),C.dispatchWorkgroups(...c),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Pa(a.programInfo.name)}dispose(){}build(a,n){Za(a.name);let i=this.backend.device,c=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(x=>{i.features.has(x.feature)&&c.push(`enable ${x.extension};`)});let p=O3(n,this.backend.device.limits),m=a.getShaderSource(p),C=`${c.join(`
`)}
${p.additionalImplementations}
${m}`,I=i.createShaderModule({code:C,label:a.name});TA("verbose",()=>`[WebGPU] ${a.name} shader code: ${C}`);let E=i.createComputePipeline({compute:{module:I,entryPoint:"main"},layout:"auto",label:a.name});return Pa(a.name),{programInfo:a,computePipeline:E,uniformVariablesInfo:p.variablesInfo}}normalizeDispatchGroupSize(a){let n=typeof a=="number"?a:a.x,i=typeof a=="number"?1:a.y||1,c=typeof a=="number"?1:a.z||1,p=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=p&&i<=p&&c<=p)return[n,i,c];let m=n*i*c,C=Math.ceil(Math.sqrt(m));if(C>p){if(C=Math.ceil(Math.cbrt(m)),C>p)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[C,C,C]}else return[C,C,1]}}}),b8={};Ho(b8,{WebGpuBackend:()=>I8});var C4,b4,I4,I8,q5=Ct(()=>{Ja(),sA(),jn(),T3(),o5(),Z5(),J5(),C4=(a,n)=>{if(n.length!==a.length)throw new Error(`inputDependencies length ${n.length} is not equal to inputTensors length ${a.length}.`);let i=[];for(let c=0;c<a.length;++c){let p=a[c].dataType;switch(n[c]){case"none":{i.push("");break}case"type":{i.push(`${p}`);break}case"rank":{let m=a[c].dims.length;i.push(`${p};${m}`);break}case"dims":{let m=a[c].dims.join(",");i.push(`${p};${m}`);break}default:throw new Error(`unsupported input dependency: ${n[c]}`)}}return i.join("|")},b4=(a,n,i)=>{let c=a.name;return a.shaderCache?.hint&&(c+="["+a.shaderCache.hint+"]"),c+=":"+i+`:${C4(n,a.shaderCache?.inputDependencies??new Array(n.length).fill("dims"))}`,c},I4=class{constructor(a){a&&(this.architecture=a.architecture,this.vendor=a.vendor)}isArchitecture(a){return this.architecture===a}isVendor(a){return this.vendor===a}},I8=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let a=this.kernelCustomData.get(this.currentKernelId);return a||(a={},this.kernelCustomData.set(this.currentKernelId,a)),a}async initialize(a,n){this.env=a;let i=[],c={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:i},p=m=>n.features.has(m)&&i.push(m)&&!0;p("chromium-experimental-timestamp-query-inside-passes")||p("timestamp-query"),p("shader-f16"),p("subgroups"),this.device=await n.requestDevice(c),this.adapterInfo=new I4(n.info||await n.requestAdapterInfo()),this.gpuDataManager=S3(this),this.programManager=new C8(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Xu(a.logLevel,!!a.debug),this.device.onuncapturederror=m=>{m.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${m.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:n,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let a=this.getCommandEncoder(),n={};this.queryType==="at-passes"&&(n.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=a.beginComputePass(n)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Za(),this.endComputePass();let a;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),a=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(a,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,a,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&a.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(a.getMappedRange()),i=this.pendingQueries.get(a);for(let c=0;c<n.length/2;c++){let p=i[c],m=p.kernelId,C=this.kernels.get(m),I=C.kernelType,E=C.kernelName,x=p.programName,D=p.inputTensorViews,y=p.outputTensorViews,M=n[c*2],S=n[c*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=M);let F=Number(M-this.queryTimeBase),L=Number(S-this.queryTimeBase);if(!Number.isSafeInteger(F)||!Number.isSafeInteger(L))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:D.map(Z=>({dims:Z.dims,dataType:Ln(Z.dataType)})),outputsMetadata:y.map(Z=>({dims:Z.dims,dataType:Ln(Z.dataType)})),kernelId:m,kernelType:I,kernelName:E,programName:x,startTime:F,endTime:L});else{let Z="";D.forEach((N,K)=>{Z+=`input[${K}]: [${N.dims}] | ${Ln(N.dataType)}, `});let z="";y.forEach((N,K)=>{z+=`output[${K}]: [${N.dims}] | ${Ln(N.dataType)}, `}),console.log(`[profiling] kernel "${m}|${I}|${E}|${x}" ${Z}${z}execution time: ${L-F} ns`)}N0("GPU",`${x}::${M}::${S}`)}a.unmap(),this.pendingQueries.delete(a)}),Pa()}run(a,n,i,c,p,m){Za(a.name);let C=[];for(let N=0;N<n.length;++N){let K=n[N].data;if(K===0)continue;let f=this.gpuDataManager.get(K);if(!f)throw new Error(`no GPU data for input: ${K}`);C.push(f)}let{outputs:I,dispatchGroup:E,programUniforms:x}=a.getRunData(n),D=i.length===0?I.map((N,K)=>K):i;if(D.length!==I.length)throw new Error(`Output size ${D.length} must be equal to ${I.length}.`);let y=[],M=[];for(let N=0;N<I.length;++N){if(!Number.isInteger(D[N])||D[N]<-3||D[N]>=m)throw new Error(`Invalid output index: ${D[N]}`);if(D[N]===-3)continue;let K=D[N]===-1,f=D[N]===-2,k=K||f?p(I[N].dataType,I[N].dims):c(D[N],I[N].dataType,I[N].dims);if(y.push(k),k.data===0)continue;let e=this.gpuDataManager.get(k.data);if(!e)throw new Error(`no GPU data for output: ${k.data}`);if(K&&this.temporaryData.push(e),f){let d=this.kernelPersistentData.get(this.currentKernelId);d||(d=[],this.kernelPersistentData.set(this.currentKernelId,d)),d.push(e)}M.push(e)}if(C.length!==n.length||M.length!==y.length){if(M.length===0)return Pa(a.name),y;throw new Error(`Program ${a.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let S;if(x){let N=0,K=[];x.forEach(d=>{let B=typeof d.data=="number"?[d.data]:d.data;if(B.length===0)return;let Ae=d.type===10?2:4,P,O;d.type===10?(O=B.length>4?16:B.length>2?8:B.length*Ae,P=B.length>4?16:Ae*B.length):(O=B.length<=2?B.length*Ae:16,P=16),N=Math.ceil(N/O)*O,K.push(N);let me=d.type===10?8:4;N+=B.length>4?Math.ceil(B.length/me)*P:B.length*Ae});let f=16;N=Math.ceil(N/f)*f;let k=new ArrayBuffer(N);x.forEach((d,B)=>{let Ae=K[B],P=typeof d.data=="number"?[d.data]:d.data;if(d.type===6)new Int32Array(k,Ae,P.length).set(P);else if(d.type===12)new Uint32Array(k,Ae,P.length).set(P);else if(d.type===10)new Uint16Array(k,Ae,P.length).set(P);else if(d.type===1)new Float32Array(k,Ae,P.length).set(P);else throw new Error(`Unsupported uniform type: ${Ln(d.type)}`)});let e=this.gpuDataManager.create(N,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(e.buffer,0,k,0,N),this.gpuDataManager.release(e.id),S={offset:0,size:N,buffer:e.buffer}}let F=this.programManager.normalizeDispatchGroupSize(E),L=F[1]===1&&F[2]===1,Z=b4(a,n,L),z=this.programManager.getArtifact(Z);if(z||(z=this.programManager.build(a,F),this.programManager.setArtifact(Z,z),TA("info",()=>`[artifact] key: ${Z}, programName: ${a.name}`)),x&&z.uniformVariablesInfo){if(x.length!==z.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${z.uniformVariablesInfo.length}, got ${x.length} in program "${z.programInfo.name}".`);for(let N=0;N<x.length;N++){let K=x[N],f=K.type,k=typeof K.data=="number"?1:K.data.length,[e,d]=z.uniformVariablesInfo[N];if(f!==e||k!==d)throw new Error(`Uniform variable ${N} mismatch: expect type ${e} with size ${d}, got type ${f} with size ${k} in program "${z.programInfo.name}".`)}}if(TA("info",()=>`[ProgramManager] run "${a.name}" (key=${Z}) with ${F[0]}x${F[1]}x${F[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let N={kernelId:this.currentKernelId,programName:z.programInfo.name,inputTensorViews:n,outputTensorViews:y};this.pendingKernels.push(N),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(N)}return this.programManager.run(z,C,M,F,S),Pa(a.name),y}upload(a,n){this.gpuDataManager.upload(a,n)}memcpy(a,n){this.gpuDataManager.memcpy(a,n)}async download(a,n){await this.gpuDataManager.download(a,n)}alloc(a){return this.gpuDataManager.create(a).id}free(a){return this.gpuDataManager.release(a)}createKernel(a,n,i,c){let p=m8.get(a);if(!p)throw new Error(`kernel not implemented: ${a}`);let m={kernelType:a,kernelName:c,kernelEntry:p[0],attributes:[p[1],i]};this.kernels.set(n,m)}releaseKernel(a){let n=this.kernelPersistentData.get(a);if(n){for(let i of n)this.gpuDataManager.release(i.id);this.kernelPersistentData.delete(a)}this.kernelCustomData.delete(a),this.kernels.delete(a)}computeKernel(a,n,i){let c=this.kernels.get(a);if(!c)throw new Error(`kernel not created: ${a}`);let p=c.kernelType,m=c.kernelName,C=c.kernelEntry,I=c.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${p}] ${m}" is not allowed to be called recursively`);this.currentKernelId=a,I[0]&&(I[1]=I[0](I[1]),I[0]=void 0),TA("info",()=>`[WebGPU] Start to run kernel "[${p}] ${m}"...`);let E=this.env.debug;this.temporaryData=[];try{return E&&this.device.pushErrorScope("validation"),C(n,I[1]),0}catch(x){return i.push(Promise.resolve(`[WebGPU] Kernel "[${p}] ${m}" failed. ${x}`)),1}finally{E&&i.push(this.device.popErrorScope().then(x=>x?`GPU validation error for kernel "[${p}] ${m}": ${x.message}`:null));for(let x of this.temporaryData)this.gpuDataManager.release(x.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(a,n,i,c){let p=this.sessionExternalDataMapping.get(a);p||(p=new Map,this.sessionExternalDataMapping.set(a,p));let m=p.get(n),C=this.gpuDataManager.registerExternalBuffer(i,c,m);return p.set(n,[C,i]),C}unregisterBuffers(a){let n=this.sessionExternalDataMapping.get(a);n&&(n.forEach(i=>this.gpuDataManager.unregisterExternalBuffer(i[0])),this.sessionExternalDataMapping.delete(a))}getBuffer(a){let n=this.gpuDataManager.get(a);if(!n)throw new Error(`no GPU data for buffer: ${a}`);return n.buffer}createDownloader(a,n,i){return async()=>{let c=await wu(this,a,n);return Zu(c.buffer,i)}}writeTimestamp(a){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,a)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){TA("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){TA("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){TA("info","replay"),this.sessionStatus="replaying";let a=this.capturedCommandList.get(this.currentSessionId),n=this.capturedPendingKernels.get(this.currentSessionId),i=a.length;this.pendingKernels=[];for(let c=0;c<i;c++){let p=this.getComputePassEncoder(),m=a[c];this.writeTimestamp(this.pendingDispatchNumber*2),p.setPipeline(m.computePipeline),p.setBindGroup(0,m.bindGroup),p.dispatchWorkgroups(...m.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(n[c]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(a){this.unregisterBuffers(a),this.capturedCommandList.has(a)&&this.capturedCommandList.delete(a),this.capturedPendingKernels.has(a)&&this.capturedPendingKernels.delete(a),this.gpuDataManager.onReleaseSession(a)}onRunStart(a){this.currentSessionId=a,this.setQueryType()}}}),w8={};Ho(w8,{init:()=>k8});var pl,w4,k8,$5=Ct(()=>{sA(),jn(),pA(),i5(),pl=class E8{constructor(n,i,c,p){this.module=n,this.dataType=i,this.data=c,this.dims=p}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let n=Ke.size(this.dims);return n===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,n)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let n=Ke.size(this.dims);return n===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,n)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let n=Ke.size(this.dims);return n===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,n)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let n=Ke.size(this.dims);return n===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,n)}reshape(n){if(Ke.size(n)!==Ke.size(this.dims))throw new Error("Invalid new shape");return new E8(this.module,this.dataType,this.data,n)}},w4=class{constructor(a,n,i){this.module=a,this.backend=n,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=n.adapterInfo;let c=a.PTR_SIZE,p=i/a.PTR_SIZE,m=c===4?"i32":"i64";this.opKernelContext=Number(a.getValue(c*p++,m));let C=Number(a.getValue(c*p++,m));this.outputCount=Number(a.getValue(c*p++,m)),this.customDataOffset=Number(a.getValue(c*p++,"*")),this.customDataSize=Number(a.getValue(c*p++,m));let I=[];for(let E=0;E<C;E++){let x=Number(a.getValue(c*p++,m)),D=Number(a.getValue(c*p++,"*")),y=Number(a.getValue(c*p++,m)),M=[];for(let S=0;S<y;S++)M.push(Number(a.getValue(c*p++,m)));I.push(new pl(a,x,D,M))}this.inputs=I}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(a,n){let i=n?.inputs?.map(C=>typeof C=="number"?this.inputs[C]:C)??this.inputs,c=n?.outputs??[],p=(C,I,E)=>new pl(this.module,I,this.output(C,E),E),m=(C,I)=>{let E=Ui(C,I);if(!E)throw new Error(`Unsupported data type: ${C}`);let x=E>0?this.backend.gpuDataManager.create(E).id:0;return new pl(this.module,C,x,I)};return this.backend.run(a,i,c,p,m,this.outputCount)}output(a,n){let i=this.module.stackSave();try{let c=this.module.PTR_SIZE,p=c===4?"i32":"i64",m=this.module.stackAlloc((1+n.length)*c);this.module.setValue(m,n.length,p);for(let C=0;C<n.length;C++)this.module.setValue(m+c*(C+1),n[C],p);return this.module._JsepOutput(this.opKernelContext,a,m)}catch(c){throw new Error(`Failed to generate kernel's output[${a}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${c}`)}finally{this.module.stackRestore(i)}}},k8=async(a,n,i,c)=>{let p=n.jsepInit;if(!p)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(a==="webgpu"){let m=(q5(),_0(b8)).WebGpuBackend,C=new m;await C.initialize(i,c),p("webgpu",[C,I=>C.alloc(Number(I)),I=>C.free(I),(I,E,x,D=!1)=>{if(D)TA("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(I)}, dst=${Number(E)}, size=${Number(x)}`),C.memcpy(Number(I),Number(E));else{TA("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(I)}, gpuDataId=${Number(E)}, size=${Number(x)}`);let y=n.HEAPU8.subarray(Number(I>>>0),Number(I>>>0)+Number(x));C.upload(Number(E),y)}},async(I,E,x)=>{TA("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${I}, dataOffset=${E}, size=${x}`),await C.download(Number(I),()=>n.HEAPU8.subarray(Number(E)>>>0,Number(E+x)>>>0))},(I,E,x)=>C.createKernel(I,Number(E),x,n.UTF8ToString(n._JsepGetNodeName(Number(E)))),I=>C.releaseKernel(I),(I,E,x,D)=>{TA("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${x}, kernel=${I}, contextDataOffset=${E}`);let y=new w4(n,C,Number(E));return C.computeKernel(Number(I),y,D)},()=>C.captureBegin(),()=>C.captureEnd(),()=>C.replay()])}else{let m=new Q3(i);p("webnn",[m,()=>m.reserveTensorId(),C=>m.releaseTensorId(C),async(C,I,E,x,D)=>m.ensureTensor(C,I,E,x,D),(C,I)=>{m.uploadTensor(C,I)},async(C,I)=>m.downloadTensor(C,I)])}}}),k4,i1,o1,oi,E4,W2,Vl,l1,c1,V2,u1,d1,f1,M8=Ct(()=>{s5(),a5(),sA(),to(),Vu(),y3(),k4=(a,n)=>{mr()._OrtInit(a,n)!==0&&nr("Can't initialize onnxruntime.")},i1=async a=>{k4(a.wasm.numThreads,zl(a.logLevel))},o1=async(a,n)=>{mr().asyncInit?.();{let i=($5(),_0(w8)).init;if(n==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let c=a.webgpu.adapter;if(c){if(typeof c.limits!="object"||typeof c.features!="object"||typeof c.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let p=a.webgpu.powerPreference;if(p!==void 0&&p!=="low-power"&&p!=="high-performance")throw new Error(`Invalid powerPreference setting: "${p}"`);let m=a.webgpu.forceFallbackAdapter;if(m!==void 0&&typeof m!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${m}"`);if(c=await navigator.gpu.requestAdapter({powerPreference:p,forceFallbackAdapter:m}),!c)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await i("webgpu",mr(),a,c)}if(n==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await i("webnn",mr(),a)}}},oi=new Map,E4=a=>{let n=mr(),i=n.stackSave();try{let c=n.PTR_SIZE,p=n.stackAlloc(2*c);n._OrtGetInputOutputCount(a,p,p+c)!==0&&nr("Can't get session input/output count.");let m=c===4?"i32":"i64";return[Number(n.getValue(p,m)),Number(n.getValue(p+c,m))]}finally{n.stackRestore(i)}},W2=(a,n)=>{let i=mr(),c=i.stackSave(),p=0;try{let m=i.PTR_SIZE,C=i.stackAlloc(2*m);i._OrtGetInputOutputMetadata(a,n,C,C+m)!==0&&nr("Can't get session input/output metadata.");let I=Number(i.getValue(C,"*"));p=Number(i.getValue(C+m,"*"));let E=i.HEAP32[p/4];if(E===0)return[I,0];let x=i.HEAPU32[p/4+1],D=[];for(let y=0;y<x;y++){let M=Number(i.getValue(p+8+y*m,"*"));D.push(M!==0?i.UTF8ToString(M):Number(i.getValue(p+8+(y+x)*m,"*")))}return[I,E,D]}finally{i.stackRestore(c),p!==0&&i._OrtFree(p)}},Vl=a=>{let n=mr(),i=n._malloc(a.byteLength);if(i===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${a.byteLength}.`);return n.HEAPU8.set(a,i),[i,a.byteLength]},l1=async(a,n)=>{let i,c,p=mr();Array.isArray(a)?[i,c]=a:a.buffer===p.HEAPU8.buffer?[i,c]=[a.byteOffset,a.byteLength]:[i,c]=Vl(a);let m=0,C=0,I=0,E=[],x=[],D=[];try{if([C,E]=await x3(n),n?.externalData&&p.mountExternalData){let f=[];for(let k of n.externalData){let e=typeof k=="string"?k:k.path;f.push(Ku(typeof k=="string"?k:k.data).then(d=>{p.mountExternalData(e,d)}))}await Promise.all(f)}for(let f of n?.executionProviders??[])if((typeof f=="string"?f:f.name)==="webnn"){if(p.shouldTransferToMLTensor=!1,typeof f!="string"){let k=f,e=k?.context,d=k?.gpuDevice,B=k?.deviceType,Ae=k?.powerPreference;e?p.currentContext=e:d?p.currentContext=await p.webnnCreateMLContext(d):p.currentContext=await p.webnnCreateMLContext({deviceType:B,powerPreference:Ae})}else p.currentContext=await p.webnnCreateMLContext();break}m=await p._OrtCreateSession(i,c,C),p.webgpuOnCreateSession?.(m),m===0&&nr("Can't create a session."),p.jsepOnCreateSession?.(),p.currentContext&&(p.webnnRegisterMLContext(m,p.currentContext),p.currentContext=void 0,p.shouldTransferToMLTensor=!0);let[y,M]=E4(m),S=!!n?.enableGraphCapture,F=[],L=[],Z=[],z=[],N=[];for(let f=0;f<y;f++){let[k,e,d]=W2(m,f);k===0&&nr("Can't get an input name."),x.push(k);let B=p.UTF8ToString(k);F.push(B),Z.push(e===0?{name:B,isTensor:!1}:{name:B,isTensor:!0,type:Ln(e),shape:d})}for(let f=0;f<M;f++){let[k,e,d]=W2(m,f+y);k===0&&nr("Can't get an output name."),D.push(k);let B=p.UTF8ToString(k);L.push(B),z.push(e===0?{name:B,isTensor:!1}:{name:B,isTensor:!0,type:Ln(e),shape:d});{if(S&&n?.preferredOutputLocation===void 0){N.push("gpu-buffer");continue}let Ae=typeof n?.preferredOutputLocation=="string"?n.preferredOutputLocation:n?.preferredOutputLocation?.[B]??"cpu";if(Ae!=="cpu"&&Ae!=="cpu-pinned"&&Ae!=="gpu-buffer"&&Ae!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Ae}.`);if(S&&Ae!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Ae}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);N.push(Ae)}}let K=null;return N.some(f=>f==="gpu-buffer"||f==="ml-tensor")&&(I=p._OrtCreateBinding(m),I===0&&nr("Can't create IO binding."),K={handle:I,outputPreferredLocations:N,outputPreferredLocationsEncoded:N.map(f=>bu(f))}),oi.set(m,[m,x,D,K,S,!1]),[m,F,L,Z,z]}catch(y){throw x.forEach(M=>p._OrtFree(M)),D.forEach(M=>p._OrtFree(M)),I!==0&&p._OrtReleaseBinding(I)!==0&&nr("Can't release IO binding."),m!==0&&p._OrtReleaseSession(m)!==0&&nr("Can't release session."),y}finally{p._free(i),C!==0&&p._OrtReleaseSessionOptions(C)!==0&&nr("Can't release session options."),E.forEach(y=>p._free(y)),p.unmountExternalData?.()}},c1=a=>{let n=mr(),i=oi.get(a);if(!i)throw new Error(`cannot release session. invalid session id: ${a}`);let[c,p,m,C,I]=i;C&&(I&&n._OrtClearBoundOutputs(C.handle)!==0&&nr("Can't clear bound outputs."),n._OrtReleaseBinding(C.handle)!==0&&nr("Can't release IO binding.")),n.jsepOnReleaseSession?.(a),n.webnnOnReleaseSession?.(a),n.webgpuOnReleaseSession?.(a),p.forEach(E=>n._OrtFree(E)),m.forEach(E=>n._OrtFree(E)),n._OrtReleaseSession(c)!==0&&nr("Can't release session."),oi.delete(a)},V2=async(a,n,i,c,p,m,C=!1)=>{if(!a){n.push(0);return}let I=mr(),E=I.PTR_SIZE,x=a[0],D=a[1],y=a[3],M=y,S,F;if(x==="string"&&(y==="gpu-buffer"||y==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(C&&y!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${m} when enableGraphCapture is true.`);if(y==="gpu-buffer"){let z=a[2].gpuBuffer;F=Ui(Do(x),D);{let N=I.jsepRegisterBuffer;if(!N)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');S=N(c,m,z,F)}}else if(y==="ml-tensor"){let z=a[2].mlTensor;F=Ui(Do(x),D);let N=I.webnnRegisterMLTensor;if(!N)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');S=N(c,z,Do(x),D)}else{let z=a[2];if(Array.isArray(z)){F=E*z.length,S=I._malloc(F),i.push(S);for(let N=0;N<z.length;N++){if(typeof z[N]!="string")throw new TypeError(`tensor data at index ${N} is not a string`);I.setValue(S+N*E,Ha(z[N],i),"*")}}else{let N=I.webnnIsGraphInput;if(x!=="string"&&N){let K=I.UTF8ToString(p);if(N(c,K)){let f=Do(x);F=Ui(f,D),M="ml-tensor";let k=I.webnnCreateTemporaryTensor,e=I.webnnUploadTensor;if(!k||!e)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let d=await k(c,f,D);e(d,new Uint8Array(z.buffer,z.byteOffset,z.byteLength)),S=d}else F=z.byteLength,S=I._malloc(F),i.push(S),I.HEAPU8.set(new Uint8Array(z.buffer,z.byteOffset,F),S)}else F=z.byteLength,S=I._malloc(F),i.push(S),I.HEAPU8.set(new Uint8Array(z.buffer,z.byteOffset,F),S)}}let L=I.stackSave(),Z=I.stackAlloc(4*D.length);try{D.forEach((N,K)=>I.setValue(Z+K*E,N,E===4?"i32":"i64"));let z=I._OrtCreateTensor(Do(x),S,F,Z,D.length,bu(M));z===0&&nr(`Can't create tensor for input/output. session=${c}, index=${m}.`),n.push(z)}finally{I.stackRestore(L)}},u1=async(a,n,i,c,p,m)=>{let C=mr(),I=C.PTR_SIZE,E=oi.get(a);if(!E)throw new Error(`cannot run inference. invalid session id: ${a}`);let x=E[0],D=E[1],y=E[2],M=E[3],S=E[4],F=E[5],L=n.length,Z=c.length,z=0,N=[],K=[],f=[],k=[],e=C.stackSave(),d=C.stackAlloc(L*I),B=C.stackAlloc(L*I),Ae=C.stackAlloc(Z*I),P=C.stackAlloc(Z*I);try{[z,N]=v3(m);for(let ee=0;ee<L;ee++)await V2(i[ee],K,k,a,D[n[ee]],n[ee],S);for(let ee=0;ee<Z;ee++)await V2(p[ee],f,k,a,y[c[ee]],L+c[ee],S);for(let ee=0;ee<L;ee++)C.setValue(d+ee*I,K[ee],"*"),C.setValue(B+ee*I,D[n[ee]],"*");for(let ee=0;ee<Z;ee++)C.setValue(Ae+ee*I,f[ee],"*"),C.setValue(P+ee*I,y[c[ee]],"*");if(M&&!F){let{handle:ee,outputPreferredLocations:Ce,outputPreferredLocationsEncoded:we}=M;if(D.length!==L)throw new Error(`input count from feeds (${L}) is expected to be always equal to model's input count (${D.length}).`);for(let xe=0;xe<L;xe++){let De=n[xe];await C._OrtBindInput(ee,D[De],K[xe])!==0&&nr(`Can't bind input[${xe}] for session=${a}.`)}for(let xe=0;xe<Z;xe++){let De=c[xe];p[xe]?.[3]?C._OrtBindOutput(ee,y[De],f[xe],0)!==0&&nr(`Can't bind pre-allocated output[${xe}] for session=${a}.`):C._OrtBindOutput(ee,y[De],0,we[De])!==0&&nr(`Can't bind output[${xe}] to ${Ce[xe]} for session=${a}.`)}oi.set(a,[x,D,y,M,S,!0])}C.jsepOnRunStart?.(x),C.webnnOnRunStart?.(x);let O;M?O=await C._OrtRunWithBinding(x,M.handle,Z,Ae,z):O=await C._OrtRun(x,B,d,L,P,Z,Ae,z),O!==0&&nr("failed to call OrtRun().");let me=[];for(let ee=0;ee<Z;ee++){let Ce=Number(C.getValue(Ae+ee*I,"*"));if(Ce===f[ee]){me.push(p[ee]);continue}let we=C.stackSave(),xe=C.stackAlloc(4*I),De=!1,ye,Oe=0;try{C._OrtGetTensorData(Ce,xe,xe+I,xe+2*I,xe+3*I)!==0&&nr(`Can't access output tensor data on index ${ee}.`);let _e=I===4?"i32":"i64",ne=Number(C.getValue(xe,_e));Oe=C.getValue(xe+I,"*");let te=C.getValue(xe+I*2,"*"),pe=Number(C.getValue(xe+I*3,_e)),le=[];for(let qe=0;qe<pe;qe++)le.push(Number(C.getValue(te+qe*I,_e)));C._OrtFree(te)!==0&&nr("Can't free memory for tensor dims.");let Qe=le.reduce((qe,ot)=>qe*ot,1);ye=Ln(ne);let it=M?.outputPreferredLocations[c[ee]];if(ye==="string"){if(it==="gpu-buffer"||it==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let qe=[];for(let ot=0;ot<Qe;ot++){let Pt=C.getValue(Oe+ot*I,"*"),et=C.getValue(Oe+(ot+1)*I,"*"),be=ot===Qe-1?void 0:et-Pt;qe.push(C.UTF8ToString(Pt,be))}me.push([ye,le,qe,"cpu"])}else if(it==="gpu-buffer"&&Qe>0){let qe=C.jsepGetBuffer;if(!qe)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let ot=qe(Oe),Pt=Ui(ne,Qe);if(Pt===void 0||!Hu(ye))throw new Error(`Unsupported data type: ${ye}`);De=!0,me.push([ye,le,{gpuBuffer:ot,download:C.jsepCreateDownloader(ot,Pt,ye),dispose:()=>{C._OrtReleaseTensor(Ce)!==0&&nr("Can't release tensor.")}},"gpu-buffer"])}else if(it==="ml-tensor"&&Qe>0){let qe=C.webnnEnsureTensor,ot=C.webnnIsInt64Supported;if(!qe||!ot)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Ui(ne,Qe)===void 0||!Uu(ye))throw new Error(`Unsupported data type: ${ye}`);if(ye==="int64"&&!ot(a))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let Pt=await qe(a,Oe,ne,le,!1);De=!0,me.push([ye,le,{mlTensor:Pt,download:C.webnnCreateMLTensorDownloader(Oe,ye),dispose:()=>{C.webnnReleaseTensorId(Oe),C._OrtReleaseTensor(Ce)}},"ml-tensor"])}else{let qe=Yu(ye),ot=new qe(Qe);new Uint8Array(ot.buffer,ot.byteOffset,ot.byteLength).set(C.HEAPU8.subarray(Oe,Oe+ot.byteLength)),me.push([ye,le,ot,"cpu"])}}finally{C.stackRestore(we),ye==="string"&&Oe&&C._free(Oe),De||C._OrtReleaseTensor(Ce),C.webnnOnRunEnd?.(x)}}return M&&!S&&(C._OrtClearBoundOutputs(M.handle)!==0&&nr("Can't clear bound outputs."),oi.set(a,[x,D,y,M,S,!1])),me}finally{C.stackRestore(e),K.forEach(O=>C._OrtReleaseTensor(O)),f.forEach(O=>C._OrtReleaseTensor(O)),k.forEach(O=>C._free(O)),z!==0&&C._OrtReleaseRunOptions(z),N.forEach(O=>C._free(O))}},d1=a=>{let n=mr(),i=oi.get(a);if(!i)throw new Error("invalid session id");let c=i[0],p=n._OrtEndProfiling(c);p===0&&nr("Can't get an profile file name."),n._OrtFree(p)},f1=a=>{let n=[];for(let i of a){let c=i[2];!Array.isArray(c)&&"buffer"in c&&n.push(c.buffer)}return n}}),li,va,vo,h0,m0,hl,Y2,ml,ji,Wi,M4,v8,x8,y8,B8,D8,P8,T8,G8=Ct(()=>{Ja(),M8(),to(),ju(),li=()=>!!wr.wasm.proxy&&typeof document<"u",vo=!1,h0=!1,m0=!1,ml=new Map,ji=(a,n)=>{let i=ml.get(a);i?i.push(n):ml.set(a,[n])},Wi=()=>{if(vo||!h0||m0||!va)throw new Error("worker not ready")},M4=a=>{switch(a.data.type){case"init-wasm":vo=!1,a.data.err?(m0=!0,Y2[1](a.data.err)):(h0=!0,Y2[0]()),hl&&(URL.revokeObjectURL(hl),hl=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let n=ml.get(a.data.type);a.data.err?n.shift()[1](a.data.err):n.shift()[0](a.data.out);break}}},v8=async()=>{if(!h0){if(vo)throw new Error("multiple calls to 'initWasm()' detected.");if(m0)throw new Error("previous call to 'initWasm()' failed.");if(vo=!0,li())return new Promise((a,n)=>{va?.terminate(),E3().then(([i,c])=>{try{va=c,va.onerror=m=>n(m),va.onmessage=M4,Y2=[a,n];let p={type:"init-wasm",in:wr};!p.in.wasm.wasmPaths&&(i||Cu)&&(p.in.wasm.wasmPaths={wasm:new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),va.postMessage(p),hl=i}catch(p){n(p)}},n)});try{await Wu(wr.wasm),await i1(wr),h0=!0}catch(a){throw m0=!0,a}finally{vo=!1}}},x8=async a=>{if(li())return Wi(),new Promise((n,i)=>{ji("init-ep",[n,i]);let c={type:"init-ep",in:{epName:a,env:wr}};va.postMessage(c)});await o1(wr,a)},y8=async a=>li()?(Wi(),new Promise((n,i)=>{ji("copy-from",[n,i]);let c={type:"copy-from",in:{buffer:a}};va.postMessage(c,[a.buffer])})):Vl(a),B8=async(a,n)=>{if(li()){if(n?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Wi(),new Promise((i,c)=>{ji("create",[i,c]);let p={type:"create",in:{model:a,options:{...n}}},m=[];a instanceof Uint8Array&&m.push(a.buffer),va.postMessage(p,m)})}else return l1(a,n)},D8=async a=>{if(li())return Wi(),new Promise((n,i)=>{ji("release",[n,i]);let c={type:"release",in:a};va.postMessage(c)});c1(a)},P8=async(a,n,i,c,p,m)=>{if(li()){if(i.some(C=>C[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(p.some(C=>C))throw new Error("pre-allocated output tensor is not supported for proxy.");return Wi(),new Promise((C,I)=>{ji("run",[C,I]);let E=i,x={type:"run",in:{sessionId:a,inputIndices:n,inputs:E,outputIndices:c,options:m}};va.postMessage(x,f1(E))})}else return u1(a,n,i,c,p,m)},T8=async a=>{if(li())return Wi(),new Promise((n,i)=>{ji("end-profiling",[n,i]);let c={type:"end-profiling",in:a};va.postMessage(c)});d1(a)}}),H2,v4,Q8,ek=Ct(()=>{Ja(),G8(),sA(),Ru(),y3(),H2=(a,n)=>{switch(a.location){case"cpu":return[a.type,a.dims,a.data,"cpu"];case"gpu-buffer":return[a.type,a.dims,{gpuBuffer:a.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[a.type,a.dims,{mlTensor:a.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${a.location} for ${n()}`)}},v4=a=>{switch(a[3]){case"cpu":return new Ua(a[0],a[2],a[1]);case"gpu-buffer":{let n=a[0];if(!Hu(n))throw new Error(`not supported data type: ${n} for deserializing GPU tensor`);let{gpuBuffer:i,download:c,dispose:p}=a[2];return Ua.fromGpuBuffer(i,{dataType:n,dims:a[1],download:c,dispose:p})}case"ml-tensor":{let n=a[0];if(!Uu(n))throw new Error(`not supported data type: ${n} for deserializing MLTensor tensor`);let{mlTensor:i,download:c,dispose:p}=a[2];return Ua.fromMLTensor(i,{dataType:n,dims:a[1],download:c,dispose:p})}default:throw new Error(`invalid data location: ${a[3]}`)}},Q8=class{async fetchModelAndCopyToWasmMemory(a){return y8(await Ku(a))}async loadModel(a,n){Za();let i;typeof a=="string"?i=await this.fetchModelAndCopyToWasmMemory(a):i=a,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await B8(i,n),Pa()}async dispose(){return D8(this.sessionId)}async run(a,n,i){Za();let c=[],p=[];Object.entries(a).forEach(y=>{let M=y[0],S=y[1],F=this.inputNames.indexOf(M);if(F===-1)throw new Error(`invalid input '${M}'`);c.push(S),p.push(F)});let m=[],C=[];Object.entries(n).forEach(y=>{let M=y[0],S=y[1],F=this.outputNames.indexOf(M);if(F===-1)throw new Error(`invalid output '${M}'`);m.push(S),C.push(F)});let I=c.map((y,M)=>H2(y,()=>`input "${this.inputNames[p[M]]}"`)),E=m.map((y,M)=>y?H2(y,()=>`output "${this.outputNames[C[M]]}"`):null),x=await P8(this.sessionId,p,I,C,E,i),D={};for(let y=0;y<x.length;y++)D[this.outputNames[C[y]]]=m[y]??v4(x[y]);return Pa(),D}startProfiling(){}endProfiling(){T8(this.sessionId)}}}),S8={};Ho(S8,{OnnxruntimeWebAssemblyBackend:()=>Qu,initializeFlags:()=>Gu,wasmBackend:()=>F8});var Gu,Qu,F8,tk=Ct(()=>{Ja(),G8(),ek(),Gu=()=>{(typeof wr.wasm.initTimeout!="number"||wr.wasm.initTimeout<0)&&(wr.wasm.initTimeout=0);let a=wr.wasm.simd;if(typeof a!="boolean"&&a!==void 0&&a!=="fixed"&&a!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${a}". Reset it to \`false\` and ignore SIMD feature checking.`),wr.wasm.simd=!1),typeof wr.wasm.proxy!="boolean"&&(wr.wasm.proxy=!1),typeof wr.wasm.trace!="boolean"&&(wr.wasm.trace=!1),typeof wr.wasm.numThreads!="number"||!Number.isInteger(wr.wasm.numThreads)||wr.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)wr.wasm.numThreads=1;else{let n=typeof navigator>"u"?Rw("node:os").cpus().length:navigator.hardwareConcurrency;wr.wasm.numThreads=Math.min(4,Math.ceil((n||1)/2))}},Qu=class{async init(a){Gu(),await v8(),await x8(a)}async createInferenceSessionHandler(a,n){let i=new Q8;return await i.loadModel(a,n),i}},F8=new Qu});Ja();Ja();Ja();var Ak="1.22.0-dev.20250409-89f8206ba4",rk=m3;{let a=(tk(),_0(S8)).wasmBackend;Xi("webgpu",a,5),Xi("webnn",a,5),Xi("cpu",a,10),Xi("wasm",a,10)}Object.defineProperty(wr.versions,"web",{value:Ak,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sk=Object.freeze({__proto__:null,get InferenceSession(){return Lu},get TRACE(){return N0},get TRACE_FUNC_BEGIN(){return Za},get TRACE_FUNC_END(){return Pa},get Tensor(){return Ua},default:rk,get env(){return wr},get registerBackend(){return Xi}}),U2={},ak={"onnxruntime-common":a=>{a.exports=_w},"onnxruntime-web":a=>{a.exports=sk},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(a,n,i)=>{i.r(n),i.d(n,{Environment:()=>pt,Interpreter:()=>Tt,Template:()=>Us,parse:()=>it,tokenize:()=>D});var c=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),p=class{constructor(U,Ee){this.value=U,this.type=Ee}};function m(U){return/\w/.test(U)}function C(U){return/[0-9]/.test(U)}var I=[["{%",c.OpenStatement],["%}",c.CloseStatement],["{{",c.OpenExpression],["}}",c.CloseExpression],["(",c.OpenParen],[")",c.CloseParen],["{",c.OpenCurlyBracket],["}",c.CloseCurlyBracket],["[",c.OpenSquareBracket],["]",c.CloseSquareBracket],[",",c.Comma],[".",c.Dot],[":",c.Colon],["|",c.Pipe],["<=",c.ComparisonBinaryOperator],[">=",c.ComparisonBinaryOperator],["==",c.ComparisonBinaryOperator],["!=",c.ComparisonBinaryOperator],["<",c.ComparisonBinaryOperator],[">",c.ComparisonBinaryOperator],["+",c.AdditiveBinaryOperator],["-",c.AdditiveBinaryOperator],["~",c.AdditiveBinaryOperator],["*",c.MultiplicativeBinaryOperator],["/",c.MultiplicativeBinaryOperator],["%",c.MultiplicativeBinaryOperator],["=",c.Equals]],E=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function x(U,Ee={}){return U.endsWith(`
`)&&(U=U.slice(0,-1)),Ee.lstrip_blocks&&(U=U.replace(/^[ \t]*({[#%-])/gm,"$1")),Ee.trim_blocks&&(U=U.replace(/([#%-]})\n/g,"$1")),U.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function D(U,Ee={}){const ce=[],ke=x(U,Ee);let Me=0,Le=0;const st=Ot=>{let Ht="";for(;Ot(ke[Me]);){if(ke[Me]==="\\"){if(++Me,Me>=ke.length)throw new SyntaxError("Unexpected end of input");const yt=ke[Me++],gA=E.get(yt);if(gA===void 0)throw new SyntaxError(`Unexpected escaped character: ${yt}`);Ht+=gA;continue}if(Ht+=ke[Me++],Me>=ke.length)throw new SyntaxError("Unexpected end of input")}return Ht};e:for(;Me<ke.length;){const Ot=ce.at(-1)?.type;if(Ot===void 0||Ot===c.CloseStatement||Ot===c.CloseExpression||Ot===c.Comment){let yt="";for(;Me<ke.length&&!(ke[Me]==="{"&&(ke[Me+1]==="%"||ke[Me+1]==="{"||ke[Me+1]==="#"));)yt+=ke[Me++];if(yt.length>0){ce.push(new p(yt,c.Text));continue}}if(ke[Me]==="{"&&ke[Me+1]==="#"){Me+=2;let yt="";for(;ke[Me]!=="#"||ke[Me+1]!=="}";){if(Me+2>=ke.length)throw new SyntaxError("Missing end of comment tag");yt+=ke[Me++]}ce.push(new p(yt,c.Comment)),Me+=2;continue}st(yt=>/\s/.test(yt));const Ht=ke[Me];if(Ht==="-"||Ht==="+"){const yt=ce.at(-1)?.type;if(yt===c.Text||yt===void 0)throw new SyntaxError(`Unexpected character: ${Ht}`);switch(yt){case c.Identifier:case c.NumericLiteral:case c.StringLiteral:case c.CloseParen:case c.CloseSquareBracket:break;default:{++Me;const gA=st(C);ce.push(new p(`${Ht}${gA}`,gA.length>0?c.NumericLiteral:c.UnaryOperator));continue}}}for(const[yt,gA]of I){if(yt==="}}"&&Le>0)continue;if(ke.slice(Me,Me+yt.length)===yt){ce.push(new p(yt,gA)),gA===c.OpenExpression?Le=0:gA===c.OpenCurlyBracket?++Le:gA===c.CloseCurlyBracket&&--Le,Me+=yt.length;continue e}}if(Ht==="'"||Ht==='"'){++Me;const yt=st(gA=>gA!==Ht);ce.push(new p(yt,c.StringLiteral)),++Me;continue}if(C(Ht)){let yt=st(C);if(ke[Me]==="."&&C(ke[Me+1])){++Me;const gA=st(C);yt=`${yt}.${gA}`}ce.push(new p(yt,c.NumericLiteral));continue}if(m(Ht)){const yt=st(m);ce.push(new p(yt,c.Identifier));continue}throw new SyntaxError(`Unexpected character: ${Ht}`)}return ce}var y=class{type="Statement"},M=class extends y{constructor(U){super(),this.body=U}type="Program"},S=class extends y{constructor(U,Ee,ce){super(),this.test=U,this.body=Ee,this.alternate=ce}type="If"},F=class extends y{constructor(U,Ee,ce,ke){super(),this.loopvar=U,this.iterable=Ee,this.body=ce,this.defaultBlock=ke}type="For"},L=class extends y{type="Break"},Z=class extends y{type="Continue"},z=class extends y{constructor(U,Ee,ce){super(),this.assignee=U,this.value=Ee,this.body=ce}type="Set"},N=class extends y{constructor(U,Ee,ce){super(),this.name=U,this.args=Ee,this.body=ce}type="Macro"},K=class extends y{constructor(U){super(),this.value=U}type="Comment"},f=class extends y{type="Expression"},k=class extends f{constructor(U,Ee,ce){super(),this.object=U,this.property=Ee,this.computed=ce}type="MemberExpression"},e=class extends f{constructor(U,Ee){super(),this.callee=U,this.args=Ee}type="CallExpression"},d=class extends f{constructor(U){super(),this.value=U}type="Identifier"},B=class extends f{constructor(U){super(),this.value=U}type="Literal"},Ae=class extends B{type="IntegerLiteral"},P=class extends B{type="FloatLiteral"},O=class extends B{type="StringLiteral"},me=class extends B{type="ArrayLiteral"},ee=class extends B{type="TupleLiteral"},Ce=class extends B{type="ObjectLiteral"},we=class extends f{constructor(U,Ee,ce){super(),this.operator=U,this.left=Ee,this.right=ce}type="BinaryExpression"},xe=class extends f{constructor(U,Ee){super(),this.operand=U,this.filter=Ee}type="FilterExpression"},De=class extends y{constructor(U,Ee){super(),this.filter=U,this.body=Ee}type="FilterStatement"},ye=class extends f{constructor(U,Ee){super(),this.lhs=U,this.test=Ee}type="SelectExpression"},Oe=class extends f{constructor(U,Ee,ce){super(),this.operand=U,this.negate=Ee,this.test=ce}type="TestExpression"},_e=class extends f{constructor(U,Ee){super(),this.operator=U,this.argument=Ee}type="UnaryExpression"},ne=class extends f{constructor(U=void 0,Ee=void 0,ce=void 0){super(),this.start=U,this.stop=Ee,this.step=ce}type="SliceExpression"},te=class extends f{constructor(U,Ee){super(),this.key=U,this.value=Ee}type="KeywordArgumentExpression"},pe=class extends f{constructor(U){super(),this.argument=U}type="SpreadExpression"},le=class extends y{constructor(U,Ee,ce){super(),this.call=U,this.callerArgs=Ee,this.body=ce}type="CallStatement"},Qe=class extends f{constructor(U,Ee,ce){super(),this.condition=U,this.trueExpr=Ee,this.falseExpr=ce}type="Ternary"};function it(U){const Ee=new M([]);let ce=0;function ke(ut,ht){const Qt=U[ce++];if(!Qt||Qt.type!==ut)throw new Error(`Parser Error: ${ht}. ${Qt.type} !== ${ut}.`);return Qt}function Me(ut){if(!Ht(ut))throw new SyntaxError(`Expected ${ut}`);++ce}function Le(){switch(U[ce].type){case c.Comment:return new K(U[ce++].value);case c.Text:return yt();case c.OpenStatement:return gA();case c.OpenExpression:return lA();default:throw new SyntaxError(`Unexpected token type: ${U[ce].type}`)}}function st(...ut){return ce+ut.length<=U.length&&ut.every((ht,Qt)=>ht===U[ce+Qt].type)}function Ot(...ut){return U[ce]?.type===c.OpenStatement&&U[ce+1]?.type===c.Identifier&&ut.includes(U[ce+1]?.value)}function Ht(...ut){return ce+ut.length<=U.length&&ut.every((ht,Qt)=>U[ce+Qt].type==="Identifier"&&ht===U[ce+Qt].value)}function yt(){return new O(ke(c.Text,"Expected text token").value)}function gA(){if(ke(c.OpenStatement,"Expected opening statement token"),U[ce].type!==c.Identifier)throw new SyntaxError(`Unknown statement, got ${U[ce].type}`);const ut=U[ce].value;let ht;switch(ut){case"set":++ce,ht=Sr();break;case"if":++ce,ht=GA(),ke(c.OpenStatement,"Expected {% token"),Me("endif"),ke(c.CloseStatement,"Expected %} token");break;case"macro":++ce,ht=kr(),ke(c.OpenStatement,"Expected {% token"),Me("endmacro"),ke(c.CloseStatement,"Expected %} token");break;case"for":++ce,ht=DA(),ke(c.OpenStatement,"Expected {% token"),Me("endfor"),ke(c.CloseStatement,"Expected %} token");break;case"call":{++ce;let Qt=null;st(c.OpenParen)&&(Qt=cs());const VA=us();if(VA.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const Ia=cs();ke(c.CloseStatement,"Expected closing statement token");const na=[];for(;!Ot("endcall");)na.push(Le());ke(c.OpenStatement,"Expected '{%'"),Me("endcall"),ke(c.CloseStatement,"Expected closing statement token");const wa=new e(VA,Ia);ht=new le(wa,Qt,na);break}case"break":++ce,ke(c.CloseStatement,"Expected closing statement token"),ht=new L;break;case"continue":++ce,ke(c.CloseStatement,"Expected closing statement token"),ht=new Z;break;case"filter":{++ce;let Qt=us();Qt instanceof d&&st(c.OpenParen)&&(Qt=Cr(Qt)),ke(c.CloseStatement,"Expected closing statement token");const VA=[];for(;!Ot("endfilter");)VA.push(Le());ke(c.OpenStatement,"Expected '{%'"),Me("endfilter"),ke(c.CloseStatement,"Expected '%}'"),ht=new De(Qt,VA);break}default:throw new SyntaxError(`Unknown statement type: ${ut}`)}return ht}function lA(){ke(c.OpenExpression,"Expected opening expression token");const ut=Fr();return ke(c.CloseExpression,"Expected closing expression token"),ut}function Sr(){const ut=Ms();let ht=null;const Qt=[];if(st(c.Equals))++ce,ht=Ms();else{for(ke(c.CloseStatement,"Expected %} token");!Ot("endset");)Qt.push(Le());ke(c.OpenStatement,"Expected {% token"),Me("endset")}return ke(c.CloseStatement,"Expected closing statement token"),new z(ut,ht,Qt)}function GA(){const ut=Fr();ke(c.CloseStatement,"Expected closing statement token");const ht=[],Qt=[];for(;!Ot("elif","else","endif");)ht.push(Le());if(Ot("elif")){++ce,++ce;const VA=GA();Qt.push(VA)}else if(Ot("else"))for(++ce,++ce,ke(c.CloseStatement,"Expected closing statement token");!Ot("endif");)Qt.push(Le());return new S(ut,ht,Qt)}function kr(){const ut=us();if(ut.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const ht=cs();ke(c.CloseStatement,"Expected closing statement token");const Qt=[];for(;!Ot("endmacro");)Qt.push(Le());return new N(ut,ht,Qt)}function Ms(ut=!1){const ht=ut?us:Fr,Qt=[ht()],VA=st(c.Comma);for(;VA&&(++ce,Qt.push(ht()),!!st(c.Comma)););return VA?new ee(Qt):Qt[0]}function DA(){const ut=Ms(!0);if(!(ut instanceof d||ut instanceof ee))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${ut.type} instead`);if(!Ht("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++ce;const ht=Fr();ke(c.CloseStatement,"Expected closing statement token");const Qt=[];for(;!Ot("endfor","else");)Qt.push(Le());const VA=[];if(Ot("else"))for(++ce,++ce,ke(c.CloseStatement,"Expected closing statement token");!Ot("endfor");)VA.push(Le());return new F(ut,ht,Qt,VA)}function Fr(){return Rs()}function Rs(){const ut=xr();if(Ht("if")){++ce;const ht=xr();if(Ht("else")){++ce;const Qt=Rs();return new Qe(ht,ut,Qt)}else return new ye(ut,ht)}return ut}function xr(){let ut=bs();for(;Ht("or");){const ht=U[ce];++ce;const Qt=bs();ut=new we(ht,ut,Qt)}return ut}function bs(){let ut=js();for(;Ht("and");){const ht=U[ce];++ce;const Qt=js();ut=new we(ht,ut,Qt)}return ut}function js(){let ut;for(;Ht("not");){const ht=U[ce];++ce;const Qt=js();ut=new _e(ht,Qt)}return ut??LA()}function LA(){let ut=Ks();for(;;){let ht;if(Ht("not","in"))ht=new p("not in",c.Identifier),ce+=2;else if(Ht("in"))ht=U[ce++];else if(st(c.ComparisonBinaryOperator))ht=U[ce++];else break;const Qt=Ks();ut=new we(ht,ut,Qt)}return ut}function Ks(){let ut=qt();for(;st(c.AdditiveBinaryOperator);){const ht=U[ce];++ce;const Qt=qt();ut=new we(ht,ut,Qt)}return ut}function Ws(){const ut=vs(us());return st(c.OpenParen)?Cr(ut):ut}function Cr(ut){let ht=new e(ut,cs());return ht=vs(ht),st(c.OpenParen)&&(ht=Cr(ht)),ht}function cs(){ke(c.OpenParen,"Expected opening parenthesis for arguments list");const ut=yr();return ke(c.CloseParen,"Expected closing parenthesis for arguments list"),ut}function yr(){const ut=[];for(;!st(c.CloseParen);){let ht;if(U[ce].type===c.MultiplicativeBinaryOperator&&U[ce].value==="*"){++ce;const Qt=Fr();ht=new pe(Qt)}else if(ht=Fr(),st(c.Equals)){if(++ce,!(ht instanceof d))throw new SyntaxError("Expected identifier for keyword argument");const Qt=Fr();ht=new te(ht,Qt)}ut.push(ht),st(c.Comma)&&++ce}return ut}function Br(){const ut=[];let ht=!1;for(;!st(c.CloseSquareBracket);)st(c.Colon)?(ut.push(void 0),++ce,ht=!0):(ut.push(Fr()),st(c.Colon)&&(++ce,ht=!0));if(ut.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(ht){if(ut.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ne(...ut)}return ut[0]}function vs(ut){for(;st(c.Dot)||st(c.OpenSquareBracket);){const ht=U[ce];++ce;let Qt;const VA=ht.type===c.OpenSquareBracket;if(VA)Qt=Br(),ke(c.CloseSquareBracket,"Expected closing square bracket");else if(Qt=us(),Qt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");ut=new k(ut,Qt,VA)}return ut}function qt(){let ut=Dr();for(;st(c.MultiplicativeBinaryOperator);){const ht=U[ce++],Qt=Dr();ut=new we(ht,ut,Qt)}return ut}function Dr(){let ut=Is();for(;Ht("is");){++ce;const ht=Ht("not");ht&&++ce;const Qt=us();if(!(Qt instanceof d))throw new SyntaxError("Expected identifier for the test");ut=new Oe(ut,ht,Qt)}return ut}function Is(){let ut=Ws();for(;st(c.Pipe);){++ce;let ht=us();if(!(ht instanceof d))throw new SyntaxError("Expected identifier for the filter");st(c.OpenParen)&&(ht=Cr(ht)),ut=new xe(ut,ht)}return ut}function us(){const ut=U[ce++];switch(ut.type){case c.NumericLiteral:{const ht=ut.value;return ht.includes(".")?new P(Number(ht)):new Ae(Number(ht))}case c.StringLiteral:{let ht=ut.value;for(;st(c.StringLiteral);)ht+=U[ce++].value;return new O(ht)}case c.Identifier:return new d(ut.value);case c.OpenParen:{const ht=Ms();return ke(c.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),ht}case c.OpenSquareBracket:{const ht=[];for(;!st(c.CloseSquareBracket);)ht.push(Fr()),st(c.Comma)&&++ce;return++ce,new me(ht)}case c.OpenCurlyBracket:{const ht=new Map;for(;!st(c.CloseCurlyBracket);){const Qt=Fr();ke(c.Colon,"Expected colon between key and value in object literal");const VA=Fr();ht.set(Qt,VA),st(c.Comma)&&++ce}return++ce,new Ce(ht)}default:throw new SyntaxError(`Unexpected token: ${ut.type}`)}}for(;ce<U.length;)Ee.body.push(Le());return Ee}function qe(U,Ee,ce=1){Ee===void 0&&(Ee=U,U=0);const ke=[];for(let Me=U;Me<Ee;Me+=ce)ke.push(Me);return ke}function ot(U,Ee,ce,ke=1){const Me=Math.sign(ke);Me>=0?(Ee=(Ee??=0)<0?Math.max(U.length+Ee,0):Math.min(Ee,U.length),ce=(ce??=U.length)<0?Math.max(U.length+ce,0):Math.min(ce,U.length)):(Ee=(Ee??=U.length-1)<0?Math.max(U.length+Ee,-1):Math.min(Ee,U.length-1),ce=(ce??=-1)<-1?Math.max(U.length+ce,-1):Math.min(ce,U.length-1));const Le=[];for(let st=Ee;Me*st<Me*ce;st+=ke)Le.push(U[st]);return Le}function Pt(U){return U.replace(/\b\w/g,Ee=>Ee.toUpperCase())}function et(U){return be(new Date,U)}function be(U,Ee){const ce=new Intl.DateTimeFormat(void 0,{month:"long"}),ke=new Intl.DateTimeFormat(void 0,{month:"short"}),Me=Le=>Le<10?"0"+Le:Le.toString();return Ee.replace(/%[YmdbBHM%]/g,Le=>{switch(Le){case"%Y":return U.getFullYear().toString();case"%m":return Me(U.getMonth()+1);case"%d":return Me(U.getDate());case"%b":return ke.format(U);case"%B":return ce.format(U);case"%H":return Me(U.getHours());case"%M":return Me(U.getMinutes());case"%%":return"%";default:return Le}})}function Ne(U){return U.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function ge(U,Ee,ce,ke){if(ke===0)return U;let Me=ke==null||ke<0?1/0:ke;const Le=Ee.length===0?new RegExp("(?=)","gu"):new RegExp(Ne(Ee),"gu");return U.replaceAll(Le,st=>Me>0?(--Me,ce):st)}var Ve=class extends Error{},at=class extends Error{},Ze=class{type="RuntimeValue";value;builtins=new Map;constructor(U=void 0){this.value=U}__bool__(){return new rt(!!this.value)}toString(){return String(this.value)}},Ye=class extends Ze{type="IntegerValue"},Y=class extends Ze{type="FloatValue";toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},We=class extends Ze{type="StringValue";builtins=new Map([["upper",new It(()=>new We(this.value.toUpperCase()))],["lower",new It(()=>new We(this.value.toLowerCase()))],["strip",new It(()=>new We(this.value.trim()))],["title",new It(()=>new We(Pt(this.value)))],["capitalize",new It(()=>new We(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new Ye(this.value.length)],["rstrip",new It(()=>new We(this.value.trimEnd()))],["lstrip",new It(()=>new We(this.value.trimStart()))],["startswith",new It(U=>{if(U.length===0)throw new Error("startswith() requires at least one argument");const Ee=U[0];if(Ee instanceof We)return new rt(this.value.startsWith(Ee.value));if(Ee instanceof Ue){for(const ce of Ee.value){if(!(ce instanceof We))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(ce.value))return new rt(!0)}return new rt(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new It(U=>{if(U.length===0)throw new Error("endswith() requires at least one argument");const Ee=U[0];if(Ee instanceof We)return new rt(this.value.endsWith(Ee.value));if(Ee instanceof Ue){for(const ce of Ee.value){if(!(ce instanceof We))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(ce.value))return new rt(!0)}return new rt(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new It(U=>{const Ee=U[0]??new mt;if(!(Ee instanceof We||Ee instanceof mt))throw new Error("sep argument must be a string or null");const ce=U[1]??new Ye(-1);if(!(ce instanceof Ye))throw new Error("maxsplit argument must be a number");let ke=[];if(Ee instanceof mt){const Me=this.value.trimStart();for(const{0:Le,index:st}of Me.matchAll(/\S+/g)){if(ce.value!==-1&&ke.length>=ce.value&&st!==void 0){ke.push(Le+Me.slice(st+Le.length));break}ke.push(Le)}}else{if(Ee.value==="")throw new Error("empty separator");ke=this.value.split(Ee.value),ce.value!==-1&&ke.length>ce.value&&ke.push(ke.splice(ce.value).join(Ee.value))}return new Ue(ke.map(Me=>new We(Me)))})],["replace",new It(U=>{if(U.length<2)throw new Error("replace() requires at least two arguments");const Ee=U[0],ce=U[1];if(!(Ee instanceof We&&ce instanceof We))throw new Error("replace() arguments must be strings");let ke;if(U.length>2?U[2].type==="KeywordArgumentsValue"?ke=U[2].value.get("count")??new mt:ke=U[2]:ke=new mt,!(ke instanceof Ye||ke instanceof mt))throw new Error("replace() count argument must be a number or null");return new We(ge(this.value,Ee.value,ce.value,ke.value))})]])},rt=class extends Ze{type="BooleanValue"},fe=class extends Ze{type="ObjectValue";__bool__(){return new rt(this.value.size>0)}builtins=new Map([["get",new It(([U,Ee])=>{if(!(U instanceof We))throw new Error(`Object key must be a string: got ${U.type}`);return this.value.get(U.value)??Ee??new mt})],["items",new It(()=>this.items())],["keys",new It(()=>this.keys())],["values",new It(()=>this.values())]]);items(){return new Ue(Array.from(this.value.entries()).map(([U,Ee])=>new Ue([new We(U),Ee])))}keys(){return new Ue(Array.from(this.value.keys()).map(U=>new We(U)))}values(){return new Ue(Array.from(this.value.values()))}},Et=class extends fe{type="KeywordArgumentsValue"},Ue=class extends Ze{type="ArrayValue";builtins=new Map([["length",new Ye(this.value.length)]]);__bool__(){return new rt(this.value.length>0)}},Lt=class extends Ue{type="TupleValue"},It=class extends Ze{type="FunctionValue"},mt=class extends Ze{type="NullValue"},Ft=class extends Ze{type="UndefinedValue"},pt=class{constructor(U){this.parent=U}variables=new Map([["namespace",new It(U=>{if(U.length===0)return new fe(new Map);if(U.length!==1||!(U[0]instanceof fe))throw new Error("`namespace` expects either zero arguments or a single object argument");return U[0]})]]);tests=new Map([["boolean",U=>U.type==="BooleanValue"],["callable",U=>U instanceof It],["odd",U=>{if(!(U instanceof Ye))throw new Error(`cannot odd on ${U.type}`);return U.value%2!==0}],["even",U=>{if(!(U instanceof Ye))throw new Error(`cannot even on ${U.type}`);return U.value%2===0}],["false",U=>U.type==="BooleanValue"&&!U.value],["true",U=>U.type==="BooleanValue"&&U.value],["none",U=>U.type==="NullValue"],["string",U=>U.type==="StringValue"],["number",U=>U instanceof Ye||U instanceof Y],["integer",U=>U instanceof Ye],["iterable",U=>U.type==="ArrayValue"||U.type==="StringValue"],["mapping",U=>U.type==="ObjectValue"],["lower",U=>{const Ee=U.value;return U.type==="StringValue"&&Ee===Ee.toLowerCase()}],["upper",U=>{const Ee=U.value;return U.type==="StringValue"&&Ee===Ee.toUpperCase()}],["none",U=>U.type==="NullValue"],["defined",U=>U.type!=="UndefinedValue"],["undefined",U=>U.type==="UndefinedValue"],["equalto",(U,Ee)=>U.value===Ee.value],["eq",(U,Ee)=>U.value===Ee.value]]);set(U,Ee){return this.declareVariable(U,aA(Ee))}declareVariable(U,Ee){if(this.variables.has(U))throw new SyntaxError(`Variable already declared: ${U}`);return this.variables.set(U,Ee),Ee}setVariable(U,Ee){return this.variables.set(U,Ee),Ee}resolve(U){if(this.variables.has(U))return this;if(this.parent)return this.parent.resolve(U);throw new Error(`Unknown variable: ${U}`)}lookupVariable(U){try{return this.resolve(U).variables.get(U)??new Ft}catch{return new Ft}}};function Dt(U){U.set("false",!1),U.set("true",!0),U.set("none",null),U.set("raise_exception",Ee=>{throw new Error(Ee)}),U.set("range",qe),U.set("strftime_now",et),U.set("True",!0),U.set("False",!1),U.set("None",null)}var Tt=class{global;constructor(U){this.global=U??new pt}run(U){return this.evaluate(U,this.global)}evaluateBinaryExpression(U,Ee){const ce=this.evaluate(U.left,Ee);switch(U.operator.value){case"and":return ce.__bool__().value?this.evaluate(U.right,Ee):ce;case"or":return ce.__bool__().value?ce:this.evaluate(U.right,Ee)}const ke=this.evaluate(U.right,Ee);switch(U.operator.value){case"==":return new rt(ce.value==ke.value);case"!=":return new rt(ce.value!=ke.value)}if(ce instanceof Ft||ke instanceof Ft){if(ke instanceof Ft&&["in","not in"].includes(U.operator.value))return new rt(U.operator.value==="not in");throw new Error(`Cannot perform operation ${U.operator.value} on undefined values`)}else{if(ce instanceof mt||ke instanceof mt)throw new Error("Cannot perform operation on null values");if(U.operator.value==="~")return new We(ce.value.toString()+ke.value.toString());if((ce instanceof Ye||ce instanceof Y)&&(ke instanceof Ye||ke instanceof Y)){const Me=ce.value,Le=ke.value;switch(U.operator.value){case"+":case"-":case"*":{const st=U.operator.value==="+"?Me+Le:U.operator.value==="-"?Me-Le:Me*Le;return ce instanceof Y||ke instanceof Y?new Y(st):new Ye(st)}case"/":return new Y(Me/Le);case"%":{const st=Me%Le;return ce instanceof Y||ke instanceof Y?new Y(st):new Ye(st)}case"<":return new rt(Me<Le);case">":return new rt(Me>Le);case">=":return new rt(Me>=Le);case"<=":return new rt(Me<=Le)}}else if(ce instanceof Ue&&ke instanceof Ue)switch(U.operator.value){case"+":return new Ue(ce.value.concat(ke.value))}else if(ke instanceof Ue){const Me=ke.value.find(Le=>Le.value===ce.value)!==void 0;switch(U.operator.value){case"in":return new rt(Me);case"not in":return new rt(!Me)}}}if(ce instanceof We||ke instanceof We)switch(U.operator.value){case"+":return new We(ce.value.toString()+ke.value.toString())}if(ce instanceof We&&ke instanceof We)switch(U.operator.value){case"in":return new rt(ke.value.includes(ce.value));case"not in":return new rt(!ke.value.includes(ce.value))}if(ce instanceof We&&ke instanceof fe)switch(U.operator.value){case"in":return new rt(ke.value.has(ce.value));case"not in":return new rt(!ke.value.has(ce.value))}throw new SyntaxError(`Unknown operator "${U.operator.value}" between ${ce.type} and ${ke.type}`)}evaluateArguments(U,Ee){const ce=[],ke=new Map;for(const Me of U)if(Me.type==="SpreadExpression"){const Le=Me,st=this.evaluate(Le.argument,Ee);if(!(st instanceof Ue))throw new Error(`Cannot unpack non-iterable type: ${st.type}`);for(const Ot of st.value)ce.push(Ot)}else if(Me.type==="KeywordArgumentExpression"){const Le=Me;ke.set(Le.key.value,this.evaluate(Le.value,Ee))}else{if(ke.size>0)throw new Error("Positional arguments must come before keyword arguments");ce.push(this.evaluate(Me,Ee))}return[ce,ke]}applyFilter(U,Ee,ce){if(Ee.type==="Identifier"){const ke=Ee;if(ke.value==="tojson")return new We(jt(U));if(U instanceof Ue)switch(ke.value){case"list":return U;case"first":return U.value[0];case"last":return U.value[U.value.length-1];case"length":return new Ye(U.value.length);case"reverse":return new Ue(U.value.reverse());case"sort":return new Ue(U.value.sort((Me,Le)=>{if(Me.type!==Le.type)throw new Error(`Cannot compare different types: ${Me.type} and ${Le.type}`);switch(Me.type){case"IntegerValue":case"FloatValue":return Me.value-Le.value;case"StringValue":return Me.value.localeCompare(Le.value);default:throw new Error(`Cannot compare type: ${Me.type}`)}}));case"join":return new We(U.value.map(Me=>Me.value).join(""));case"string":return new We(jt(U));case"unique":{const Me=new Set,Le=[];for(const st of U.value)Me.has(st.value)||(Me.add(st.value),Le.push(st));return new Ue(Le)}default:throw new Error(`Unknown ArrayValue filter: ${ke.value}`)}else if(U instanceof We)switch(ke.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const Me=U.builtins.get(ke.value);if(Me instanceof It)return Me.value([],ce);if(Me instanceof Ye)return Me;throw new Error(`Unknown StringValue filter: ${ke.value}`)}case"trim":return new We(U.value.trim());case"indent":return new We(U.value.split(`
`).map((Me,Le)=>Le===0||Me.length===0?Me:"    "+Me).join(`
`));case"join":case"string":return U;case"int":{const Me=parseInt(U.value,10);return new Ye(isNaN(Me)?0:Me)}case"float":{const Me=parseFloat(U.value);return new Y(isNaN(Me)?0:Me)}default:throw new Error(`Unknown StringValue filter: ${ke.value}`)}else if(U instanceof Ye||U instanceof Y)switch(ke.value){case"abs":return U instanceof Ye?new Ye(Math.abs(U.value)):new Y(Math.abs(U.value));case"int":return new Ye(Math.floor(U.value));case"float":return new Y(U.value);default:throw new Error(`Unknown NumericValue filter: ${ke.value}`)}else if(U instanceof fe)switch(ke.value){case"items":return new Ue(Array.from(U.value.entries()).map(([Me,Le])=>new Ue([new We(Me),Le])));case"length":return new Ye(U.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ke.value}`)}else if(U instanceof rt)switch(ke.value){case"bool":return new rt(U.value);case"int":return new Ye(U.value?1:0);case"float":return new Y(U.value?1:0);case"string":return new We(U.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${ke.value}`)}throw new Error(`Cannot apply filter "${ke.value}" to type: ${U.type}`)}else if(Ee.type==="CallExpression"){const ke=Ee;if(ke.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ke.callee.type}`);const Me=ke.callee.value;if(Me==="tojson"){const[,Le]=this.evaluateArguments(ke.args,ce),st=Le.get("indent")??new mt;if(!(st instanceof Ye||st instanceof mt))throw new Error("If set, indent must be a number");return new We(jt(U,st.value))}else if(Me==="join"){let Le;if(U instanceof We)Le=Array.from(U.value);else if(U instanceof Ue)Le=U.value.map(yt=>yt.value);else throw new Error(`Cannot apply filter "${Me}" to type: ${U.type}`);const[st,Ot]=this.evaluateArguments(ke.args,ce),Ht=st.at(0)??Ot.get("separator")??new We("");if(!(Ht instanceof We))throw new Error("separator must be a string");return new We(Le.join(Ht.value))}else if(Me==="int"||Me==="float"){const[Le,st]=this.evaluateArguments(ke.args,ce),Ot=Le.at(0)??st.get("default")??(Me==="int"?new Ye(0):new Y(0));if(U instanceof We){const Ht=Me==="int"?parseInt(U.value,10):parseFloat(U.value);return isNaN(Ht)?Ot:Me==="int"?new Ye(Ht):new Y(Ht)}else{if(U instanceof Ye||U instanceof Y)return U;if(U instanceof rt)return Me==="int"?new Ye(U.value?1:0):new Y(U.value?1:0);throw new Error(`Cannot apply filter "${Me}" to type: ${U.type}`)}}else if(Me==="default"){const[Le,st]=this.evaluateArguments(ke.args,ce),Ot=Le[0]??new We(""),Ht=Le[1]??st.get("boolean")??new rt(!1);if(!(Ht instanceof rt))throw new Error("`default` filter flag must be a boolean");return U instanceof Ft||Ht.value&&!U.__bool__().value?Ot:U}if(U instanceof Ue){switch(Me){case"selectattr":case"rejectattr":{const Le=Me==="selectattr";if(U.value.some(lA=>!(lA instanceof fe)))throw new Error(`\`${Me}\` can only be applied to array of objects`);if(ke.args.some(lA=>lA.type!=="StringLiteral"))throw new Error(`arguments of \`${Me}\` must be strings`);const[st,Ot,Ht]=ke.args.map(lA=>this.evaluate(lA,ce));let yt;if(Ot){const lA=ce.tests.get(Ot.value);if(!lA)throw new Error(`Unknown test: ${Ot.value}`);yt=lA}else yt=(...lA)=>lA[0].__bool__().value;const gA=U.value.filter(lA=>{const Sr=lA.value.get(st.value),GA=Sr?yt(Sr,Ht):!1;return Le?GA:!GA});return new Ue(gA)}case"map":{const[,Le]=this.evaluateArguments(ke.args,ce);if(Le.has("attribute")){const st=Le.get("attribute");if(!(st instanceof We))throw new Error("attribute must be a string");const Ot=Le.get("default"),Ht=U.value.map(yt=>{if(!(yt instanceof fe))throw new Error("items in map must be an object");return yt.value.get(st.value)??Ot??new Ft});return new Ue(Ht)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Me}`)}else if(U instanceof We){switch(Me){case"indent":{const[Le,st]=this.evaluateArguments(ke.args,ce),Ot=Le.at(0)??st.get("width")??new Ye(4);if(!(Ot instanceof Ye))throw new Error("width must be a number");const Ht=Le.at(1)??st.get("first")??new rt(!1),yt=Le.at(2)??st.get("blank")??new rt(!1),gA=U.value.split(`
`),lA=" ".repeat(Ot.value),Sr=gA.map((GA,kr)=>!Ht.value&&kr===0||!yt.value&&GA.length===0?GA:lA+GA);return new We(Sr.join(`
`))}case"replace":{const Le=U.builtins.get("replace");if(!(Le instanceof It))throw new Error("replace filter not available");const[st,Ot]=this.evaluateArguments(ke.args,ce);return Le.value([...st,new Et(Ot)],ce)}}throw new Error(`Unknown StringValue filter: ${Me}`)}else throw new Error(`Cannot apply filter "${Me}" to type: ${U.type}`)}throw new Error(`Unknown filter: ${Ee.type}`)}evaluateFilterExpression(U,Ee){const ce=this.evaluate(U.operand,Ee);return this.applyFilter(ce,U.filter,Ee)}evaluateTestExpression(U,Ee){const ce=this.evaluate(U.operand,Ee),ke=Ee.tests.get(U.test.value);if(!ke)throw new Error(`Unknown test: ${U.test.value}`);const Me=ke(ce);return new rt(U.negate?!Me:Me)}evaluateSelectExpression(U,Ee){return this.evaluate(U.test,Ee).__bool__().value?this.evaluate(U.lhs,Ee):new Ft}evaluateUnaryExpression(U,Ee){const ce=this.evaluate(U.argument,Ee);switch(U.operator.value){case"not":return new rt(!ce.value);default:throw new SyntaxError(`Unknown operator: ${U.operator.value}`)}}evaluateTernaryExpression(U,Ee){return this.evaluate(U.condition,Ee).__bool__().value?this.evaluate(U.trueExpr,Ee):this.evaluate(U.falseExpr,Ee)}evalProgram(U,Ee){return this.evaluateBlock(U.body,Ee)}evaluateBlock(U,Ee){let ce="";for(const ke of U){const Me=this.evaluate(ke,Ee);Me.type!=="NullValue"&&Me.type!=="UndefinedValue"&&(ce+=Me.toString())}return new We(ce)}evaluateIdentifier(U,Ee){return Ee.lookupVariable(U.value)}evaluateCallExpression(U,Ee){const[ce,ke]=this.evaluateArguments(U.args,Ee);ke.size>0&&ce.push(new Et(ke));const Me=this.evaluate(U.callee,Ee);if(Me.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Me.type}`);return Me.value(ce,Ee)}evaluateSliceExpression(U,Ee,ce){if(!(U instanceof Ue||U instanceof We))throw new Error("Slice object must be an array or string");const ke=this.evaluate(Ee.start,ce),Me=this.evaluate(Ee.stop,ce),Le=this.evaluate(Ee.step,ce);if(!(ke instanceof Ye||ke instanceof Ft))throw new Error("Slice start must be numeric or undefined");if(!(Me instanceof Ye||Me instanceof Ft))throw new Error("Slice stop must be numeric or undefined");if(!(Le instanceof Ye||Le instanceof Ft))throw new Error("Slice step must be numeric or undefined");return U instanceof Ue?new Ue(ot(U.value,ke.value,Me.value,Le.value)):new We(ot(Array.from(U.value),ke.value,Me.value,Le.value).join(""))}evaluateMemberExpression(U,Ee){const ce=this.evaluate(U.object,Ee);let ke;if(U.computed){if(U.property.type==="SliceExpression")return this.evaluateSliceExpression(ce,U.property,Ee);ke=this.evaluate(U.property,Ee)}else ke=new We(U.property.value);let Me;if(ce instanceof fe){if(!(ke instanceof We))throw new Error(`Cannot access property with non-string: got ${ke.type}`);Me=ce.value.get(ke.value)??ce.builtins.get(ke.value)}else if(ce instanceof Ue||ce instanceof We)if(ke instanceof Ye)Me=ce.value.at(ke.value),ce instanceof We&&(Me=new We(ce.value.at(ke.value)));else if(ke instanceof We)Me=ce.builtins.get(ke.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ke.type}`);else{if(!(ke instanceof We))throw new Error(`Cannot access property with non-string: got ${ke.type}`);Me=ce.builtins.get(ke.value)}return Me instanceof Ze?Me:new Ft}evaluateSet(U,Ee){const ce=U.value?this.evaluate(U.value,Ee):this.evaluateBlock(U.body,Ee);if(U.assignee.type==="Identifier"){const ke=U.assignee.value;Ee.setVariable(ke,ce)}else if(U.assignee.type==="TupleLiteral"){const ke=U.assignee;if(!(ce instanceof Ue))throw new Error(`Cannot unpack non-iterable type in set: ${ce.type}`);const Me=ce.value;if(Me.length!==ke.value.length)throw new Error(`Too ${ke.value.length>Me.length?"few":"many"} items to unpack in set`);for(let Le=0;Le<ke.value.length;++Le){const st=ke.value[Le];if(st.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${st.type}`);Ee.setVariable(st.value,Me[Le])}}else if(U.assignee.type==="MemberExpression"){const ke=U.assignee,Me=this.evaluate(ke.object,Ee);if(!(Me instanceof fe))throw new Error("Cannot assign to member of non-object");if(ke.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Me.value.set(ke.property.value,ce)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(U.assignee)}`);return new mt}evaluateIf(U,Ee){const ce=this.evaluate(U.test,Ee);return this.evaluateBlock(ce.__bool__().value?U.body:U.alternate,Ee)}evaluateFor(U,Ee){const ce=new pt(Ee);let ke,Me;if(U.iterable.type==="SelectExpression"){const yt=U.iterable;Me=this.evaluate(yt.lhs,ce),ke=yt.test}else Me=this.evaluate(U.iterable,ce);if(!(Me instanceof Ue||Me instanceof fe))throw new Error(`Expected iterable or object type in for loop: got ${Me.type}`);Me instanceof fe&&(Me=Me.keys());const Le=[],st=[];for(let yt=0;yt<Me.value.length;++yt){const gA=new pt(ce),lA=Me.value[yt];let Sr;if(U.loopvar.type==="Identifier")Sr=GA=>GA.setVariable(U.loopvar.value,lA);else if(U.loopvar.type==="TupleLiteral"){const GA=U.loopvar;if(lA.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${lA.type}`);const kr=lA;if(GA.value.length!==kr.value.length)throw new Error(`Too ${GA.value.length>kr.value.length?"few":"many"} items to unpack`);Sr=Ms=>{for(let DA=0;DA<GA.value.length;++DA){if(GA.value[DA].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${GA.value[DA].type}`);Ms.setVariable(GA.value[DA].value,kr.value[DA])}}}else throw new Error(`Invalid loop variable(s): ${U.loopvar.type}`);ke&&(Sr(gA),!this.evaluate(ke,gA).__bool__().value)||(Le.push(lA),st.push(Sr))}let Ot="",Ht=!0;for(let yt=0;yt<Le.length;++yt){const gA=new Map([["index",new Ye(yt+1)],["index0",new Ye(yt)],["revindex",new Ye(Le.length-yt)],["revindex0",new Ye(Le.length-yt-1)],["first",new rt(yt===0)],["last",new rt(yt===Le.length-1)],["length",new Ye(Le.length)],["previtem",yt>0?Le[yt-1]:new Ft],["nextitem",yt<Le.length-1?Le[yt+1]:new Ft]]);ce.setVariable("loop",new fe(gA)),st[yt](ce);try{const lA=this.evaluateBlock(U.body,ce);Ot+=lA.value}catch(lA){if(lA instanceof at)continue;if(lA instanceof Ve)break;throw lA}Ht=!1}if(Ht){const yt=this.evaluateBlock(U.defaultBlock,ce);Ot+=yt.value}return new We(Ot)}evaluateMacro(U,Ee){return Ee.setVariable(U.name.value,new It((ce,ke)=>{const Me=new pt(ke);ce=ce.slice();let Le;ce.at(-1)?.type==="KeywordArgumentsValue"&&(Le=ce.pop());for(let st=0;st<U.args.length;++st){const Ot=U.args[st],Ht=ce[st];if(Ot.type==="Identifier"){const yt=Ot;if(!Ht)throw new Error(`Missing positional argument: ${yt.value}`);Me.setVariable(yt.value,Ht)}else if(Ot.type==="KeywordArgumentExpression"){const yt=Ot,gA=Ht??Le?.value.get(yt.key.value)??this.evaluate(yt.value,Me);Me.setVariable(yt.key.value,gA)}else throw new Error(`Unknown argument type: ${Ot.type}`)}return this.evaluateBlock(U.body,Me)})),new mt}evaluateCallStatement(U,Ee){const ce=new It((Ot,Ht)=>{const yt=new pt(Ht);if(U.callerArgs)for(let gA=0;gA<U.callerArgs.length;++gA){const lA=U.callerArgs[gA];if(lA.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${lA.type}`);yt.setVariable(lA.value,Ot[gA]??new Ft)}return this.evaluateBlock(U.body,yt)}),[ke,Me]=this.evaluateArguments(U.call.args,Ee);ke.push(new Et(Me));const Le=this.evaluate(U.call.callee,Ee);if(Le.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Le.type}`);const st=new pt(Ee);return st.setVariable("caller",ce),Le.value(ke,st)}evaluateFilterStatement(U,Ee){const ce=this.evaluateBlock(U.body,Ee);return this.applyFilter(ce,U.filter,Ee)}evaluate(U,Ee){if(!U)return new Ft;switch(U.type){case"Program":return this.evalProgram(U,Ee);case"Set":return this.evaluateSet(U,Ee);case"If":return this.evaluateIf(U,Ee);case"For":return this.evaluateFor(U,Ee);case"Macro":return this.evaluateMacro(U,Ee);case"CallStatement":return this.evaluateCallStatement(U,Ee);case"Break":throw new Ve;case"Continue":throw new at;case"IntegerLiteral":return new Ye(U.value);case"FloatLiteral":return new Y(U.value);case"StringLiteral":return new We(U.value);case"ArrayLiteral":return new Ue(U.value.map(ce=>this.evaluate(ce,Ee)));case"TupleLiteral":return new Lt(U.value.map(ce=>this.evaluate(ce,Ee)));case"ObjectLiteral":{const ce=new Map;for(const[ke,Me]of U.value){const Le=this.evaluate(ke,Ee);if(!(Le instanceof We))throw new Error(`Object keys must be strings: got ${Le.type}`);ce.set(Le.value,this.evaluate(Me,Ee))}return new fe(ce)}case"Identifier":return this.evaluateIdentifier(U,Ee);case"CallExpression":return this.evaluateCallExpression(U,Ee);case"MemberExpression":return this.evaluateMemberExpression(U,Ee);case"UnaryExpression":return this.evaluateUnaryExpression(U,Ee);case"BinaryExpression":return this.evaluateBinaryExpression(U,Ee);case"FilterExpression":return this.evaluateFilterExpression(U,Ee);case"FilterStatement":return this.evaluateFilterStatement(U,Ee);case"TestExpression":return this.evaluateTestExpression(U,Ee);case"SelectExpression":return this.evaluateSelectExpression(U,Ee);case"Ternary":return this.evaluateTernaryExpression(U,Ee);case"Comment":return new mt;default:throw new SyntaxError(`Unknown node type: ${U.type}`)}}};function aA(U){switch(typeof U){case"number":return Number.isInteger(U)?new Ye(U):new Y(U);case"string":return new We(U);case"boolean":return new rt(U);case"undefined":return new Ft;case"object":return U===null?new mt:Array.isArray(U)?new Ue(U.map(aA)):new fe(new Map(Object.entries(U).map(([Ee,ce])=>[Ee,aA(ce)])));case"function":return new It((Ee,ce)=>{const ke=U(...Ee.map(Me=>Me.value))??null;return aA(ke)});default:throw new Error(`Cannot convert to runtime value: ${U}`)}}function jt(U,Ee,ce){const ke=ce??0;switch(U.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(U.value);case"ArrayValue":case"ObjectValue":{const Me=Ee?" ".repeat(Ee):"",Le=`
`+Me.repeat(ke),st=Le+Me;if(U.type==="ArrayValue"){const Ot=U.value.map(Ht=>jt(Ht,Ee,ke+1));return Ee?`[${st}${Ot.join(`,${st}`)}${Le}]`:`[${Ot.join(", ")}]`}else{const Ot=Array.from(U.value.entries()).map(([Ht,yt])=>{const gA=`"${Ht}": ${jt(yt,Ee,ke+1)}`;return Ee?`${st}${gA}`:gA});return Ee?`{${Ot.join(",")}${Le}}`:`{${Ot.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${U.type}`)}}var Nt=`
`,KA="{%- ",Es=" -%}";function WA(U){switch(U.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return U.operator.value==="and"?1:U.operator.value==="in"||U.operator.value==="not in"?2:0}return 0}function Ls(U,Ee="	"){const ce=typeof Ee=="number"?" ".repeat(Ee):Ee;return Xr(U.body,0,ce).replace(/\n$/,"")}function XA(...U){return KA+U.join(" ")+Es}function Xr(U,Ee,ce){return U.map(ke=>Ps(ke,Ee,ce)).join(Nt)}function Ps(U,Ee,ce){const ke=ce.repeat(Ee);switch(U.type){case"Program":return Xr(U.body,Ee,ce);case"If":return Ta(U,Ee,ce);case"For":return Ca(U,Ee,ce);case"Set":return ba(U,Ee,ce);case"Macro":return wt(U,Ee,ce);case"Break":return ke+XA("break");case"Continue":return ke+XA("continue");case"CallStatement":return Qr(U,Ee,ce);case"FilterStatement":return ZA(U,Ee,ce);case"Comment":return ke+"{# "+U.value+" #}";default:return ke+"{{- "+oA(U)+" -}}"}}function Ta(U,Ee,ce){const ke=ce.repeat(Ee),Me=[];let Le=U;for(;Le&&(Me.push({test:Le.test,body:Le.body}),Le.alternate.length===1&&Le.alternate[0].type==="If");)Le=Le.alternate[0];let st=ke+XA("if",oA(Me[0].test))+Nt+Xr(Me[0].body,Ee+1,ce);for(let Ot=1;Ot<Me.length;++Ot)st+=Nt+ke+XA("elif",oA(Me[Ot].test))+Nt+Xr(Me[Ot].body,Ee+1,ce);return Le&&Le.alternate.length>0&&(st+=Nt+ke+XA("else")+Nt+Xr(Le.alternate,Ee+1,ce)),st+=Nt+ke+XA("endif"),st}function Ca(U,Ee,ce){const ke=ce.repeat(Ee);let Me="";if(U.iterable.type==="SelectExpression"){const st=U.iterable;Me=`${oA(st.lhs)} if ${oA(st.test)}`}else Me=oA(U.iterable);let Le=ke+XA("for",oA(U.loopvar),"in",Me)+Nt+Xr(U.body,Ee+1,ce);return U.defaultBlock.length>0&&(Le+=Nt+ke+XA("else")+Nt+Xr(U.defaultBlock,Ee+1,ce)),Le+=Nt+ke+XA("endfor"),Le}function ba(U,Ee,ce){const ke=ce.repeat(Ee),Me=oA(U.assignee),Le=U.value?oA(U.value):"",st=ke+XA("set",`${Me}${U.value?" = "+Le:""}`);return U.body.length===0?st:st+Nt+Xr(U.body,Ee+1,ce)+Nt+ke+XA("endset")}function wt(U,Ee,ce){const ke=ce.repeat(Ee),Me=U.args.map(oA).join(", ");return ke+XA("macro",`${U.name.value}(${Me})`)+Nt+Xr(U.body,Ee+1,ce)+Nt+ke+XA("endmacro")}function Qr(U,Ee,ce){const ke=ce.repeat(Ee),Me=U.callerArgs&&U.callerArgs.length>0?`(${U.callerArgs.map(oA).join(", ")})`:"",Le=oA(U.call);let st=ke+XA(`call${Me}`,Le)+Nt;return st+=Xr(U.body,Ee+1,ce)+Nt,st+=ke+XA("endcall"),st}function ZA(U,Ee,ce){const ke=ce.repeat(Ee),Me=U.filter.type==="Identifier"?U.filter.value:oA(U.filter);let Le=ke+XA("filter",Me)+Nt;return Le+=Xr(U.body,Ee+1,ce)+Nt,Le+=ke+XA("endfilter"),Le}function oA(U,Ee=-1){switch(U.type){case"SpreadExpression":return`*${oA(U.argument)}`;case"Identifier":return U.value;case"IntegerLiteral":return`${U.value}`;case"FloatLiteral":return`${U.value}`;case"StringLiteral":return JSON.stringify(U.value);case"BinaryExpression":{const ce=U,ke=WA(ce),Me=oA(ce.left,ke),Le=oA(ce.right,ke+1),st=`${Me} ${ce.operator.value} ${Le}`;return ke<Ee?`(${st})`:st}case"UnaryExpression":{const ce=U;return ce.operator.value+(ce.operator.value==="not"?" ":"")+oA(ce.argument,1/0)}case"CallExpression":{const ce=U,ke=ce.args.map(oA).join(", ");return`${oA(ce.callee)}(${ke})`}case"MemberExpression":{const ce=U;let ke=oA(ce.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(ce.object.type)||(ke=`(${ke})`);let Me=oA(ce.property);return!ce.computed&&ce.property.type!=="Identifier"&&(Me=`(${Me})`),ce.computed?`${ke}[${Me}]`:`${ke}.${Me}`}case"FilterExpression":{const ce=U,ke=oA(ce.operand,1/0);return ce.filter.type==="CallExpression"?`${ke} | ${oA(ce.filter)}`:`${ke} | ${ce.filter.value}`}case"SelectExpression":{const ce=U;return`${oA(ce.lhs)} if ${oA(ce.test)}`}case"TestExpression":{const ce=U;return`${oA(ce.operand)} is${ce.negate?" not":""} ${ce.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const ce=U.value.map(oA),ke=U.type==="ArrayLiteral"?"[]":"()";return`${ke[0]}${ce.join(", ")}${ke[1]}`}case"ObjectLiteral":return`{${Array.from(U.value.entries()).map(([ke,Me])=>`${oA(ke)}: ${oA(Me)}`).join(", ")}}`;case"SliceExpression":{const ce=U,ke=ce.start?oA(ce.start):"",Me=ce.stop?oA(ce.stop):"",Le=ce.step?`:${oA(ce.step)}`:"";return`${ke}:${Me}${Le}`}case"KeywordArgumentExpression":{const ce=U;return`${ce.key.value}=${oA(ce.value)}`}case"Ternary":{const ce=U,ke=`${oA(ce.trueExpr)} if ${oA(ce.condition,0)} else ${oA(ce.falseExpr)}`;return Ee>-1?`(${ke})`:ke}default:throw new Error(`Unknown expression type: ${U.type}`)}}var Us=class{parsed;constructor(U){const Ee=D(U,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=it(Ee)}render(U){const Ee=new pt;if(Dt(Ee),U)for(const[Me,Le]of Object.entries(U))Ee.set(Me,Le);return new Tt(Ee).run(this.parsed).value}format(U){return Ls(this.parsed,U?.indent||"	")}}},"./src/backends/onnx.js":(a,n,i)=>{var c;i.r(n),i.d(n,{Tensor:()=>I.Tensor,createInferenceSession:()=>Z,deviceToExecutionProviders:()=>F,isONNXProxy:()=>K,isONNXTensor:()=>z});var p=i("./src/env.js"),m=i("?2ce3"),C=i("onnxruntime-web"),I=i("onnxruntime-common");const E=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),x=[];let D,y;const M=Symbol.for("onnxruntime");if(M in globalThis)y=globalThis[M];else if(p.apis.IS_NODE_ENV){switch(y=m??(c||(c=i.t(m,2))),process.platform){case"win32":x.push("dml");break;case"linux":process.arch==="x64"&&x.push("cuda");break}x.push("cpu"),D=["cpu"]}else y=C,p.apis.IS_WEBNN_AVAILABLE&&x.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),p.apis.IS_WEBGPU_AVAILABLE&&x.push("webgpu"),x.push("wasm"),D=["wasm"];const S=y.InferenceSession;function F(f=null){if(!f)return D;switch(f){case"auto":return x;case"gpu":return x.filter(k=>["webgpu","cuda","dml","webnn-gpu"].includes(k))}if(x.includes(f))return[E[f]??f];throw new Error(`Unsupported device: "${f}". Should be one of: ${x.join(", ")}.`)}let L=null;async function Z(f,k,e){L&&await L;const d=S.create(f,k);L??=d;const B=await d;return B.config=e,B}function z(f){return f instanceof y.Tensor}const N=y?.env;N?.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!N.wasm.wasmPaths&&(N.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${p.env.version}/dist/`),N.wasm.proxy=!1),N?.webgpu&&(N.webgpu.powerPreference="high-performance");function K(){return N?.wasm?.proxy}p.env.backends.onnx=N},"./src/base/feature_extraction_utils.js":(a,n,i)=>{i.r(n),i.d(n,{FeatureExtractor:()=>C,validate_audio_inputs:()=>I});var c=i("./src/utils/constants.js"),p=i("./src/utils/generic.js"),m=i("./src/utils/hub.js");class C extends p.Callable{constructor(x){super(),this.config=x}static async from_pretrained(x,D={}){const y=await(0,m.getModelJSON)(x,c.FEATURE_EXTRACTOR_NAME,!0,D);return new this(y)}}function I(E,x){if(!(E instanceof Float32Array||E instanceof Float64Array))throw new Error(`${x} expects input to be a Float32Array or a Float64Array, but got ${E?.constructor?.name??typeof E} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(a,n,i)=>{i.r(n),i.d(n,{ImageProcessor:()=>f,center_to_corners_format:()=>y,post_process_instance_segmentation:()=>K,post_process_object_detection:()=>M,post_process_panoptic_segmentation:()=>N,post_process_semantic_segmentation:()=>S});var c=i("./src/utils/generic.js"),p=i("./src/utils/tensor.js"),m=i("./src/utils/maths.js");i("./src/utils/image.js");var C=i("./src/utils/core.js"),I=i("./src/utils/hub.js"),E=i("./src/utils/constants.js");function x(k,e,d=0,B=null){const Ae=k/e;let P=(0,m.bankers_round)(Ae)*e;return B!==null&&P>B&&(P=Math.floor(Ae)*e),P<d&&(P=Math.ceil(Ae)*e),P}function D([k,e],d){return[Math.max(Math.floor(k/d),1)*d,Math.max(Math.floor(e/d),1)*d]}function y([k,e,d,B]){return[k-d/2,e-B/2,k+d/2,e+B/2]}function M(k,e=.5,d=null,B=!1){const Ae=k.logits,P=k.pred_boxes,[O,me,ee]=Ae.dims;if(d!==null&&d.length!==O)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ce=[];for(let we=0;we<O;++we){let xe=d!==null?d[we]:null,De={boxes:[],classes:[],scores:[]},ye=Ae[we],Oe=P[we];for(let _e=0;_e<me;++_e){let ne=ye[_e],te=[],pe;if(B){pe=ne.sigmoid().data;for(let le=0;le<pe.length;++le)pe[le]>e&&te.push(le)}else{let le=(0,m.max)(ne.data)[1];if(le===ee-1||(pe=(0,m.softmax)(ne.data),pe[le]<e))continue;te.push(le)}for(const le of te){let Qe=Oe[_e].data;Qe=y(Qe),xe!==null&&(Qe=Qe.map((it,qe)=>it*xe[(qe+1)%2])),De.boxes.push(Qe),De.classes.push(le),De.scores.push(pe[le])}}Ce.push(De)}return Ce}function S(k,e=null){const d=k.logits,B=d.dims[0];if(e!==null&&e.length!==B)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Ae=[];for(let P=0;P<B;++P){const O=e!==null?e[P]:null;let me=d[P];O!==null&&(me=(0,p.interpolate)(me,O,"bilinear",!1));const[ee,Ce]=O??me.dims.slice(-2),we=new p.Tensor("int32",new Int32Array(ee*Ce),[ee,Ce]),xe=me[0].data,De=we.data;for(let _e=1;_e<me.dims[0];++_e){const ne=me[_e].data;for(let te=0;te<ne.length;++te)ne[te]>xe[te]&&(xe[te]=ne[te],De[te]=_e)}const ye=new Array(me.dims[0]);for(let _e=0;_e<De.length;++_e){const ne=De[_e];ye[ne]=ne}const Oe=ye.filter(_e=>_e!==void 0);Ae.push({segmentation:we,labels:Oe})}return Ae}function F(k,e,d,B){const Ae=[],P=[],O=[];for(let me=0;me<k.dims[0];++me){const ee=k[me],Ce=e[me],we=(0,m.max)(ee.data)[1];if(we===B)continue;const De=(0,m.softmax)(ee.data)[we];De>d&&(Ae.push(Ce),P.push(De),O.push(we))}return[Ae,P,O]}function L(k,e,d,B=.5,Ae=.8){const P=[];let O=0,me=0;const ee=e[d].data;for(let we=0;we<k.length;++we)k[we]===d&&(P.push(we),++O),ee[we]>=B&&++me;let Ce=O>0&&me>0;return Ce&&(Ce=O/me>Ae),[Ce,P]}function Z(k,e,d,B,Ae,P=null,O=null){const[me,ee]=O??k[0].dims,Ce=new p.Tensor("int32",new Int32Array(me*ee),[me,ee]),we=[];if(O!==null)for(let _e=0;_e<k.length;++_e)k[_e]=(0,p.interpolate)(k[_e],O,"bilinear",!1);const xe=new Int32Array(k[0].data.length),De=new Float32Array(k[0].data.length);for(let _e=0;_e<k.length;++_e){let ne=e[_e];const te=k[_e].data;for(let pe=0;pe<te.length;++pe)te[pe]*=ne,te[pe]>De[pe]&&(xe[pe]=_e,De[pe]=te[pe])}let ye=0;const Oe=Ce.data;for(let _e=0;_e<d.length;++_e){const ne=d[_e],[te,pe]=L(xe,k,_e,B,Ae);if(te){++ye;for(const le of pe)Oe[le]=ye;we.push({id:ye,label_id:ne,score:e[_e]})}}return[Ce,we]}function z(k,e,d=28,B=56*56,Ae=14*14*4*1280){if(k<d||e<d)throw new Error(`height:${k} or width:${e} must be larger than factor:${d}`);if(Math.max(k,e)/Math.min(k,e)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(k,e)/Math.min(k,e)}`);let P=Math.round(k/d)*d,O=Math.round(e/d)*d;if(P*O>Ae){const me=Math.sqrt(k*e/Ae);P=Math.floor(k/me/d)*d,O=Math.floor(e/me/d)*d}else if(P*O<B){const me=Math.sqrt(B/(k*e));P=Math.ceil(k*me/d)*d,O=Math.ceil(e*me/d)*d}return[P,O]}function N(k,e=.5,d=.5,B=.8,Ae=null,P=null){Ae===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),Ae=new Set);const O=k.class_queries_logits??k.logits,ee=(k.masks_queries_logits??k.pred_masks).sigmoid();let[Ce,we,xe]=O.dims;if(xe-=1,P!==null&&P.length!==Ce)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let De=[];for(let ye=0;ye<Ce;++ye){let Oe=P!==null?P[ye]:null,_e=O[ye],ne=ee[ye],[te,pe,le]=F(_e,ne,e,xe);if(le.length===0){let[qe,ot]=Oe??ne.dims.slice(-2),Pt=new p.Tensor("int32",new Int32Array(qe*ot).fill(-1),[qe,ot]);De.push({segmentation:Pt,segments_info:[]});continue}let[Qe,it]=Z(te,pe,le,d,B,Ae,Oe);De.push({segmentation:Qe,segments_info:it})}return De}function K(k,e=.5,d=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class f extends c.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??this.size!==void 0,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.min_pixels=e.min_pixels,this.max_pixels=e.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,d,B=2){const Ae=e.height,P=e.width,O=d.height,me=d.width;let ee=Math.min(Ae,O),Ce=Math.min(P,me);return ee===Ae&&Ce===P?e:(Ae>P?Ce=Math.floor(P*ee/Ae):P>Ae&&(ee=Math.floor(Ae*Ce/P)),await e.resize(Ce,ee,{resample:B}))}async crop_margin(e,d=200){const B=e.clone().grayscale(),Ae=(0,m.min)(B.data)[0],O=(0,m.max)(B.data)[0]-Ae;if(O===0)return e;const me=d/255;let ee=B.width,Ce=B.height,we=0,xe=0;const De=B.data;for(let ye=0;ye<B.height;++ye){const Oe=ye*B.width;for(let _e=0;_e<B.width;++_e)(De[Oe+_e]-Ae)/O<me&&(ee=Math.min(ee,_e),Ce=Math.min(Ce,ye),we=Math.max(we,_e),xe=Math.max(xe,ye))}return e=await e.crop([ee,Ce,we,xe]),e}pad_image(e,d,B,{mode:Ae="constant",center:P=!1,constant_values:O=0}={}){const[me,ee,Ce]=d;let we,xe;if(typeof B=="number"?(we=B,xe=B):B==="square"?we=xe=Math.max(me,ee):(we=B.width,xe=B.height),we!==ee||xe!==me){const De=new Float32Array(we*xe*Ce);if(Array.isArray(O))for(let _e=0;_e<De.length;++_e)De[_e]=O[_e%Ce];else O!==0&&De.fill(O);const[ye,Oe]=P?[Math.floor((we-ee)/2),Math.floor((xe-me)/2)]:[0,0];for(let _e=0;_e<me;++_e){const ne=(_e+Oe)*we,te=_e*ee;for(let pe=0;pe<ee;++pe){const le=(ne+pe+ye)*Ce,Qe=(te+pe)*Ce;for(let it=0;it<Ce;++it)De[le+it]=e[Qe+it]}}if(Ae==="symmetric"){if(P)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const _e=me-1,ne=ee-1;for(let te=0;te<xe;++te){const pe=te*we,le=(0,C.calculateReflectOffset)(te,_e)*ee;for(let Qe=0;Qe<we;++Qe){if(te<me&&Qe<ee)continue;const it=(pe+Qe)*Ce,qe=(le+(0,C.calculateReflectOffset)(Qe,ne))*Ce;for(let ot=0;ot<Ce;++ot)De[it+ot]=e[qe+ot]}}}e=De,d=[xe,we,Ce]}return[e,d]}rescale(e){for(let d=0;d<e.length;++d)e[d]=this.rescale_factor*e[d]}get_resize_output_image_size(e,d){const[B,Ae]=e.size;let P,O;if(this.do_thumbnail){const{height:me,width:ee}=d;P=Math.min(me,ee)}else Number.isInteger(d)?(P=d,O=this.config.max_size??P):d!==void 0&&(P=d.shortest_edge,O=d.longest_edge);if(P!==void 0||O!==void 0){const me=P===void 0?1:Math.max(P/B,P/Ae),ee=B*me,Ce=Ae*me,we=O===void 0?1:Math.min(O/ee,O/Ce);let xe=Math.floor(Number((ee*we).toFixed(2))),De=Math.floor(Number((Ce*we).toFixed(2)));return this.size_divisibility!==void 0&&([xe,De]=D([xe,De],this.size_divisibility)),[xe,De]}else if(d!==void 0&&d.width!==void 0&&d.height!==void 0){let me=d.width,ee=d.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ce=ee/Ae,we=me/B;Math.abs(1-we)<Math.abs(1-Ce)?Ce=we:we=Ce,ee=x(Ce*Ae,this.config.ensure_multiple_of),me=x(we*B,this.config.ensure_multiple_of)}return[me,ee]}else{if(this.size_divisibility!==void 0)return D([B,Ae],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const me=this.config.patch_size*this.config.merge_size;return z(Ae,B,me,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(d)}`)}}async resize(e){const[d,B]=this.get_resize_output_image_size(e,this.size);return await e.resize(d,B,{resample:this.resample})}async preprocess(e,{do_normalize:d=null,do_pad:B=null,do_convert_rgb:Ae=null,do_convert_grayscale:P=null,do_flip_channel_order:O=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[me,ee]=e.size;if(Ae??this.do_convert_rgb?e=e.rgb():P&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let ye,Oe;Number.isInteger(this.crop_size)?(ye=this.crop_size,Oe=this.crop_size):(ye=this.crop_size.width,Oe=this.crop_size.height),e=await e.center_crop(ye,Oe)}const Ce=[e.height,e.width];let we=Float32Array.from(e.data),xe=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(we),d??this.do_normalize){let ye=this.image_mean;Array.isArray(this.image_mean)||(ye=new Array(e.channels).fill(ye));let Oe=this.image_std;if(Array.isArray(this.image_std)||(Oe=new Array(e.channels).fill(ye)),ye.length!==e.channels||Oe.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ye.length}) and \`image_std\` (${Oe.length}) must match the number of channels in the image (${e.channels}).`);for(let _e=0;_e<we.length;_e+=e.channels)for(let ne=0;ne<e.channels;++ne)we[_e+ne]=(we[_e+ne]-ye[ne])/Oe[ne]}if(B??this.do_pad){if(this.pad_size)[we,xe]=this.pad_image(we,[e.height,e.width,e.channels],this.pad_size);else if(this.size_divisibility){const[ye,Oe]=D([xe[1],xe[0]],this.size_divisibility);[we,xe]=this.pad_image(we,xe,{width:ye,height:Oe})}}if(O??this.do_flip_channel_order){if(xe[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ye=0;ye<we.length;ye+=3){const Oe=we[ye];we[ye]=we[ye+2],we[ye+2]=Oe}}const De=new p.Tensor("float32",we,xe).permute(2,0,1);return{original_size:[ee,me],reshaped_input_size:Ce,pixel_values:De}}async _call(e,...d){Array.isArray(e)||(e=[e]);const B=await Promise.all(e.map(P=>this.preprocess(P)));return{pixel_values:(0,p.stack)(B.map(P=>P.pixel_values),0),original_sizes:B.map(P=>P.original_size),reshaped_input_sizes:B.map(P=>P.reshaped_input_size)}}static async from_pretrained(e,d={}){const B=await(0,I.getModelJSON)(e,E.IMAGE_PROCESSOR_NAME,!0,d);return new this(B)}}},"./src/base/processing_utils.js":(a,n,i)=>{i.r(n),i.d(n,{Processor:()=>C});var c=i("./src/utils/constants.js"),p=i("./src/utils/generic.js"),m=i("./src/utils/hub.js");class C extends p.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(E,x,D){super(),this.config=E,this.components=x,this.chat_template=D}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(E,x={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(E,{tokenize:!1,chat_template:this.chat_template??void 0,...x})}batch_decode(...E){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...E)}decode(...E){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...E)}async _call(E,...x){for(const D of[this.image_processor,this.feature_extractor,this.tokenizer])if(D)return D(E,...x);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(E,x={}){const[D,y,M]=await Promise.all([this.uses_processor_config?(0,m.getModelJSON)(E,c.PROCESSOR_NAME,!0,x):{},Promise.all(this.classes.filter(S=>S in this).map(async S=>{const F=await this[S].from_pretrained(E,x);return[S.replace(/_class$/,""),F]})).then(Object.fromEntries),this.uses_chat_template_file?(0,m.getModelText)(E,c.CHAT_TEMPLATE_NAME,!0,x):null]);return new this(D,y,M)}}},"./src/configs.js":(a,n,i)=>{i.r(n),i.d(n,{AutoConfig:()=>D,PretrainedConfig:()=>x,getCacheShapes:()=>I});var c=i("./src/utils/core.js"),p=i("./src/utils/hub.js");async function m(y,M){return await(0,p.getModelJSON)(y,"config.json",!0,M)}function C(y){const M={};let S={};switch(y.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":S=C(y.text_config);break;case"moondream1":S=C(y.phi_config);break;case"musicgen":S=C(y.decoder);break;case"multi_modality":S=C(y.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":M.num_heads="num_attention_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size",M.num_attention_heads="num_attention_heads",M.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.dim_kv="head_dim";break;case"openelm":M.num_heads="num_kv_heads",M.num_layers="num_transformer_layers",M.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":M.num_heads="num_heads",M.num_layers="num_layers",M.hidden_size="hidden_size";break;case"bloom":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="hidden_size";break;case"mpt":M.num_heads="n_heads",M.num_layers="n_layers",M.hidden_size="d_model";break;case"exaone":M.num_heads="num_key_value_heads",M.num_layers="num_layers",M.dim_kv="head_dim",M.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":M.num_decoder_layers="num_decoder_layers",M.num_decoder_heads="num_heads",M.decoder_dim_kv="d_kv",M.num_encoder_layers="num_layers",M.num_encoder_heads="num_heads",M.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="d_model",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="d_model";break;case"speecht5":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="hidden_size",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="hidden_size";break;case"trocr":M.num_encoder_layers=M.num_decoder_layers="decoder_layers",M.num_encoder_heads=M.num_decoder_heads="decoder_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="d_model";break;case"musicgen_decoder":M.num_encoder_layers=M.num_decoder_layers="num_hidden_layers",M.num_encoder_heads=M.num_decoder_heads="num_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"moonshine":M.num_decoder_layers="decoder_num_hidden_layers",M.num_decoder_heads="decoder_num_key_value_heads",M.num_encoder_layers="encoder_num_hidden_layers",M.num_encoder_heads="encoder_num_key_value_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const L=C(y.decoder),Z="num_decoder_layers"in L,z=(0,c.pick)(y,["model_type","is_encoder_decoder"]);return Z?(z.num_decoder_layers=L.num_decoder_layers,z.num_decoder_heads=L.num_decoder_heads,z.decoder_hidden_size=L.decoder_hidden_size,z.num_encoder_layers=L.num_encoder_layers,z.num_encoder_heads=L.num_encoder_heads,z.encoder_hidden_size=L.encoder_hidden_size):(z.num_layers=L.num_layers,z.num_heads=L.num_heads,z.hidden_size=L.hidden_size),z}const F={...S,...(0,c.pick)(y,["model_type","multi_query","is_encoder_decoder"])};for(const L in M)F[L]=y[M[L]];return F}function I(y,M){if(y.model_type==="lfm2"){const S=M?.prefix??"past_key_values",F=S==="present"?"present":"past",L={},{layer_types:Z,num_attention_heads:z,num_key_value_heads:N,hidden_size:K,conv_L_cache:f}=y,k=K/z,e=M?.batch_size??1;for(let d=0;d<Z.length;++d)if(Z[d]==="full_attention")for(const B of["key","value"])L[`${S}.${d}.${B}`]=[e,N,0,k];else if(Z[d]==="conv")L[`${F}_conv.${d}`]=[e,K,f];else throw new Error(`Unsupported layer type: ${Z[d]}`);return L}return E(y,M)}function E(y,{prefix:M="past_key_values",batch_size:S=1}={}){const F={},L=y.normalized_config;if(L.is_encoder_decoder&&"num_encoder_heads"in L&&"num_decoder_heads"in L){const Z=L.encoder_dim_kv??L.encoder_hidden_size/L.num_encoder_heads,z=L.decoder_dim_kv??L.decoder_hidden_size/L.num_decoder_heads,N=[S,L.num_encoder_heads,0,Z],K=[S,L.num_decoder_heads,0,z];for(let f=0;f<L.num_decoder_layers;++f)F[`${M}.${f}.encoder.key`]=N,F[`${M}.${f}.encoder.value`]=N,F[`${M}.${f}.decoder.key`]=K,F[`${M}.${f}.decoder.value`]=K}else{const Z=L.num_heads,z=L.num_layers,N=L.dim_kv??L.hidden_size/(L.num_attention_heads??Z);if(L.model_type==="falcon"){const K=[S*Z,0,N];for(let f=0;f<z;++f)F[`${M}.${f}.key`]=K,F[`${M}.${f}.value`]=K}else if(L.multi_query){const K=[S*Z,0,2*N];for(let f=0;f<z;++f)F[`${M}.${f}.key_value`]=K}else if(L.model_type==="bloom"){const K=[S*Z,N,0],f=[S*Z,0,N];for(let k=0;k<z;++k)F[`${M}.${k}.key`]=K,F[`${M}.${k}.value`]=f}else if(L.model_type==="openelm")for(let K=0;K<z;++K){const f=[S,Z[K],0,N];F[`${M}.${K}.key`]=f,F[`${M}.${K}.value`]=f}else{const K=[S,Z,0,N];for(let f=0;f<z;++f)F[`${M}.${f}.key`]=K,F[`${M}.${f}.value`]=K}}return F}class x{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(M){Object.assign(this,M),this.normalized_config=C(this)}static async from_pretrained(M,{progress_callback:S=null,config:F=null,cache_dir:L=null,local_files_only:Z=!1,revision:z="main"}={}){F&&!(F instanceof x)&&(F=new x(F));const N=F??await m(M,{progress_callback:S,config:F,cache_dir:L,local_files_only:Z,revision:z});return new this(N)}}class D{static async from_pretrained(...M){return x.from_pretrained(...M)}}},"./src/env.js":(a,n,i)=>{i.r(n),i.d(n,{apis:()=>z,env:()=>d});var c=i("?db59"),p=i("?383f"),m=i("?fa4b");const C="3.7.1",I=typeof window<"u"&&typeof window.document<"u",E=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),x=typeof self<"u"&&"caches"in self,D=typeof navigator<"u"&&"gpu"in navigator,y=typeof navigator<"u"&&"ml"in navigator,M=typeof process<"u",S=M&&process?.release?.name==="node",F=!B(c),L=!B(p),Z=typeof globalThis.Deno<"u",z=Object.freeze({IS_BROWSER_ENV:I,IS_WEBWORKER_ENV:E,IS_WEB_CACHE_AVAILABLE:x,IS_WEBGPU_AVAILABLE:D,IS_WEBNN_AVAILABLE:y,IS_PROCESS_AVAILABLE:M,IS_NODE_ENV:S,IS_FS_AVAILABLE:F,IS_PATH_AVAILABLE:L}),N=F&&L;let K="./";if(N){const Ae=Object(import.meta).url;Ae?K=p.dirname(p.dirname(m.fileURLToPath(Ae))):typeof __dirname<"u"&&(K=p.dirname(__dirname))}const f=N?p.join(K,"/.cache/"):null,k="/models/",e=N?p.join(K,k):k,d={version:C,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(I||E),localModelPath:e,useFS:F,useBrowserCache:x&&!Z,useFSCache:F,cacheDir:f,useCustomCache:!1,customCache:null};function B(Ae){return Object.keys(Ae).length===0}},"./src/generation/configuration_utils.js":(a,n,i)=>{i.r(n),i.d(n,{GenerationConfig:()=>p});var c=i("./src/utils/core.js");class p{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(C){Object.assign(this,(0,c.pick)(C,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(a,n,i)=>{i.r(n),i.d(n,{ClassifierFreeGuidanceLogitsProcessor:()=>z,ForcedBOSTokenLogitsProcessor:()=>E,ForcedEOSTokenLogitsProcessor:()=>x,LogitsProcessor:()=>m,LogitsProcessorList:()=>I,LogitsWarper:()=>C,MinLengthLogitsProcessor:()=>F,MinNewTokensLengthLogitsProcessor:()=>L,NoBadWordsLogitsProcessor:()=>Z,NoRepeatNGramLogitsProcessor:()=>M,RepetitionPenaltyLogitsProcessor:()=>S,SuppressTokensAtBeginLogitsProcessor:()=>D,TemperatureLogitsWarper:()=>N,TopKLogitsWarper:()=>f,TopPLogitsWarper:()=>K,WhisperTimeStampLogitsProcessor:()=>y});var c=i("./src/utils/generic.js");i("./src/utils/tensor.js");var p=i("./src/utils/maths.js");class m extends c.Callable{_call(e,d){throw Error("`_call` should be implemented in a subclass")}}class C extends c.Callable{_call(e,d){throw Error("`_call` should be implemented in a subclass")}}class I extends c.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,d){let B=d;for(const Ae of this.processors)B=Ae(e,B);return B}[Symbol.iterator](){return this.processors.values()}}class E extends m{constructor(e){super(),this.bos_token_id=e}_call(e,d){for(let B=0;B<e.length;++B)if(e[B].length===1){const Ae=d[B].data;Ae.fill(-1/0),Ae[this.bos_token_id]=0}return d}}class x extends m{constructor(e,d){super(),this.max_length=e,this.eos_token_id=Array.isArray(d)?d:[d]}_call(e,d){for(let B=0;B<e.length;++B)if(e[B].length===this.max_length-1){const Ae=d[B].data;Ae.fill(-1/0);for(const P of this.eos_token_id)Ae[P]=0}return d}}class D extends m{constructor(e,d){super(),this.begin_suppress_tokens=e,this.begin_index=d}_call(e,d){for(let B=0;B<e.length;++B)if(e[B].length===this.begin_index){const Ae=d[B].data;for(const P of this.begin_suppress_tokens)Ae[P]=-1/0}return d}}class y extends m{constructor(e,d){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=d.length,d.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,d){for(let B=0;B<e.length;++B){const Ae=d[B].data;if(Ae[this.no_timestamps_token_id]=-1/0,e[B].length===this.begin_index-1){Ae.fill(-1/0),Ae[this.timestamp_begin]=0;continue}const P=e[B].slice(this.begin_index),O=P.length>=1&&P[P.length-1]>=this.timestamp_begin,me=P.length<2||P[P.length-2]>=this.timestamp_begin;if(O&&(me?Ae.subarray(this.timestamp_begin).fill(-1/0):Ae.subarray(0,this.eos_token_id).fill(-1/0)),e[B].length===this.begin_index&&this.max_initial_timestamp_index!==null){const xe=this.timestamp_begin+this.max_initial_timestamp_index;Ae.subarray(xe+1).fill(-1/0)}const ee=(0,p.log_softmax)(Ae),Ce=Math.log(ee.subarray(this.timestamp_begin).map(Math.exp).reduce((xe,De)=>xe+De)),we=(0,p.max)(ee.subarray(0,this.timestamp_begin))[0];Ce>we&&Ae.subarray(0,this.timestamp_begin).fill(-1/0)}return d}}class M extends m{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const d=e.length,B=[];for(let P=0;P<d+1-this.no_repeat_ngram_size;++P){const O=[];for(let me=0;me<this.no_repeat_ngram_size;++me)O.push(e[P+me]);B.push(O.map(Number))}const Ae=new Map;for(const P of B){const O=P.slice(0,P.length-1),me=JSON.stringify(O),ee=Ae.get(me)??[];ee.push(P[P.length-1]),Ae.set(me,ee)}return Ae}getGeneratedNgrams(e,d){const B=d.slice(d.length+1-this.no_repeat_ngram_size,d.length);return e.get(JSON.stringify(B.map(Number)))??[]}calcBannedNgramTokens(e){const d=[];if(e.length+1<this.no_repeat_ngram_size)return d;{const B=this.getNgrams(e);return this.getGeneratedNgrams(B,e)}}_call(e,d){for(let B=0;B<e.length;++B){const Ae=d[B].data,P=this.calcBannedNgramTokens(e[B]);for(const O of P)Ae[O]=-1/0}return d}}class S extends m{constructor(e){super(),this.penalty=e}_call(e,d){for(let B=0;B<e.length;++B){const Ae=d[B].data;for(const P of new Set(e[B])){const O=Number(P);Ae[O]<0?Ae[O]*=this.penalty:Ae[O]/=this.penalty}}return d}}class F extends m{constructor(e,d){super(),this.min_length=e,this.eos_token_id=Array.isArray(d)?d:[d]}_call(e,d){for(let B=0;B<e.length;++B)if(e[B].length<this.min_length){const Ae=d[B].data;for(const P of this.eos_token_id)Ae[P]=-1/0}return d}}class L extends m{constructor(e,d,B){super(),this.prompt_length_to_skip=e,this.min_new_tokens=d,this.eos_token_id=Array.isArray(B)?B:[B]}_call(e,d){for(let B=0;B<e.length;++B)if(e[B].length-this.prompt_length_to_skip<this.min_new_tokens){const P=d[B].data;for(const O of this.eos_token_id)P[O]=-1/0}return d}}class Z extends m{constructor(e,d){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(d)?d:[d]}_call(e,d){for(let B=0;B<e.length;++B){const Ae=d[B].data,P=e[B];for(const O of this.bad_words_ids){if(P.length<O.length-1)continue;let me=!0;for(let ee=1;ee<=O.length-1;++ee)if(O.at(-ee-1)!=P.at(-ee)){me=!1;break}me&&(Ae[O.at(-1)]=-1/0)}}return d}}class z extends m{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,d){if(d.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${d.dims[0]} for the logits and ${e.length} for the input ids.`);const B=e.length,Ae=d.slice([0,B],null),P=d.slice([B,d.dims[0]],null);for(let O=0;O<P.data.length;++O)P.data[O]+=(Ae.data[O]-P.data[O])*this.guidance_scale;return P}}class N extends C{constructor(e){super(),this.temperature=e}_call(e,d){const B=d.data;for(let Ae=0;Ae<B.length;++Ae)B[Ae]/=this.temperature;return d}}class K extends C{constructor(e,{filter_value:d=-1/0,min_tokens_to_keep:B=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(B)||B<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${B}`);this.top_p=e,this.filter_value=d,this.min_tokens_to_keep=B}}class f extends C{constructor(e,{filter_value:d=-1/0,min_tokens_to_keep:B=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,B),this.filter_value=d}}},"./src/generation/logits_sampler.js":(a,n,i)=>{i.r(n),i.d(n,{LogitsSampler:()=>C});var c=i("./src/utils/generic.js"),p=i("./src/utils/tensor.js"),m=i("./src/utils/maths.js");i("./src/generation/configuration_utils.js");class C extends c.Callable{constructor(y){super(),this.generation_config=y}async _call(y){return this.sample(y)}async sample(y){throw Error("sample should be implemented in subclasses.")}getLogits(y,M){let S=y.dims.at(-1),F=y.data;if(M===-1)F=F.slice(-S);else{let L=M*S;F=F.slice(L,L+S)}return F}randomSelect(y){let M=0;for(let F=0;F<y.length;++F)M+=y[F];let S=Math.random()*M;for(let F=0;F<y.length;++F)if(S-=y[F],S<=0)return F;return 0}static getSampler(y){if(y.do_sample)return new E(y);if(y.num_beams>1)return new x(y);if(y.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${y.num_return_sequences}.`);return new I(y)}}class I extends C{async sample(y){const M=(0,m.max)(y.data)[1];return[[BigInt(M),0]]}}class E extends C{async sample(y){let M=y.dims.at(-1);this.generation_config.top_k>0&&(M=Math.min(this.generation_config.top_k,M));const[S,F]=await(0,p.topk)(y,M),L=(0,m.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},()=>{const Z=this.randomSelect(L);return[F.data[Z],Math.log(L[Z])]})}}class x extends C{async sample(y){let M=y.dims.at(-1);this.generation_config.top_k>0&&(M=Math.min(this.generation_config.top_k,M));const[S,F]=await(0,p.topk)(y,M),L=(0,m.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},(Z,z)=>[F.data[z],Math.log(L[z])])}}},"./src/generation/stopping_criteria.js":(a,n,i)=>{i.r(n),i.d(n,{EosTokenCriteria:()=>I,InterruptableStoppingCriteria:()=>E,MaxLengthCriteria:()=>C,StoppingCriteria:()=>p,StoppingCriteriaList:()=>m});var c=i("./src/utils/generic.js");class p extends c.Callable{_call(D,y){throw Error("StoppingCriteria needs to be subclassed")}}class m extends c.Callable{constructor(){super(),this.criteria=[]}push(D){this.criteria.push(D)}extend(D){D instanceof m?D=D.criteria:D instanceof p&&(D=[D]),this.criteria.push(...D)}_call(D,y){const M=new Array(D.length).fill(!1);for(const S of this.criteria){const F=S(D,y);for(let L=0;L<M.length;++L)M[L]||=F[L]}return M}[Symbol.iterator](){return this.criteria.values()}}class C extends p{constructor(D,y=null){super(),this.max_length=D,this.max_position_embeddings=y}_call(D){return D.map(y=>y.length>=this.max_length)}}class I extends p{constructor(D){super(),Array.isArray(D)||(D=[D]),this.eos_token_id=D}_call(D,y){return D.map(M=>{const S=M.at(-1);return this.eos_token_id.some(F=>S==F)})}}class E extends p{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(D,y){return new Array(D.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(a,n,i)=>{i.r(n),i.d(n,{BaseStreamer:()=>C,TextStreamer:()=>E,WhisperTextStreamer:()=>x});var c=i("./src/utils/core.js"),p=i("./src/tokenizers.js"),m=i("./src/env.js");class C{put(y){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const I=m.apis.IS_PROCESS_AVAILABLE?D=>process.stdout.write(D):D=>console.log(D);class E extends C{constructor(y,{skip_prompt:M=!1,callback_function:S=null,token_callback_function:F=null,skip_special_tokens:L=!0,decode_kwargs:Z={},...z}={}){super(),this.tokenizer=y,this.skip_prompt=M,this.callback_function=S??I,this.token_callback_function=F,this.decode_kwargs={skip_special_tokens:L,...Z,...z},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(y){if(y.length>1)throw Error("TextStreamer only supports batch size of 1");const M=this.next_tokens_are_prompt;if(M&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const S=y[0];this.token_callback_function?.(S),this.token_cache=(0,c.mergeArrays)(this.token_cache,S);const F=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let L;M||F.endsWith(`
`)?(L=F.slice(this.print_len),this.token_cache=[],this.print_len=0):F.length>0&&(0,p.is_chinese_char)(F.charCodeAt(F.length-1))?(L=F.slice(this.print_len),this.print_len+=L.length):(L=F.slice(this.print_len,F.lastIndexOf(" ")+1),this.print_len+=L.length),this.on_finalized_text(L,!1)}end(){let y;this.token_cache.length>0?(y=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):y="",this.next_tokens_are_prompt=!0,this.on_finalized_text(y,!0)}on_finalized_text(y,M){y.length>0&&this.callback_function?.(y),M&&this.callback_function===I&&m.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class x extends E{constructor(y,{skip_prompt:M=!1,callback_function:S=null,token_callback_function:F=null,on_chunk_start:L=null,on_chunk_end:Z=null,on_finalize:z=null,time_precision:N=.02,skip_special_tokens:K=!0,decode_kwargs:f={}}={}){super(y,{skip_prompt:M,skip_special_tokens:K,callback_function:S,token_callback_function:F,decode_kwargs:f}),this.timestamp_begin=y.timestamp_begin,this.on_chunk_start=L,this.on_chunk_end=Z,this.on_finalize=z,this.time_precision=N,this.waiting_for_timestamp=!1}put(y){if(y.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const M=y[0];if(M.length===1){const S=Number(M[0])-this.timestamp_begin;if(S>=0){const F=S*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(F):this.on_chunk_start?.(F),this.waiting_for_timestamp=!this.waiting_for_timestamp,this.token_callback_function?.(M);return}}return super.put(y)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(a,n,i)=>{i.r(n),i.d(n,{ASTForAudioClassification:()=>Fa,ASTModel:()=>hn,ASTPreTrainedModel:()=>BA,AlbertForMaskedLM:()=>cA,AlbertForQuestionAnswering:()=>bt,AlbertForSequenceClassification:()=>Je,AlbertModel:()=>Mt,AlbertPreTrainedModel:()=>Bt,ArceeForCausalLM:()=>Yr,ArceeModel:()=>SA,ArceePreTrainedModel:()=>MA,AutoModel:()=>O6,AutoModelForAudioClassification:()=>tw,AutoModelForAudioFrameClassification:()=>rw,AutoModelForAudioTextToText:()=>dw,AutoModelForCTC:()=>ew,AutoModelForCausalLM:()=>W6,AutoModelForDepthEstimation:()=>iw,AutoModelForDocumentQuestionAnswering:()=>sw,AutoModelForImageClassification:()=>U6,AutoModelForImageFeatureExtraction:()=>cw,AutoModelForImageMatting:()=>aw,AutoModelForImageSegmentation:()=>K6,AutoModelForImageTextToText:()=>uw,AutoModelForImageToImage:()=>nw,AutoModelForMaskGeneration:()=>$6,AutoModelForMaskedLM:()=>V6,AutoModelForNormalEstimation:()=>ow,AutoModelForObjectDetection:()=>J6,AutoModelForPoseEstimation:()=>lw,AutoModelForQuestionAnswering:()=>Y6,AutoModelForSemanticSegmentation:()=>X6,AutoModelForSeq2SeqLM:()=>z6,AutoModelForSequenceClassification:()=>_6,AutoModelForSpeechSeq2Seq:()=>L6,AutoModelForTextToSpectrogram:()=>R6,AutoModelForTextToWaveform:()=>j6,AutoModelForTokenClassification:()=>N6,AutoModelForUniversalSegmentation:()=>Z6,AutoModelForVision2Seq:()=>H6,AutoModelForXVector:()=>Aw,AutoModelForZeroShotObjectDetection:()=>q6,BartForConditionalGeneration:()=>ur,BartForSequenceClassification:()=>yA,BartModel:()=>Ar,BartPretrainedModel:()=>ys,BaseModelOutput:()=>at,BeitForImageClassification:()=>Ai,BeitModel:()=>Qn,BeitPreTrainedModel:()=>Aa,BertForMaskedLM:()=>Y,BertForQuestionAnswering:()=>fe,BertForSequenceClassification:()=>We,BertForTokenClassification:()=>rt,BertModel:()=>Ye,BertPreTrainedModel:()=>Ze,BlenderbotForConditionalGeneration:()=>wA,BlenderbotModel:()=>Wt,BlenderbotPreTrainedModel:()=>JA,BlenderbotSmallForConditionalGeneration:()=>fn,BlenderbotSmallModel:()=>Ga,BlenderbotSmallPreTrainedModel:()=>Tr,BloomForCausalLM:()=>s,BloomModel:()=>r,BloomPreTrainedModel:()=>A,CLIPModel:()=>En,CLIPPreTrainedModel:()=>da,CLIPSegForImageSegmentation:()=>eA,CLIPSegModel:()=>qn,CLIPSegPreTrainedModel:()=>sn,CLIPTextModel:()=>An,CLIPTextModelWithProjection:()=>kt,CLIPVisionModel:()=>Gs,CLIPVisionModelWithProjection:()=>Mi,CamembertForMaskedLM:()=>yt,CamembertForQuestionAnswering:()=>Sr,CamembertForSequenceClassification:()=>gA,CamembertForTokenClassification:()=>lA,CamembertModel:()=>Ht,CamembertPreTrainedModel:()=>Ot,CausalLMOutput:()=>Oi,CausalLMOutputWithPast:()=>gw,ChineseCLIPModel:()=>Jn,ChineseCLIPPreTrainedModel:()=>vi,ClapAudioModelWithProjection:()=>Mf,ClapModel:()=>kf,ClapPreTrainedModel:()=>Y0,ClapTextModelWithProjection:()=>Ef,CodeGenForCausalLM:()=>dt,CodeGenModel:()=>$e,CodeGenPreTrainedModel:()=>Te,CohereForCausalLM:()=>oo,CohereModel:()=>qo,CoherePreTrainedModel:()=>io,ConvBertForMaskedLM:()=>ZA,ConvBertForQuestionAnswering:()=>U,ConvBertForSequenceClassification:()=>oA,ConvBertForTokenClassification:()=>Us,ConvBertModel:()=>Qr,ConvBertPreTrainedModel:()=>wt,ConvNextForImageClassification:()=>pd,ConvNextModel:()=>gd,ConvNextPreTrainedModel:()=>mc,ConvNextV2ForImageClassification:()=>md,ConvNextV2Model:()=>hd,ConvNextV2PreTrainedModel:()=>Cc,DFineForObjectDetection:()=>S1,DFineModel:()=>Q1,DFinePreTrainedModel:()=>oc,DPTForDepthEstimation:()=>Z1,DPTModel:()=>X1,DPTPreTrainedModel:()=>gc,DacDecoderModel:()=>dg,DacDecoderOutput:()=>lg,DacEncoderModel:()=>ug,DacEncoderOutput:()=>og,DacModel:()=>cg,DacPreTrainedModel:()=>q0,DebertaForMaskedLM:()=>Ms,DebertaForQuestionAnswering:()=>Rs,DebertaForSequenceClassification:()=>DA,DebertaForTokenClassification:()=>Fr,DebertaModel:()=>kr,DebertaPreTrainedModel:()=>GA,DebertaV2ForMaskedLM:()=>js,DebertaV2ForQuestionAnswering:()=>Ws,DebertaV2ForSequenceClassification:()=>LA,DebertaV2ForTokenClassification:()=>Ks,DebertaV2Model:()=>bs,DebertaV2PreTrainedModel:()=>xr,DecisionTransformerModel:()=>Yf,DecisionTransformerPreTrainedModel:()=>Vf,DeiTForImageClassification:()=>z1,DeiTModel:()=>N1,DeiTPreTrainedModel:()=>cc,DepthAnythingForDepthEstimation:()=>q1,DepthAnythingPreTrainedModel:()=>J1,DepthProForDepthEstimation:()=>rd,DepthProPreTrainedModel:()=>Ad,DetrForObjectDetection:()=>si,DetrForSegmentation:()=>mo,DetrModel:()=>ri,DetrObjectDetectionOutput:()=>Co,DetrPreTrainedModel:()=>Na,DetrSegmentationOutput:()=>s0,Dinov2ForImageClassification:()=>bd,Dinov2Model:()=>Cd,Dinov2PreTrainedModel:()=>bc,Dinov2WithRegistersForImageClassification:()=>wd,Dinov2WithRegistersModel:()=>Id,Dinov2WithRegistersPreTrainedModel:()=>Ic,DistilBertForMaskedLM:()=>qt,DistilBertForQuestionAnswering:()=>vs,DistilBertForSequenceClassification:()=>yr,DistilBertForTokenClassification:()=>Br,DistilBertModel:()=>cs,DistilBertPreTrainedModel:()=>Cr,DonutSwinModel:()=>fd,DonutSwinPreTrainedModel:()=>dd,EfficientNetForImageClassification:()=>Tf,EfficientNetModel:()=>Pf,EfficientNetPreTrainedModel:()=>Tc,ElectraForMaskedLM:()=>ke,ElectraForQuestionAnswering:()=>st,ElectraForSequenceClassification:()=>Me,ElectraForTokenClassification:()=>Le,ElectraModel:()=>ce,ElectraPreTrainedModel:()=>Ee,Ernie4_5_ForCausalLM:()=>mf,Ernie4_5_Model:()=>hf,Ernie4_5_PretrainedModel:()=>xc,EsmForMaskedLM:()=>us,EsmForSequenceClassification:()=>ut,EsmForTokenClassification:()=>ht,EsmModel:()=>Is,EsmPreTrainedModel:()=>Dr,ExaoneForCausalLM:()=>Xo,ExaoneModel:()=>Bn,ExaonePreTrainedModel:()=>Pi,FalconForCausalLM:()=>wf,FalconModel:()=>If,FalconPreTrainedModel:()=>Bc,FastViTForImageClassification:()=>bA,FastViTModel:()=>$t,FastViTPreTrainedModel:()=>Rt,Florence2ForConditionalGeneration:()=>wn,Florence2PreTrainedModel:()=>In,GLPNForDepthEstimation:()=>ud,GLPNModel:()=>cd,GLPNPreTrainedModel:()=>hc,GPT2LMHeadModel:()=>Vs,GPT2Model:()=>an,GPT2PreTrainedModel:()=>Ss,GPTBigCodeForCausalLM:()=>ue,GPTBigCodeModel:()=>se,GPTBigCodePreTrainedModel:()=>q,GPTJForCausalLM:()=>W,GPTJModel:()=>G,GPTJPreTrainedModel:()=>sr,GPTNeoForCausalLM:()=>vn,GPTNeoModel:()=>Os,GPTNeoPreTrainedModel:()=>Er,GPTNeoXForCausalLM:()=>xn,GPTNeoXModel:()=>$n,GPTNeoXPreTrainedModel:()=>nn,Gemma2ForCausalLM:()=>Jr,Gemma2Model:()=>Qi,Gemma2PreTrainedModel:()=>Gi,Gemma3ForCausalLM:()=>$o,Gemma3Model:()=>ti,Gemma3PreTrainedModel:()=>FA,Gemma3nForConditionalGeneration:()=>en,Gemma3nPreTrainedModel:()=>qs,GemmaForCausalLM:()=>ta,GemmaModel:()=>ln,GemmaPreTrainedModel:()=>lo,GlmForCausalLM:()=>so,GlmModel:()=>Ko,GlmPreTrainedModel:()=>ea,GraniteForCausalLM:()=>Pn,GraniteModel:()=>on,GranitePreTrainedModel:()=>Ti,GroundingDinoForObjectDetection:()=>Ed,GroundingDinoPreTrainedModel:()=>kd,GroupViTModel:()=>zt,GroupViTPreTrainedModel:()=>gt,HeliumForCausalLM:()=>Uo,HeliumModel:()=>Di,HeliumPreTrainedModel:()=>ws,HieraForImageClassification:()=>R1,HieraModel:()=>L1,HieraPreTrainedModel:()=>uc,HubertForCTC:()=>$d,HubertForSequenceClassification:()=>ef,HubertModel:()=>qd,HubertPreTrainedModel:()=>E6,IJepaForImageClassification:()=>H,IJepaModel:()=>V,IJepaPreTrainedModel:()=>_,Idefics3ForConditionalGeneration:()=>kn,Idefics3PreTrainedModel:()=>br,ImageMattingOutput:()=>Wg,JAISLMHeadModel:()=>Fs,JAISModel:()=>Nr,JAISPreTrainedModel:()=>Mn,JinaCLIPModel:()=>rn,JinaCLIPPreTrainedModel:()=>_a,JinaCLIPTextModel:()=>Qs,JinaCLIPVisionModel:()=>gr,Lfm2ForCausalLM:()=>Hr,Lfm2Model:()=>yn,Lfm2PreTrainedModel:()=>ss,LiteWhisperForConditionalGeneration:()=>Kn,LlamaForCausalLM:()=>iA,LlamaModel:()=>_t,LlamaPreTrainedModel:()=>xt,LlavaForConditionalGeneration:()=>lt,LlavaOnevisionForConditionalGeneration:()=>Ei,LlavaPreTrainedModel:()=>bn,LlavaQwen2ForCausalLM:()=>ca,LongT5ForConditionalGeneration:()=>PA,LongT5Model:()=>QA,LongT5PreTrainedModel:()=>tr,M2M100ForConditionalGeneration:()=>Qd,M2M100Model:()=>Gd,M2M100PreTrainedModel:()=>Ec,MBartForCausalLM:()=>Pr,MBartForConditionalGeneration:()=>dr,MBartForSequenceClassification:()=>Bs,MBartModel:()=>Zs,MBartPreTrainedModel:()=>rr,MPNetForMaskedLM:()=>ka,MPNetForQuestionAnswering:()=>X,MPNetForSequenceClassification:()=>dn,MPNetForTokenClassification:()=>Fe,MPNetModel:()=>qa,MPNetPreTrainedModel:()=>Xs,MT5ForConditionalGeneration:()=>cr,MT5Model:()=>xs,MT5PreTrainedModel:()=>Or,MarianMTModel:()=>Td,MarianModel:()=>Pd,MarianPreTrainedModel:()=>kc,MaskFormerForInstanceSegmentation:()=>ld,MaskFormerModel:()=>od,MaskFormerPreTrainedModel:()=>pc,MaskedLMOutput:()=>hs,Metric3DForDepthEstimation:()=>ad,Metric3DPreTrainedModel:()=>sd,Metric3Dv2ForDepthEstimation:()=>id,Metric3Dv2PreTrainedModel:()=>nd,MgpstrForSceneTextRecognition:()=>Zf,MgpstrModelOutput:()=>Kf,MgpstrPreTrainedModel:()=>Xf,MimiDecoderModel:()=>ig,MimiDecoderOutput:()=>sg,MimiEncoderModel:()=>ng,MimiEncoderOutput:()=>rg,MimiModel:()=>ag,MimiPreTrainedModel:()=>J0,MistralForCausalLM:()=>pf,MistralModel:()=>gf,MistralPreTrainedModel:()=>vc,MobileBertForMaskedLM:()=>Ia,MobileBertForQuestionAnswering:()=>wa,MobileBertForSequenceClassification:()=>na,MobileBertModel:()=>VA,MobileBertPreTrainedModel:()=>Qt,MobileLLMForCausalLM:()=>as,MobileLLMModel:()=>Zo,MobileLLMPreTrainedModel:()=>ao,MobileNetV1ForImageClassification:()=>Qf,MobileNetV1ForSemanticSegmentation:()=>Sf,MobileNetV1Model:()=>Gf,MobileNetV1PreTrainedModel:()=>U0,MobileNetV2ForImageClassification:()=>Of,MobileNetV2ForSemanticSegmentation:()=>_f,MobileNetV2Model:()=>Ff,MobileNetV2PreTrainedModel:()=>K0,MobileNetV3ForImageClassification:()=>zf,MobileNetV3ForSemanticSegmentation:()=>Lf,MobileNetV3Model:()=>Nf,MobileNetV3PreTrainedModel:()=>X0,MobileNetV4ForImageClassification:()=>jf,MobileNetV4ForSemanticSegmentation:()=>Wf,MobileNetV4Model:()=>Rf,MobileNetV4PreTrainedModel:()=>Z0,MobileViTForImageClassification:()=>Ir,MobileViTModel:()=>or,MobileViTPreTrainedModel:()=>qA,MobileViTV2ForImageClassification:()=>Ur,MobileViTV2Model:()=>zr,MobileViTV2PreTrainedModel:()=>pr,ModelOutput:()=>Ve,ModernBertDecoderForCausalLM:()=>Es,ModernBertDecoderModel:()=>KA,ModernBertDecoderPreTrainedModel:()=>Nt,ModernBertForMaskedLM:()=>Tt,ModernBertForSequenceClassification:()=>aA,ModernBertForTokenClassification:()=>jt,ModernBertModel:()=>Dt,ModernBertPreTrainedModel:()=>pt,Moondream1ForConditionalGeneration:()=>St,MoonshineForConditionalGeneration:()=>Cn,MoonshineModel:()=>la,MoonshinePreTrainedModel:()=>mn,MptForCausalLM:()=>u,MptModel:()=>l,MptPreTrainedModel:()=>o,MultiModalityCausalLM:()=>Uf,MultiModalityPreTrainedModel:()=>Hf,MusicgenForCausalLM:()=>y6,MusicgenForConditionalGeneration:()=>Qc,MusicgenModel:()=>x6,MusicgenPreTrainedModel:()=>Gc,NeoBertForMaskedLM:()=>Lt,NeoBertForQuestionAnswering:()=>Ft,NeoBertForSequenceClassification:()=>It,NeoBertForTokenClassification:()=>mt,NeoBertModel:()=>Ue,NeoBertPreTrainedModel:()=>Et,NomicBertModel:()=>Ls,NomicBertPreTrainedModel:()=>WA,OPTForCausalLM:()=>w,OPTModel:()=>h,OPTPreTrainedModel:()=>g,Olmo2ForCausalLM:()=>ar,Olmo2Model:()=>Jo,Olmo2PreTrainedModel:()=>ei,OlmoForCausalLM:()=>no,OlmoModel:()=>ns,OlmoPreTrainedModel:()=>Dn,OpenELMForCausalLM:()=>t0,OpenELMModel:()=>e0,OpenELMPreTrainedModel:()=>Si,OwlViTForObjectDetection:()=>gs,OwlViTModel:()=>is,OwlViTPreTrainedModel:()=>qr,Owlv2ForObjectDetection:()=>ga,Owlv2Model:()=>fa,Owlv2PreTrainedModel:()=>ps,PaliGemmaForConditionalGeneration:()=>fs,PaliGemmaPreTrainedModel:()=>Zr,PatchTSMixerForPrediction:()=>eg,PatchTSMixerModel:()=>$f,PatchTSMixerPreTrainedModel:()=>Fc,PatchTSTForPrediction:()=>qf,PatchTSTModel:()=>Jf,PatchTSTPreTrainedModel:()=>Sc,Phi3ForCausalLM:()=>t,Phi3Model:()=>Zt,Phi3PreTrainedModel:()=>Gn,Phi3VForCausalLM:()=>ua,Phi3VPreTrainedModel:()=>Ma,PhiForCausalLM:()=>r0,PhiModel:()=>Tn,PhiPreTrainedModel:()=>ho,PreTrainedModel:()=>ge,PretrainedMixin:()=>$A,PvtForImageClassification:()=>ve,PvtModel:()=>he,PvtPreTrainedModel:()=>ie,PyAnnoteForAudioFrameClassification:()=>zd,PyAnnoteModel:()=>Nd,PyAnnotePreTrainedModel:()=>Mc,QuestionAnsweringModelOutput:()=>Ds,Qwen2ForCausalLM:()=>A0,Qwen2Model:()=>uo,Qwen2PreTrainedModel:()=>co,Qwen2VLForConditionalGeneration:()=>po,Qwen2VLPreTrainedModel:()=>ts,Qwen3ForCausalLM:()=>Fi,Qwen3Model:()=>go,Qwen3PreTrainedModel:()=>fo,RFDetrForObjectDetection:()=>T1,RFDetrModel:()=>P1,RFDetrObjectDetectionOutput:()=>G1,RFDetrPreTrainedModel:()=>ic,RTDetrForObjectDetection:()=>x1,RTDetrModel:()=>v1,RTDetrObjectDetectionOutput:()=>a0,RTDetrPreTrainedModel:()=>bo,RTDetrV2ForObjectDetection:()=>B1,RTDetrV2Model:()=>y1,RTDetrV2ObjectDetectionOutput:()=>D1,RTDetrV2PreTrainedModel:()=>nc,ResNetForImageClassification:()=>W1,ResNetModel:()=>j1,ResNetPreTrainedModel:()=>dc,RoFormerForMaskedLM:()=>Ps,RoFormerForQuestionAnswering:()=>ba,RoFormerForSequenceClassification:()=>Ta,RoFormerForTokenClassification:()=>Ca,RoFormerModel:()=>Xr,RoFormerPreTrainedModel:()=>XA,RobertaForMaskedLM:()=>Qa,RobertaForQuestionAnswering:()=>gn,RobertaForSequenceClassification:()=>Wn,RobertaForTokenClassification:()=>wi,RobertaModel:()=>Ii,RobertaPreTrainedModel:()=>Ea,SamImageSegmentationOutput:()=>Dd,SamModel:()=>Bd,SamPreTrainedModel:()=>yd,SapiensForDepthEstimation:()=>ed,SapiensForNormalEstimation:()=>td,SapiensForSemanticSegmentation:()=>$1,SapiensPreTrainedModel:()=>R0,SegformerForImageClassification:()=>xf,SegformerForSemanticSegmentation:()=>yf,SegformerModel:()=>v6,SegformerPreTrainedModel:()=>H0,Seq2SeqLMOutput:()=>fw,SequenceClassifierOutput:()=>uA,SiglipModel:()=>Oa,SiglipPreTrainedModel:()=>Zn,SiglipTextModel:()=>$s,SiglipVisionModel:()=>Xt,SmolLM3ForCausalLM:()=>Bi,SmolLM3Model:()=>yi,SmolLM3PreTrainedModel:()=>xi,SmolVLMForConditionalGeneration:()=>tn,SnacDecoderModel:()=>pg,SnacEncoderModel:()=>gg,SnacModel:()=>fg,SnacPreTrainedModel:()=>$0,SpeechT5ForSpeechToText:()=>lf,SpeechT5ForTextToSpeech:()=>cf,SpeechT5HifiGan:()=>uf,SpeechT5Model:()=>M6,SpeechT5PreTrainedModel:()=>V0,SqueezeBertForMaskedLM:()=>Be,SqueezeBertForQuestionAnswering:()=>tt,SqueezeBertForSequenceClassification:()=>je,SqueezeBertModel:()=>Ie,SqueezeBertPreTrainedModel:()=>de,StableLmForCausalLM:()=>Df,StableLmModel:()=>Bf,StableLmPreTrainedModel:()=>Pc,Starcoder2ForCausalLM:()=>bf,Starcoder2Model:()=>Cf,Starcoder2PreTrainedModel:()=>yc,StyleTextToSpeech2Model:()=>of,StyleTextToSpeech2PreTrainedModel:()=>nf,Swin2SRForImageSuperResolution:()=>K1,Swin2SRModel:()=>U1,Swin2SRPreTrainedModel:()=>fc,SwinForImageClassification:()=>Y1,SwinForSemanticSegmentation:()=>H1,SwinModel:()=>V1,SwinPreTrainedModel:()=>L0,T5ForConditionalGeneration:()=>Vr,T5Model:()=>fr,T5PreTrainedModel:()=>nA,TableTransformerForObjectDetection:()=>O1,TableTransformerModel:()=>F1,TableTransformerObjectDetectionOutput:()=>_1,TableTransformerPreTrainedModel:()=>lc,TokenClassifierOutput:()=>os,TrOCRForCausalLM:()=>ff,TrOCRPreTrainedModel:()=>df,UltravoxModel:()=>Oc,UltravoxPreTrainedModel:()=>tg,UniSpeechForCTC:()=>Wd,UniSpeechForSequenceClassification:()=>Vd,UniSpeechModel:()=>jd,UniSpeechPreTrainedModel:()=>j0,UniSpeechSatForAudioFrameClassification:()=>Kd,UniSpeechSatForCTC:()=>Hd,UniSpeechSatForSequenceClassification:()=>Ud,UniSpeechSatModel:()=>Yd,UniSpeechSatPreTrainedModel:()=>n0,ViTForImageClassification:()=>T,ViTMAEModel:()=>Se,ViTMAEPreTrainedModel:()=>Pe,ViTMSNForImageClassification:()=>ct,ViTMSNModel:()=>Xe,ViTMSNPreTrainedModel:()=>ze,ViTModel:()=>v,ViTPreTrainedModel:()=>b,VisionEncoderDecoderModel:()=>Xn,VitMatteForImageMatting:()=>OA,VitMattePreTrainedModel:()=>vA,VitPoseForPoseEstimation:()=>re,VitPosePreTrainedModel:()=>J,VitsModel:()=>Dc,VitsModelOutput:()=>Vg,VitsPreTrainedModel:()=>vf,VoxtralForConditionalGeneration:()=>Ag,Wav2Vec2BertForCTC:()=>Zd,Wav2Vec2BertForSequenceClassification:()=>Jd,Wav2Vec2BertModel:()=>Xd,Wav2Vec2BertPreTrainedModel:()=>W0,Wav2Vec2ForAudioFrameClassification:()=>_d,Wav2Vec2ForCTC:()=>Fd,Wav2Vec2ForSequenceClassification:()=>Od,Wav2Vec2Model:()=>Sd,Wav2Vec2PreTrainedModel:()=>ai,WavLMForAudioFrameClassification:()=>af,WavLMForCTC:()=>Af,WavLMForSequenceClassification:()=>rf,WavLMForXVector:()=>sf,WavLMModel:()=>tf,WavLMPreTrainedModel:()=>Io,WeSpeakerResNetModel:()=>Rd,WeSpeakerResNetPreTrainedModel:()=>Ld,WhisperForConditionalGeneration:()=>Ts,WhisperModel:()=>oa,WhisperPreTrainedModel:()=>ia,XLMForQuestionAnswering:()=>pn,XLMForSequenceClassification:()=>ds,XLMForTokenClassification:()=>Vn,XLMModel:()=>_r,XLMPreTrainedModel:()=>Js,XLMRobertaForMaskedLM:()=>Hn,XLMRobertaForQuestionAnswering:()=>$a,XLMRobertaForSequenceClassification:()=>Un,XLMRobertaForTokenClassification:()=>ki,XLMRobertaModel:()=>Yn,XLMRobertaPreTrainedModel:()=>Sa,XLMWithLMHeadModel:()=>Gt,XVectorOutput:()=>jg,YolosForObjectDetection:()=>vd,YolosModel:()=>Md,YolosObjectDetectionOutput:()=>xd,YolosPreTrainedModel:()=>wc});var c=i("./src/configs.js"),p=i("./src/backends/onnx.js"),m=i("./src/utils/dtypes.js"),C=i("./src/utils/generic.js"),I=i("./src/utils/core.js"),E=i("./src/utils/hub.js"),x=i("./src/utils/constants.js"),D=i("./src/generation/logits_process.js"),y=i("./src/generation/configuration_utils.js"),M=i("./src/utils/tensor.js"),S=i("./src/utils/image.js"),F=i("./src/utils/maths.js"),L=i("./src/generation/stopping_criteria.js"),Z=i("./src/generation/logits_sampler.js"),z=i("./src/env.js"),N=i("./src/models/whisper/generation_whisper.js"),K=i("./src/models/whisper/common_whisper.js");const f={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},k=new Map,e=new Map,d=new Map;async function B(R,j,oe){let Ge=oe.config?.["transformers.js_config"]??{},Re=oe.device??Ge.device;Re&&typeof Re!="string"&&(Re.hasOwnProperty(j)?Re=Re[j]:(console.warn(`device not specified for "${j}". Using the default device.`),Re=null));const He=Re??(z.apis.IS_NODE_ENV?"cpu":"wasm"),nt=(0,p.deviceToExecutionProviders)(He),ft=Ge.device_config??{};ft.hasOwnProperty(He)&&(Ge={...Ge,...ft[He]});let vt=oe.dtype??Ge.dtype;if(typeof vt!="string"&&(vt&&vt.hasOwnProperty(j)?vt=vt[j]:(vt=m.DEFAULT_DEVICE_DTYPE_MAPPING[He]??m.DATA_TYPES.fp32,console.warn(`dtype not specified for "${j}". Using the default dtype (${vt}) for this device (${He}).`))),vt===m.DATA_TYPES.auto){let kA=Ge.dtype;typeof kA!="string"&&(kA=kA?.[j]),kA&&kA!==m.DATA_TYPES.auto&&m.DATA_TYPES.hasOwnProperty(kA)?vt=kA:vt=m.DEFAULT_DEVICE_DTYPE_MAPPING[He]??m.DATA_TYPES.fp32}const Vt=vt;if(m.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Vt)){if(Vt===m.DATA_TYPES.fp16&&He==="webgpu"&&!await(0,m.isWebGpuFp16Supported)())throw new Error(`The device (${He}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Vt}. Should be one of: ${Object.keys(m.DATA_TYPES).join(", ")}`);const dA=Ge.kv_cache_dtype,hA=dA?typeof dA=="string"?dA:dA[Vt]??"float32":void 0;if(hA&&!["float32","float16"].includes(hA))throw new Error(`Invalid kv_cache_dtype: ${hA}. Should be one of: float32, float16`);const IA={dtype:Vt,kv_cache_dtype:hA,device:He},AA=m.DEFAULT_DTYPE_SUFFIX_MAPPING[Vt],er=`${j}${AA}.onnx`,rA=`${oe.subfolder??""}/${er}`,tA={...oe.session_options};tA.executionProviders??=nt;const _A=Ge.free_dimension_overrides;_A?tA.freeDimensionOverrides??=_A:He.startsWith("webnn")&&!tA.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${He}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const hr=z.apis.IS_NODE_ENV&&z.env.useFSCache,Lr=(0,E.getModelFile)(R,rA,!0,oe,hr),As=oe.use_external_data_format??Ge.use_external_data_format;let rs=[];if(As){let kA;typeof As=="object"?As.hasOwnProperty(er)?kA=As[er]:As.hasOwnProperty(j)?kA=As[j]:kA=!1:kA=As;const Rr=+kA;if(Rr>E.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Rr}) exceeds the maximum allowed value (${E.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let ms=0;ms<Rr;++ms){const _i=`${er}_data${ms===0?"":"_"+ms}`,Ys=`${oe.subfolder??""}/${_i}`;rs.push(new Promise(async(za,ko)=>{const Eo=await(0,E.getModelFile)(R,Ys,!0,oe,hr);za(Eo instanceof Uint8Array?{path:_i,data:Eo}:_i)}))}}else tA.externalData!==void 0&&(rs=tA.externalData.map(async kA=>{if(typeof kA.data=="string"){const Rr=await(0,E.getModelFile)(R,kA.data,!0,oe);return{...kA,data:Rr}}return kA}));if(rs.length>0){const kA=await Promise.all(rs);z.apis.IS_NODE_ENV||(tA.externalData=kA)}if(He==="webgpu"){const kA=(0,c.getCacheShapes)(oe.config,{prefix:"present"});if(Object.keys(kA).length>0&&!(0,p.isONNXProxy)()){const Rr={};for(const ms in kA)Rr[ms]="gpu-buffer";tA.preferredOutputLocation=Rr}}return{buffer_or_path:await Lr,session_options:tA,session_config:IA}}async function Ae(R,j,oe){return Object.fromEntries(await Promise.all(Object.keys(j).map(async Ge=>{const{buffer_or_path:Re,session_options:He,session_config:nt}=await B(R,j[Ge],oe),ft=await(0,p.createInferenceSession)(Re,He,nt);return[Ge,ft]})))}async function P(R,j,oe){return Object.fromEntries(await Promise.all(Object.keys(j).map(async Ge=>{const Re=await(0,E.getModelJSON)(R,j[Ge],!1,oe);return[Ge,Re]})))}function O(R,j){const oe=Object.create(null),Ge=[];for(const nt of R.inputNames){const ft=j[nt];if(!(ft instanceof M.Tensor)){Ge.push(nt);continue}oe[nt]=(0,p.isONNXProxy)()?ft.clone():ft}if(Ge.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Ge.join(", ")}.`);const Re=Object.keys(j).length,He=R.inputNames.length;if(Re>He){let nt=Object.keys(j).filter(ft=>!R.inputNames.includes(ft));console.warn(`WARNING: Too many inputs were provided (${Re} > ${He}). The following inputs will be ignored: "${nt.join(", ")}".`)}return oe}let me=Promise.resolve();async function ee(R,j){const oe=O(R,j);try{const Ge=Object.fromEntries(Object.entries(oe).map(([nt,ft])=>[nt,ft.ort_tensor])),Re=()=>R.run(Ge),He=await(z.apis.IS_BROWSER_ENV||z.apis.IS_WEBWORKER_ENV?me=me.then(Re):Re());return Ce(He)}catch(Ge){const Re=Object.fromEntries(Object.entries(oe).map(([He,nt])=>{const ft={type:nt.type,dims:nt.dims,location:nt.location};return ft.location!=="gpu-buffer"&&(ft.data=nt.data),[He,ft]}));throw console.error(`An error occurred during model execution: "${Ge}".`),console.error("Inputs given to model:",Re),Ge}}function Ce(R){for(let j in R)(0,p.isONNXTensor)(R[j])?R[j]=new M.Tensor(R[j]):typeof R[j]=="object"&&Ce(R[j]);return R}function we(R){if(R instanceof M.Tensor)return R;if(R.length===0)throw Error("items must be non-empty");if(Array.isArray(R[0])){if(R.some(j=>j.length!==R[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new M.Tensor("int64",BigInt64Array.from(R.flat().map(j=>BigInt(j))),[R.length,R[0].length])}else return new M.Tensor("int64",BigInt64Array.from(R.map(j=>BigInt(j))),[1,R.length])}function xe(R){return new M.Tensor("bool",[R],[1])}async function De(R,j){let{encoder_outputs:oe,input_ids:Ge,decoder_input_ids:Re,...He}=j;if(!oe){const ft=(0,I.pick)(j,R.sessions.model.inputNames);oe=(await ye(R,ft)).last_hidden_state}return He.input_ids=Re,He.encoder_hidden_states=oe,R.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(He.encoder_attention_mask=j.attention_mask),await _e(R,He,!0)}async function ye(R,j){const oe=R.sessions.model,Ge=(0,I.pick)(j,oe.inputNames);if(oe.inputNames.includes("inputs_embeds")&&!Ge.inputs_embeds){if(!j.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Ge.inputs_embeds=await R.encode_text({input_ids:j.input_ids})}if(oe.inputNames.includes("token_type_ids")&&!Ge.token_type_ids){if(!Ge.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");Ge.token_type_ids=(0,M.zeros_like)(Ge.input_ids)}if(oe.inputNames.includes("pixel_mask")&&!Ge.pixel_mask){if(!Ge.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Re=Ge.pixel_values.dims;Ge.pixel_mask=(0,M.ones)([Re[0],Re[2],Re[3]])}return await ee(oe,Ge)}async function Oe(R,j){const oe=await R.encode(j);return await R.decode(oe)}async function _e(R,j,oe=!1){const Ge=R.sessions[oe?"decoder_model_merged":"model"],{past_key_values:Re,...He}=j;if(Ge.inputNames.includes("use_cache_branch")&&(He.use_cache_branch=xe(!!Re)),Ge.inputNames.includes("position_ids")&&He.attention_mask&&!He.position_ids){const ft=["paligemma","gemma3_text","gemma3"].includes(R.config.model_type)?1:0;He.position_ids=ot(He,Re,ft)}R.addPastKeyValues(He,Re);const nt=(0,I.pick)(He,Ge.inputNames);return await ee(Ge,nt)}function ne({modality_token_id:R,inputs_embeds:j,modality_features:oe,input_ids:Ge,attention_mask:Re}){const He=Ge.tolist().map(Vt=>Vt.reduce((dA,hA,IA)=>(hA==R&&dA.push(IA),dA),[])),nt=He.reduce((Vt,dA)=>Vt+dA.length,0),ft=oe.dims[0];if(nt!==ft)throw new Error(`Number of tokens and features do not match: tokens: ${nt}, features ${ft}`);let vt=0;for(let Vt=0;Vt<He.length;++Vt){const dA=He[Vt],hA=j[Vt];for(let IA=0;IA<dA.length;++IA)hA[dA[IA]].data.set(oe[vt++].data)}return{inputs_embeds:j,attention_mask:Re}}function te({image_token_id:R,inputs_embeds:j,image_features:oe,input_ids:Ge,attention_mask:Re}){return ne({modality_token_id:R,inputs_embeds:j,modality_features:oe,input_ids:Ge,attention_mask:Re})}function pe({audio_token_id:R,inputs_embeds:j,audio_features:oe,input_ids:Ge,attention_mask:Re}){return ne({modality_token_id:R,inputs_embeds:j,modality_features:oe,input_ids:Ge,attention_mask:Re})}async function le(R,{encode_function:j,merge_function:oe,modality_input_name:Ge,modality_output_name:Re,input_ids:He=null,attention_mask:nt=null,position_ids:ft=null,inputs_embeds:vt=null,past_key_values:Vt=null,generation_config:dA=null,logits_processor:hA=null,...IA}){const AA=IA[Ge];if(!vt){if(vt=await R.encode_text({input_ids:He,...IA}),AA&&He.dims[1]!==1){const rA=await j({[Ge]:AA,...IA});({inputs_embeds:vt,attention_mask:nt}=oe({[Re]:rA,inputs_embeds:vt,input_ids:He,attention_mask:nt}))}else if(Vt&&AA&&He.dims[1]===1){const rA=He.dims[1],tA=Object.values(Vt)[0].dims.at(-2);nt=(0,M.cat)([(0,M.ones)([He.dims[0],tA]),nt.slice(null,[nt.dims[1]-rA,nt.dims[1]])],1)}}if(!ft&&R.config.model_type==="qwen2_vl"){const{image_grid_thw:rA,video_grid_thw:tA}=IA;[ft]=R.get_rope_index(He,rA,tA,nt)}return await _e(R,{inputs_embeds:vt,past_key_values:Vt,attention_mask:nt,position_ids:ft,generation_config:dA,logits_processor:hA},!0)}async function Qe(R,j){return await le(R,{...j,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:R.encode_audio.bind(R),merge_function:R._merge_input_ids_with_audio_features.bind(R)})}async function it(R,j){return await le(R,{...j,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:R.encode_image.bind(R),merge_function:R._merge_input_ids_with_image_features.bind(R)})}function qe(R,j=0){const[oe,Ge]=R.dims,Re=R.data,He=new BigInt64Array(Re.length);for(let nt=0;nt<oe;++nt){const ft=nt*Ge;let vt=BigInt(j);for(let Vt=0;Vt<Ge;++Vt){const dA=ft+Vt;Re[dA]===0n?He[dA]=BigInt(1):(He[dA]=vt,vt+=Re[dA])}}return{data:He,dims:R.dims}}function ot(R,j=null,oe=0){const{input_ids:Ge,inputs_embeds:Re,attention_mask:He}=R,{data:nt,dims:ft}=qe(He,oe);let vt=new M.Tensor("int64",nt,ft);if(j){const Vt=-(Ge??Re).dims.at(1);vt=vt.slice(null,[Vt,null])}return vt}function Pt(R,j,oe,Ge){const Re=oe.past_key_values?Object.values(oe.past_key_values)[0].dims.at(-2):0;if(!oe.attention_mask){let He;for(const nt of["input_ids","inputs_embeds","position_ids"])if(oe[nt]){He=oe[nt].dims;break}if(!He)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");oe.attention_mask=(0,M.ones)([He[0],Re+He[1]])}if(oe.past_key_values){const{input_ids:He,attention_mask:nt}=oe;nt&&nt.dims[1]>He.dims[1]||Re<He.dims[1]&&(oe.input_ids=He.slice(null,[Re,null]))}return oe}function et(R,j,oe,Ge){return oe.past_key_values&&(j=j.map(Re=>[Re.at(-1)])),{...oe,decoder_input_ids:we(j)}}function be(R,...j){return R.config.is_encoder_decoder?et(R,...j):Pt(R,...j)}function Ne(R,j,oe,Ge){const Re=!!oe.past_key_values;return Ge.guidance_scale!==null&&Ge.guidance_scale>1&&(Re?oe.input_ids=(0,M.cat)([oe.input_ids,oe.input_ids],0):(oe.input_ids=(0,M.cat)([oe.input_ids,(0,M.full_like)(oe.input_ids,BigInt(Ge.pad_token_id))],0),oe.attention_mask=(0,M.cat)([oe.attention_mask,(0,M.full_like)(oe.attention_mask,0n)],0))),(Re||!oe.pixel_values)&&(oe.pixel_values=(0,M.full)([0,0,3,384,384],1)),Re&&(oe.images_seq_mask=new M.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),oe.images_emb_mask=new M.Tensor("bool",new Array(0).fill(!1),[1,1,0])),oe}class ge extends C.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(j,oe,Ge){super(),this.config=j,this.sessions=oe,this.configs=Ge;const Re=d.get(this.constructor),He=k.get(Re);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,He){case f.DecoderOnly:this.can_generate=!0,this._forward=_e,this._prepare_inputs_for_generation=Pt;break;case f.Seq2Seq:case f.Vision2Seq:case f.Musicgen:this.can_generate=!0,this._forward=De,this._prepare_inputs_for_generation=et;break;case f.EncoderDecoder:this._forward=De;break;case f.ImageTextToText:this.can_generate=!0,this._forward=it,this._prepare_inputs_for_generation=be;break;case f.AudioTextToText:this.can_generate=!0,this._forward=Qe,this._prepare_inputs_for_generation=be;break;case f.Phi3V:case f.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=be;break;case f.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Ne;break;case f.AutoEncoder:this._forward=Oe;break;default:this._forward=ye;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const j=[];for(const oe of Object.values(this.sessions))oe?.handler?.dispose&&j.push(oe.handler.dispose());return await Promise.all(j)}static async from_pretrained(j,{progress_callback:oe=null,config:Ge=null,cache_dir:Re=null,local_files_only:He=!1,revision:nt="main",model_file_name:ft=null,subfolder:vt="onnx",device:Vt=null,dtype:dA=null,use_external_data_format:hA=null,session_options:IA={}}={}){let AA={progress_callback:oe,config:Ge,cache_dir:Re,local_files_only:He,revision:nt,model_file_name:ft,subfolder:vt,device:Vt,dtype:dA,use_external_data_format:hA,session_options:IA};const er=d.get(this),rA=k.get(er);Ge=AA.config=await c.AutoConfig.from_pretrained(j,AA);let tA;if(rA===f.DecoderOnly)tA=await Promise.all([Ae(j,{model:AA.model_file_name??"model"},AA),P(j,{generation_config:"generation_config.json"},AA)]);else if(rA===f.Seq2Seq||rA===f.Vision2Seq)tA=await Promise.all([Ae(j,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},AA),P(j,{generation_config:"generation_config.json"},AA)]);else if(rA===f.MaskGeneration)tA=await Promise.all([Ae(j,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},AA)]);else if(rA===f.EncoderDecoder)tA=await Promise.all([Ae(j,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},AA)]);else if(rA===f.ImageTextToText){const _A={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ge.is_encoder_decoder&&(_A.model="encoder_model"),tA=await Promise.all([Ae(j,_A,AA),P(j,{generation_config:"generation_config.json"},AA)])}else if(rA===f.AudioTextToText){const _A={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};tA=await Promise.all([Ae(j,_A,AA),P(j,{generation_config:"generation_config.json"},AA)])}else if(rA===f.ImageAudioTextToText){const _A={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};tA=await Promise.all([Ae(j,_A,AA),P(j,{generation_config:"generation_config.json"},AA)])}else if(rA===f.Musicgen)tA=await Promise.all([Ae(j,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},AA),P(j,{generation_config:"generation_config.json"},AA)]);else if(rA===f.MultiModality)tA=await Promise.all([Ae(j,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},AA),P(j,{generation_config:"generation_config.json"},AA)]);else if(rA===f.Phi3V)tA=await Promise.all([Ae(j,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},AA),P(j,{generation_config:"generation_config.json"},AA)]);else if(rA===f.AutoEncoder)tA=await Promise.all([Ae(j,{encoder_model:"encoder_model",decoder_model:"decoder_model"},AA)]);else{if(rA!==f.EncoderOnly){const _A=er??Ge?.model_type;_A!=="custom"&&console.warn(`Model type for '${_A}' not found, assuming encoder-only architecture. Please report this at ${x.GITHUB_ISSUE_URL}.`)}tA=await Promise.all([Ae(j,{model:AA.model_file_name??"model"},AA)])}return new this(Ge,...tA)}async _call(j){return await this.forward(j)}async forward(j){return await this._forward(this,j)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(j){const oe=new D.LogitsProcessorList;return j.temperature!==null&&j.temperature!==1&&oe.push(new D.TemperatureLogitsWarper(j.temperature)),j.top_k!==null&&j.top_k!==0&&oe.push(new D.TopKLogitsWarper(j.top_k)),j.top_p!==null&&j.top_p<1&&oe.push(new D.TopPLogitsWarper(j.top_p)),oe}_get_logits_processor(j,oe,Ge=null){const Re=new D.LogitsProcessorList;if(j.repetition_penalty!==null&&j.repetition_penalty!==1&&Re.push(new D.RepetitionPenaltyLogitsProcessor(j.repetition_penalty)),j.no_repeat_ngram_size!==null&&j.no_repeat_ngram_size>0&&Re.push(new D.NoRepeatNGramLogitsProcessor(j.no_repeat_ngram_size)),j.bad_words_ids!==null&&Re.push(new D.NoBadWordsLogitsProcessor(j.bad_words_ids,j.eos_token_id)),j.min_length!==null&&j.eos_token_id!==null&&j.min_length>0&&Re.push(new D.MinLengthLogitsProcessor(j.min_length,j.eos_token_id)),j.min_new_tokens!==null&&j.eos_token_id!==null&&j.min_new_tokens>0&&Re.push(new D.MinNewTokensLengthLogitsProcessor(oe,j.min_new_tokens,j.eos_token_id)),j.forced_bos_token_id!==null&&Re.push(new D.ForcedBOSTokenLogitsProcessor(j.forced_bos_token_id)),j.forced_eos_token_id!==null&&Re.push(new D.ForcedEOSTokenLogitsProcessor(j.max_length,j.forced_eos_token_id)),j.begin_suppress_tokens!==null){const He=oe>1||j.forced_bos_token_id===null?oe:oe+1;Re.push(new D.SuppressTokensAtBeginLogitsProcessor(j.begin_suppress_tokens,He))}return j.guidance_scale!==null&&j.guidance_scale>1&&Re.push(new D.ClassifierFreeGuidanceLogitsProcessor(j.guidance_scale)),Ge!==null&&Re.extend(Ge),Re}_prepare_generation_config(j,oe,Ge=y.GenerationConfig){const Re={...this.config};for(const nt of["decoder","generator","text_config"])nt in Re&&Object.assign(Re,Re[nt]);const He=new Ge(Re);return Object.assign(He,this.generation_config??{}),j&&Object.assign(He,j),oe&&Object.assign(He,(0,I.pick)(oe,Object.getOwnPropertyNames(He))),He}_get_stopping_criteria(j,oe=null){const Ge=new L.StoppingCriteriaList;return j.max_length!==null&&Ge.push(new L.MaxLengthCriteria(j.max_length,this.config.max_position_embeddings??null)),j.eos_token_id!==null&&Ge.push(new L.EosTokenCriteria(j.eos_token_id)),oe&&Ge.extend(oe),Ge}_validate_model_class(){if(!this.can_generate){const j=[zc,Lc,Nc,_c],oe=d.get(this.constructor),Ge=new Set,Re=this.config.model_type;for(const nt of j){const ft=nt.get(Re);ft&&Ge.add(ft[0])}let He=`The current model class (${oe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Ge.size>0&&(He+=` Please use the following class instead: ${[...Ge].join(", ")}`),Error(He)}}prepare_inputs_for_generation(...j){return this._prepare_inputs_for_generation(this,...j)}_update_model_kwargs_for_generation({generated_input_ids:j,outputs:oe,model_inputs:Ge,is_encoder_decoder:Re}){return Ge.past_key_values=this.getPastKeyValues(oe,Ge.past_key_values),Ge.input_ids=new M.Tensor("int64",j.flat(),[j.length,1]),Re||(Ge.attention_mask=(0,M.cat)([Ge.attention_mask,(0,M.ones)([Ge.attention_mask.dims[0],1])],1)),Ge.position_ids=null,Ge}_prepare_model_inputs({inputs:j,bos_token_id:oe,model_kwargs:Ge}){const Re=(0,I.pick)(Ge,this.forward_params),He=this.main_input_name;if(He in Re){if(j)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Re[He]=j;return{inputs_tensor:Re[He],model_inputs:Re,model_input_name:He}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:j,model_inputs:oe,model_input_name:Ge,generation_config:Re}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:nt,pixel_values:ft,attention_mask:vt,...Vt}=oe,dA=await this._prepare_inputs_embeds(oe);oe={...Vt,...(0,I.pick)(dA,["inputs_embeds","attention_mask"])}}let{last_hidden_state:He}=await ye(this,oe);if(Re.guidance_scale!==null&&Re.guidance_scale>1)He=(0,M.cat)([He,(0,M.full_like)(He,0)],0),"attention_mask"in oe&&(oe.attention_mask=(0,M.cat)([oe.attention_mask,(0,M.zeros_like)(oe.attention_mask)],0));else if(oe.decoder_input_ids){const nt=we(oe.decoder_input_ids).dims[0];if(nt!==He.dims[0]){if(He.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${He.dims[0]}) than the decoder inputs (${nt}).`);He=(0,M.cat)(Array.from({length:nt},()=>He),0)}}return oe.encoder_outputs=He,oe}_prepare_decoder_input_ids_for_generation({batch_size:j,model_input_name:oe,model_kwargs:Ge,decoder_start_token_id:Re,bos_token_id:He,generation_config:nt}){let{decoder_input_ids:ft,...vt}=Ge;if(!(ft instanceof M.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:j},()=>ft));else if(Re??=He,this.config.model_type==="musicgen")ft=Array.from({length:j*this.config.decoder.num_codebooks},()=>[Re]);else if(Array.isArray(Re)){if(Re.length!==j)throw new Error(`\`decoder_start_token_id\` expcted to have length ${j} but got ${Re.length}`);ft=Re}else ft=Array.from({length:j},()=>[Re]);ft=we(ft)}return Ge.decoder_attention_mask=(0,M.ones_like)(ft),{input_ids:ft,model_inputs:vt}}async generate({inputs:j=null,generation_config:oe=null,logits_processor:Ge=null,stopping_criteria:Re=null,streamer:He=null,...nt}){this._validate_model_class(),oe=this._prepare_generation_config(oe,nt);let{inputs_tensor:ft,model_inputs:vt,model_input_name:Vt}=this._prepare_model_inputs({inputs:j,model_kwargs:nt});const dA=this.config.is_encoder_decoder;dA&&("encoder_outputs"in vt||(vt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:vt,model_input_name:Vt,generation_config:oe})));let hA;dA?{input_ids:hA,model_inputs:vt}=this._prepare_decoder_input_ids_for_generation({batch_size:vt[Vt].dims.at(0),model_input_name:Vt,model_kwargs:vt,decoder_start_token_id:oe.decoder_start_token_id,bos_token_id:oe.bos_token_id,generation_config:oe}):hA=vt[Vt];let IA=hA.dims.at(-1);oe.max_new_tokens!==null&&(oe.max_length=IA+oe.max_new_tokens);const AA=this._get_logits_processor(oe,IA,Ge),er=this._get_stopping_criteria(oe,Re),rA=vt[Vt].dims.at(0),tA=Z.LogitsSampler.getSampler(oe),_A=new Array(rA).fill(0),hr=hA.tolist();He&&He.put(hr);let Lr,As={};for(;;){if(vt=this.prepare_inputs_for_generation(hr,vt,oe),Lr=await this.forward(vt),oe.output_attentions&&oe.return_dict_in_generate){const Ys=this.getAttentions(Lr);for(const za in Ys)za in As||(As[za]=[]),As[za].push(Ys[za])}const kA=Lr.logits.slice(null,-1,null),Rr=AA(hr,kA),ms=[];for(let Ys=0;Ys<Rr.dims.at(0);++Ys){const za=Rr[Ys],ko=await tA(za);for(const[Eo,el]of ko){const i0=BigInt(Eo);_A[Ys]+=el,hr[Ys].push(i0),ms.push([i0]);break}}if(He&&He.put(ms),er(hr).every(Ys=>Ys))break;vt=this._update_model_kwargs_for_generation({generated_input_ids:ms,outputs:Lr,model_inputs:vt,is_encoder_decoder:dA})}He&&He.end();const rs=this.getPastKeyValues(Lr,vt.past_key_values,!0),$r=new M.Tensor("int64",hr.flat(),[hr.length,hr[0].length]);if(oe.return_dict_in_generate)return{sequences:$r,past_key_values:rs,...As};for(const kA of Object.values(Lr))kA.location==="gpu-buffer"&&kA.dispose();return $r}getPastKeyValues(j,oe,Ge=!1){const Re=Object.create(null);for(const He in j)if(He.startsWith("present")){const nt=He.replace("present_conv","past_conv").replace("present","past_key_values"),ft=He.includes("encoder");if(ft&&oe?Re[nt]=oe[nt]:Re[nt]=j[He],oe&&(!ft||Ge)){const vt=oe[nt];vt.location==="gpu-buffer"&&vt.dispose()}}return Re}getAttentions(j){const oe={};for(const Ge of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Re in j)Re.startsWith(Ge)&&(Ge in oe||(oe[Ge]=[]),oe[Ge].push(j[Re]));return oe}addPastKeyValues(j,oe){if(oe)Object.assign(j,oe);else{const Ge=this.sessions.decoder_model_merged??this.sessions.model,Re=(j[this.main_input_name]??j.attention_mask)?.dims?.[0]??1,He=Ge?.config?.kv_cache_dtype??"float32",nt=He==="float16"?M.DataTypeMap.float16:M.DataTypeMap.float32,ft=(0,c.getCacheShapes)(this.config,{batch_size:Re});for(const vt in ft){const Vt=ft[vt].reduce((dA,hA)=>dA*hA,1);j[vt]=new M.Tensor(He,new nt(Vt),ft[vt])}}}async encode_image({pixel_values:j}){return(await ee(this.sessions.vision_encoder,{pixel_values:j})).image_features}async encode_text({input_ids:j}){return(await ee(this.sessions.embed_tokens,{input_ids:j})).inputs_embeds}async encode_audio({audio_values:j}){return(await ee(this.sessions.audio_encoder,{audio_values:j})).audio_features}}class Ve{}class at extends Ve{constructor({last_hidden_state:j,hidden_states:oe=null,attentions:Ge=null}){super(),this.last_hidden_state=j,this.hidden_states=oe,this.attentions=Ge}}class Ze extends ge{}class Ye extends Ze{}class Y extends Ze{async _call(j){return new hs(await super._call(j))}}class We extends Ze{async _call(j){return new uA(await super._call(j))}}class rt extends Ze{async _call(j){return new os(await super._call(j))}}class fe extends Ze{async _call(j){return new Ds(await super._call(j))}}class Et extends ge{}class Ue extends Et{}class Lt extends Et{async _call(j){return new hs(await super._call(j))}}class It extends Et{async _call(j){return new uA(await super._call(j))}}class mt extends Et{async _call(j){return new os(await super._call(j))}}class Ft extends Et{async _call(j){return new Ds(await super._call(j))}}class pt extends ge{}class Dt extends pt{}class Tt extends pt{async _call(j){return new hs(await super._call(j))}}class aA extends pt{async _call(j){return new uA(await super._call(j))}}class jt extends pt{async _call(j){return new os(await super._call(j))}}class Nt extends ge{}class KA extends Nt{}class Es extends Nt{}class WA extends ge{}class Ls extends WA{}class XA extends ge{}class Xr extends XA{}class Ps extends XA{async _call(j){return new hs(await super._call(j))}}class Ta extends XA{async _call(j){return new uA(await super._call(j))}}class Ca extends XA{async _call(j){return new os(await super._call(j))}}class ba extends XA{async _call(j){return new Ds(await super._call(j))}}class wt extends ge{}class Qr extends wt{}class ZA extends wt{async _call(j){return new hs(await super._call(j))}}class oA extends wt{async _call(j){return new uA(await super._call(j))}}class Us extends wt{async _call(j){return new os(await super._call(j))}}class U extends wt{async _call(j){return new Ds(await super._call(j))}}class Ee extends ge{}class ce extends Ee{}class ke extends Ee{async _call(j){return new hs(await super._call(j))}}class Me extends Ee{async _call(j){return new uA(await super._call(j))}}class Le extends Ee{async _call(j){return new os(await super._call(j))}}class st extends Ee{async _call(j){return new Ds(await super._call(j))}}class Ot extends ge{}class Ht extends Ot{}class yt extends Ot{async _call(j){return new hs(await super._call(j))}}class gA extends Ot{async _call(j){return new uA(await super._call(j))}}class lA extends Ot{async _call(j){return new os(await super._call(j))}}class Sr extends Ot{async _call(j){return new Ds(await super._call(j))}}class GA extends ge{}class kr extends GA{}class Ms extends GA{async _call(j){return new hs(await super._call(j))}}class DA extends GA{async _call(j){return new uA(await super._call(j))}}class Fr extends GA{async _call(j){return new os(await super._call(j))}}class Rs extends GA{async _call(j){return new Ds(await super._call(j))}}class xr extends ge{}class bs extends xr{}class js extends xr{async _call(j){return new hs(await super._call(j))}}class LA extends xr{async _call(j){return new uA(await super._call(j))}}class Ks extends xr{async _call(j){return new os(await super._call(j))}}class Ws extends xr{async _call(j){return new Ds(await super._call(j))}}class Cr extends ge{}class cs extends Cr{}class yr extends Cr{async _call(j){return new uA(await super._call(j))}}class Br extends Cr{async _call(j){return new os(await super._call(j))}}class vs extends Cr{async _call(j){return new Ds(await super._call(j))}}class qt extends Cr{async _call(j){return new hs(await super._call(j))}}class Dr extends ge{}class Is extends Dr{}class us extends Dr{async _call(j){return new hs(await super._call(j))}}class ut extends Dr{async _call(j){return new uA(await super._call(j))}}class ht extends Dr{async _call(j){return new os(await super._call(j))}}class Qt extends ge{}class VA extends Qt{}class Ia extends Qt{async _call(j){return new hs(await super._call(j))}}class na extends Qt{async _call(j){return new uA(await super._call(j))}}class wa extends Qt{async _call(j){return new Ds(await super._call(j))}}class Xs extends ge{}class qa extends Xs{}class ka extends Xs{async _call(j){return new hs(await super._call(j))}}class dn extends Xs{async _call(j){return new uA(await super._call(j))}}class Fe extends Xs{async _call(j){return new os(await super._call(j))}}class X extends Xs{async _call(j){return new Ds(await super._call(j))}}class de extends ge{}class Ie extends de{}class Be extends de{async _call(j){return new hs(await super._call(j))}}class je extends de{async _call(j){return new uA(await super._call(j))}}class tt extends de{async _call(j){return new Ds(await super._call(j))}}class Bt extends ge{}class Mt extends Bt{}class Je extends Bt{async _call(j){return new uA(await super._call(j))}}class bt extends Bt{async _call(j){return new Ds(await super._call(j))}}class cA extends Bt{async _call(j){return new hs(await super._call(j))}}class nA extends ge{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class fr extends nA{}class Vr extends nA{}class tr extends ge{}class QA extends tr{}class PA extends tr{}class Or extends ge{}class xs extends Or{}class cr extends Or{}class ys extends ge{}class Ar extends ys{}class ur extends ys{}class yA extends ys{async _call(j){return new uA(await super._call(j))}}class rr extends ge{}class Zs extends rr{}class dr extends rr{}class Bs extends rr{async _call(j){return new uA(await super._call(j))}}class Pr extends rr{}class JA extends ge{}class Wt extends JA{}class wA extends JA{}class Tr extends ge{}class Ga extends Tr{}class fn extends Tr{}class Ea extends ge{}class Ii extends Ea{}class Qa extends Ea{async _call(j){return new hs(await super._call(j))}}class Wn extends Ea{async _call(j){return new uA(await super._call(j))}}class wi extends Ea{async _call(j){return new os(await super._call(j))}}class gn extends Ea{async _call(j){return new Ds(await super._call(j))}}class Js extends ge{}class _r extends Js{}class Gt extends Js{async _call(j){return new hs(await super._call(j))}}class ds extends Js{async _call(j){return new uA(await super._call(j))}}class Vn extends Js{async _call(j){return new os(await super._call(j))}}class pn extends Js{async _call(j){return new Ds(await super._call(j))}}class Sa extends ge{}class Yn extends Sa{}class Hn extends Sa{async _call(j){return new hs(await super._call(j))}}class Un extends Sa{async _call(j){return new uA(await super._call(j))}}class ki extends Sa{async _call(j){return new os(await super._call(j))}}class $a extends Sa{async _call(j){return new Ds(await super._call(j))}}class BA extends ge{}class hn extends BA{}class Fa extends BA{}class ia extends ge{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class oa extends ia{}class Ts extends ia{_prepare_generation_config(j,oe){return super._prepare_generation_config(j,oe,N.WhisperGenerationConfig)}_retrieve_init_tokens(j){const oe=[j.decoder_start_token_id];let Ge=j.language;const Re=j.task;if(j.is_multilingual){Ge||(console.warn("No language specified - defaulting to English (en)."),Ge="en");const nt=`<|${(0,K.whisper_language_to_code)(Ge)}|>`;oe.push(j.lang_to_id[nt]),oe.push(j.task_to_id[Re??"transcribe"])}else if(Ge||Re)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!j.return_timestamps&&j.no_timestamps_token_id&&oe.at(-1)!==j.no_timestamps_token_id?oe.push(j.no_timestamps_token_id):j.return_timestamps&&oe.at(-1)===j.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),oe.pop()),oe.filter(He=>He!=null)}async generate({inputs:j=null,generation_config:oe=null,logits_processor:Ge=null,stopping_criteria:Re=null,...He}){oe=this._prepare_generation_config(oe,He);const nt=He.decoder_input_ids??this._retrieve_init_tokens(oe);if(oe.return_timestamps&&(Ge??=new D.LogitsProcessorList,Ge.push(new D.WhisperTimeStampLogitsProcessor(oe,nt))),oe.begin_suppress_tokens&&(Ge??=new D.LogitsProcessorList,Ge.push(new D.SuppressTokensAtBeginLogitsProcessor(oe.begin_suppress_tokens,nt.length))),oe.return_token_timestamps){if(!oe.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");oe.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),oe.output_attentions=!0,oe.return_dict_in_generate=!0}const ft=await super.generate({inputs:j,generation_config:oe,logits_processor:Ge,decoder_input_ids:nt,...He});return oe.return_token_timestamps&&(ft.token_timestamps=this._extract_token_timestamps(ft,oe.alignment_heads,oe.num_frames)),ft}_extract_token_timestamps(j,oe,Ge=null,Re=.02){if(!j.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Ge==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let He=this.config.median_filter_width;He===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),He=7);const nt=j.cross_attentions,ft=Array.from({length:this.config.decoder_layers},(rA,tA)=>(0,M.cat)(nt.map(_A=>_A[tA]),2)),vt=(0,M.stack)(oe.map(([rA,tA])=>{if(rA>=ft.length)throw new Error(`Layer index ${rA} is out of bounds for cross attentions (length ${ft.length}).`);return Ge?ft[rA].slice(null,tA,null,[0,Ge]):ft[rA].slice(null,tA)})).transpose(1,0,2,3),[Vt,dA]=(0,M.std_mean)(vt,-2,0,!0),hA=vt.clone();for(let rA=0;rA<hA.dims[0];++rA){const tA=hA[rA];for(let _A=0;_A<tA.dims[0];++_A){const hr=tA[_A],Lr=Vt[rA][_A][0].data,As=dA[rA][_A][0].data;for(let rs=0;rs<hr.dims[0];++rs){let $r=hr[rs].data;for(let kA=0;kA<$r.length;++kA)$r[kA]=($r[kA]-As[kA])/Lr[kA];$r.set((0,F.medianFilter)($r,He))}}}const IA=[(0,M.mean)(hA,1)],AA=j.sequences.dims,er=new M.Tensor("float32",new Float32Array(AA[0]*AA[1]),AA);for(let rA=0;rA<AA[0];++rA){const tA=IA[rA].neg().squeeze_(0),[_A,hr]=(0,F.dynamic_time_warping)(tA.tolist()),Lr=Array.from({length:_A.length-1},($r,kA)=>_A[kA+1]-_A[kA]),As=(0,I.mergeArrays)([1],Lr).map($r=>!!$r),rs=[];for(let $r=0;$r<As.length;++$r)As[$r]&&rs.push(hr[$r]*Re);er[rA].data.set(rs,1)}return er}}class Kn extends Ts{}class mn extends ge{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class la extends mn{}class Cn extends mn{}class Xn extends ge{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class bn extends ge{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class lt extends bn{_merge_input_ids_with_image_features(j){const oe=j.image_features.dims.at(-1),Ge=j.image_features.view(-1,oe);return te({image_token_id:this.config.image_token_index,...j,image_features:Ge})}}class Ei extends lt{}class St extends lt{}class In extends ge{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class wn extends In{_merge_input_ids_with_image_features({inputs_embeds:j,image_features:oe,input_ids:Ge,attention_mask:Re}){return{inputs_embeds:(0,M.cat)([oe,j],1),attention_mask:(0,M.cat)([(0,M.ones)(oe.dims.slice(0,2)),Re],1)}}async _prepare_inputs_embeds({input_ids:j,pixel_values:oe,inputs_embeds:Ge,attention_mask:Re}){if(!j&&!oe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let He,nt;return j&&(He=await this.encode_text({input_ids:j})),oe&&(nt=await this.encode_image({pixel_values:oe})),He&&nt?{inputs_embeds:Ge,attention_mask:Re}=this._merge_input_ids_with_image_features({inputs_embeds:He,image_features:nt,input_ids:j,attention_mask:Re}):Ge=He||nt,{inputs_embeds:Ge,attention_mask:Re}}async forward({input_ids:j,pixel_values:oe,attention_mask:Ge,decoder_input_ids:Re,decoder_attention_mask:He,encoder_outputs:nt,past_key_values:ft,inputs_embeds:vt,decoder_inputs_embeds:Vt}){if(vt||({inputs_embeds:vt,attention_mask:Ge}=await this._prepare_inputs_embeds({input_ids:j,pixel_values:oe,inputs_embeds:vt,attention_mask:Ge})),!nt){let{last_hidden_state:IA}=await ye(this,{inputs_embeds:vt,attention_mask:Ge});nt=IA}if(!Vt){if(!Re)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Vt=await this.encode_text({input_ids:Re})}return await _e(this,{inputs_embeds:Vt,attention_mask:He,encoder_attention_mask:Ge,encoder_hidden_states:nt,past_key_values:ft},!0)}}class Zr extends ge{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class fs extends Zr{_merge_input_ids_with_image_features(j){const oe=j.image_features.dims.at(-1),Ge=j.image_features.view(-1,oe);return te({image_token_id:this.config.image_token_index,...j,image_features:Ge})}}class ca extends bn{_merge_input_ids_with_image_features(j){const oe=j.image_features.dims.at(-1),Ge=j.image_features.view(-1,oe);return te({image_token_id:this.config.image_token_index,...j,image_features:Ge})}}class qs extends ge{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class en extends qs{async forward({input_ids:j=null,attention_mask:oe=null,pixel_values:Ge=null,input_features:Re=null,input_features_mask:He=null,position_ids:nt=null,inputs_embeds:ft=null,per_layer_inputs:vt=null,past_key_values:Vt=null,generation_config:dA=null,logits_processor:hA=null,...IA}){if((!ft||!vt)&&({inputs_embeds:ft,per_layer_inputs:vt}=await ee(this.sessions.embed_tokens,{input_ids:j}),j.dims[1]!==1)){if(Ge){const{image_features:er}=await ee(this.sessions.vision_encoder,{pixel_values:Ge});({inputs_embeds:ft,attention_mask:oe}=this._merge_input_ids_with_image_features({image_features:er,inputs_embeds:ft,input_ids:j,attention_mask:oe}))}if(Re){const{audio_features:er}=await ee(this.sessions.audio_encoder,{input_features:Re,input_features_mask:He});({inputs_embeds:ft,attention_mask:oe}=this._merge_input_ids_with_audio_features({audio_features:er,inputs_embeds:ft,input_ids:j,attention_mask:oe}))}}return await _e(this,{inputs_embeds:ft,per_layer_inputs:vt,past_key_values:Vt,attention_mask:oe,position_ids:nt,generation_config:dA,logits_processor:hA},!0)}_merge_input_ids_with_image_features(j){const oe=j.image_features.dims.at(-1),Ge=j.image_features.view(-1,oe);return te({image_token_id:this.config.image_token_id,...j,image_features:Ge})}_merge_input_ids_with_audio_features(j){const oe=j.audio_features.dims.at(-1),Ge=j.audio_features.view(-1,oe);return pe({audio_token_id:this.config.audio_token_id,...j,audio_features:Ge})}}class br extends ge{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class kn extends br{async encode_image({pixel_values:j,pixel_attention_mask:oe}){return(await ee(this.sessions.vision_encoder,{pixel_values:j,pixel_attention_mask:oe})).image_features}_merge_input_ids_with_image_features(j){const oe=j.image_features.dims.at(-1),Ge=j.image_features.view(-1,oe);return te({image_token_id:this.config.image_token_id,...j,image_features:Ge})}}class tn extends kn{}class Ma extends ge{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class ua extends Ma{async forward({input_ids:j=null,attention_mask:oe=null,pixel_values:Ge=null,image_sizes:Re=null,position_ids:He=null,inputs_embeds:nt=null,past_key_values:ft=null,generation_config:vt=null,logits_processor:Vt=null,...dA}){if(!nt){let IA;if(Ge&&j.dims[1]!==1){if(!Re)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:IA}=await ee(this.sessions.vision_encoder,{pixel_values:Ge,image_sizes:Re}))}else{const AA=this.config.normalized_config.hidden_size;IA=new M.Tensor("float32",[],[0,AA])}({inputs_embeds:nt}=await ee(this.sessions.prepare_inputs_embeds,{input_ids:j,image_features:IA}))}return await _e(this,{inputs_embeds:nt,past_key_values:ft,attention_mask:oe,position_ids:He,generation_config:vt,logits_processor:Vt},!1)}}class da extends ge{}class En extends da{}class An extends da{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"text_model"})}}class kt extends da{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"text_model"})}}class Gs extends da{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"vision_model"})}}class Mi extends da{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"vision_model"})}}class Zn extends ge{}class Oa extends Zn{}class $s extends Zn{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"text_model"})}}class Xt extends da{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"vision_model"})}}class vi extends ge{}class Jn extends vi{}class _a extends ge{}class rn extends _a{async forward(j){const oe=!j.input_ids,Ge=!j.pixel_values;if(oe&&Ge)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(oe&&(j.input_ids=(0,M.ones)([j.pixel_values.dims[0],1])),Ge){const{image_size:Vt}=this.config.vision_config;j.pixel_values=(0,M.full)([0,3,Vt,Vt],0)}const{text_embeddings:Re,image_embeddings:He,l2norm_text_embeddings:nt,l2norm_image_embeddings:ft}=await super.forward(j),vt={};return oe||(vt.text_embeddings=Re,vt.l2norm_text_embeddings=nt),Ge||(vt.image_embeddings=He,vt.l2norm_image_embeddings=ft),vt}}class Qs extends _a{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"text_model"})}}class gr extends _a{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"vision_model"})}}class sn extends ge{}class qn extends sn{}class eA extends sn{}class Ss extends ge{}class an extends Ss{}class Vs extends Ss{}class Mn extends ge{}class Nr extends Mn{}class Fs extends Mn{}class Er extends ge{}class Os extends Er{}class vn extends Er{}class nn extends ge{}class $n extends nn{}class xn extends nn{}class sr extends ge{}class G extends sr{}class W extends sr{}class q extends ge{}class se extends q{}class ue extends q{}class Te extends ge{}class $e extends Te{}class dt extends Te{}class xt extends ge{}class _t extends xt{}class iA extends xt{}class MA extends ge{}class SA extends MA{}class Yr extends MA{}class ss extends ge{}class yn extends ss{}class Hr extends ss{}class xi extends ge{}class yi extends xi{}class Bi extends xi{}class ws extends ge{}class Di extends ws{}class Uo extends ws{}class ea extends ge{}class Ko extends ea{}class so extends ea{}class Pi extends ge{}class Bn extends Pi{}class Xo extends Pi{}class ao extends ge{}class Zo extends ao{}class as extends ao{}class Dn extends ge{}class ns extends Dn{}class no extends Dn{}class ei extends ge{}class Jo extends ei{}class ar extends ei{}class Ti extends ge{}class on extends Ti{}class Pn extends Ti{}class io extends ge{}class qo extends io{}class oo extends io{}class lo extends ge{}class ln extends lo{}class ta extends lo{}class Gi extends ge{}class Qi extends Gi{}class Jr extends Gi{}class FA extends ge{}class ti extends FA{}class $o extends FA{}class Si extends ge{}class e0 extends Si{}class t0 extends Si{}class co extends ge{}class uo extends co{}class A0 extends co{}class fo extends ge{}class go extends fo{}class Fi extends fo{}class ts extends ge{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class po extends ts{get_rope_index(j,oe,Ge,Re){const{vision_config:He,image_token_id:nt,video_token_id:ft,vision_start_token_id:vt}=this.config,Vt=He.spatial_merge_size??2,dA=[];if(oe||Ge){let hA=j.tolist();Re||(Re=(0,M.ones_like)(j));const IA=Re.tolist(),AA=Array.from({length:3},hr=>Array.from({length:j.dims[0]},Lr=>Array.from({length:j.dims[1]},As=>1))),er=oe?oe.tolist():[],rA=Ge?Ge.tolist():[];let tA=0,_A=0;for(let hr=0;hr<hA.length;++hr){const Lr=hA[hr].filter((Mr,ls)=>IA[hr][ls]==1),rs=Lr.reduce((Mr,ls,ni)=>(ls==vt&&Mr.push(ni),Mr),[]).map(Mr=>Lr[Mr+1]),$r=rs.filter(Mr=>Mr==nt).length,kA=rs.filter(Mr=>Mr==ft).length;let Rr=[],ms=0,_i=$r,Ys=kA;for(let Mr=0;Mr<rs.length;++Mr){const ls=Lr.findIndex((zi,La)=>La>ms&&zi==nt),ni=Lr.findIndex((zi,La)=>La>ms&&zi==ft),Ni=_i>0&&ls!==-1?ls:Lr.length+1,Mo=Ys>0&&ni!==-1?ni:Lr.length+1;let tl,Rc,jc,Wc;Ni<Mo?([Rc,jc,Wc]=er[tA],++tA,--_i,tl=Ni):([Rc,jc,Wc]=rA[_A],++_A,--Ys,tl=Mo);const[hw,Vc,Al]=[Number(Rc),Math.floor(Number(jc)/Vt),Math.floor(Number(Wc)/Vt)],Yc=tl-ms,Yg=Rr.length>0?(0,F.max)(Rr.at(-1))[0]+1:0;Rr.push(Array.from({length:3*Yc},(zi,La)=>Yg+La%Yc));const Hc=Yc+Yg,rl=hw*Vc*Al,mw=Array.from({length:rl},(zi,La)=>Hc+Math.floor(La/(Vc*Al))),Cw=Array.from({length:rl},(zi,La)=>Hc+Math.floor(La/Al)%Vc),bw=Array.from({length:rl},(zi,La)=>Hc+La%Al);Rr.push([mw,Cw,bw].flat()),ms=tl+rl}if(ms<Lr.length){const Mr=Rr.length>0?(0,F.max)(Rr.at(-1))[0]+1:0,ls=Lr.length-ms;Rr.push(Array.from({length:3*ls},(ni,Ni)=>Mr+Ni%ls))}const za=Rr.reduce((Mr,ls)=>Mr+ls.length,0),ko=new Array(za);let Eo=0;for(let Mr=0;Mr<3;++Mr)for(let ls=0;ls<Rr.length;++ls){const ni=Rr[ls],Ni=ni.length/3;for(let Mo=Mr*Ni;Mo<(Mr+1)*Ni;++Mo)ko[Eo++]=ni[Mo]}let el=0;const i0=IA[hr];for(let Mr=0;Mr<i0.length;++Mr)if(i0[Mr]==1){for(let ls=0;ls<3;++ls)AA[ls][hr][Mr]=ko[ls*za/3+el];++el}const pw=(0,F.max)(ko)[0];dA.push(pw+1-hA[hr].length)}return[new M.Tensor("int64",AA.flat(1/0),[3,j.dims[0],j.dims[1]]),new M.Tensor("int64",dA,[dA.length,1])]}else if(Re){const{data:hA,dims:IA}=qe(Re),AA=BigInt64Array.from({length:3*hA.length},(rA,tA)=>hA[tA%hA.length]),er=Array.from({length:IA[0]},(rA,tA)=>(0,F.max)(hA.subarray(IA[1]*tA,IA[1]*(tA+1)))[0]+1n+BigInt(IA[1]));return[new M.Tensor("int64",AA,[3,...IA]),new M.Tensor("int64",er,[er.length,1])]}else{const[hA,IA]=j.dims,AA=BigInt64Array.from({length:3*hA*IA},(er,rA)=>BigInt(Math.floor(rA%IA/hA)));return[new M.Tensor("int64",AA,[3,...j.dims]),(0,M.zeros)([hA,1])]}}async encode_image({pixel_values:j,image_grid_thw:oe}){return(await ee(this.sessions.vision_encoder,{pixel_values:j,grid_thw:oe})).image_features}_merge_input_ids_with_image_features(j){return te({image_token_id:this.config.image_token_id,...j})}prepare_inputs_for_generation(j,oe,Ge){if(oe.attention_mask&&!oe.position_ids)if(!oe.past_key_values)[oe.position_ids,oe.rope_deltas]=this.get_rope_index(oe.input_ids,oe.image_grid_thw,oe.video_grid_thw,oe.attention_mask);else{oe.pixel_values=null;const Re=BigInt(Object.values(oe.past_key_values)[0].dims.at(-2)),He=oe.rope_deltas.map(nt=>Re+nt);oe.position_ids=(0,M.stack)([He,He,He],0)}return oe}}class ho extends ge{}class Tn extends ho{}class r0 extends ho{}class Gn extends ge{}class Zt extends Gn{}class t extends Gn{}class A extends ge{}class r extends A{}class s extends A{}class o extends ge{}class l extends o{}class u extends o{}class g extends ge{}class h extends g{}class w extends g{}class b extends ge{}class v extends b{}class T extends b{async _call(j){return new uA(await super._call(j))}}class _ extends ge{}class V extends _{}class H extends _{async _call(j){return new uA(await super._call(j))}}class J extends ge{}class re extends J{}class ie extends ge{}class he extends ie{}class ve extends ie{async _call(j){return new uA(await super._call(j))}}class Pe extends ge{}class Se extends Pe{}class ze extends ge{}class Xe extends ze{}class ct extends ze{async _call(j){return new uA(await super._call(j))}}class gt extends ge{}class zt extends gt{}class Rt extends ge{}class $t extends Rt{}class bA extends Rt{async _call(j){return new uA(await super._call(j))}}class vA extends ge{}class OA extends vA{async _call(j){return new Wg(await super._call(j))}}class qA extends ge{}class or extends qA{}class Ir extends qA{async _call(j){return new uA(await super._call(j))}}class pr extends ge{}class zr extends pr{}class Ur extends pr{async _call(j){return new uA(await super._call(j))}}class qr extends ge{}class is extends qr{}class gs extends qr{}class ps extends ge{}class fa extends ps{}class ga extends ps{}class Aa extends ge{}class Qn extends Aa{}class Ai extends Aa{async _call(j){return new uA(await super._call(j))}}class Na extends ge{}class ri extends Na{}class si extends Na{async _call(j){return new Co(await super._call(j))}}class mo extends Na{async _call(j){return new s0(await super._call(j))}}class Co extends Ve{constructor({logits:j,pred_boxes:oe}){super(),this.logits=j,this.pred_boxes=oe}}class s0 extends Ve{constructor({logits:j,pred_boxes:oe,pred_masks:Ge}){super(),this.logits=j,this.pred_boxes=oe,this.pred_masks=Ge}}class bo extends ge{}class v1 extends bo{}class x1 extends bo{async _call(j){return new a0(await super._call(j))}}class a0 extends Ve{constructor({logits:j,pred_boxes:oe}){super(),this.logits=j,this.pred_boxes=oe}}class nc extends ge{}class y1 extends nc{}class B1 extends nc{async _call(j){return new D1(await super._call(j))}}class D1 extends a0{}class ic extends ge{}class P1 extends ic{}class T1 extends ic{async _call(j){return new G1(await super._call(j))}}class G1 extends a0{}class oc extends ge{}class Q1 extends oc{}class S1 extends oc{async _call(j){return new a0(await super._call(j))}}class lc extends ge{}class F1 extends lc{}class O1 extends lc{async _call(j){return new _1(await super._call(j))}}class _1 extends Co{}class cc extends ge{}class N1 extends cc{}class z1 extends cc{async _call(j){return new uA(await super._call(j))}}class uc extends ge{}class L1 extends uc{}class R1 extends uc{async _call(j){return new uA(await super._call(j))}}class dc extends ge{}class j1 extends dc{}class W1 extends dc{async _call(j){return new uA(await super._call(j))}}class L0 extends ge{}class V1 extends L0{}class Y1 extends L0{async _call(j){return new uA(await super._call(j))}}class H1 extends L0{}class fc extends ge{}class U1 extends fc{}class K1 extends fc{}class gc extends ge{}class X1 extends gc{}class Z1 extends gc{}class J1 extends ge{}class q1 extends J1{}class R0 extends ge{}class $1 extends R0{}class ed extends R0{}class td extends R0{}class Ad extends ge{}class rd extends Ad{}class sd extends ge{}class ad extends sd{}class nd extends ge{}class id extends nd{}class pc extends ge{}class od extends pc{}class ld extends pc{}class hc extends ge{}class cd extends hc{}class ud extends hc{}class dd extends ge{}class fd extends dd{}class mc extends ge{}class gd extends mc{}class pd extends mc{async _call(j){return new uA(await super._call(j))}}class Cc extends ge{}class hd extends Cc{}class md extends Cc{async _call(j){return new uA(await super._call(j))}}class bc extends ge{}class Cd extends bc{}class bd extends bc{async _call(j){return new uA(await super._call(j))}}class Ic extends ge{}class Id extends Ic{}class wd extends Ic{async _call(j){return new uA(await super._call(j))}}class kd extends ge{}class Ed extends kd{}class wc extends ge{}class Md extends wc{}class vd extends wc{async _call(j){return new xd(await super._call(j))}}class xd extends Ve{constructor({logits:j,pred_boxes:oe}){super(),this.logits=j,this.pred_boxes=oe}}class yd extends ge{}class Bd extends yd{async get_image_embeddings({pixel_values:j}){return await ye(this,{pixel_values:j})}async forward(j){if((!j.image_embeddings||!j.image_positional_embeddings)&&(j={...j,...await this.get_image_embeddings(j)}),!j.input_labels&&j.input_points){const Ge=j.input_points.dims.slice(0,-1),Re=Ge.reduce((He,nt)=>He*nt,1);j.input_labels=new M.Tensor("int64",new BigInt64Array(Re).fill(1n),Ge)}const oe={image_embeddings:j.image_embeddings,image_positional_embeddings:j.image_positional_embeddings};return j.input_points&&(oe.input_points=j.input_points),j.input_labels&&(oe.input_labels=j.input_labels),j.input_boxes&&(oe.input_boxes=j.input_boxes),await ee(this.sessions.prompt_encoder_mask_decoder,oe)}async _call(j){return new Dd(await super._call(j))}}class Dd extends Ve{constructor({iou_scores:j,pred_masks:oe}){super(),this.iou_scores=j,this.pred_masks=oe}}class kc extends ge{}class Pd extends kc{}class Td extends kc{}class Ec extends ge{}class Gd extends Ec{}class Qd extends Ec{}class ai extends ge{}class Sd extends ai{}class Fd extends ai{async _call(j){return new Oi(await super._call(j))}}class Od extends ai{async _call(j){return new uA(await super._call(j))}}class _d extends ai{async _call(j){return new os(await super._call(j))}}class Mc extends ge{}class Nd extends Mc{}class zd extends Mc{async _call(j){return new os(await super._call(j))}}class Ld extends ge{}class Rd extends Ld{}class j0 extends ge{}class jd extends j0{}class Wd extends j0{async _call(j){return new Oi(await super._call(j))}}class Vd extends j0{async _call(j){return new uA(await super._call(j))}}class n0 extends ge{}class Yd extends n0{}class Hd extends n0{async _call(j){return new Oi(await super._call(j))}}class Ud extends n0{async _call(j){return new uA(await super._call(j))}}class Kd extends n0{async _call(j){return new os(await super._call(j))}}class W0 extends ge{}class Xd extends W0{}class Zd extends W0{async _call(j){return new Oi(await super._call(j))}}class Jd extends W0{async _call(j){return new uA(await super._call(j))}}class E6 extends ge{}class qd extends ai{}class $d extends ai{async _call(j){return new Oi(await super._call(j))}}class ef extends ai{async _call(j){return new uA(await super._call(j))}}class Io extends ge{}class tf extends Io{}class Af extends Io{async _call(j){return new Oi(await super._call(j))}}class rf extends Io{async _call(j){return new uA(await super._call(j))}}class sf extends Io{async _call(j){return new jg(await super._call(j))}}class af extends Io{async _call(j){return new os(await super._call(j))}}class nf extends ge{}class of extends nf{}class V0 extends ge{}class M6 extends V0{}class lf extends V0{}class cf extends V0{async generate_speech(j,oe,{threshold:Ge=.5,minlenratio:Re=0,maxlenratio:He=20,vocoder:nt=null}={}){const ft={input_ids:j},{encoder_outputs:vt,encoder_attention_mask:Vt}=await ye(this,ft),dA=vt.dims[1]/this.config.reduction_factor,hA=Math.floor(dA*He),IA=Math.floor(dA*Re),AA=this.config.num_mel_bins;let er=[],rA=null,tA=null,_A=0;for(;;){++_A;const As=xe(!!tA);let rs;tA?rs=tA.output_sequence_out:rs=new M.Tensor("float32",new Float32Array(AA),[1,1,AA]);let $r={use_cache_branch:As,output_sequence:rs,encoder_attention_mask:Vt,speaker_embeddings:oe,encoder_hidden_states:vt};this.addPastKeyValues($r,rA),tA=await ee(this.sessions.decoder_model_merged,$r),rA=this.getPastKeyValues(tA,rA);const{prob:kA,spectrum:Rr}=tA;if(er.push(Rr),_A>=IA&&(Array.from(kA.data).filter(ms=>ms>=Ge).length>0||_A>=hA))break}const hr=(0,M.cat)(er),{waveform:Lr}=await ee(nt.sessions.model,{spectrogram:hr});return{spectrogram:hr,waveform:Lr}}}class uf extends ge{main_input_name="spectrogram"}class df extends ge{}class ff extends df{}class vc extends ge{}class gf extends vc{}class pf extends vc{}class xc extends ge{}class hf extends xc{}class mf extends xc{}class yc extends ge{}class Cf extends yc{}class bf extends yc{}class Bc extends ge{}class If extends Bc{}class wf extends Bc{}class Y0 extends ge{}class kf extends Y0{}class Ef extends Y0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"text_model"})}}class Mf extends Y0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"audio_model"})}}class vf extends ge{}class Dc extends vf{async _call(j){return new Vg(await super._call(j))}}class H0 extends ge{}class v6 extends H0{}class xf extends H0{}class yf extends H0{}class Pc extends ge{}class Bf extends Pc{}class Df extends Pc{}class Tc extends ge{}class Pf extends Tc{}class Tf extends Tc{async _call(j){return new uA(await super._call(j))}}class Gc extends ge{}class x6 extends Gc{}class y6 extends Gc{}class Qc extends ge{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(j){const[oe,Ge]=j.dims,Re=this.config.decoder.num_codebooks,He=Ge-Re;let nt=0;for(let Vt=0;Vt<j.size;++Vt){if(j.data[Vt]===this.config.decoder.pad_token_id)continue;const dA=Vt%Ge,hA=Math.floor(Vt/Ge)%Re,IA=dA-hA;IA>0&&IA<=He&&(j.data[nt++]=j.data[Vt])}const ft=Math.floor(oe/Re),vt=nt/(ft*Re);return new M.Tensor(j.type,j.data.slice(0,nt),[ft,Re,vt])}prepare_inputs_for_generation(j,oe,Ge){let Re=structuredClone(j);for(let nt=0;nt<Re.length;++nt)for(let ft=0;ft<Re[nt].length;++ft)nt%this.config.decoder.num_codebooks>=ft&&(Re[nt][ft]=BigInt(this.config.decoder.pad_token_id));return Ge.guidance_scale!==null&&Ge.guidance_scale>1&&(Re=Re.concat(Re)),super.prepare_inputs_for_generation(Re,oe,Ge)}async generate(j){const oe=await super.generate(j),Ge=this._apply_and_filter_by_delay_pattern_mask(oe).unsqueeze_(0),{audio_values:Re}=await ee(this.sessions.encodec_decode,{audio_codes:Ge});return Re}}class U0 extends ge{}class Gf extends U0{}class Qf extends U0{async _call(j){return new uA(await super._call(j))}}class Sf extends U0{}class K0 extends ge{}class Ff extends K0{}class Of extends K0{async _call(j){return new uA(await super._call(j))}}class _f extends K0{}class X0 extends ge{}class Nf extends X0{}class zf extends X0{async _call(j){return new uA(await super._call(j))}}class Lf extends X0{}class Z0 extends ge{}class Rf extends Z0{}class jf extends Z0{async _call(j){return new uA(await super._call(j))}}class Wf extends Z0{}class Vf extends ge{}class Yf extends Vf{}class Hf extends ge{}class Uf extends Hf{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...j){super(...j),this._generation_mode="text"}async forward(j){const oe=this._generation_mode??"text";let Ge;if(oe==="text"||!j.past_key_values){const vt=this.sessions.prepare_inputs_embeds,Vt=(0,I.pick)(j,vt.inputNames);Ge=await ee(vt,Vt)}else{const vt=this.sessions.gen_img_embeds,Vt=(0,I.pick)({image_ids:j.input_ids},vt.inputNames);Ge=await ee(vt,Vt)}const Re={...j,...Ge},He=await _e(this,Re),nt=this.sessions[oe==="text"?"lm_head":"gen_head"];if(!nt)throw new Error(`Unable to find "${nt}" generation head`);const ft=await ee(nt,(0,I.pick)(He,nt.inputNames));return{...Ge,...He,...ft}}async generate(j){return this._generation_mode="text",super.generate(j)}async generate_images(j){this._generation_mode="image";const oe=(j.inputs??j[this.main_input_name]).dims[1],Re=(await super.generate(j)).slice(null,[oe,null]),He=this.sessions.image_decode,{decoded_image:nt}=await ee(He,{generated_tokens:Re}),ft=nt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),vt=[];for(const Vt of ft){const dA=S.RawImage.fromTensor(Vt);vt.push(dA)}return vt}}class Kf extends Ve{constructor({char_logits:j,bpe_logits:oe,wp_logits:Ge}){super(),this.char_logits=j,this.bpe_logits=oe,this.wp_logits=Ge}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Xf extends ge{}class Zf extends Xf{async _call(j){return new Kf(await super._call(j))}}class Sc extends ge{}class Jf extends Sc{}class qf extends Sc{}class Fc extends ge{}class $f extends Fc{}class eg extends Fc{}class tg extends ge{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class Oc extends tg{_merge_input_ids_with_audio_features(j){const oe=j.audio_features.dims.at(-1),Ge=j.audio_features.view(-1,oe);return pe({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...j,audio_features:Ge})}}class Ag extends Oc{}class J0 extends ge{main_input_name="input_values";forward_params=["input_values"]}class rg extends Ve{constructor({audio_codes:j}){super(),this.audio_codes=j}}class sg extends Ve{constructor({audio_values:j}){super(),this.audio_values=j}}class ag extends J0{async encode(j){return new rg(await ee(this.sessions.encoder_model,j))}async decode(j){return new sg(await ee(this.sessions.decoder_model,j))}}class ng extends J0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"encoder_model"})}}class ig extends J0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"decoder_model"})}}class q0 extends ge{main_input_name="input_values";forward_params=["input_values"]}class og extends Ve{constructor({audio_codes:j}){super(),this.audio_codes=j}}class lg extends Ve{constructor({audio_values:j}){super(),this.audio_values=j}}class cg extends q0{async encode(j){return new og(await ee(this.sessions.encoder_model,j))}async decode(j){return new lg(await ee(this.sessions.decoder_model,j))}}class ug extends q0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"encoder_model"})}}class dg extends q0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"decoder_model"})}}class $0 extends ge{main_input_name="input_values";forward_params=["input_values"]}class fg extends $0{async encode(j){return await ee(this.sessions.encoder_model,j)}async decode(j){return await ee(this.sessions.decoder_model,j)}}class gg extends $0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"encoder_model"})}}class pg extends $0{static async from_pretrained(j,oe={}){return super.from_pretrained(j,{...oe,model_file_name:oe.model_file_name??"decoder_model"})}}class $A{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(j,{progress_callback:oe=null,config:Ge=null,cache_dir:Re=null,local_files_only:He=!1,revision:nt="main",model_file_name:ft=null,subfolder:vt="onnx",device:Vt=null,dtype:dA=null,use_external_data_format:hA=null,session_options:IA={}}={}){const AA={progress_callback:oe,config:Ge,cache_dir:Re,local_files_only:He,revision:nt,model_file_name:ft,subfolder:vt,device:Vt,dtype:dA,use_external_data_format:hA,session_options:IA};if(AA.config=await c.AutoConfig.from_pretrained(j,AA),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const er=AA.config.model_type;for(const rA of this.MODEL_CLASS_MAPPINGS){let tA=rA.get(er);if(!tA){for(const _A of rA.values())if(_A[0]===er){tA=_A;break}if(!tA)continue}return await tA[1].from_pretrained(j,AA)}if(this.BASE_IF_FAIL)return Rg.has(er)||console.warn(`Unknown model class "${er}", attempting to construct from base class.`),await ge.from_pretrained(j,AA);throw Error(`Unsupported model type: ${er}`)}}const B6=new Map([["bert",["BertModel",Ye]],["neobert",["NeoBertModel",Ue]],["modernbert",["ModernBertModel",Dt]],["nomic_bert",["NomicBertModel",Ls]],["roformer",["RoFormerModel",Xr]],["electra",["ElectraModel",ce]],["esm",["EsmModel",Is]],["convbert",["ConvBertModel",Qr]],["camembert",["CamembertModel",Ht]],["deberta",["DebertaModel",kr]],["deberta-v2",["DebertaV2Model",bs]],["mpnet",["MPNetModel",qa]],["albert",["AlbertModel",Mt]],["distilbert",["DistilBertModel",cs]],["roberta",["RobertaModel",Ii]],["xlm",["XLMModel",_r]],["xlm-roberta",["XLMRobertaModel",Yn]],["clap",["ClapModel",kf]],["clip",["CLIPModel",En]],["clipseg",["CLIPSegModel",qn]],["chinese_clip",["ChineseCLIPModel",Jn]],["siglip",["SiglipModel",Oa]],["jina_clip",["JinaCLIPModel",rn]],["mobilebert",["MobileBertModel",VA]],["squeezebert",["SqueezeBertModel",Ie]],["wav2vec2",["Wav2Vec2Model",Sd]],["wav2vec2-bert",["Wav2Vec2BertModel",Xd]],["unispeech",["UniSpeechModel",jd]],["unispeech-sat",["UniSpeechSatModel",Yd]],["hubert",["HubertModel",qd]],["wavlm",["WavLMModel",tf]],["audio-spectrogram-transformer",["ASTModel",hn]],["vits",["VitsModel",Dc]],["pyannote",["PyAnnoteModel",Nd]],["wespeaker-resnet",["WeSpeakerResNetModel",Rd]],["detr",["DetrModel",ri]],["rt_detr",["RTDetrModel",v1]],["rt_detr_v2",["RTDetrV2Model",y1]],["rf_detr",["RFDetrModel",P1]],["d_fine",["DFineModel",Q1]],["table-transformer",["TableTransformerModel",F1]],["vit",["ViTModel",v]],["ijepa",["IJepaModel",V]],["pvt",["PvtModel",he]],["vit_msn",["ViTMSNModel",Xe]],["vit_mae",["ViTMAEModel",Se]],["groupvit",["GroupViTModel",zt]],["fastvit",["FastViTModel",$t]],["mobilevit",["MobileViTModel",or]],["mobilevitv2",["MobileViTV2Model",zr]],["owlvit",["OwlViTModel",is]],["owlv2",["Owlv2Model",fa]],["beit",["BeitModel",Qn]],["deit",["DeiTModel",N1]],["hiera",["HieraModel",L1]],["convnext",["ConvNextModel",gd]],["convnextv2",["ConvNextV2Model",hd]],["dinov2",["Dinov2Model",Cd]],["dinov2_with_registers",["Dinov2WithRegistersModel",Id]],["resnet",["ResNetModel",j1]],["swin",["SwinModel",V1]],["swin2sr",["Swin2SRModel",U1]],["donut-swin",["DonutSwinModel",fd]],["yolos",["YolosModel",Md]],["dpt",["DPTModel",X1]],["glpn",["GLPNModel",cd]],["hifigan",["SpeechT5HifiGan",uf]],["efficientnet",["EfficientNetModel",Pf]],["decision_transformer",["DecisionTransformerModel",Yf]],["patchtst",["PatchTSTForPrediction",Jf]],["patchtsmixer",["PatchTSMixerForPrediction",$f]],["mobilenet_v1",["MobileNetV1Model",Gf]],["mobilenet_v2",["MobileNetV2Model",Ff]],["mobilenet_v3",["MobileNetV3Model",Nf]],["mobilenet_v4",["MobileNetV4Model",Rf]],["maskformer",["MaskFormerModel",od]],["mgp-str",["MgpstrForSceneTextRecognition",Zf]],["style_text_to_speech_2",["StyleTextToSpeech2Model",of]]]),D6=new Map([["t5",["T5Model",fr]],["longt5",["LongT5Model",QA]],["mt5",["MT5Model",xs]],["bart",["BartModel",Ar]],["mbart",["MBartModel",Zs]],["marian",["MarianModel",Pd]],["whisper",["WhisperModel",oa]],["m2m_100",["M2M100Model",Gd]],["blenderbot",["BlenderbotModel",Wt]],["blenderbot-small",["BlenderbotSmallModel",Ga]]]),P6=new Map([["mimi",["MimiModel",ag]],["dac",["DacModel",cg]],["snac",["SnacModel",fg]]]),T6=new Map([["bloom",["BloomModel",r]],["jais",["JAISModel",Nr]],["gpt2",["GPT2Model",an]],["gptj",["GPTJModel",G]],["gpt_bigcode",["GPTBigCodeModel",se]],["gpt_neo",["GPTNeoModel",Os]],["gpt_neox",["GPTNeoXModel",$n]],["codegen",["CodeGenModel",$e]],["llama",["LlamaModel",_t]],["arcee",["ArceeModel",SA]],["lfm2",["Lfm2Model",yn]],["smollm3",["SmolLM3Model",yi]],["exaone",["ExaoneModel",Bn]],["olmo",["OlmoModel",ns]],["olmo2",["Olmo2Model",Jo]],["mobilellm",["MobileLLMModel",Zo]],["granite",["GraniteModel",on]],["cohere",["CohereModel",qo]],["gemma",["GemmaModel",ln]],["gemma2",["Gemma2Model",Qi]],["gemma3_text",["Gemma3Model",ti]],["helium",["HeliumModel",Di]],["glm",["GlmModel",Ko]],["openelm",["OpenELMModel",e0]],["qwen2",["Qwen2Model",uo]],["qwen3",["Qwen3Model",go]],["phi",["PhiModel",Tn]],["phi3",["Phi3Model",Zt]],["mpt",["MptModel",l]],["opt",["OPTModel",h]],["mistral",["MistralModel",gf]],["ernie4_5",["Ernie4_5_Model",hf]],["starcoder2",["Starcoder2Model",Cf]],["falcon",["FalconModel",If]],["stablelm",["StableLmModel",Bf]],["modernbert-decoder",["ModernBertDecoderModel",KA]]]),_c=new Map([["speecht5",["SpeechT5ForSpeechToText",lf]],["whisper",["WhisperForConditionalGeneration",Ts]],["lite-whisper",["LiteWhisperForConditionalGeneration",Kn]],["moonshine",["MoonshineForConditionalGeneration",Cn]]]),hg=new Map([["speecht5",["SpeechT5ForTextToSpeech",cf]]]),mg=new Map([["vits",["VitsModel",Dc]],["musicgen",["MusicgenForConditionalGeneration",Qc]]]),Cg=new Map([["bert",["BertForSequenceClassification",We]],["neobert",["NeoBertForSequenceClassification",It]],["modernbert",["ModernBertForSequenceClassification",aA]],["roformer",["RoFormerForSequenceClassification",Ta]],["electra",["ElectraForSequenceClassification",Me]],["esm",["EsmForSequenceClassification",ut]],["convbert",["ConvBertForSequenceClassification",oA]],["camembert",["CamembertForSequenceClassification",gA]],["deberta",["DebertaForSequenceClassification",DA]],["deberta-v2",["DebertaV2ForSequenceClassification",LA]],["mpnet",["MPNetForSequenceClassification",dn]],["albert",["AlbertForSequenceClassification",Je]],["distilbert",["DistilBertForSequenceClassification",yr]],["roberta",["RobertaForSequenceClassification",Wn]],["xlm",["XLMForSequenceClassification",ds]],["xlm-roberta",["XLMRobertaForSequenceClassification",Un]],["bart",["BartForSequenceClassification",yA]],["mbart",["MBartForSequenceClassification",Bs]],["mobilebert",["MobileBertForSequenceClassification",na]],["squeezebert",["SqueezeBertForSequenceClassification",je]]]),bg=new Map([["bert",["BertForTokenClassification",rt]],["neobert",["NeoBertForTokenClassification",mt]],["modernbert",["ModernBertForTokenClassification",jt]],["roformer",["RoFormerForTokenClassification",Ca]],["electra",["ElectraForTokenClassification",Le]],["esm",["EsmForTokenClassification",ht]],["convbert",["ConvBertForTokenClassification",Us]],["camembert",["CamembertForTokenClassification",lA]],["deberta",["DebertaForTokenClassification",Fr]],["deberta-v2",["DebertaV2ForTokenClassification",Ks]],["mpnet",["MPNetForTokenClassification",Fe]],["distilbert",["DistilBertForTokenClassification",Br]],["roberta",["RobertaForTokenClassification",wi]],["xlm",["XLMForTokenClassification",Vn]],["xlm-roberta",["XLMRobertaForTokenClassification",ki]]]),Nc=new Map([["t5",["T5ForConditionalGeneration",Vr]],["longt5",["LongT5ForConditionalGeneration",PA]],["mt5",["MT5ForConditionalGeneration",cr]],["bart",["BartForConditionalGeneration",ur]],["mbart",["MBartForConditionalGeneration",dr]],["marian",["MarianMTModel",Td]],["m2m_100",["M2M100ForConditionalGeneration",Qd]],["blenderbot",["BlenderbotForConditionalGeneration",wA]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",fn]]]),zc=new Map([["bloom",["BloomForCausalLM",s]],["gpt2",["GPT2LMHeadModel",Vs]],["jais",["JAISLMHeadModel",Fs]],["gptj",["GPTJForCausalLM",W]],["gpt_bigcode",["GPTBigCodeForCausalLM",ue]],["gpt_neo",["GPTNeoForCausalLM",vn]],["gpt_neox",["GPTNeoXForCausalLM",xn]],["codegen",["CodeGenForCausalLM",dt]],["llama",["LlamaForCausalLM",iA]],["arcee",["ArceeForCausalLM",Yr]],["lfm2",["Lfm2ForCausalLM",Hr]],["smollm3",["SmolLM3ForCausalLM",Bi]],["exaone",["ExaoneForCausalLM",Xo]],["olmo",["OlmoForCausalLM",no]],["olmo2",["Olmo2ForCausalLM",ar]],["mobilellm",["MobileLLMForCausalLM",as]],["granite",["GraniteForCausalLM",Pn]],["cohere",["CohereForCausalLM",oo]],["gemma",["GemmaForCausalLM",ta]],["gemma2",["Gemma2ForCausalLM",Jr]],["gemma3_text",["Gemma3ForCausalLM",$o]],["helium",["HeliumForCausalLM",Uo]],["glm",["GlmForCausalLM",so]],["openelm",["OpenELMForCausalLM",t0]],["qwen2",["Qwen2ForCausalLM",A0]],["qwen3",["Qwen3ForCausalLM",Fi]],["phi",["PhiForCausalLM",r0]],["phi3",["Phi3ForCausalLM",t]],["mpt",["MptForCausalLM",u]],["opt",["OPTForCausalLM",w]],["mbart",["MBartForCausalLM",Pr]],["mistral",["MistralForCausalLM",pf]],["ernie4_5",["Ernie4_5_ForCausalLM",mf]],["starcoder2",["Starcoder2ForCausalLM",bf]],["falcon",["FalconForCausalLM",wf]],["trocr",["TrOCRForCausalLM",ff]],["stablelm",["StableLmForCausalLM",Df]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Es]],["phi3_v",["Phi3VForCausalLM",ua]]]),G6=new Map([["multi_modality",["MultiModalityCausalLM",Uf]]]),Ig=new Map([["bert",["BertForMaskedLM",Y]],["neobert",["NeoBertForMaskedLM",Lt]],["modernbert",["ModernBertForMaskedLM",Tt]],["roformer",["RoFormerForMaskedLM",Ps]],["electra",["ElectraForMaskedLM",ke]],["esm",["EsmForMaskedLM",us]],["convbert",["ConvBertForMaskedLM",ZA]],["camembert",["CamembertForMaskedLM",yt]],["deberta",["DebertaForMaskedLM",Ms]],["deberta-v2",["DebertaV2ForMaskedLM",js]],["mpnet",["MPNetForMaskedLM",ka]],["albert",["AlbertForMaskedLM",cA]],["distilbert",["DistilBertForMaskedLM",qt]],["roberta",["RobertaForMaskedLM",Qa]],["xlm",["XLMWithLMHeadModel",Gt]],["xlm-roberta",["XLMRobertaForMaskedLM",Hn]],["mobilebert",["MobileBertForMaskedLM",Ia]],["squeezebert",["SqueezeBertForMaskedLM",Be]]]),wg=new Map([["bert",["BertForQuestionAnswering",fe]],["neobert",["NeoBertForQuestionAnswering",Ft]],["roformer",["RoFormerForQuestionAnswering",ba]],["electra",["ElectraForQuestionAnswering",st]],["convbert",["ConvBertForQuestionAnswering",U]],["camembert",["CamembertForQuestionAnswering",Sr]],["deberta",["DebertaForQuestionAnswering",Rs]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ws]],["mpnet",["MPNetForQuestionAnswering",X]],["albert",["AlbertForQuestionAnswering",bt]],["distilbert",["DistilBertForQuestionAnswering",vs]],["roberta",["RobertaForQuestionAnswering",gn]],["xlm",["XLMForQuestionAnswering",pn]],["xlm-roberta",["XLMRobertaForQuestionAnswering",$a]],["mobilebert",["MobileBertForQuestionAnswering",wa]],["squeezebert",["SqueezeBertForQuestionAnswering",tt]]]),Lc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Xn]],["idefics3",["Idefics3ForConditionalGeneration",kn]],["smolvlm",["SmolVLMForConditionalGeneration",tn]]]),kg=new Map([["llava",["LlavaForConditionalGeneration",lt]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ei]],["moondream1",["Moondream1ForConditionalGeneration",St]],["florence2",["Florence2ForConditionalGeneration",wn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",po]],["idefics3",["Idefics3ForConditionalGeneration",kn]],["smolvlm",["SmolVLMForConditionalGeneration",tn]],["paligemma",["PaliGemmaForConditionalGeneration",fs]],["llava_qwen2",["LlavaQwen2ForCausalLM",ca]],["gemma3n",["Gemma3nForConditionalGeneration",en]]]),Eg=new Map([["ultravox",["UltravoxModel",Oc]],["voxtral",["VoxtralForConditionalGeneration",Ag]]]),Q6=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Xn]]]),Mg=new Map([["vit",["ViTForImageClassification",T]],["ijepa",["IJepaForImageClassification",H]],["pvt",["PvtForImageClassification",ve]],["vit_msn",["ViTMSNForImageClassification",ct]],["fastvit",["FastViTForImageClassification",bA]],["mobilevit",["MobileViTForImageClassification",Ir]],["mobilevitv2",["MobileViTV2ForImageClassification",Ur]],["beit",["BeitForImageClassification",Ai]],["deit",["DeiTForImageClassification",z1]],["hiera",["HieraForImageClassification",R1]],["convnext",["ConvNextForImageClassification",pd]],["convnextv2",["ConvNextV2ForImageClassification",md]],["dinov2",["Dinov2ForImageClassification",bd]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",wd]],["resnet",["ResNetForImageClassification",W1]],["swin",["SwinForImageClassification",Y1]],["segformer",["SegformerForImageClassification",xf]],["efficientnet",["EfficientNetForImageClassification",Tf]],["mobilenet_v1",["MobileNetV1ForImageClassification",Qf]],["mobilenet_v2",["MobileNetV2ForImageClassification",Of]],["mobilenet_v3",["MobileNetV3ForImageClassification",zf]],["mobilenet_v4",["MobileNetV4ForImageClassification",jf]]]),vg=new Map([["detr",["DetrForObjectDetection",si]],["rt_detr",["RTDetrForObjectDetection",x1]],["rt_detr_v2",["RTDetrV2ForObjectDetection",B1]],["rf_detr",["RFDetrForObjectDetection",T1]],["d_fine",["DFineForObjectDetection",S1]],["table-transformer",["TableTransformerForObjectDetection",O1]],["yolos",["YolosForObjectDetection",vd]]]),xg=new Map([["owlvit",["OwlViTForObjectDetection",gs]],["owlv2",["Owlv2ForObjectDetection",ga]],["grounding-dino",["GroundingDinoForObjectDetection",Ed]]]),wo=new Map([["detr",["DetrForSegmentation",mo]],["clipseg",["CLIPSegForImageSegmentation",eA]]]),yg=new Map([["segformer",["SegformerForSemanticSegmentation",yf]],["sapiens",["SapiensForSemanticSegmentation",$1]],["swin",["SwinForSemanticSegmentation",H1]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",Sf]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",_f]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Lf]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",Wf]]]),Bg=new Map([["detr",["DetrForSegmentation",mo]],["maskformer",["MaskFormerForInstanceSegmentation",ld]]]),Dg=new Map([["sam",["SamModel",Bd]]]),Pg=new Map([["wav2vec2",["Wav2Vec2ForCTC",Fd]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Zd]],["unispeech",["UniSpeechForCTC",Wd]],["unispeech-sat",["UniSpeechSatForCTC",Hd]],["wavlm",["WavLMForCTC",Af]],["hubert",["HubertForCTC",$d]]]),Tg=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Od]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Jd]],["unispeech",["UniSpeechForSequenceClassification",Vd]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Ud]],["wavlm",["WavLMForSequenceClassification",rf]],["hubert",["HubertForSequenceClassification",ef]],["audio-spectrogram-transformer",["ASTForAudioClassification",Fa]]]),Gg=new Map([["wavlm",["WavLMForXVector",sf]]]),Qg=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Kd]],["wavlm",["WavLMForAudioFrameClassification",af]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",_d]],["pyannote",["PyAnnoteForAudioFrameClassification",zd]]]),Sg=new Map([["vitmatte",["VitMatteForImageMatting",OA]]]),S6=new Map([["patchtst",["PatchTSTForPrediction",qf]],["patchtsmixer",["PatchTSMixerForPrediction",eg]]]),Fg=new Map([["swin2sr",["Swin2SRForImageSuperResolution",K1]]]),Og=new Map([["dpt",["DPTForDepthEstimation",Z1]],["depth_anything",["DepthAnythingForDepthEstimation",q1]],["glpn",["GLPNForDepthEstimation",ud]],["sapiens",["SapiensForDepthEstimation",ed]],["depth_pro",["DepthProForDepthEstimation",rd]],["metric3d",["Metric3DForDepthEstimation",ad]],["metric3dv2",["Metric3Dv2ForDepthEstimation",id]]]),_g=new Map([["sapiens",["SapiensForNormalEstimation",td]]]),Ng=new Map([["vitpose",["VitPoseForPoseEstimation",re]]]),zg=new Map([["clip",["CLIPVisionModelWithProjection",Mi]],["siglip",["SiglipVisionModel",Xt]],["jina_clip",["JinaCLIPVisionModel",gr]]]),Lg=[[B6,f.EncoderOnly],[D6,f.EncoderDecoder],[T6,f.DecoderOnly],[P6,f.AutoEncoder],[Cg,f.EncoderOnly],[bg,f.EncoderOnly],[Nc,f.Seq2Seq],[_c,f.Seq2Seq],[zc,f.DecoderOnly],[G6,f.MultiModality],[Ig,f.EncoderOnly],[wg,f.EncoderOnly],[Lc,f.Vision2Seq],[kg,f.ImageTextToText],[Eg,f.AudioTextToText],[Mg,f.EncoderOnly],[wo,f.EncoderOnly],[Bg,f.EncoderOnly],[yg,f.EncoderOnly],[Sg,f.EncoderOnly],[S6,f.EncoderOnly],[Fg,f.EncoderOnly],[Og,f.EncoderOnly],[_g,f.EncoderOnly],[Ng,f.EncoderOnly],[vg,f.EncoderOnly],[xg,f.EncoderOnly],[Dg,f.MaskGeneration],[Pg,f.EncoderOnly],[Tg,f.EncoderOnly],[hg,f.Seq2Seq],[mg,f.EncoderOnly],[Gg,f.EncoderOnly],[Qg,f.EncoderOnly],[zg,f.EncoderOnly]];for(const[R,j]of Lg)for(const[oe,Ge]of R.values())k.set(oe,j),d.set(Ge,oe),e.set(oe,Ge);const F6=[["MusicgenForConditionalGeneration",Qc,f.Musicgen],["Phi3VForCausalLM",ua,f.Phi3V],["CLIPTextModelWithProjection",kt,f.EncoderOnly],["SiglipTextModel",$s,f.EncoderOnly],["JinaCLIPTextModel",Qs,f.EncoderOnly],["ClapTextModelWithProjection",Ef,f.EncoderOnly],["ClapAudioModelWithProjection",Mf,f.EncoderOnly],["DacEncoderModel",ug,f.EncoderOnly],["DacDecoderModel",dg,f.EncoderOnly],["MimiEncoderModel",ng,f.EncoderOnly],["MimiDecoderModel",ig,f.EncoderOnly],["SnacEncoderModel",gg,f.EncoderOnly],["SnacDecoderModel",pg,f.EncoderOnly],["Gemma3nForConditionalGeneration",en,f.ImageAudioTextToText]];for(const[R,j,oe]of F6)k.set(R,oe),d.set(j,R),e.set(R,j);const Rg=new Map([["modnet",wo],["birefnet",wo],["isnet",wo],["ben",wo]]);for(const[R,j]of Rg.entries())j.set(R,["PreTrainedModel",ge]),k.set(R,f.EncoderOnly),d.set(ge,R),e.set(R,ge);class O6 extends $A{static MODEL_CLASS_MAPPINGS=Lg.map(j=>j[0]);static BASE_IF_FAIL=!0}class _6 extends $A{static MODEL_CLASS_MAPPINGS=[Cg]}class N6 extends $A{static MODEL_CLASS_MAPPINGS=[bg]}class z6 extends $A{static MODEL_CLASS_MAPPINGS=[Nc]}class L6 extends $A{static MODEL_CLASS_MAPPINGS=[_c]}class R6 extends $A{static MODEL_CLASS_MAPPINGS=[hg]}class j6 extends $A{static MODEL_CLASS_MAPPINGS=[mg]}class W6 extends $A{static MODEL_CLASS_MAPPINGS=[zc]}class V6 extends $A{static MODEL_CLASS_MAPPINGS=[Ig]}class Y6 extends $A{static MODEL_CLASS_MAPPINGS=[wg]}class H6 extends $A{static MODEL_CLASS_MAPPINGS=[Lc]}class U6 extends $A{static MODEL_CLASS_MAPPINGS=[Mg]}class K6 extends $A{static MODEL_CLASS_MAPPINGS=[wo]}class X6 extends $A{static MODEL_CLASS_MAPPINGS=[yg]}class Z6 extends $A{static MODEL_CLASS_MAPPINGS=[Bg]}class J6 extends $A{static MODEL_CLASS_MAPPINGS=[vg]}class q6 extends $A{static MODEL_CLASS_MAPPINGS=[xg]}class $6 extends $A{static MODEL_CLASS_MAPPINGS=[Dg]}class ew extends $A{static MODEL_CLASS_MAPPINGS=[Pg]}class tw extends $A{static MODEL_CLASS_MAPPINGS=[Tg]}class Aw extends $A{static MODEL_CLASS_MAPPINGS=[Gg]}class rw extends $A{static MODEL_CLASS_MAPPINGS=[Qg]}class sw extends $A{static MODEL_CLASS_MAPPINGS=[Q6]}class aw extends $A{static MODEL_CLASS_MAPPINGS=[Sg]}class nw extends $A{static MODEL_CLASS_MAPPINGS=[Fg]}class iw extends $A{static MODEL_CLASS_MAPPINGS=[Og]}class ow extends $A{static MODEL_CLASS_MAPPINGS=[_g]}class lw extends $A{static MODEL_CLASS_MAPPINGS=[Ng]}class cw extends $A{static MODEL_CLASS_MAPPINGS=[zg]}class uw extends $A{static MODEL_CLASS_MAPPINGS=[kg]}class dw extends $A{static MODEL_CLASS_MAPPINGS=[Eg]}class fw extends Ve{constructor({logits:j,past_key_values:oe,encoder_outputs:Ge,decoder_attentions:Re=null,cross_attentions:He=null}){super(),this.logits=j,this.past_key_values=oe,this.encoder_outputs=Ge,this.decoder_attentions=Re,this.cross_attentions=He}}class uA extends Ve{constructor({logits:j,...oe}){super(),this.logits=j;const Ge=Object.values(oe);Ge.length>0&&(this.attentions=Ge)}}class jg extends Ve{constructor({logits:j,embeddings:oe}){super(),this.logits=j,this.embeddings=oe}}class os extends Ve{constructor({logits:j}){super(),this.logits=j}}class hs extends Ve{constructor({logits:j}){super(),this.logits=j}}class Ds extends Ve{constructor({start_logits:j,end_logits:oe}){super(),this.start_logits=j,this.end_logits=oe}}class Oi extends Ve{constructor({logits:j}){super(),this.logits=j}}class gw extends Ve{constructor({logits:j,past_key_values:oe}){super(),this.logits=j,this.past_key_values=oe}}class Wg extends Ve{constructor({alphas:j}){super(),this.alphas=j}}class Vg extends Ve{constructor({waveform:j,spectrogram:oe}){super(),this.waveform=j,this.spectrogram=oe}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(a,n,i)=>{i.r(n),i.d(n,{ASTFeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var p=i("./src/utils/audio.js");class m extends c.FeatureExtractor{constructor(I){super(I);const E=this.config.sampling_rate,x=(0,p.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(E/2),E,null,"kaldi",!0);this.mel_filters=x,this.window=(0,p.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(I,E){return(0,p.spectrogram)(I,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:E,transpose:!0})}async _call(I){(0,c.validate_audio_inputs)(I,"ASTFeatureExtractor");const E=await this._extract_fbank_features(I,this.config.max_length);if(this.config.do_normalize){const x=this.std*2,D=E.data;for(let y=0;y<D.length;++y)D[y]=(D[y]-this.mean)/x}return{input_values:E.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(a,n,i)=>{i.r(n),i.d(n,{AutoFeatureExtractor:()=>C});var c=i("./src/utils/constants.js"),p=i("./src/utils/hub.js");i("./src/base/feature_extraction_utils.js");var m=i("./src/models/feature_extractors.js");class C{static async from_pretrained(E,x={}){const D=await(0,p.getModelJSON)(E,c.FEATURE_EXTRACTOR_NAME,!0,x),y=D.feature_extractor_type,M=m[y];if(!M)throw new Error(`Unknown feature_extractor_type: '${y}'. Please report this at ${c.GITHUB_ISSUE_URL}.`);return new M(D)}}},"./src/models/auto/image_processing_auto.js":(a,n,i)=>{i.r(n),i.d(n,{AutoImageProcessor:()=>I});var c=i("./src/utils/constants.js"),p=i("./src/utils/hub.js"),m=i("./src/base/image_processors_utils.js"),C=i("./src/models/image_processors.js");class I{static async from_pretrained(x,D={}){const y=await(0,p.getModelJSON)(x,c.IMAGE_PROCESSOR_NAME,!0,D),M=y.image_processor_type??y.feature_extractor_type;let S=C[M?.replace(/Fast$/,"")];return S||(M!==void 0&&console.warn(`Image processor type '${M}' not found, assuming base ImageProcessor. Please report this at ${c.GITHUB_ISSUE_URL}.`),S=m.ImageProcessor),new S(y)}}},"./src/models/auto/processing_auto.js":(a,n,i)=>{i.r(n),i.d(n,{AutoProcessor:()=>x});var c=i("./src/utils/constants.js"),p=i("./src/utils/hub.js"),m=i("./src/base/processing_utils.js"),C=i("./src/models/processors.js"),I=i("./src/models/image_processors.js"),E=i("./src/models/feature_extractors.js");class x{static async from_pretrained(y,M={}){const S=await(0,p.getModelJSON)(y,c.IMAGE_PROCESSOR_NAME,!0,M),{image_processor_type:F,feature_extractor_type:L,processor_class:Z}=S;if(Z&&C[Z])return C[Z].from_pretrained(y,M);if(!F&&!L)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const z={};if(F){const K=I[F.replace(/Fast$/,"")];if(!K)throw new Error(`Unknown image_processor_type: '${F}'.`);z.image_processor=new K(S)}if(L){const K=I[L];if(K)z.image_processor=new K(S);else{const f=E[L];if(!f)throw new Error(`Unknown feature_extractor_type: '${L}'.`);z.feature_extractor=new f(S)}}const N={};return new m.Processor(N,z,null)}}},"./src/models/beit/image_processing_beit.js":(a,n,i)=>{i.r(n),i.d(n,{BeitFeatureExtractor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(a,n,i)=>{i.r(n),i.d(n,{BitImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(a,n,i)=>{i.r(n),i.d(n,{ChineseCLIPFeatureExtractor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(a,n,i)=>{i.r(n),i.d(n,{ClapFeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var p=i("./src/utils/audio.js");class m extends c.FeatureExtractor{constructor(I){super(I),this.mel_filters=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,p.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(I,E,x,D){let y;const M=I.length-E;if(M>0)if(x==="rand_trunc"){const S=Math.floor(Math.random()*(M+1));I=I.subarray(S,S+E),y=await this._extract_fbank_features(I,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${x}" not implemented`);else{if(M<0){let S=new Float64Array(E);if(S.set(I),D==="repeat")for(let F=I.length;F<E;F+=I.length)S.set(I.subarray(0,Math.min(I.length,E-F)),F);else if(D==="repeatpad")for(let F=I.length;F<-M;F+=I.length)S.set(I,F);I=S}if(x==="fusion")throw new Error(`Truncation strategy "${x}" not implemented`);y=await this._extract_fbank_features(I,this.mel_filters_slaney,this.config.nb_max_samples)}return y.unsqueeze_(0)}async _extract_fbank_features(I,E,x=null){return(0,p.spectrogram)(I,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:E,log_mel:"dB",max_num_frames:x,do_pad:!1,transpose:!0})}async _call(I,{max_length:E=null}={}){return(0,c.validate_audio_inputs)(I,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(I,E??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(a,n,i)=>{i.r(n),i.d(n,{CLIPFeatureExtractor:()=>m,CLIPImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/convnext/image_processing_convnext.js":(a,n,i)=>{i.r(n),i.d(n,{ConvNextFeatureExtractor:()=>m,ConvNextImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{constructor(I){super(I),this.crop_pct=this.config.crop_pct??224/256}async resize(I){const E=this.size?.shortest_edge;if(E===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(E<384){const x=Math.floor(E/this.crop_pct),[D,y]=this.get_resize_output_image_size(I,{shortest_edge:x});I=await I.resize(D,y,{resample:this.resample}),I=await I.center_crop(E,E)}else I=await I.resize(E,E,{resample:this.resample});return I}}class m extends p{}},"./src/models/dac/feature_extraction_dac.js":(a,n,i)=>{i.r(n),i.d(n,{DacFeatureExtractor:()=>p});var c=i("./src/models/encodec/feature_extraction_encodec.js");class p extends c.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(a,n,i)=>{i.r(n),i.d(n,{DeiTFeatureExtractor:()=>m,DeiTImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/detr/image_processing_detr.js":(a,n,i)=>{i.r(n),i.d(n,{DetrFeatureExtractor:()=>C,DetrImageProcessor:()=>m});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");class m extends c.ImageProcessor{async _call(E){const x=await super._call(E),D=[x.pixel_values.dims[0],64,64],y=(0,p.full)(D,1n);return{...x,pixel_mask:y}}post_process_object_detection(...E){return(0,c.post_process_object_detection)(...E)}post_process_panoptic_segmentation(...E){return(0,c.post_process_panoptic_segmentation)(...E)}post_process_instance_segmentation(...E){return(0,c.post_process_instance_segmentation)(...E)}}class C extends m{}},"./src/models/donut/image_processing_donut.js":(a,n,i)=>{i.r(n),i.d(n,{DonutFeatureExtractor:()=>m,DonutImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{pad_image(I,E,x,D={}){const[y,M,S]=E;let F=this.image_mean;Array.isArray(this.image_mean)||(F=new Array(S).fill(F));let L=this.image_std;Array.isArray(L)||(L=new Array(S).fill(F));const Z=F.map((z,N)=>-z/L[N]);return super.pad_image(I,E,x,{center:!0,constant_values:Z,...D})}}class m extends p{}},"./src/models/dpt/image_processing_dpt.js":(a,n,i)=>{i.r(n),i.d(n,{DPTFeatureExtractor:()=>m,DPTImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/efficientnet/image_processing_efficientnet.js":(a,n,i)=>{i.r(n),i.d(n,{EfficientNetImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{constructor(C){super(C),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(I=>I*I))}}},"./src/models/encodec/feature_extraction_encodec.js":(a,n,i)=>{i.r(n),i.d(n,{EncodecFeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js");class m extends c.FeatureExtractor{async _call(I){(0,c.validate_audio_inputs)(I,"EncodecFeatureExtractor"),I instanceof Float64Array&&(I=new Float32Array(I));const E=this.config.feature_size;if(I.length%E!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${E}).`);const x=[1,E,I.length/E];return{input_values:new p.Tensor("float32",I,x)}}}},"./src/models/feature_extractors.js":(a,n,i)=>{i.r(n),i.d(n,{ASTFeatureExtractor:()=>c.ASTFeatureExtractor,ClapFeatureExtractor:()=>m.ClapFeatureExtractor,DacFeatureExtractor:()=>C.DacFeatureExtractor,EncodecFeatureExtractor:()=>p.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>I.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>Z.ImageProcessor,MoonshineFeatureExtractor:()=>E.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>x.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>D.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>y.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>M.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>S.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>F.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>L.WhisperFeatureExtractor});var c=i("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),p=i("./src/models/encodec/feature_extraction_encodec.js"),m=i("./src/models/clap/feature_extraction_clap.js"),C=i("./src/models/dac/feature_extraction_dac.js"),I=i("./src/models/gemma3n/feature_extraction_gemma3n.js"),E=i("./src/models/moonshine/feature_extraction_moonshine.js"),x=i("./src/models/pyannote/feature_extraction_pyannote.js"),D=i("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),y=i("./src/models/snac/feature_extraction_snac.js"),M=i("./src/models/speecht5/feature_extraction_speecht5.js"),S=i("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),F=i("./src/models/wespeaker/feature_extraction_wespeaker.js"),L=i("./src/models/whisper/feature_extraction_whisper.js"),Z=i("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(a,n,i)=>{i.r(n),i.d(n,{Florence2Processor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");class C extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;constructor(E,x,D){super(E,x,D);const{tasks_answer_post_processing_type:y,task_prompts_without_inputs:M,task_prompts_with_input:S}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(y??{})),this.task_prompts_without_inputs=new Map(Object.entries(M??{})),this.task_prompts_with_input=new Map(Object.entries(S??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(E){typeof E=="string"&&(E=[E]);const x=[];for(const D of E)if(this.task_prompts_without_inputs.has(D))x.push(this.task_prompts_without_inputs.get(D));else{for(const[y,M]of this.task_prompts_with_input)if(D.includes(y)){x.push(M.replaceAll("{input}",D).replaceAll(y,""));break}x.length!==E.length&&x.push(D)}return x}post_process_generation(E,x,D){const y=this.tasks_answer_post_processing_type.get(x)??"pure_text";E=E.replaceAll("<s>","").replaceAll("</s>","");let M;switch(y){case"pure_text":M=E;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const S=y==="ocr"?"quad_boxes":"bboxes",F=E.matchAll(this.regexes[S]),L=[],Z=[];for(const[z,N,...K]of F)L.push(N?N.trim():L.at(-1)??""),Z.push(K.map((f,k)=>(Number(f)+.5)/this.size_per_bin*D[k%2]));M={labels:L,[S]:Z};break;default:throw new Error(`Task "${x}" (of type "${y}") not yet implemented.`)}return{[x]:M}}async _call(E,x=null,D={}){if(!E&&!x)throw new Error("Either text or images must be provided");const y=await this.image_processor(E,D),M=x?this.tokenizer(this.construct_prompts(x),D):{};return{...y,...M}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(a,n,i)=>{i.r(n),i.d(n,{Gemma3nAudioFeatureExtractor:()=>C});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js"),m=i("./src/utils/audio.js");class C extends c.FeatureExtractor{constructor(E){super(E);const{fft_length:x,feature_size:D,min_frequency:y,max_frequency:M,sampling_rate:S,frame_length:F}=this.config,L=(0,m.mel_filter_bank)(Math.floor(1+x/2),D,y,M,S,null,"htk",!1);this.mel_filters=L,this.window=(0,m.window_function)(F,"hann")}async _extract_fbank_features(E,x){return(0,m.spectrogram)(E,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(E,{max_length:x=48e4,truncation:D=!0,padding:y=!0,pad_to_multiple_of:M=128}={}){if((0,c.validate_audio_inputs)(E,"Gemma3nAudioFeatureExtractor"),D&&E.length>x&&(E=E.slice(0,x)),y&&E.length%M!==0){const L=M-E.length%M,Z=new Float64Array(E.length+L);Z.set(E),this.config.padding_value!==0&&Z.fill(this.config.padding_value,E.length),E=Z}const S=await this._extract_fbank_features(E,this.config.max_length),F=(0,p.full)([1,S.dims[0]],!0);return{input_features:S.unsqueeze_(0),input_features_mask:F}}}},"./src/models/gemma3n/processing_gemma3n.js":(a,n,i)=>{i.r(n),i.d(n,{Gemma3nProcessor:()=>I});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/models/auto/feature_extraction_auto.js"),C=i("./src/tokenizers.js");i("./src/utils/image.js"),i("./src/utils/audio.js");class I extends c.Processor{static image_processor_class=p.AutoImageProcessor;static feature_extractor_class=m.AutoFeatureExtractor;static tokenizer_class=C.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(x,D,y){super(x,D,y),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:M,boa_token:S,audio_token:F,eoa_token:L,image_token_id:Z,boi_token:z,image_token:N,eoi_token:K}=this.tokenizer.config;this.audio_token_id=M,this.boa_token=S,this.audio_token=F;const f=F.repeat(this.audio_seq_length);this.full_audio_sequence=`

${S}${f}${L}

`,this.image_token_id=Z,this.boi_token=z,this.image_token=N;const k=N.repeat(this.image_seq_length);this.full_image_sequence=`

${z}${k}${K}

`}async _call(x,D=null,y=null,M={}){typeof x=="string"&&(x=[x]);let S;y&&(S=await this.feature_extractor(y,M),x=x.map(Z=>Z.replaceAll(this.audio_token,this.full_audio_sequence)));let F;return D&&(F=await this.image_processor(D,M),x=x.map(Z=>Z.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(x,M),...F,...S}}}},"./src/models/glpn/image_processing_glpn.js":(a,n,i)=>{i.r(n),i.d(n,{GLPNFeatureExtractor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(a,n,i)=>{i.r(n),i.d(n,{GroundingDinoImageProcessor:()=>m});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");class m extends c.ImageProcessor{async _call(I){const E=await super._call(I),x=E.pixel_values.dims,D=(0,p.ones)([x[0],x[2],x[3]]);return{...E,pixel_mask:D}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(a,n,i)=>{i.r(n),i.d(n,{GroundingDinoProcessor:()=>E});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js"),C=i("./src/base/image_processors_utils.js");function I(x,D){const M=x.dims.at(-1)-1,S=x.tolist();S.fill(!1,0,1),S.fill(!1,M);const F=D.tolist();return S.map((L,Z)=>L?Z:null).filter(L=>L!==null).map(L=>F[L])}class E extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;async _call(D,y,M={}){const S=D?await this.image_processor(D,M):{};return{...y?this.tokenizer(y,M):{},...S}}post_process_grounded_object_detection(D,y,{box_threshold:M=.25,text_threshold:S=.25,target_sizes:F=null}={}){const{logits:L,pred_boxes:Z}=D,z=L.dims[0];if(F!==null&&F.length!==z)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const N=L.dims.at(1),K=L.sigmoid(),f=K.max(-1).tolist(),k=Z.tolist().map(d=>d.map(B=>(0,C.center_to_corners_format)(B))),e=[];for(let d=0;d<z;++d){const B=F!==null?F[d]:null;B!==null&&(k[d]=k[d].map(ee=>ee.map((Ce,we)=>Ce*B[(we+1)%2])));const Ae=f[d],P=[],O=[],me=[];for(let ee=0;ee<N;++ee){const Ce=Ae[ee];if(Ce<=M)continue;const we=k[d][ee],xe=K[d][ee];P.push(Ce),me.push(we);const De=I(xe.gt(S),y[d]);O.push(De)}e.push({scores:P,boxes:me,labels:this.batch_decode(O)})}return e}}},"./src/models/idefics3/image_processing_idefics3.js":(a,n,i)=>{i.r(n),i.d(n,{Idefics3ImageProcessor:()=>m});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");class m extends c.ImageProcessor{constructor(I){super(I),this.do_image_splitting=I.do_image_splitting??!0,this.max_image_size=I.max_image_size}get_resize_for_vision_encoder(I,E){let[x,D]=I.dims.slice(-2);const y=D/x;return D>=x?(D=Math.ceil(D/E)*E,x=Math.floor(D/y),x=Math.ceil(x/E)*E):(x=Math.ceil(x/E)*E,D=Math.floor(x*y),D=Math.ceil(D/E)*E),{height:x,width:D}}async _call(I,{do_image_splitting:E=null,return_row_col_info:x=!1}={}){let D;if(!Array.isArray(I))D=[[I]];else{if(I.length===0||!I[0])throw new Error("No images provided.");Array.isArray(I[0])?D=I:D=[I]}let y=[],M=[],S=[];const F=[],L=[];for(const d of D){let B=await Promise.all(d.map(O=>this.preprocess(O)));F.push(...B.map(O=>O.original_size)),L.push(...B.map(O=>O.reshaped_input_size)),B.forEach(O=>O.pixel_values.unsqueeze_(0));const{longest_edge:Ae}=this.max_image_size;let P;if(E??this.do_image_splitting){let O=new Array(B.length),me=new Array(B.length);P=await Promise.all(B.map(async(ee,Ce)=>{const we=this.get_resize_for_vision_encoder(ee.pixel_values,Ae),xe=await(0,p.interpolate_4d)(ee.pixel_values,{size:[we.height,we.width]}),{frames:De,num_splits_h:ye,num_splits_w:Oe}=await this.split_image(xe,this.max_image_size);return O[Ce]=ye,me[Ce]=Oe,(0,p.cat)(De,0)})),M.push(O),S.push(me)}else{const O=[Ae,Ae];P=await Promise.all(B.map(me=>(0,p.interpolate_4d)(me.pixel_values,{size:O}))),M.push(new Array(B.length).fill(0)),S.push(new Array(B.length).fill(0))}y.push((0,p.cat)(P,0))}const Z=y.length,[z,N,K,f]=y[0].dims;let k,e;if(Z===1)k=y[0].unsqueeze_(0),e=(0,p.full)([Z,z,K,f],!0);else{const d=Math.max(...y.map(P=>P.dims.at(0)));e=(0,p.full)([Z,d,K,f],!0);const B=e.data,Ae=d*K*f;for(let P=0;P<Z;++P){const O=y[P].dims[0];if(O<d){y[P]=(0,p.cat)([y[P],(0,p.full)([d-O,N,K,f],0)],0);const me=P*Ae+O*K*f,ee=(P+1)*Ae;B.fill(!1,me,ee)}}k=(0,p.stack)(y,0)}return{pixel_values:k,pixel_attention_mask:e,original_sizes:F,reshaped_input_sizes:L,...x?{rows:M,cols:S}:{}}}async split_image(I,{longest_edge:E}){const x=E,D=E,y=[],[M,S]=I.dims.slice(-2);let F=0,L=0;if(M>x||S>D){F=Math.ceil(M/x),L=Math.ceil(S/D);const Z=Math.ceil(M/F),z=Math.ceil(S/L);for(let f=0;f<F;++f)for(let k=0;k<L;++k){let e,d,B,Ae;f===F-1?(d=M-Z,Ae=M):(d=f*Z,Ae=(f+1)*Z),k===L-1?(e=S-z,B=S):(e=k*z,B=(k+1)*z);const P=[d,e],O=[Ae,B],me=await(0,p.slice)(I,P,O,[2,3]);y.push(me)}const N=x,K=D;(M!==N||S!==K)&&(I=await(0,p.interpolate_4d)(I,{size:[N,K]}))}return y.push(I),{frames:y,num_splits_h:F,num_splits_w:L}}}},"./src/models/idefics3/processing_idefics3.js":(a,n,i)=>{i.r(n),i.d(n,{Idefics3Processor:()=>D});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");i("./src/utils/image.js");var C=i("./src/utils/core.js");function I(y,M,S,F,L,Z){let z="";for(let N=0;N<M;++N){for(let K=0;K<S;++K)z+=F+`<row_${N+1}_col_${K+1}>`+L.repeat(y);z+=`
`}return z+=`
${F}${Z}`+L.repeat(y)+`${F}`,z}function E(y,M,S,F){return`${M}${F}`+S.repeat(y)+`${M}`}function x(y,M,S,F,L,Z){return y===0&&M===0?E(S,F,L,Z):I(S,y,M,F,L,Z)}class D extends c.Processor{static image_processor_class=p.AutoImageProcessor;static tokenizer_class=m.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(M,S=null,F={}){F.return_row_col_info??=!0;let L;S&&(L=await this.image_processor(S,F)),Array.isArray(M)||(M=[M]);const Z=L.rows??[new Array(M.length).fill(0)],z=L.cols??[new Array(M.length).fill(0)],N=this.config.image_seq_len,K=[],f=[];for(let e=0;e<M.length;++e){const d=M[e],B=Z[e],Ae=z[e];K.push((0,C.count)(d,this.image_token));const P=B.map((ee,Ce)=>x(ee,Ae[Ce],N,this.fake_image_token,this.image_token,this.global_img_token)),O=d.split(this.image_token);if(O.length===0)throw new Error("The image token should be present in the text.");let me=O[0];for(let ee=0;ee<P.length;++ee)me+=P[ee]+O[ee+1];f.push(me)}return{...this.tokenizer(f),...L}}}},"./src/models/image_processors.js":(a,n,i)=>{i.r(n),i.d(n,{BeitFeatureExtractor:()=>c.BeitFeatureExtractor,BitImageProcessor:()=>p.BitImageProcessor,CLIPFeatureExtractor:()=>C.CLIPFeatureExtractor,CLIPImageProcessor:()=>C.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>m.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>I.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>I.ConvNextImageProcessor,DPTFeatureExtractor:()=>y.DPTFeatureExtractor,DPTImageProcessor:()=>y.DPTImageProcessor,DeiTFeatureExtractor:()=>E.DeiTFeatureExtractor,DeiTImageProcessor:()=>E.DeiTImageProcessor,DetrFeatureExtractor:()=>x.DetrFeatureExtractor,DetrImageProcessor:()=>x.DetrImageProcessor,DonutFeatureExtractor:()=>D.DonutFeatureExtractor,DonutImageProcessor:()=>D.DonutImageProcessor,EfficientNetImageProcessor:()=>M.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>S.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>F.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>L.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>z.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>N.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>K.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>k.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>k.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>d.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>d.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>B.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>B.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>Ae.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>Ae.MobileViTImageProcessor,NougatImageProcessor:()=>P.NougatImageProcessor,OwlViTFeatureExtractor:()=>me.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>me.OwlViTImageProcessor,Owlv2ImageProcessor:()=>O.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ee.Phi3VImageProcessor,PvtImageProcessor:()=>Ce.PvtImageProcessor,Qwen2VLImageProcessor:()=>we.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>xe.RTDetrImageProcessor,SamImageProcessor:()=>De.SamImageProcessor,SegformerFeatureExtractor:()=>ye.SegformerFeatureExtractor,SegformerImageProcessor:()=>ye.SegformerImageProcessor,SiglipImageProcessor:()=>Oe.SiglipImageProcessor,SmolVLMImageProcessor:()=>_e.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>ne.Swin2SRImageProcessor,VLMImageProcessor:()=>Z.VLMImageProcessor,ViTFeatureExtractor:()=>te.ViTFeatureExtractor,ViTImageProcessor:()=>te.ViTImageProcessor,VitMatteImageProcessor:()=>pe.VitMatteImageProcessor,VitPoseImageProcessor:()=>le.VitPoseImageProcessor,YolosFeatureExtractor:()=>Qe.YolosFeatureExtractor,YolosImageProcessor:()=>Qe.YolosImageProcessor});var c=i("./src/models/beit/image_processing_beit.js"),p=i("./src/models/bit/image_processing_bit.js"),m=i("./src/models/chinese_clip/image_processing_chinese_clip.js"),C=i("./src/models/clip/image_processing_clip.js"),I=i("./src/models/convnext/image_processing_convnext.js"),E=i("./src/models/deit/image_processing_deit.js"),x=i("./src/models/detr/image_processing_detr.js"),D=i("./src/models/donut/image_processing_donut.js"),y=i("./src/models/dpt/image_processing_dpt.js"),M=i("./src/models/efficientnet/image_processing_efficientnet.js"),S=i("./src/models/glpn/image_processing_glpn.js"),F=i("./src/models/grounding_dino/image_processing_grounding_dino.js"),L=i("./src/models/idefics3/image_processing_idefics3.js"),Z=i("./src/models/janus/image_processing_janus.js"),z=i("./src/models/jina_clip/image_processing_jina_clip.js"),N=i("./src/models/llava_onevision/image_processing_llava_onevision.js"),K=i("./src/models/mask2former/image_processing_mask2former.js"),f=i("./src/models/maskformer/image_processing_maskformer.js"),k=i("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=i("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),d=i("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),B=i("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),Ae=i("./src/models/mobilevit/image_processing_mobilevit.js"),P=i("./src/models/nougat/image_processing_nougat.js"),O=i("./src/models/owlv2/image_processing_owlv2.js"),me=i("./src/models/owlvit/image_processing_owlvit.js"),ee=i("./src/models/phi3_v/image_processing_phi3_v.js"),Ce=i("./src/models/pvt/image_processing_pvt.js"),we=i("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),xe=i("./src/models/rt_detr/image_processing_rt_detr.js"),De=i("./src/models/sam/image_processing_sam.js"),ye=i("./src/models/segformer/image_processing_segformer.js"),Oe=i("./src/models/siglip/image_processing_siglip.js"),_e=i("./src/models/smolvlm/image_processing_smolvlm.js"),ne=i("./src/models/swin2sr/image_processing_swin2sr.js"),te=i("./src/models/vit/image_processing_vit.js"),pe=i("./src/models/vitmatte/image_processing_vitmatte.js"),le=i("./src/models/vitpose/image_processing_vitpose.js"),Qe=i("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(a,n,i)=>{i.r(n),i.d(n,{VLMImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{constructor(C){super({do_pad:!0,pad_size:{width:C.image_size,height:C.image_size},...C}),this.constant_values=this.config.background_color.map(I=>I*this.rescale_factor)}pad_image(C,I,E,x){return super.pad_image(C,I,E,{constant_values:this.constant_values,center:!0,...x})}}},"./src/models/janus/processing_janus.js":(a,n,i)=>{i.r(n),i.d(n,{VLChatProcessor:()=>x});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js"),C=i("./src/utils/core.js"),I=i("./src/utils/tensor.js"),E=i("./src/utils/image.js");class x extends c.Processor{static image_processor_class=p.AutoImageProcessor;static tokenizer_class=m.AutoTokenizer;static uses_processor_config=!0;constructor(y,M,S){super(y,M,S),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(y,{images:M=null,chat_template:S="default"}={}){M?Array.isArray(M)||(M=[M]):M=await Promise.all(y.filter(P=>P.images).flatMap(P=>P.images).map(P=>E.RawImage.read(P)));const F=this.tokenizer,L=F.apply_chat_template(y,{tokenize:!1,add_generation_prompt:!0,chat_template:S}),Z=P=>F.encode(P,{add_special_tokens:!1}),z=L.split(this.image_tag),N=z.length-1;if(M.length!==N)throw new Error(`Number of images provided (${M.length}) does not match number of "${this.image_tag}" image tags (${N})`);const[K,f,k]=F.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let e=Z(z[0]),d=new Array(e.length).fill(!1);for(let P=1;P<z.length;++P){const O=new Array(this.num_image_tokens).fill(K),me=Z(z[P]);e=(0,C.mergeArrays)(e,[f],O,[k],me);const ee=new Array(this.num_image_tokens).fill(!0);d=(0,C.mergeArrays)(d,[!1],ee,[!1],new Array(me.length).fill(!1))}const B=[1,e.length],Ae={input_ids:new I.Tensor("int64",e,B),attention_mask:new I.Tensor("int64",new Array(e.length).fill(1),B),images_seq_mask:new I.Tensor("bool",d,B),images_emb_mask:new I.Tensor("bool",new Array(N*this.num_image_tokens).fill(!0),[1,N,this.num_image_tokens])};if(M&&M.length>0){const P=await this.image_processor(M);return P.pixel_values.unsqueeze_(0),{...Ae,...P}}return Ae}}},"./src/models/jina_clip/image_processing_jina_clip.js":(a,n,i)=>{i.r(n),i.d(n,{JinaCLIPImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{constructor(C){const{resize_mode:I,fill_color:E,interpolation:x,size:D,...y}=C,M=I==="squash"?{width:D,height:D}:I==="shortest"?{shortest_edge:D}:{longest_edge:D},S=x==="bicubic"?3:2;super({...y,size:M,resample:S,do_center_crop:!0,crop_size:D,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(a,n,i)=>{i.r(n),i.d(n,{JinaCLIPProcessor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");class C extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;async _call(E=null,x=null,D={}){if(!E&&!x)throw new Error("Either text or images must be provided");const y=E?this.tokenizer(E,D):{},M=x?await this.image_processor(x,D):{};return{...y,...M}}}},"./src/models/llava/processing_llava.js":(a,n,i)=>{i.r(n),i.d(n,{LlavaProcessor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");class C extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;static uses_processor_config=!0;async _call(E,x=null,D={}){const y=await this.image_processor(E,D);if(x){const[S,F]=y.pixel_values.dims.slice(-2),{image_token:L,patch_size:Z,num_additional_image_tokens:z}=this.config,N=Math.floor(S/Z)*Math.floor(F/Z)+z;x=structuredClone(x),Array.isArray(x)||(x=[x]);for(let K=0;K<x.length;++K)x[K]=x[K].replace(L,L.repeat(N))}const M=x?this.tokenizer(x,D):{};return{...y,...M}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(a,n,i)=>{i.r(n),i.d(n,{LlavaOnevisionImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(a,n,i)=>{i.r(n),i.d(n,{Mask2FormerImageProcessor:()=>p});var c=i("./src/models/maskformer/image_processing_maskformer.js");class p extends c.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(a,n,i)=>{i.r(n),i.d(n,{MaskFormerFeatureExtractor:()=>m,MaskFormerImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_panoptic_segmentation(...I){return(0,c.post_process_panoptic_segmentation)(...I)}post_process_instance_segmentation(...I){return(0,c.post_process_instance_segmentation)(...I)}}class m extends p{}},"./src/models/mgp_str/processing_mgp_str.js":(a,n,i)=>{i.r(n),i.d(n,{MgpstrProcessor:()=>E});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js"),C=i("./src/utils/maths.js");const I={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class E extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(D,y){if(!I.hasOwnProperty(y))throw new Error(`Format ${y} is not supported.`);const[M,S]=I[y],F=this[M].bind(this),[L,Z]=D.dims,z=[],N=[],K=D.tolist();for(let k=0;k<L;++k){const e=K[k],d=[],B=[];for(let P=1;P<Z;++P){const[O,me]=(0,C.max)((0,C.softmax)(e[P]));if(B.push(O),me==S)break;d.push(me)}const Ae=B.length>0?B.reduce((P,O)=>P*O,1):0;N.push(d),z.push(Ae)}return[F(N),z]}char_decode(D){return this.char_tokenizer.batch_decode(D).map(y=>y.replaceAll(" ",""))}bpe_decode(D){return this.bpe_tokenizer.batch_decode(D)}wp_decode(D){return this.wp_tokenizer.batch_decode(D).map(y=>y.replaceAll(" ",""))}batch_decode([D,y,M]){const[S,F]=this._decode_helper(D,"char"),[L,Z]=this._decode_helper(y,"bpe"),[z,N]=this._decode_helper(M,"wp"),K=[],f=[];for(let k=0;k<S.length;++k){const[e,d]=(0,C.max)([F[k],Z[k],N[k]]);K.push([S[k],L[k],z[k]][d]),f.push(e)}return{generated_text:K,scores:f,char_preds:S,bpe_preds:L,wp_preds:z}}static async from_pretrained(...D){const y=await super.from_pretrained(...D),M=await m.AutoTokenizer.from_pretrained("Xenova/gpt2"),S=await m.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return y.components={image_processor:y.image_processor,char_tokenizer:y.tokenizer,bpe_tokenizer:M,wp_tokenizer:S},y}async _call(D,y=null){const M=await this.image_processor(D);return y&&(M.labels=this.tokenizer(y).input_ids),M}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(a,n,i)=>{i.r(n),i.d(n,{MobileNetV1FeatureExtractor:()=>m,MobileNetV1ImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(a,n,i)=>{i.r(n),i.d(n,{MobileNetV2FeatureExtractor:()=>m,MobileNetV2ImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(a,n,i)=>{i.r(n),i.d(n,{MobileNetV3FeatureExtractor:()=>m,MobileNetV3ImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(a,n,i)=>{i.r(n),i.d(n,{MobileNetV4FeatureExtractor:()=>m,MobileNetV4ImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/mobilevit/image_processing_mobilevit.js":(a,n,i)=>{i.r(n),i.d(n,{MobileViTFeatureExtractor:()=>m,MobileViTImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/moonshine/feature_extraction_moonshine.js":(a,n,i)=>{i.r(n),i.d(n,{MoonshineFeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js");class m extends c.FeatureExtractor{async _call(I){(0,c.validate_audio_inputs)(I,"MoonshineFeatureExtractor"),I instanceof Float64Array&&(I=new Float32Array(I));const E=[1,I.length];return{input_values:new p.Tensor("float32",I,E)}}}},"./src/models/moonshine/processing_moonshine.js":(a,n,i)=>{i.r(n),i.d(n,{MoonshineProcessor:()=>C});var c=i("./src/models/auto/feature_extraction_auto.js"),p=i("./src/tokenizers.js"),m=i("./src/base/processing_utils.js");class C extends m.Processor{static tokenizer_class=p.AutoTokenizer;static feature_extractor_class=c.AutoFeatureExtractor;async _call(E){return await this.feature_extractor(E)}}},"./src/models/nougat/image_processing_nougat.js":(a,n,i)=>{i.r(n),i.d(n,{NougatImageProcessor:()=>p});var c=i("./src/models/donut/image_processing_donut.js");class p extends c.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(a,n,i)=>{i.r(n),i.d(n,{Owlv2ImageProcessor:()=>p});var c=i("./src/models/owlvit/image_processing_owlvit.js");class p extends c.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(a,n,i)=>{i.r(n),i.d(n,{OwlViTFeatureExtractor:()=>m,OwlViTImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_object_detection(...I){return(0,c.post_process_object_detection)(...I)}}class m extends p{}},"./src/models/owlvit/processing_owlvit.js":(a,n,i)=>{i.r(n),i.d(n,{OwlViTProcessor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");class C extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(a,n,i)=>{i.r(n),i.d(n,{PaliGemmaProcessor:()=>E});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");const C="<image>";function I(x,D,y,M,S){return`${M.repeat(y*S)}${D}${x}
`}class E extends c.Processor{static tokenizer_class=m.AutoTokenizer;static image_processor_class=p.AutoImageProcessor;static uses_processor_config=!1;async _call(D,y=null,M={}){y||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),y=""),Array.isArray(D)||(D=[D]),Array.isArray(y)||(y=[y]);const S=this.tokenizer.bos_token,F=this.image_processor.config.image_seq_length;let L;y.some(N=>N.includes(C))?L=y.map(N=>{const K=N.replaceAll(C,C.repeat(F)),f=K.lastIndexOf(C),k=f===-1?0:f+C.length;return K.slice(0,k)+S+K.slice(k)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),L=y.map(N=>I(N,S,F,C,D.length)));const Z=this.tokenizer(L,M);return{...await this.image_processor(D,M),...Z}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(a,n,i)=>{i.r(n),i.d(n,{Phi3VImageProcessor:()=>D});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");const m=336,C=[2,3],{ceil:I,floor:E,sqrt:x}=Math;class D extends c.ImageProcessor{constructor(M){super({...M,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=M.num_crops}calc_num_image_tokens_from_image_size(M,S){const{num_img_tokens:F}=this.config;return E((E(S/m)*E(M/m)+1)*F+1+(E(S/m)+1)*x(F))}get_resize_output_image_size(M,S){const F=this._num_crops,[L,Z]=M.size;let z=L/Z,N=1;for(;N*Math.ceil(N/z)<=F;)N+=1;N-=1;const K=Math.floor(N*336),f=Math.floor(K/z);return[K,f]}pad_image(M,S,F,L={}){const[Z,z]=S,N=m*I(Z/m),K=m*I(z/m),f=[1,1,1].map((k,e)=>(k-this.image_mean[e])/this.image_std[e]);return super.pad_image(M,S,{width:K,height:N},{center:!0,constant_values:f,...L})}async _call(M,{num_crops:S=null}={}){if(this._num_crops=S??=this.config.num_crops,S<4||x(S)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(M)||(M=[M]);const F=M.length,L=await Promise.all(M.map(d=>this.preprocess(d))),Z=L.map(d=>d.original_size),z=L.map(d=>d.reshaped_input_size),N=[];for(const{pixel_values:d}of L){d.unsqueeze_(0);const[B,Ae]=d.dims.slice(-2),P=await(0,p.interpolate_4d)(d,{size:[m,m],mode:"bicubic"});if(S>0){const O=[],me=x(S),ee=E(Ae/me),Ce=E(B/me);for(let xe=0;xe<me;++xe)for(let De=0;De<me;++De){let ye,Oe,_e,ne;xe===me-1?(Oe=B-Ce,ne=B):(Oe=xe*Ce,ne=(xe+1)*Ce),De===me-1?(ye=Ae-ee,_e=Ae):(ye=De*ee,_e=(De+1)*ee);const te=[Oe,ye],pe=[ne,_e],le=await(0,p.slice)(d,te,pe,C);O.push(le)}const we=await(0,p.interpolate_4d)((0,p.cat)(O,0),{size:[m,m],mode:"bicubic"});N.push((0,p.cat)([P,we],0))}else N.push(P)}const K=(0,p.stack)(N,0),f=z.map(d=>d.map(B=>m*I(B/m))),k=new p.Tensor("int64",f.flat(),[F,2]),e=f.map(([d,B])=>this.calc_num_image_tokens_from_image_size(B,d));return{pixel_values:K,original_sizes:Z,reshaped_input_sizes:z,image_sizes:k,num_img_tokens:e}}}},"./src/models/phi3_v/processing_phi3_v.js":(a,n,i)=>{i.r(n),i.d(n,{Phi3VProcessor:()=>E});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");i("./src/utils/image.js");const C="<|image|>",I=/<\|image_\d+\|>/g;class E extends c.Processor{static image_processor_class=p.AutoImageProcessor;static tokenizer_class=m.AutoTokenizer;async _call(D,y=null,{padding:M=!0,truncation:S=!0,num_crops:F=null}={}){Array.isArray(D)||(D=[D]);let L,Z;if(y){Z=await this.image_processor(y,{num_crops:F});const{num_img_tokens:z}=Z,N=D.map((f,k)=>f.split(I).join(C.repeat(z[k])));L=this.tokenizer(N,{padding:M,truncation:S});const K=this.tokenizer.model.convert_tokens_to_ids([C])[0];L.input_ids.map_(f=>f==K?-f:f)}else L=this.tokenizer(D);return{...L,...Z}}}},"./src/models/processors.js":(a,n,i)=>{i.r(n),i.d(n,{Florence2Processor:()=>c.Florence2Processor,Gemma3nProcessor:()=>p.Gemma3nProcessor,GroundingDinoProcessor:()=>m.GroundingDinoProcessor,Idefics3Processor:()=>C.Idefics3Processor,JinaCLIPProcessor:()=>E.JinaCLIPProcessor,LlavaProcessor:()=>x.LlavaProcessor,MgpstrProcessor:()=>D.MgpstrProcessor,MoonshineProcessor:()=>y.MoonshineProcessor,OwlViTProcessor:()=>M.OwlViTProcessor,PaliGemmaProcessor:()=>F.PaliGemmaProcessor,Phi3VProcessor:()=>S.Phi3VProcessor,PyAnnoteProcessor:()=>L.PyAnnoteProcessor,Qwen2VLProcessor:()=>Z.Qwen2VLProcessor,SamProcessor:()=>z.SamProcessor,SmolVLMProcessor:()=>N.SmolVLMProcessor,SpeechT5Processor:()=>K.SpeechT5Processor,UltravoxProcessor:()=>f.UltravoxProcessor,VLChatProcessor:()=>I.VLChatProcessor,VoxtralProcessor:()=>k.VoxtralProcessor,Wav2Vec2Processor:()=>e.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>d.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>B.WhisperProcessor});var c=i("./src/models/florence2/processing_florence2.js"),p=i("./src/models/gemma3n/processing_gemma3n.js"),m=i("./src/models/grounding_dino/processing_grounding_dino.js"),C=i("./src/models/idefics3/processing_idefics3.js"),I=i("./src/models/janus/processing_janus.js"),E=i("./src/models/jina_clip/processing_jina_clip.js"),x=i("./src/models/llava/processing_llava.js"),D=i("./src/models/mgp_str/processing_mgp_str.js"),y=i("./src/models/moonshine/processing_moonshine.js"),M=i("./src/models/owlvit/processing_owlvit.js"),S=i("./src/models/phi3_v/processing_phi3_v.js"),F=i("./src/models/paligemma/processing_paligemma.js"),L=i("./src/models/pyannote/processing_pyannote.js"),Z=i("./src/models/qwen2_vl/processing_qwen2_vl.js"),z=i("./src/models/sam/processing_sam.js"),N=i("./src/models/smolvlm/processing_smolvlm.js"),K=i("./src/models/speecht5/processing_speecht5.js"),f=i("./src/models/ultravox/processing_ultravox.js"),k=i("./src/models/voxtral/processing_voxtral.js"),e=i("./src/models/wav2vec2/processing_wav2vec2.js"),d=i("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),B=i("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(a,n,i)=>{i.r(n),i.d(n,{PvtImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(a,n,i)=>{i.r(n),i.d(n,{PyAnnoteFeatureExtractor:()=>C});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js"),m=i("./src/utils/maths.js");class C extends c.FeatureExtractor{async _call(E){(0,c.validate_audio_inputs)(E,"PyAnnoteFeatureExtractor"),E instanceof Float64Array&&(E=new Float32Array(E));const x=[1,1,E.length];return{input_values:new p.Tensor("float32",E,x)}}samples_to_frames(E){return(E-this.config.offset)/this.config.step}post_process_speaker_diarization(E,x){const D=x/this.samples_to_frames(x)/this.config.sampling_rate,y=[];for(const M of E.tolist()){const S=[];let F=-1;for(let L=0;L<M.length;++L){const Z=(0,m.softmax)(M[L]),[z,N]=(0,m.max)(Z),[K,f]=[L,L+1];N!==F?(F=N,S.push({id:N,start:K,end:f,score:z})):(S.at(-1).end=f,S.at(-1).score+=z)}y.push(S.map(({id:L,start:Z,end:z,score:N})=>({id:L,start:Z*D,end:z*D,confidence:N/(z-Z)})))}return y}}},"./src/models/pyannote/processing_pyannote.js":(a,n,i)=>{i.r(n),i.d(n,{PyAnnoteProcessor:()=>m});var c=i("./src/base/processing_utils.js"),p=i("./src/models/pyannote/feature_extraction_pyannote.js");class m extends c.Processor{static feature_extractor_class=p.PyAnnoteFeatureExtractor;async _call(I){return await this.feature_extractor(I)}post_process_speaker_diarization(...I){return this.feature_extractor.post_process_speaker_diarization(...I)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(a,n,i)=>{i.r(n),i.d(n,{Qwen2VLImageProcessor:()=>m});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");class m extends c.ImageProcessor{async _call(I,...E){const{pixel_values:x,original_sizes:D,reshaped_input_sizes:y}=await super._call(I,...E);let M=x;const{temporal_patch_size:S,merge_size:F,patch_size:L}=this.config;M.dims[0]===1&&(M=(0,p.cat)(Array.from({length:S},()=>M),0));const Z=M.dims[0]/S,z=M.dims[1],N=Math.floor(M.dims[2]/L),K=Math.floor(M.dims[3]/L),f=M.view(Z,S,z,Math.floor(N/F),F,L,Math.floor(K/F),F,L).permute(0,3,6,4,7,2,1,5,8).view(Z*N*K,z*S*L*L),k=new p.Tensor("int64",[Z,N,K],[1,3]);return{pixel_values:f,image_grid_thw:k,original_sizes:D,reshaped_input_sizes:y}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(a,n,i)=>{i.r(n),i.d(n,{Qwen2VLProcessor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js"),m=i("./src/tokenizers.js");i("./src/utils/image.js");class C extends c.Processor{static image_processor_class=p.AutoImageProcessor;static tokenizer_class=m.AutoTokenizer;async _call(E,x=null,...D){Array.isArray(E)||(E=[E]);let y,M;if(x&&(y=await this.image_processor(x),M=y.image_grid_thw),M){let F=this.image_processor.config.merge_size**2,L=0;const Z=M.tolist();E=E.map(z=>{for(;z.includes("<|image_pad|>");){const N=Number(Z[L++].reduce((K,f)=>K*f,1n));z=z.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(N/F)))}return z.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(E),...y}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(a,n,i)=>{i.r(n),i.d(n,{RTDetrImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_object_detection(...C){return(0,c.post_process_object_detection)(...C)}}},"./src/models/sam/image_processing_sam.js":(a,n,i)=>{i.r(n),i.d(n,{SamImageProcessor:()=>C});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/core.js"),m=i("./src/utils/tensor.js");class C extends c.ImageProcessor{reshape_input_points(E,x,D,y=!1){E=structuredClone(E);let M=(0,p.calculateDimensions)(E);if(M.length===3)y||(M=[1,...M]),E=[E];else if(M.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let S=0;S<E.length;++S){let F=x[S],L=D[S],Z=[L[0]/F[0],L[1]/F[1]];for(let z=0;z<E[S].length;++z)for(let N=0;N<E[S][z].length;++N)for(let K=0;K<E[S][z][N].length;++K)E[S][z][N][K]*=Z[K%2]}return new m.Tensor("float32",Float32Array.from(E.flat(1/0)),M)}add_input_labels(E,x){let D=(0,p.calculateDimensions)(E);if(D.length===2)D=[1,...D],E=[E];else if(D.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(D.some((y,M)=>y!==x.dims[M]))throw Error(`The first ${D.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new m.Tensor("int64",E.flat(1/0).map(BigInt),D)}async _call(E,{input_points:x=null,input_labels:D=null,input_boxes:y=null}={}){const M=await super._call(E);if(x&&(M.input_points=this.reshape_input_points(x,M.original_sizes,M.reshaped_input_sizes)),D){if(!M.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");M.input_labels=this.add_input_labels(D,M.input_points)}return y&&(M.input_boxes=this.reshape_input_points(y,M.original_sizes,M.reshaped_input_sizes,!0)),M}async post_process_masks(E,x,D,{mask_threshold:y=0,binarize:M=!0,pad_size:S=null}={}){const F=[];S=S??this.pad_size;const L=[S.height,S.width];for(let Z=0;Z<x.length;++Z){const z=x[Z],N=D[Z];let K=await(0,m.interpolate_4d)(E[Z],{mode:"bilinear",size:L});if(K=K.slice(null,null,[0,N[0]],[0,N[1]]),K=await(0,m.interpolate_4d)(K,{mode:"bilinear",size:z}),M){const f=K.data,k=new Uint8Array(f.length);for(let e=0;e<f.length;++e)f[e]>y&&(k[e]=1);K=new m.Tensor("bool",k,K.dims)}F.push(K)}return F}generate_crop_boxes(E,x,{crop_n_layers:D=0,overlap_ratio:y=512/1500,points_per_crop:M=32,crop_n_points_downscale_factor:S=1}={}){}}},"./src/models/sam/processing_sam.js":(a,n,i)=>{i.r(n),i.d(n,{SamProcessor:()=>m});var c=i("./src/base/processing_utils.js"),p=i("./src/models/auto/image_processing_auto.js");class m extends c.Processor{static image_processor_class=p.AutoImageProcessor;async _call(...I){return await this.image_processor(...I)}post_process_masks(...I){return this.image_processor.post_process_masks(...I)}reshape_input_points(...I){return this.image_processor.reshape_input_points(...I)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(a,n,i)=>{i.r(n),i.d(n,{SeamlessM4TFeatureExtractor:()=>C});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js"),m=i("./src/utils/audio.js");class C extends c.FeatureExtractor{constructor(E){super(E);const x=this.config.sampling_rate,D=(0,m.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(x/2),x,null,"kaldi",!0);this.mel_filters=D,this.window=(0,m.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(E,x){return E=E.map(D=>D*32768),(0,m.spectrogram)(E,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:x,transpose:!0})}async _call(E,{padding:x=!0,pad_to_multiple_of:D=2,do_normalize_per_mel_bins:y=!0,return_attention_mask:M=!0}={}){(0,c.validate_audio_inputs)(E,"SeamlessM4TFeatureExtractor");let S=await this._extract_fbank_features(E,this.config.max_length);if(y){const[k,e]=S.dims,d=S.data;for(let B=0;B<e;++B){let Ae=0;for(let ee=0;ee<k;++ee)Ae+=d[ee*e+B];const P=Ae/k;let O=0;for(let ee=0;ee<k;++ee)O+=(d[ee*e+B]-P)**2;O/=k-1;const me=Math.sqrt(O+1e-7);for(let ee=0;ee<k;++ee){const Ce=ee*e+B;d[Ce]=(d[Ce]-P)/me}}}let F;if(x){const[k,e]=S.dims,d=S.data,B=k%D;if(B>0){const Ae=new Float32Array(e*(k+B));Ae.set(d),Ae.fill(this.config.padding_value,d.length);const P=k+B;S=new p.Tensor(S.type,Ae,[P,e]),M&&(F=new p.Tensor("int64",new BigInt64Array(P),[1,P]),F.data.fill(1n,0,k))}}const[L,Z]=S.dims,z=this.config.stride;if(L%z!==0)throw new Error(`The number of frames (${L}) must be a multiple of the stride (${z}).`);const K=S.view(1,Math.floor(L/z),Z*z),f={input_features:K};if(M){const k=K.dims[1],e=new BigInt64Array(k);if(F){const d=F.data;for(let B=1,Ae=0;B<L;B+=z,++Ae)e[Ae]=d[B]}else e.fill(1n);f.attention_mask=new p.Tensor("int64",e,[1,k])}return f}}},"./src/models/segformer/image_processing_segformer.js":(a,n,i)=>{i.r(n),i.d(n,{SegformerFeatureExtractor:()=>m,SegformerImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_semantic_segmentation(...I){return(0,c.post_process_semantic_segmentation)(...I)}}class m extends p{}},"./src/models/siglip/image_processing_siglip.js":(a,n,i)=>{i.r(n),i.d(n,{SiglipImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(a,n,i)=>{i.r(n),i.d(n,{SmolVLMImageProcessor:()=>c.Idefics3ImageProcessor});var c=i("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(a,n,i)=>{i.r(n),i.d(n,{SmolVLMProcessor:()=>c.Idefics3Processor});var c=i("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(a,n,i)=>{i.r(n),i.d(n,{SnacFeatureExtractor:()=>p});var c=i("./src/models/dac/feature_extraction_dac.js");class p extends c.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(a,n,i)=>{i.r(n),i.d(n,{SpeechT5FeatureExtractor:()=>p});var c=i("./src/base/feature_extraction_utils.js");class p extends c.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(a,n,i)=>{i.r(n),i.d(n,{SpeechT5Processor:()=>C});var c=i("./src/base/processing_utils.js"),p=i("./src/tokenizers.js"),m=i("./src/models/auto/feature_extraction_auto.js");class C extends c.Processor{static tokenizer_class=p.AutoTokenizer;static feature_extractor_class=m.AutoFeatureExtractor;async _call(E){return await this.feature_extractor(E)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(a,n,i)=>{i.r(n),i.d(n,{Swin2SRImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{pad_image(C,I,E,x={}){const[D,y,M]=I;return super.pad_image(C,I,{width:y+(E-y%E)%E,height:D+(E-D%E)%E},{mode:"symmetric",center:!1,constant_values:-1,...x})}}},"./src/models/ultravox/processing_ultravox.js":(a,n,i)=>{i.r(n),i.d(n,{UltravoxProcessor:()=>C});var c=i("./src/models/auto/feature_extraction_auto.js"),p=i("./src/tokenizers.js"),m=i("./src/base/processing_utils.js");class C extends m.Processor{static tokenizer_class=p.AutoTokenizer;static feature_extractor_class=c.AutoFeatureExtractor;static uses_processor_config=!0;async _call(E,x=null,D={}){if(Array.isArray(E))throw new Error("Batched inputs are not supported yet.");let y={};if(x){const S=x.length,{input_features:F}=await this.feature_extractor(x,{...D,max_length:S}),L=Math.round(S/this.config.encoder_ds_factor+1e-4),Z=1+Math.ceil(L/this.config.stack_factor);y.audio_token_len=[Z],y.audio_values=F;const z=this.config.audio_placeholder;if(!E.includes(z))throw new Error(`The input text does not contain the image token ${z}.`);E=E.replaceAll(z,z.repeat(Z))}return{...this.tokenizer(E,{add_special_tokens:!1,...D}),...y}}}},"./src/models/vit/image_processing_vit.js":(a,n,i)=>{i.r(n),i.d(n,{ViTFeatureExtractor:()=>m,ViTImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{}class m extends p{}},"./src/models/vitmatte/image_processing_vitmatte.js":(a,n,i)=>{i.r(n),i.d(n,{VitMatteImageProcessor:()=>m});var c=i("./src/base/image_processors_utils.js"),p=i("./src/utils/tensor.js");class m extends c.ImageProcessor{async _call(I,E){Array.isArray(I)||(I=[I]),Array.isArray(E)||(E=[E]);const x=await Promise.all(I.map(M=>this.preprocess(M))),D=await Promise.all(E.map(M=>this.preprocess(M,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,p.stack)(x.map((M,S)=>(0,p.cat)([M.pixel_values,D[S].pixel_values],0)),0),original_sizes:x.map(M=>M.original_size),reshaped_input_sizes:x.map(M=>M.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(a,n,i)=>{i.r(n),i.d(n,{VitPoseImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_pose_estimation(C,I,{threshold:E=null}={}){const x=C.tolist(),[D,y,M,S]=C.dims,F=[];for(let L=0;L<D;++L){const Z=x[L],z=I[L],N=[];for(let K=0;K<z.length;++K){const f=z[K],k=[],e=[],d=[],B=f.at(-2)/S,Ae=f.at(-1)/M;for(let P=0;P<Z.length;++P){let[O,me]=[0,0],ee=0,Ce=-1/0;const we=Z[P];for(let De=0;De<we.length;++De){const ye=we[De];for(let Oe=0;Oe<ye.length;++Oe){const _e=ye[Oe];ee+=_e,Ce=Math.max(Ce,_e),O+=(Oe+.5)*_e,me+=De*_e}}if(E!=null&&Ce<E)continue;const xe=[B*O/ee,Ae*me/ee];k.push(xe),d.push(P),e.push(Ce)}N.push({bbox:f,scores:e,labels:d,keypoints:k})}F.push(N)}return F}}},"./src/models/voxtral/processing_voxtral.js":(a,n,i)=>{i.r(n),i.d(n,{VoxtralProcessor:()=>y});var c=i("./src/models/auto/feature_extraction_auto.js"),p=i("./src/tokenizers.js"),m=i("./src/base/processing_utils.js"),C=i("./src/utils/tensor.js");const I="[AUDIO]",E="[BEGIN_AUDIO]",x=375;function D(M,S){const F=[];for(let L=0;L<M.length;L+=S)F.push(M.subarray(L,Math.min(L+S,M.length)));return F}class y extends m.Processor{static tokenizer_class=p.AutoTokenizer;static feature_extractor_class=c.AutoFeatureExtractor;static uses_processor_config=!1;async _call(S,F=null,L={}){if(Array.isArray(S))throw new Error("Batched inputs are not supported yet.");const Z={};if(F){if(!S.includes(I))throw new Error(`The input text does not contain the audio token ${I}.`);Array.isArray(F)||(F=[F]);const N=S.split(I),K=N.length-1;if(K!==F.length)throw new Error(`The number of audio inputs (${F.length}) does not match the number of audio tokens in the text (${K}).`);const f=this.feature_extractor.config.n_samples,k=F.map(P=>D(P,f)),e=k.map(P=>P.length),d=k.flat(),B=(await Promise.all(d.map(P=>this.feature_extractor(P,L)))).map(P=>P.input_features);Z.audio_values=B.length>1?(0,C.cat)(B,0):B[0];let Ae=N[0];for(let P=0;P<e.length;++P){Ae+=E;for(let O=0;O<e[P];++O)Ae+=I.repeat(x);Ae+=N[P+1]}S=Ae}return{...this.tokenizer(S,{add_special_tokens:!1,...L}),...Z}}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(a,n,i)=>{i.r(n),i.d(n,{Wav2Vec2FeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js"),p=i("./src/utils/tensor.js");class m extends c.FeatureExtractor{_zero_mean_unit_var_norm(I){const x=I.reduce((y,M)=>y+M,0)/I.length,D=I.reduce((y,M)=>y+(M-x)**2,0)/I.length;return I.map(y=>(y-x)/Math.sqrt(D+1e-7))}async _call(I){(0,c.validate_audio_inputs)(I,"Wav2Vec2FeatureExtractor"),I instanceof Float64Array&&(I=new Float32Array(I));let E=I;this.config.do_normalize&&(E=this._zero_mean_unit_var_norm(E));const x=[1,E.length];return{input_values:new p.Tensor("float32",E,x),attention_mask:new p.Tensor("int64",new BigInt64Array(E.length).fill(1n),x)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(a,n,i)=>{i.r(n),i.d(n,{Wav2Vec2Processor:()=>C});var c=i("./src/tokenizers.js"),p=i("./src/models/auto/feature_extraction_auto.js"),m=i("./src/base/processing_utils.js");class C extends m.Processor{static tokenizer_class=c.AutoTokenizer;static feature_extractor_class=p.AutoFeatureExtractor;async _call(E){return await this.feature_extractor(E)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(a,n,i)=>{i.r(n),i.d(n,{Wav2Vec2ProcessorWithLM:()=>C});var c=i("./src/tokenizers.js"),p=i("./src/models/auto/feature_extraction_auto.js"),m=i("./src/base/processing_utils.js");class C extends m.Processor{static tokenizer_class=c.AutoTokenizer;static feature_extractor_class=p.AutoFeatureExtractor;async _call(E){return await this.feature_extractor(E)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(a,n,i)=>{i.r(n),i.d(n,{WeSpeakerFeatureExtractor:()=>m});var c=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var p=i("./src/utils/audio.js");class m extends c.FeatureExtractor{constructor(I){super(I);const E=this.config.sampling_rate,x=(0,p.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(E/2),E,null,"kaldi",!0);this.mel_filters=x,this.window=(0,p.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(I){return I=I.map(E=>E*32768),(0,p.spectrogram)(I,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(I){(0,c.validate_audio_inputs)(I,"WeSpeakerFeatureExtractor");const E=(await this._extract_fbank_features(I)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const x=E.mean(1).data,D=E.data,[y,M,S]=E.dims;for(let F=0;F<y;++F){const L=F*M*S,Z=F*S;for(let z=0;z<M;++z){const N=L+z*S;for(let K=0;K<S;++K)D[N+K]-=x[Z+K]}}}return{input_features:E}}}},"./src/models/whisper/common_whisper.js":(a,n,i)=>{i.r(n),i.d(n,{WHISPER_LANGUAGE_MAPPING:()=>p,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>m,whisper_language_to_code:()=>C});const c=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],p=new Map(c),m=new Map([...c.map(([I,E])=>[E,I]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function C(I){I=I.toLowerCase();let E=m.get(I);if(E===void 0){const x=I.match(/^<\|([a-z]{2})\|>$/);if(x&&(I=x[1]),p.has(I))E=I;else{const y=I.length===2?p.keys():p.values();throw new Error(`Language "${I}" is not supported. Must be one of: ${JSON.stringify(Array.from(y))}`)}}return E}},"./src/models/whisper/feature_extraction_whisper.js":(a,n,i)=>{i.r(n),i.d(n,{WhisperFeatureExtractor:()=>C});var c=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var p=i("./src/utils/audio.js"),m=i("./src/utils/maths.js");class C extends c.FeatureExtractor{constructor(E){super(E),this.config.mel_filters??=(0,p.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,p.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(E){const x=await(0,p.spectrogram)(E,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(E.length/this.config.hop_length),this.config.nb_max_frames)}),D=x.data,y=(0,m.max)(D)[0];for(let M=0;M<D.length;++M)D[M]=(Math.max(D[M],y-8)+4)/4;return x}async _call(E,{max_length:x=null}={}){(0,c.validate_audio_inputs)(E,"WhisperFeatureExtractor");let D;const y=x??this.config.n_samples;return E.length>y?(E.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),D=E.slice(0,y)):(D=new Float32Array(y),D.set(E)),{input_features:(await this._extract_fbank_features(D)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(a,n,i)=>{i.r(n),i.d(n,{WhisperGenerationConfig:()=>p});var c=i("./src/generation/configuration_utils.js");class p extends c.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(a,n,i)=>{i.r(n),i.d(n,{WhisperProcessor:()=>C});var c=i("./src/models/auto/feature_extraction_auto.js"),p=i("./src/tokenizers.js"),m=i("./src/base/processing_utils.js");class C extends m.Processor{static tokenizer_class=p.AutoTokenizer;static feature_extractor_class=c.AutoFeatureExtractor;async _call(E){return await this.feature_extractor(E)}}},"./src/models/yolos/image_processing_yolos.js":(a,n,i)=>{i.r(n),i.d(n,{YolosFeatureExtractor:()=>m,YolosImageProcessor:()=>p});var c=i("./src/base/image_processors_utils.js");class p extends c.ImageProcessor{post_process_object_detection(...I){return(0,c.post_process_object_detection)(...I)}}class m extends p{}},"./src/ops/registry.js":(a,n,i)=>{i.r(n),i.d(n,{TensorOpRegistry:()=>E});var c=i("./src/backends/onnx.js"),p=i("./src/utils/tensor.js"),m=i("./src/env.js");const C=m.apis.IS_BROWSER_ENV||m.apis.IS_WEBWORKER_ENV,I=async(x,D,y)=>{const M=await(0,c.createInferenceSession)(new Uint8Array(x),D);let S=Promise.resolve();return async F=>{const L=(0,c.isONNXProxy)(),Z=Object.fromEntries(Object.entries(F).map(([N,K])=>[N,(L?K.clone():K).ort_tensor])),z=await(S=C?S.then(()=>M.run(Z)):M.run(Z));return Array.isArray(y)?y.map(N=>new p.Tensor(z[N])):new p.Tensor(z[y])}};class E{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=I([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=I([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=I([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=I([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=I([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=I([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=I([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=I([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(a,n,i)=>{i.r(n),i.d(n,{AudioClassificationPipeline:()=>me,AutomaticSpeechRecognitionPipeline:()=>Ce,BackgroundRemovalPipeline:()=>ye,DepthEstimationPipeline:()=>Qe,DocumentQuestionAnsweringPipeline:()=>te,FeatureExtractionPipeline:()=>P,FillMaskPipeline:()=>K,ImageClassificationPipeline:()=>xe,ImageFeatureExtractionPipeline:()=>O,ImageSegmentationPipeline:()=>De,ImageToImagePipeline:()=>le,ImageToTextPipeline:()=>we,ObjectDetectionPipeline:()=>_e,Pipeline:()=>L,QuestionAnsweringPipeline:()=>N,SummarizationPipeline:()=>k,Text2TextGenerationPipeline:()=>f,TextClassificationPipeline:()=>Z,TextGenerationPipeline:()=>B,TextToAudioPipeline:()=>pe,TokenClassificationPipeline:()=>z,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>ee,ZeroShotClassificationPipeline:()=>Ae,ZeroShotImageClassificationPipeline:()=>Oe,ZeroShotObjectDetectionPipeline:()=>ne,pipeline:()=>ot});var c=i("./src/tokenizers.js"),p=i("./src/models.js"),m=i("./src/models/auto/processing_auto.js");i("./src/base/processing_utils.js");var C=i("./src/utils/generic.js"),I=i("./src/utils/core.js"),E=i("./src/utils/maths.js"),x=i("./src/utils/audio.js"),D=i("./src/utils/tensor.js"),y=i("./src/utils/image.js");async function M(et){return Array.isArray(et)||(et=[et]),await Promise.all(et.map(be=>y.RawImage.read(be)))}async function S(et,be){return Array.isArray(et)||(et=[et]),await Promise.all(et.map(Ne=>typeof Ne=="string"||Ne instanceof URL?(0,x.read_audio)(Ne,be):Ne instanceof Float64Array?new Float32Array(Ne):Ne))}function F(et,be){be&&(et=et.map(Ze=>Ze|0));const[Ne,ge,Ve,at]=et;return{xmin:Ne,ymin:ge,xmax:Ve,ymax:at}}class L extends C.Callable{constructor({task:be,model:Ne,tokenizer:ge=null,processor:Ve=null}){super(),this.task=be,this.model=Ne,this.tokenizer=ge,this.processor=Ve}async dispose(){await this.model.dispose()}}class Z extends L{constructor(be){super(be)}async _call(be,{top_k:Ne=1}={}){const ge=this.tokenizer(be,{padding:!0,truncation:!0}),Ve=await this.model(ge),at=this.model.config.problem_type==="multi_label_classification"?Y=>Y.sigmoid():Y=>new D.Tensor("float32",(0,E.softmax)(Y.data),Y.dims),Ze=this.model.config.id2label,Ye=[];for(const Y of Ve.logits){const We=at(Y),rt=await(0,D.topk)(We,Ne),fe=rt[0].tolist(),Ue=rt[1].tolist().map((Lt,It)=>({label:Ze?Ze[Lt]:`LABEL_${Lt}`,score:fe[It]}));Ne===1?Ye.push(...Ue):Ye.push(Ue)}return Array.isArray(be)||Ne===1?Ye:Ye[0]}}class z extends L{constructor(be){super(be)}async _call(be,{ignore_labels:Ne=["O"]}={}){const ge=Array.isArray(be),Ve=this.tokenizer(ge?be:[be],{padding:!0,truncation:!0}),Ze=(await this.model(Ve)).logits,Ye=this.model.config.id2label,Y=[];for(let We=0;We<Ze.dims[0];++We){const rt=Ve.input_ids[We],fe=Ze[We],Et=[];for(let Ue=0;Ue<fe.dims[0];++Ue){const Lt=fe[Ue],It=(0,E.max)(Lt.data)[1],mt=Ye?Ye[It]:`LABEL_${It}`;if(Ne.includes(mt))continue;const Ft=this.tokenizer.decode([rt[Ue].item()],{skip_special_tokens:!0});if(Ft==="")continue;const pt=(0,E.softmax)(Lt.data);Et.push({entity:mt,score:pt[It],index:Ue,word:Ft})}Y.push(Et)}return ge?Y:Y[0]}}class N extends L{constructor(be){super(be)}async _call(be,Ne,{top_k:ge=1}={}){const Ve=this.tokenizer(be,{text_pair:Ne,padding:!0,truncation:!0}),{start_logits:at,end_logits:Ze}=await this.model(Ve),Ye=Ve.input_ids.tolist(),Y=Ve.attention_mask.tolist(),We=this.tokenizer.all_special_ids,rt=[];for(let fe=0;fe<at.dims[0];++fe){const Et=Ye[fe],Ue=Et.findIndex(Dt=>Dt==this.tokenizer.sep_token_id);Y[fe].map((Dt,Tt)=>Dt==1&&(Tt===0||Tt>Ue&&We.findIndex(aA=>aA==Et[Tt])===-1));const Lt=at[fe].tolist(),It=Ze[fe].tolist();for(let Dt=1;Dt<Lt.length;++Dt)(Y[fe]==0||Dt<=Ue||We.findIndex(Tt=>Tt==Et[Dt])!==-1)&&(Lt[Dt]=-1/0,It[Dt]=-1/0);const mt=(0,E.softmax)(Lt).map((Dt,Tt)=>[Dt,Tt]),Ft=(0,E.softmax)(It).map((Dt,Tt)=>[Dt,Tt]);mt[0][0]=0,Ft[0][0]=0;const pt=(0,I.product)(mt,Ft).filter(Dt=>Dt[0][1]<=Dt[1][1]).map(Dt=>[Dt[0][1],Dt[1][1],Dt[0][0]*Dt[1][0]]).sort((Dt,Tt)=>Tt[2]-Dt[2]);for(let Dt=0;Dt<Math.min(pt.length,ge);++Dt){const[Tt,aA,jt]=pt[Dt],Nt=Et.slice(Tt,aA+1),KA=this.tokenizer.decode(Nt,{skip_special_tokens:!0});rt.push({answer:KA,score:jt})}}return ge===1?rt[0]:rt}}class K extends L{constructor(be){super(be)}async _call(be,{top_k:Ne=5}={}){const ge=this.tokenizer(be,{padding:!0,truncation:!0}),{logits:Ve}=await this.model(ge),at=[],Ze=ge.input_ids.tolist();for(let Ye=0;Ye<Ze.length;++Ye){const Y=Ze[Ye],We=Y.findIndex(Lt=>Lt==this.tokenizer.mask_token_id);if(We===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const rt=Ve[Ye][We],fe=await(0,D.topk)(new D.Tensor("float32",(0,E.softmax)(rt.data),rt.dims),Ne),Et=fe[0].tolist(),Ue=fe[1].tolist();at.push(Ue.map((Lt,It)=>{const mt=Y.slice();return mt[We]=Lt,{score:Et[It],token:Number(Lt),token_str:this.tokenizer.decode([Lt]),sequence:this.tokenizer.decode(mt,{skip_special_tokens:!0})}}))}return Array.isArray(be)?at:at[0]}}class f extends L{_key="generated_text";constructor(be){super(be)}async _call(be,Ne={}){Array.isArray(be)||(be=[be]),this.model.config.prefix&&(be=be.map(Y=>this.model.config.prefix+Y));const ge=this.model.config.task_specific_params;ge&&ge[this.task]&&ge[this.task].prefix&&(be=be.map(Y=>ge[this.task].prefix+Y));const Ve=this.tokenizer,at={padding:!0,truncation:!0};let Ze;this instanceof e&&"_build_translation_inputs"in Ve?Ze=Ve._build_translation_inputs(be,at,Ne):Ze=Ve(be,at);const Ye=await this.model.generate({...Ze,...Ne});return Ve.batch_decode(Ye,{skip_special_tokens:!0}).map(Y=>({[this._key]:Y}))}}class k extends f{_key="summary_text";constructor(be){super(be)}}class e extends f{_key="translation_text";constructor(be){super(be)}}function d(et){return Array.isArray(et)&&et.every(be=>"role"in be&&"content"in be)}class B extends L{constructor(be){super(be)}async _call(be,Ne={}){let ge=!1,Ve=!1,at=Ne.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Ze;if(typeof be=="string")Ze=be=[be];else if(Array.isArray(be)&&be.every(Ue=>typeof Ue=="string"))ge=!0,Ze=be;else{if(d(be))be=[be];else if(Array.isArray(be)&&be.every(d))ge=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Ve=!0,Ze=be.map(Ue=>this.tokenizer.apply_chat_template(Ue,{tokenize:!1,add_generation_prompt:!0})),at=!1}const Ye=Ve?!1:Ne.return_full_text??!0;this.tokenizer.padding_side="left";const Y=this.tokenizer(Ze,{add_special_tokens:at,padding:!0,truncation:!0}),We=await this.model.generate({...Y,...Ne}),rt=this.tokenizer.batch_decode(We,{skip_special_tokens:!0});let fe;!Ye&&Y.input_ids.dims.at(-1)>0&&(fe=this.tokenizer.batch_decode(Y.input_ids,{skip_special_tokens:!0}).map(Ue=>Ue.length));const Et=Array.from({length:be.length},Ue=>[]);for(let Ue=0;Ue<rt.length;++Ue){const Lt=Math.floor(Ue/We.dims[0]*be.length);fe&&(rt[Ue]=rt[Ue].slice(fe[Lt])),Et[Lt].push({generated_text:Ve?[...be[Lt],{role:"assistant",content:rt[Ue]}]:rt[Ue]})}return!ge&&Et.length===1?Et[0]:Et}}class Ae extends L{constructor(be){super(be),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ne,ge])=>[Ne.toLowerCase(),ge])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(be,Ne,{hypothesis_template:ge="This example is {}.",multi_label:Ve=!1}={}){const at=Array.isArray(be);at||(be=[be]),Array.isArray(Ne)||(Ne=[Ne]);const Ze=Ne.map(We=>ge.replace("{}",We)),Ye=Ve||Ne.length===1,Y=[];for(const We of be){const rt=[];for(const Ue of Ze){const Lt=this.tokenizer(We,{text_pair:Ue,padding:!0,truncation:!0}),It=await this.model(Lt);Ye?rt.push([It.logits.data[this.contradiction_id],It.logits.data[this.entailment_id]]):rt.push(It.logits.data[this.entailment_id])}const Et=(Ye?rt.map(Ue=>(0,E.softmax)(Ue)[1]):(0,E.softmax)(rt)).map((Ue,Lt)=>[Ue,Lt]).sort((Ue,Lt)=>Lt[0]-Ue[0]);Y.push({sequence:We,labels:Et.map(Ue=>Ne[Ue[1]]),scores:Et.map(Ue=>Ue[0])})}return at?Y:Y[0]}}class P extends L{constructor(be){super(be)}async _call(be,{pooling:Ne="none",normalize:ge=!1,quantize:Ve=!1,precision:at="binary"}={}){const Ze=this.tokenizer(be,{padding:!0,truncation:!0}),Ye=await this.model(Ze);let Y=Ye.last_hidden_state??Ye.logits??Ye.token_embeddings;switch(Ne){case"none":break;case"mean":Y=(0,D.mean_pooling)(Y,Ze.attention_mask);break;case"first_token":case"cls":Y=Y.slice(null,0);break;case"last_token":case"eos":Y=Y.slice(null,-1);break;default:throw Error(`Pooling method '${Ne}' not supported.`)}return ge&&(Y=Y.normalize(2,-1)),Ve&&(Y=(0,D.quantize_embeddings)(Y,at)),Y}}class O extends L{constructor(be){super(be)}async _call(be,{pool:Ne=null}={}){const ge=await M(be),{pixel_values:Ve}=await this.processor(ge),at=await this.model({pixel_values:Ve});let Ze;if(Ne){if(!("pooler_output"in at))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ze=at.pooler_output}else Ze=at.last_hidden_state??at.logits??at.image_embeds;return Ze}}class me extends L{constructor(be){super(be)}async _call(be,{top_k:Ne=5}={}){const ge=this.processor.feature_extractor.config.sampling_rate,Ve=await S(be,ge),at=this.model.config.id2label,Ze=[];for(const Ye of Ve){const Y=await this.processor(Ye),rt=(await this.model(Y)).logits[0],fe=await(0,D.topk)(new D.Tensor("float32",(0,E.softmax)(rt.data),rt.dims),Ne),Et=fe[0].tolist(),Lt=fe[1].tolist().map((It,mt)=>({label:at?at[It]:`LABEL_${It}`,score:Et[mt]}));Ze.push(Lt)}return Array.isArray(be)?Ze:Ze[0]}}class ee extends L{constructor(be){super(be)}async _call(be,Ne,{hypothesis_template:ge="This is a sound of {}."}={}){const Ve=!Array.isArray(be);Ve&&(be=[be]);const at=Ne.map(rt=>ge.replace("{}",rt)),Ze=this.tokenizer(at,{padding:!0,truncation:!0}),Ye=this.processor.feature_extractor.config.sampling_rate,Y=await S(be,Ye),We=[];for(const rt of Y){const fe=await this.processor(rt),Et=await this.model({...Ze,...fe}),Ue=(0,E.softmax)(Et.logits_per_audio.data);We.push([...Ue].map((Lt,It)=>({score:Lt,label:Ne[It]})))}return Ve?We[0]:We}}class Ce extends L{constructor(be){super(be)}async _call(be,Ne={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(be,Ne);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(be,Ne);case"moonshine":return this._call_moonshine(be,Ne);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(be,Ne){Ne.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Ne.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const ge=!Array.isArray(be);ge&&(be=[be]);const Ve=this.processor.feature_extractor.config.sampling_rate,at=await S(be,Ve),Ze=[];for(const Ye of at){const Y=await this.processor(Ye),rt=(await this.model(Y)).logits[0],fe=[];for(const Ue of rt)fe.push((0,E.max)(Ue.data)[1]);const Et=this.tokenizer.decode(fe);Ze.push({text:Et})}return ge?Ze[0]:Ze}async _call_whisper(be,Ne){const ge=Ne.return_timestamps??!1,Ve=Ne.chunk_length_s??0,at=Ne.force_full_sequences??!1;let Ze=Ne.stride_length_s??null;const Ye={...Ne};ge==="word"&&(Ye.return_token_timestamps=!0,Ye.return_timestamps=!1);const Y=!Array.isArray(be);Y&&(be=[be]);const We=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,rt=this.processor.feature_extractor.config.hop_length,fe=this.processor.feature_extractor.config.sampling_rate,Et=await S(be,fe),Ue=[];for(const Lt of Et){let It=[];if(Ve>0){if(Ze===null)Ze=Ve/6;else if(Ve<=Ze)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const pt=fe*Ve,Dt=fe*Ze,Tt=pt-2*Dt;let aA=0;for(;;){const jt=aA+pt,Nt=Lt.subarray(aA,jt),KA=await this.processor(Nt),Es=aA===0,WA=jt>=Lt.length;if(It.push({stride:[Nt.length,Es?0:Dt,WA?0:Dt],input_features:KA.input_features,is_last:WA}),WA)break;aA+=Tt}}else It=[{stride:[Lt.length,0,0],input_features:(await this.processor(Lt)).input_features,is_last:!0}];for(const pt of It){Ye.num_frames=Math.floor(pt.stride[0]/rt);const Dt=await this.model.generate({inputs:pt.input_features,...Ye});ge==="word"?(pt.tokens=Dt.sequences.tolist()[0],pt.token_timestamps=Dt.token_timestamps.tolist()[0].map(Tt=>(0,E.round)(Tt,2))):pt.tokens=Dt[0].tolist(),pt.stride=pt.stride.map(Tt=>Tt/fe)}const[mt,Ft]=this.tokenizer._decode_asr(It,{time_precision:We,return_timestamps:ge,force_full_sequences:at});Ue.push({text:mt,...Ft})}return Y?Ue[0]:Ue}async _call_moonshine(be,Ne){const ge=!Array.isArray(be);ge&&(be=[be]);const Ve=this.processor.feature_extractor.config.sampling_rate,at=await S(be,Ve),Ze=[];for(const Ye of at){const Y=await this.processor(Ye),We=Math.floor(Ye.length/Ve)*6,rt=await this.model.generate({max_new_tokens:We,...Ne,...Y}),fe=this.processor.batch_decode(rt,{skip_special_tokens:!0})[0];Ze.push({text:fe})}return ge?Ze[0]:Ze}}class we extends L{constructor(be){super(be)}async _call(be,Ne={}){const ge=Array.isArray(be),Ve=await M(be),{pixel_values:at}=await this.processor(Ve),Ze=[];for(const Ye of at){Ye.dims=[1,...Ye.dims];const Y=await this.model.generate({inputs:Ye,...Ne}),We=this.tokenizer.batch_decode(Y,{skip_special_tokens:!0}).map(rt=>({generated_text:rt.trim()}));Ze.push(We)}return ge?Ze:Ze[0]}}class xe extends L{constructor(be){super(be)}async _call(be,{top_k:Ne=5}={}){const ge=await M(be),{pixel_values:Ve}=await this.processor(ge),at=await this.model({pixel_values:Ve}),Ze=this.model.config.id2label,Ye=[];for(const Y of at.logits){const We=await(0,D.topk)(new D.Tensor("float32",(0,E.softmax)(Y.data),Y.dims),Ne),rt=We[0].tolist(),Et=We[1].tolist().map((Ue,Lt)=>({label:Ze?Ze[Ue]:`LABEL_${Ue}`,score:rt[Lt]}));Ye.push(Et)}return Array.isArray(be)?Ye:Ye[0]}}class De extends L{constructor(be){super(be),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(be,{threshold:Ne=.5,mask_threshold:ge=.5,overlap_mask_area_threshold:Ve=.8,label_ids_to_fuse:at=null,target_sizes:Ze=null,subtask:Ye=null}={}){if(Array.isArray(be)&&be.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const We=await M(be),rt=We.map(pt=>[pt.height,pt.width]),fe=await this.processor(We),{inputNames:Et,outputNames:Ue}=this.model.sessions.model;if(!Et.includes("pixel_values")){if(Et.length!==1)throw Error(`Expected a single input name, but got ${Et.length} inputs: ${Et}.`);const pt=Et[0];if(pt in fe)throw Error(`Input name ${pt} already exists in the inputs.`);fe[pt]=fe.pixel_values}const Lt=await this.model(fe);let It=null;if(Ye!==null)It=this.subtasks_mapping[Ye];else if(this.processor.image_processor){for(const[pt,Dt]of Object.entries(this.subtasks_mapping))if(Dt in this.processor.image_processor){It=this.processor.image_processor[Dt].bind(this.processor.image_processor),Ye=pt;break}}const mt=this.model.config.id2label,Ft=[];if(Ye)if(Ye==="panoptic"||Ye==="instance"){const pt=It(Lt,Ne,ge,Ve,at,Ze??rt)[0],Dt=pt.segmentation;for(const Tt of pt.segments_info){const aA=new Uint8ClampedArray(Dt.data.length);for(let Nt=0;Nt<Dt.data.length;++Nt)Dt.data[Nt]===Tt.id&&(aA[Nt]=255);const jt=new y.RawImage(aA,Dt.dims[1],Dt.dims[0],1);Ft.push({score:Tt.score,label:mt[Tt.label_id],mask:jt})}}else if(Ye==="semantic"){const{segmentation:pt,labels:Dt}=It(Lt,Ze??rt)[0];for(const Tt of Dt){const aA=new Uint8ClampedArray(pt.data.length);for(let Nt=0;Nt<pt.data.length;++Nt)pt.data[Nt]===Tt&&(aA[Nt]=255);const jt=new y.RawImage(aA,pt.dims[1],pt.dims[0],1);Ft.push({score:null,label:mt[Tt],mask:jt})}}else throw Error(`Subtask ${Ye} not supported.`);else{const Dt=Lt[Ue[0]];for(let Tt=0;Tt<rt.length;++Tt){const aA=rt[Tt],jt=Dt[Tt];jt.data.some(KA=>KA<-1e-5||KA>1+1e-5)&&jt.sigmoid_();const Nt=await y.RawImage.fromTensor(jt.mul_(255).to("uint8")).resize(aA[1],aA[0]);Ft.push({label:null,score:null,mask:Nt})}}return Ft}}class ye extends De{constructor(be){super(be)}async _call(be,Ne={}){if(Array.isArray(be)&&be.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const Ve=await M(be),at=await super._call(be,Ne);return Ve.map((Ye,Y)=>{const We=Ye.clone();return We.putAlpha(at[Y].mask),We})}}class Oe extends L{constructor(be){super(be)}async _call(be,Ne,{hypothesis_template:ge="This is a photo of {}"}={}){const Ve=Array.isArray(be),at=await M(be),Ze=Ne.map(Et=>ge.replace("{}",Et)),Ye=this.tokenizer(Ze,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Y}=await this.processor(at),We=await this.model({...Ye,pixel_values:Y}),rt=this.model.config.model_type==="siglip"?Et=>Et.sigmoid().data:Et=>(0,E.softmax)(Et.data),fe=[];for(const Et of We.logits_per_image){const Lt=[...rt(Et)].map((It,mt)=>({score:It,label:Ne[mt]}));Lt.sort((It,mt)=>mt.score-It.score),fe.push(Lt)}return Ve?fe:fe[0]}}class _e extends L{constructor(be){super(be)}async _call(be,{threshold:Ne=.9,percentage:ge=!1}={}){const Ve=Array.isArray(be);if(Ve&&be.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const at=await M(be),Ze=ge?null:at.map(Ue=>[Ue.height,Ue.width]),{pixel_values:Ye,pixel_mask:Y}=await this.processor(at),We=await this.model({pixel_values:Ye,pixel_mask:Y}),rt=this.processor.image_processor.post_process_object_detection(We,Ne,Ze),fe=this.model.config.id2label,Et=rt.map(Ue=>Ue.boxes.map((Lt,It)=>({score:Ue.scores[It],label:fe[Ue.classes[It]],box:F(Lt,!ge)})));return Ve?Et:Et[0]}}class ne extends L{constructor(be){super(be)}async _call(be,Ne,{threshold:ge=.1,top_k:Ve=null,percentage:at=!1}={}){const Ze=Array.isArray(be),Ye=await M(be),Y=this.tokenizer(Ne,{padding:!0,truncation:!0}),We=await this.processor(Ye),rt=[];for(let fe=0;fe<Ye.length;++fe){const Et=Ye[fe],Ue=at?null:[[Et.height,Et.width]],Lt=We.pixel_values[fe].unsqueeze_(0),It=await this.model({...Y,pixel_values:Lt});let mt;if("post_process_grounded_object_detection"in this.processor){const Ft=this.processor.post_process_grounded_object_detection(It,Y.input_ids,{box_threshold:ge,text_threshold:ge,target_sizes:Ue})[0];mt=Ft.boxes.map((pt,Dt)=>({score:Ft.scores[Dt],label:Ft.labels[Dt],box:F(pt,!at)}))}else{const Ft=this.processor.image_processor.post_process_object_detection(It,ge,Ue,!0)[0];mt=Ft.boxes.map((pt,Dt)=>({score:Ft.scores[Dt],label:Ne[Ft.classes[Dt]],box:F(pt,!at)}))}mt.sort((Ft,pt)=>pt.score-Ft.score),Ve!==null&&(mt=mt.slice(0,Ve)),rt.push(mt)}return Ze?rt:rt[0]}}class te extends L{constructor(be){super(be)}async _call(be,Ne,ge={}){const Ve=(await M(be))[0],{pixel_values:at}=await this.processor(Ve),Ze=`<s_docvqa><s_question>${Ne}</s_question><s_answer>`,Ye=this.tokenizer(Ze,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Y=await this.model.generate({inputs:at,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Ye,...ge}),rt=this.tokenizer.batch_decode(Y)[0].match(/<s_answer>(.*?)<\/s_answer>/);let fe=null;return rt&&rt.length>=2&&(fe=rt[1].trim()),[{answer:fe}]}}class pe extends L{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(be){super(be),this.vocoder=be.vocoder??null}async _call(be,{speaker_embeddings:Ne=null}={}){return this.processor?this._call_text_to_spectrogram(be,{speaker_embeddings:Ne}):this._call_text_to_waveform(be)}async _call_text_to_waveform(be){const Ne=this.tokenizer(be,{padding:!0,truncation:!0}),{waveform:ge}=await this.model(Ne),Ve=this.model.config.sampling_rate;return new x.RawAudio(ge.data,Ve)}async _call_text_to_spectrogram(be,{speaker_embeddings:Ne}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await p.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ne=="string"||Ne instanceof URL)&&(Ne=new Float32Array(await(await fetch(Ne)).arrayBuffer())),Ne instanceof Float32Array)Ne=new D.Tensor("float32",Ne,[1,Ne.length]);else if(!(Ne instanceof D.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:ge}=this.tokenizer(be,{padding:!0,truncation:!0}),{waveform:Ve}=await this.model.generate_speech(ge,Ne,{vocoder:this.vocoder}),at=this.processor.feature_extractor.config.sampling_rate;return new x.RawAudio(Ve.data,at)}}class le extends L{constructor(be){super(be)}async _call(be){const Ne=await M(be),ge=await this.processor(Ne),Ve=await this.model(ge),at=[];for(const Ze of Ve.reconstruction){const Ye=Ze.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");at.push(y.RawImage.fromTensor(Ye))}return at.length>1?at:at[0]}}class Qe extends L{constructor(be){super(be)}async _call(be){const Ne=await M(be),ge=await this.processor(Ne),{predicted_depth:Ve}=await this.model(ge),at=[];for(let Ze=0;Ze<Ne.length;++Ze){const Ye=Ve[Ze],[Y,We]=Ye.dims.slice(-2),[rt,fe]=Ne[Ze].size,Et=(await(0,D.interpolate_4d)(Ye.view(1,1,Y,We),{size:[fe,rt],mode:"bilinear"})).view(fe,rt),Ue=Et.min().item(),Lt=Et.max().item(),It=Et.sub(Ue).div_(Lt-Ue).mul_(255).to("uint8").unsqueeze(0),mt=y.RawImage.fromTensor(It);at.push({predicted_depth:Et,depth:mt})}return at.length>1?at:at[0]}}const it=Object.freeze({"text-classification":{tokenizer:c.AutoTokenizer,pipeline:Z,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:c.AutoTokenizer,pipeline:z,model:p.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:c.AutoTokenizer,pipeline:N,model:p.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:c.AutoTokenizer,pipeline:K,model:p.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:c.AutoTokenizer,pipeline:k,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:c.AutoTokenizer,pipeline:e,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:c.AutoTokenizer,pipeline:f,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:c.AutoTokenizer,pipeline:B,model:p.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:c.AutoTokenizer,pipeline:Ae,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:me,model:p.AutoModelForAudioClassification,processor:m.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:c.AutoTokenizer,pipeline:ee,model:p.AutoModel,processor:m.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:c.AutoTokenizer,pipeline:Ce,model:[p.AutoModelForSpeechSeq2Seq,p.AutoModelForCTC],processor:m.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:c.AutoTokenizer,pipeline:pe,model:[p.AutoModelForTextToWaveform,p.AutoModelForTextToSpectrogram],processor:[m.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:c.AutoTokenizer,pipeline:we,model:p.AutoModelForVision2Seq,processor:m.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:xe,model:p.AutoModelForImageClassification,processor:m.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:De,model:[p.AutoModelForImageSegmentation,p.AutoModelForSemanticSegmentation,p.AutoModelForUniversalSegmentation],processor:m.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ye,model:[p.AutoModelForImageSegmentation,p.AutoModelForSemanticSegmentation,p.AutoModelForUniversalSegmentation],processor:m.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:c.AutoTokenizer,pipeline:Oe,model:p.AutoModel,processor:m.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:_e,model:p.AutoModelForObjectDetection,processor:m.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:c.AutoTokenizer,pipeline:ne,model:p.AutoModelForZeroShotObjectDetection,processor:m.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:c.AutoTokenizer,pipeline:te,model:p.AutoModelForDocumentQuestionAnswering,processor:m.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:le,model:p.AutoModelForImageToImage,processor:m.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Qe,model:p.AutoModelForDepthEstimation,processor:m.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:c.AutoTokenizer,pipeline:P,model:p.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:m.AutoProcessor,pipeline:O,model:[p.AutoModelForImageFeatureExtraction,p.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),qe=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ot(et,be=null,{progress_callback:Ne=null,config:ge=null,cache_dir:Ve=null,local_files_only:at=!1,revision:Ze="main",device:Ye=null,dtype:Y=null,subfolder:We="onnx",use_external_data_format:rt=null,model_file_name:fe=null,session_options:Et={}}={}){et=qe[et]??et;const Ue=it[et.split("_",1)[0]];if(!Ue)throw Error(`Unsupported pipeline: ${et}. Must be one of [${Object.keys(it)}]`);be||(be=Ue.default.model,console.log(`No model specified. Using default model: "${be}".`));const Lt={progress_callback:Ne,config:ge,cache_dir:Ve,local_files_only:at,revision:Ze,device:Ye,dtype:Y,subfolder:We,use_external_data_format:rt,model_file_name:fe,session_options:Et},It=new Map([["tokenizer",Ue.tokenizer],["model",Ue.model],["processor",Ue.processor]]),mt=await Pt(It,be,Lt);mt.task=et,(0,I.dispatchCallback)(Ne,{status:"ready",task:et,model:be});const Ft=Ue.pipeline;return new Ft(mt)}async function Pt(et,be,Ne){const ge=Object.create(null),Ve=[];for(const[at,Ze]of et.entries()){if(!Ze)continue;let Ye;Array.isArray(Ze)?Ye=new Promise(async(Y,We)=>{let rt;for(const fe of Ze){if(fe===null){Y(null);return}try{Y(await fe.from_pretrained(be,Ne));return}catch(Et){if(Et.message?.includes("Unsupported model type"))rt=Et;else if(Et.message?.includes("Could not locate file"))rt=Et;else{We(Et);return}}}We(rt)}):Ye=Ze.from_pretrained(be,Ne),ge[at]=Ye,Ve.push(Ye)}await Promise.all(Ve);for(const[at,Ze]of Object.entries(ge))ge[at]=await Ze;return ge}},"./src/tokenizers.js":(a,n,i)=>{i.r(n),i.d(n,{AlbertTokenizer:()=>ZA,AutoTokenizer:()=>dn,BartTokenizer:()=>lA,BertTokenizer:()=>Qr,BlenderbotSmallTokenizer:()=>VA,BlenderbotTokenizer:()=>Qt,BloomTokenizer:()=>Ms,CLIPTokenizer:()=>Is,CamembertTokenizer:()=>st,CodeGenTokenizer:()=>Dr,CodeLlamaTokenizer:()=>Rs,CohereTokenizer:()=>Xs,ConvBertTokenizer:()=>ke,DebertaTokenizer:()=>U,DebertaV2Tokenizer:()=>Ee,DistilBertTokenizer:()=>Le,ElectraTokenizer:()=>Ht,Ernie4_5_Tokenizer:()=>ka,EsmTokenizer:()=>Ks,FalconTokenizer:()=>js,GPT2Tokenizer:()=>gA,GPTNeoXTokenizer:()=>LA,GemmaTokenizer:()=>Cr,Grok1Tokenizer:()=>cs,HerbertTokenizer:()=>ce,LlamaTokenizer:()=>Fr,M2M100Tokenizer:()=>vs,MBart50Tokenizer:()=>GA,MBartTokenizer:()=>Sr,MPNetTokenizer:()=>bs,MarianTokenizer:()=>ut,MgpstrTokenizer:()=>qa,MobileBertTokenizer:()=>oA,NllbTokenizer:()=>Br,NougatTokenizer:()=>na,PreTrainedTokenizer:()=>wt,Qwen2Tokenizer:()=>Ws,RoFormerTokenizer:()=>Me,RobertaTokenizer:()=>kr,SiglipTokenizer:()=>us,SpeechT5Tokenizer:()=>Ia,SqueezeBertTokenizer:()=>Us,T5Tokenizer:()=>yt,TokenizerModel:()=>O,VitsTokenizer:()=>wa,Wav2Vec2CTCTokenizer:()=>ht,WhisperTokenizer:()=>qt,XLMRobertaTokenizer:()=>xr,XLMTokenizer:()=>Ot,is_chinese_char:()=>K});var c=i("./src/utils/generic.js"),p=i("./src/utils/core.js"),m=i("./src/utils/hub.js"),C=i("./src/utils/maths.js"),I=i("./src/utils/tensor.js"),E=i("./src/utils/data-structures.js"),x=i("./node_modules/@huggingface/jinja/dist/index.js"),D=i("./src/models/whisper/common_whisper.js");async function y(Fe,X){const de=await Promise.all([(0,m.getModelJSON)(Fe,"tokenizer.json",!0,X),(0,m.getModelJSON)(Fe,"tokenizer_config.json",!0,X)]);return X.legacy!==null&&(de[1].legacy=X.legacy),de}function M(Fe,X){const de=[];let Ie=0;for(const Be of Fe.matchAll(X)){const je=Be[0];Ie<Be.index&&de.push(Fe.slice(Ie,Be.index)),je.length>0&&de.push(je),Ie=Be.index+je.length}return Ie<Fe.length&&de.push(Fe.slice(Ie)),de}function S(Fe,X=!0){if(Fe.Regex!==void 0){let de=Fe.Regex.replace(/\\([#&~])/g,"$1");for(const[Ie,Be]of Ae)de=de.replaceAll(Ie,Be);return new RegExp(de,"gu")}else if(Fe.String!==void 0){const de=(0,p.escapeRegExp)(Fe.String);return new RegExp(X?de:`(${de})`,"gu")}else return console.warn("Unknown pattern type:",Fe),null}function F(Fe){return new Map(Object.entries(Fe))}function L(Fe){const X=Fe.dims;switch(X.length){case 1:return Fe.tolist();case 2:if(X[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Fe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${X.length}.`)}}function Z(Fe){return Fe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function z(Fe){return Fe.replace(/\p{M}/gu,"")}function N(Fe){return z(Fe.toLowerCase())}function K(Fe){return Fe>=19968&&Fe<=40959||Fe>=13312&&Fe<=19903||Fe>=131072&&Fe<=173791||Fe>=173824&&Fe<=177983||Fe>=177984&&Fe<=178207||Fe>=178208&&Fe<=183983||Fe>=63744&&Fe<=64255||Fe>=194560&&Fe<=195103}function f(Fe,X,de){const Ie=[];let Be=0;for(;Be<Fe.length;){if(Ie.push(Fe[Be]),(X.get(Fe[Be])??de)!==de){++Be;continue}for(;++Be<Fe.length&&(X.get(Fe[Be])??de)===de;)X.get(Ie.at(-1))!==de&&(Ie[Ie.length-1]+=Fe[Be])}return Ie}function k(Fe){return Fe.match(/\S+/g)||[]}const e="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",d=new RegExp(`^[${e}]+$`,"gu"),B=".,!?…。，、।۔،",Ae=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${B}])]+`,` ?[^\\s${B}]+`]]);class P{constructor(X){this.content=X.content,this.id=X.id,this.single_word=X.single_word??!1,this.lstrip=X.lstrip??!1,this.rstrip=X.rstrip??!1,this.special=X.special??!1,this.normalized=X.normalized??null}}class O extends c.Callable{constructor(X){super(),this.config=X,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(X,...de){switch(X.type){case"WordPiece":return new me(X);case"Unigram":return new ee(X,...de);case"BPE":return new xe(X);default:if(X.vocab)return Array.isArray(X.vocab)?new ee(X,...de):Object.hasOwn(X,"continuing_subword_prefix")&&Object.hasOwn(X,"unk_token")?Object.hasOwn(X,"merges")?new xe(X):new me(X):new De(X,...de);throw new Error(`Unknown TokenizerModel type: ${X.type}`)}}_call(X){return X=this.encode(X),this.fuse_unk&&(X=f(X,this.tokens_to_ids,this.unk_token_id)),X}encode(X){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(X){return X.map(de=>this.tokens_to_ids.get(de)??this.unk_token_id)}convert_ids_to_tokens(X){return X.map(de=>this.vocab[de]??this.unk_token)}}class me extends O{constructor(X){super(X),this.tokens_to_ids=F(X.vocab),this.unk_token_id=this.tokens_to_ids.get(X.unk_token),this.unk_token=X.unk_token,this.max_input_chars_per_word=X.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[de,Ie]of this.tokens_to_ids)this.vocab[Ie]=de}encode(X){const de=[];for(const Ie of X){const Be=[...Ie];if(Be.length>this.max_input_chars_per_word){de.push(this.unk_token);continue}let je=!1,tt=0;const Bt=[];for(;tt<Be.length;){let Mt=Be.length,Je=null;for(;tt<Mt;){let bt=Be.slice(tt,Mt).join("");if(tt>0&&(bt=this.config.continuing_subword_prefix+bt),this.tokens_to_ids.has(bt)){Je=bt;break}--Mt}if(Je===null){je=!0;break}Bt.push(Je),tt=Mt}je?de.push(this.unk_token):de.push(...Bt)}return de}}class ee extends O{constructor(X,de){super(X);const Ie=X.vocab.length;this.vocab=new Array(Ie),this.scores=new Array(Ie);for(let Be=0;Be<Ie;++Be)[this.vocab[Be],this.scores[Be]]=X.vocab[Be];this.unk_token_id=X.unk_id,this.unk_token=this.vocab[X.unk_id],this.tokens_to_ids=new Map(this.vocab.map((Be,je)=>[Be,je])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=de.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,C.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new E.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(X){const de=X.chars,Ie=1;let Be=0;for(;Be<de.length;){let je=!1;const tt=de.slice(Be).join(""),Bt=this.trie.commonPrefixSearch(tt);for(const Mt of Bt){const Je=this.tokens_to_ids.get(Mt),bt=this.scores[Je],cA=(0,p.len)(Mt);X.insert(Be,cA,bt,Je),!je&&cA===Ie&&(je=!0)}je||X.insert(Be,Ie,this.unk_score,this.unk_token_id),Be+=Ie}}tokenize(X){const de=new E.TokenLattice(X,this.bos_token_id,this.eos_token_id);return this.populateNodes(de),de.tokens()}encode(X){const de=[];for(const Ie of X){const Be=this.tokenize(Ie);de.push(...Be)}return de}}const Ce=(()=>{const Fe=[...Array.from({length:94},(Be,je)=>je+33),...Array.from({length:12},(Be,je)=>je+161),...Array.from({length:82},(Be,je)=>je+174)],X=Fe.slice();let de=0;for(let Be=0;Be<256;++Be)Fe.includes(Be)||(Fe.push(Be),X.push(256+de),de+=1);const Ie=X.map(Be=>String.fromCharCode(Be));return Object.fromEntries(Fe.map((Be,je)=>[Be,Ie[je]]))})(),we=(0,p.reverseDictionary)(Ce);class xe extends O{constructor(X){super(X),this.tokens_to_ids=F(X.vocab),this.unk_token_id=this.tokens_to_ids.get(X.unk_token),this.unk_token=X.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Ie,Be]of this.tokens_to_ids)this.vocab[Be]=Ie;const de=Array.isArray(X.merges[0]);this.merges=de?X.merges:X.merges.map(Ie=>Ie.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Ie,Be)=>[JSON.stringify(Ie),Be])),this.end_of_word_suffix=X.end_of_word_suffix,this.continuing_subword_suffix=X.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new E.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(X){if(X.length===0)return[];const de=this.cache.get(X);if(de!==void 0)return de;const Ie=Array.from(X);this.end_of_word_suffix&&(Ie[Ie.length-1]+=this.end_of_word_suffix);let Be=[];if(Ie.length>1){const je=new E.PriorityQueue((Mt,Je)=>Mt.score<Je.score);let tt={token:Ie[0],bias:0,prev:null,next:null},Bt=tt;for(let Mt=1;Mt<Ie.length;++Mt){const Je={bias:Mt/Ie.length,token:Ie[Mt],prev:Bt,next:null};Bt.next=Je,this._add_node(je,Bt),Bt=Je}for(;!je.isEmpty();){const Mt=je.pop();if(Mt.deleted||!Mt.next||Mt.next.deleted)continue;if(Mt.deleted=!0,Mt.next.deleted=!0,Mt.prev){const bt={...Mt.prev};Mt.prev.deleted=!0,Mt.prev=bt,bt.prev?bt.prev.next=bt:tt=bt}const Je={token:Mt.token+Mt.next.token,bias:Mt.bias,prev:Mt.prev,next:Mt.next.next};Je.prev?(Je.prev.next=Je,this._add_node(je,Je.prev)):tt=Je,Je.next&&(Je.next.prev=Je,this._add_node(je,Je))}for(let Mt=tt;Mt!==null;Mt=Mt.next)Be.push(Mt.token)}else Be=Ie;if(this.continuing_subword_suffix)for(let je=0;je<Be.length-1;++je)Be[je]+=this.continuing_subword_suffix;return X.length<this.max_length_to_cache&&this.cache.put(X,Be),Be}_add_node(X,de){const Ie=this.bpe_ranks.get(JSON.stringify([de.token,de.next.token]));Ie!==void 0&&(de.score=Ie+de.bias,X.push(de))}encode(X){const de=[];for(const Ie of X){if(this.ignore_merges&&this.tokens_to_ids.has(Ie)){de.push(Ie);continue}const Be=this.bpe(Ie);for(const je of Be)if(this.tokens_to_ids.has(je))de.push(je);else if(this.byte_fallback){const tt=Array.from(this.text_encoder.encode(je)).map(Bt=>`<0x${Bt.toString(16).toUpperCase().padStart(2,"0")}>`);tt.every(Bt=>this.tokens_to_ids.has(Bt))?de.push(...tt):de.push(this.unk_token)}else de.push(this.unk_token)}return de}}class De extends O{constructor(X,de){super(X),this.tokens_to_ids=F(de.target_lang?X.vocab[de.target_lang]:X.vocab),this.bos_token=de.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=de.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=de.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=de.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Ie,Be]of this.tokens_to_ids)this.vocab[Be]=Ie}encode(X){return X}}class ye extends c.Callable{constructor(X){super(),this.config=X}static fromConfig(X){if(X===null)return null;switch(X.type){case"BertNormalizer":return new et(X);case"Precompiled":return new WA(X);case"Sequence":return new Pt(X);case"Replace":return new Oe(X);case"NFC":return new ne(X);case"NFD":return new te(X);case"NFKC":return new pe(X);case"NFKD":return new le(X);case"Strip":return new Qe(X);case"StripAccents":return new it(X);case"Lowercase":return new qe(X);case"Prepend":return new ot(X);default:throw new Error(`Unknown Normalizer type: ${X.type}`)}}normalize(X){throw Error("normalize should be implemented in subclass.")}_call(X){return this.normalize(X)}}class Oe extends ye{normalize(X){const de=S(this.config.pattern);return de===null?X:X.replaceAll(de,this.config.content)}}class _e extends ye{form=void 0;normalize(X){return X=X.normalize(this.form),X}}class ne extends _e{form="NFC"}class te extends _e{form="NFD"}class pe extends _e{form="NFKC"}class le extends _e{form="NFKD"}class Qe extends ye{normalize(X){return this.config.strip_left&&this.config.strip_right?X=X.trim():(this.config.strip_left&&(X=X.trimStart()),this.config.strip_right&&(X=X.trimEnd())),X}}class it extends ye{normalize(X){return X=z(X),X}}class qe extends ye{normalize(X){return X=X.toLowerCase(),X}}class ot extends ye{normalize(X){return X=this.config.prepend+X,X}}class Pt extends ye{constructor(X){super(X),this.normalizers=X.normalizers.map(de=>ye.fromConfig(de))}normalize(X){return this.normalizers.reduce((de,Ie)=>Ie.normalize(de),X)}}class et extends ye{_tokenize_chinese_chars(X){const de=[];for(let Ie=0;Ie<X.length;++Ie){const Be=X[Ie],je=Be.charCodeAt(0);K(je)?(de.push(" "),de.push(Be),de.push(" ")):de.push(Be)}return de.join("")}stripAccents(X){return X.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(X){switch(X){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(X)}}_clean_text(X){const de=[];for(const Ie of X){const Be=Ie.charCodeAt(0);Be===0||Be===65533||this._is_control(Ie)||(/^\s$/.test(Ie)?de.push(" "):de.push(Ie))}return de.join("")}normalize(X){return this.config.clean_text&&(X=this._clean_text(X)),this.config.handle_chinese_chars&&(X=this._tokenize_chinese_chars(X)),this.config.lowercase?(X=X.toLowerCase(),this.config.strip_accents!==!1&&(X=this.stripAccents(X))):this.config.strip_accents&&(X=this.stripAccents(X)),X}}class be extends c.Callable{static fromConfig(X){if(X===null)return null;switch(X.type){case"BertPreTokenizer":return new Ne(X);case"Sequence":return new Ls(X);case"Whitespace":return new XA(X);case"WhitespaceSplit":return new Xr(X);case"Metaspace":return new KA(X);case"ByteLevel":return new ge(X);case"Split":return new Ve(X);case"Punctuation":return new at(X);case"Digits":return new Ze(X);case"Replace":return new Ps(X);default:throw new Error(`Unknown PreTokenizer type: ${X.type}`)}}pre_tokenize_text(X,de){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(X,de){return(Array.isArray(X)?X.map(Ie=>this.pre_tokenize_text(Ie,de)):this.pre_tokenize_text(X,de)).flat()}_call(X,de){return this.pre_tokenize(X,de)}}class Ne extends be{constructor(X){super(),this.pattern=new RegExp(`[^\\s${e}]+|[${e}]`,"gu")}pre_tokenize_text(X,de){return X.trim().match(this.pattern)||[]}}class ge extends be{constructor(X){super(),this.config=X,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Ce,this.text_encoder=new TextEncoder}pre_tokenize_text(X,de){return this.add_prefix_space&&!X.startsWith(" ")&&(X=" "+X),(this.use_regex?X.match(this.pattern)||[]:[X]).map(Be=>Array.from(this.text_encoder.encode(Be),je=>this.byte_encoder[je]).join(""))}}class Ve extends be{constructor(X){super(),this.config=X,this.pattern=S(this.config.pattern,this.config.invert)}pre_tokenize_text(X,de){return this.pattern===null?[]:this.config.invert?X.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?X.split(this.pattern).filter(Ie=>Ie):M(X,this.pattern)}}class at extends be{constructor(X){super(),this.config=X,this.pattern=new RegExp(`[^${e}]+|[${e}]+`,"gu")}pre_tokenize_text(X,de){return X.match(this.pattern)||[]}}class Ze extends be{constructor(X){super(),this.config=X;const de=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(de,"gu")}pre_tokenize_text(X,de){return X.match(this.pattern)||[]}}class Ye extends c.Callable{constructor(X){super(),this.config=X}static fromConfig(X){if(X===null)return null;switch(X.type){case"TemplateProcessing":return new rt(X);case"ByteLevel":return new fe(X);case"RobertaProcessing":return new We(X);case"BertProcessing":return new Y(X);case"Sequence":return new Et(X);default:throw new Error(`Unknown PostProcessor type: ${X.type}`)}}post_process(X,...de){throw Error("post_process should be implemented in subclass.")}_call(X,...de){return this.post_process(X,...de)}}class Y extends Ye{constructor(X){super(X),this.cls=X.cls[0],this.sep=X.sep[0]}post_process(X,de=null,{add_special_tokens:Ie=!0}={}){Ie&&(X=(0,p.mergeArrays)([this.cls],X,[this.sep]));let Be=new Array(X.length).fill(0);if(de!==null){const je=Ie&&this instanceof We?[this.sep]:[],tt=Ie?[this.sep]:[];X=(0,p.mergeArrays)(X,je,de,tt),Be=(0,p.mergeArrays)(Be,new Array(de.length+je.length+tt.length).fill(1))}return{tokens:X,token_type_ids:Be}}}class We extends Y{}class rt extends Ye{constructor(X){super(X),this.single=X.single,this.pair=X.pair}post_process(X,de=null,{add_special_tokens:Ie=!0}={}){const Be=de===null?this.single:this.pair;let je=[],tt=[];for(const Bt of Be)"SpecialToken"in Bt?Ie&&(je.push(Bt.SpecialToken.id),tt.push(Bt.SpecialToken.type_id)):"Sequence"in Bt&&(Bt.Sequence.id==="A"?(je=(0,p.mergeArrays)(je,X),tt=(0,p.mergeArrays)(tt,new Array(X.length).fill(Bt.Sequence.type_id))):Bt.Sequence.id==="B"&&(je=(0,p.mergeArrays)(je,de),tt=(0,p.mergeArrays)(tt,new Array(de.length).fill(Bt.Sequence.type_id))));return{tokens:je,token_type_ids:tt}}}class fe extends Ye{post_process(X,de=null){return de&&(X=(0,p.mergeArrays)(X,de)),{tokens:X}}}class Et extends Ye{constructor(X){super(X),this.processors=X.processors.map(de=>Ye.fromConfig(de))}post_process(X,de=null,Ie={}){let Be;for(const je of this.processors)if(je instanceof fe)X=je.post_process(X).tokens,de&&(de=je.post_process(de).tokens);else{const tt=je.post_process(X,de,Ie);X=tt.tokens,Be=tt.token_type_ids}return{tokens:X,token_type_ids:Be}}}class Ue extends c.Callable{constructor(X){super(),this.config=X,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=X.trim_offsets}static fromConfig(X){if(X===null)return null;switch(X.type){case"WordPiece":return new pt(X);case"Metaspace":return new Es(X);case"ByteLevel":return new Dt(X);case"Replace":return new Lt(X);case"ByteFallback":return new It(X);case"Fuse":return new mt(X);case"Strip":return new Ft(X);case"Sequence":return new aA(X);case"CTC":return new Tt(X);case"BPEDecoder":return new jt(X);default:throw new Error(`Unknown Decoder type: ${X.type}`)}}_call(X){return this.decode(X)}decode(X){return this.decode_chain(X).join("")}decode_chain(X){throw Error("`decode_chain` should be implemented in subclass.")}}class Lt extends Ue{decode_chain(X){const de=S(this.config.pattern);return de===null?X:X.map(Ie=>Ie.replaceAll(de,this.config.content))}}class It extends Ue{constructor(X){super(X),this.text_decoder=new TextDecoder}decode_chain(X){const de=[];let Ie=[];for(const Be of X){let je=null;if(Be.length===6&&Be.startsWith("<0x")&&Be.endsWith(">")){const tt=parseInt(Be.slice(3,5),16);isNaN(tt)||(je=tt)}if(je!==null)Ie.push(je);else{if(Ie.length>0){const tt=this.text_decoder.decode(Uint8Array.from(Ie));de.push(tt),Ie=[]}de.push(Be)}}if(Ie.length>0){const Be=this.text_decoder.decode(Uint8Array.from(Ie));de.push(Be),Ie=[]}return de}}class mt extends Ue{decode_chain(X){return[X.join("")]}}class Ft extends Ue{constructor(X){super(X),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(X){return X.map(de=>{let Ie=0;for(let je=0;je<this.start&&de[je]===this.content;++je){Ie=je+1;continue}let Be=de.length;for(let je=0;je<this.stop;++je){const tt=de.length-je-1;if(de[tt]===this.content){Be=tt;continue}else break}return de.slice(Ie,Be)})}}class pt extends Ue{constructor(X){super(X),this.cleanup=X.cleanup}decode_chain(X){return X.map((de,Ie)=>(Ie!==0&&(de.startsWith(this.config.prefix)?de=de.replace(this.config.prefix,""):de=" "+de),this.cleanup&&(de=Z(de)),de))}}class Dt extends Ue{constructor(X){super(X),this.byte_decoder=we,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(X){const de=X.join(""),Ie=new Uint8Array([...de].map(je=>this.byte_decoder[je]));return this.text_decoder.decode(Ie)}decode_chain(X){const de=[];let Ie=[];for(const Be of X)this.added_tokens.find(je=>je.content===Be)!==void 0?(Ie.length>0&&(de.push(this.convert_tokens_to_string(Ie)),Ie=[]),de.push(Be)):Ie.push(Be);return Ie.length>0&&de.push(this.convert_tokens_to_string(Ie)),de}}class Tt extends Ue{constructor(X){super(X),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(X){if(X.length===0)return"";const de=[X[0]];for(let je=1;je<X.length;++je)X[je]!==de.at(-1)&&de.push(X[je]);let Be=de.filter(je=>je!==this.pad_token).join("");return this.cleanup&&(Be=Z(Be).replaceAll(this.word_delimiter_token," ").trim()),Be}decode_chain(X){return[this.convert_tokens_to_string(X)]}}class aA extends Ue{constructor(X){super(X),this.decoders=X.decoders.map(de=>Ue.fromConfig(de))}decode_chain(X){return this.decoders.reduce((de,Ie)=>Ie.decode_chain(de),X)}}class jt extends Ue{constructor(X){super(X),this.suffix=this.config.suffix}decode_chain(X){return X.map((de,Ie)=>de.replaceAll(this.suffix,Ie===X.length-1?"":" "))}}class Nt extends Ue{decode_chain(X){let de="";for(let Ie=1;Ie<X.length;Ie+=2)de+=X[Ie];return[de]}}class KA extends be{constructor(X){super(),this.addPrefixSpace=X.add_prefix_space,this.replacement=X.replacement,this.strRep=X.str_rep||this.replacement,this.prepend_scheme=X.prepend_scheme??"always"}pre_tokenize_text(X,{section_index:de=void 0}={}){let Ie=X.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Ie.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&de===0)&&(Ie=this.strRep+Ie),[Ie]}}class Es extends Ue{constructor(X){super(X),this.addPrefixSpace=X.add_prefix_space,this.replacement=X.replacement}decode_chain(X){const de=[];for(let Ie=0;Ie<X.length;++Ie){let Be=X[Ie].replaceAll(this.replacement," ");this.addPrefixSpace&&Ie==0&&Be.startsWith(" ")&&(Be=Be.substring(1)),de.push(Be)}return de}}class WA extends ye{constructor(X){super(X),this.charsmap=X.precompiled_charsmap}normalize(X){return X=X.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),X=X.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),X.includes("～")?X=X.split("～").map(Ie=>Ie.normalize("NFKC")).join("～"):X=X.normalize("NFKC"),X}}class Ls extends be{constructor(X){super(),this.tokenizers=X.pretokenizers.map(de=>be.fromConfig(de))}pre_tokenize_text(X,de){return this.tokenizers.reduce((Ie,Be)=>Be.pre_tokenize(Ie,de),[X])}}class XA extends be{constructor(X){super()}pre_tokenize_text(X,de){return X.match(/\w+|[^\w\s]+/g)||[]}}class Xr extends be{constructor(X){super()}pre_tokenize_text(X,de){return k(X)}}class Ps extends be{constructor(X){super(),this.config=X,this.pattern=S(this.config.pattern),this.content=this.config.content}pre_tokenize_text(X,de){return this.pattern===null?[X]:[X.replaceAll(this.pattern,this.config.content)]}}const Ta=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Ca(Fe,X,de,Ie){for(const Be of Object.keys(Fe)){const je=X-Fe[Be].length,tt=de(Be),Bt=new Array(je).fill(tt);Fe[Be]=Ie==="right"?(0,p.mergeArrays)(Fe[Be],Bt):(0,p.mergeArrays)(Bt,Fe[Be])}}function ba(Fe,X){for(const de of Object.keys(Fe))Fe[de].length=X}class wt extends c.Callable{return_token_type_ids=!1;padding_side="right";constructor(X,de){super(),this.config=de,this.normalizer=ye.fromConfig(X.normalizer),this.pre_tokenizer=be.fromConfig(X.pre_tokenizer),this.model=O.fromConfig(X.model,de),this.post_processor=Ye.fromConfig(X.post_processor),this.decoder=Ue.fromConfig(X.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const Ie of X.added_tokens){const Be=new P(Ie);this.added_tokens.push(Be),this.model.tokens_to_ids.set(Be.content,Be.id),this.model.vocab[Be.id]=Be.content,Be.special&&(this.special_tokens.push(Be.content),this.all_special_ids.push(Be.id))}if(this.additional_special_tokens=de.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new E.DictionarySplitter(this.added_tokens.map(Ie=>Ie.content)),this.added_tokens_map=new Map(this.added_tokens.map(Ie=>[Ie.content,Ie])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=de.model_max_length,this.remove_space=de.remove_space,this.clean_up_tokenization_spaces=de.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=de.do_lowercase_and_remove_accent??!1,de.padding_side&&(this.padding_side=de.padding_side),this.add_bos_token=de.add_bos_token,this.add_eos_token=de.add_eos_token,this.legacy=!1,this.chat_template=de.chat_template??null,Array.isArray(this.chat_template)){const Ie=Object.create(null);for(const{name:Be,template:je}of this.chat_template){if(typeof Be!="string"||typeof je!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');Ie[Be]=je}this.chat_template=Ie}this._compiled_template_cache=new Map}getToken(...X){for(const de of X){const Ie=this.config[de];if(Ie)if(typeof Ie=="object"){if(Ie.__type==="AddedToken")return Ie.content;throw Error(`Unknown token: ${Ie}`)}else return Ie}return null}static async from_pretrained(X,{progress_callback:de=null,config:Ie=null,cache_dir:Be=null,local_files_only:je=!1,revision:tt="main",legacy:Bt=null}={}){const Mt=await y(X,{progress_callback:de,config:Ie,cache_dir:Be,local_files_only:je,revision:tt,legacy:Bt});return new this(...Mt)}_call(X,{text_pair:de=null,add_special_tokens:Ie=!0,padding:Be=!1,truncation:je=null,max_length:tt=null,return_tensor:Bt=!0,return_token_type_ids:Mt=null}={}){const Je=Array.isArray(X);let bt;if(Je){if(X.length===0)throw Error("text array must be non-empty");if(de!==null){if(Array.isArray(de)){if(X.length!==de.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");bt=X.map((nA,fr)=>this._encode_plus(nA,{text_pair:de[fr],add_special_tokens:Ie,return_token_type_ids:Mt}))}else bt=X.map(nA=>this._encode_plus(nA,{add_special_tokens:Ie,return_token_type_ids:Mt}))}else{if(X==null)throw Error("text may not be null or undefined");if(Array.isArray(de))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");bt=[this._encode_plus(X,{text_pair:de,add_special_tokens:Ie,return_token_type_ids:Mt})]}if(tt===null?tt=this.model_max_length:je===null&&(Be===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),tt=this.model_max_length):Be===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),je=!0)),Be===!0&&(tt=Math.min((0,C.max)(bt.map(nA=>nA.input_ids.length))[0],tt??1/0)),tt=Math.min(tt,this.model_max_length??1/0),Be||je)for(let nA=0;nA<bt.length;++nA)bt[nA].input_ids.length!==tt&&(bt[nA].input_ids.length>tt?je&&ba(bt[nA],tt):Be&&Ca(bt[nA],tt,fr=>fr==="input_ids"?this.pad_token_id:0,this.padding_side));const cA={};if(Bt){if(!(Be&&je)&&bt.some(fr=>{for(const Vr of Object.keys(fr))if(fr[Vr].length!==bt[0][Vr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const nA=[bt.length,bt[0].input_ids.length];for(const fr of Object.keys(bt[0]))cA[fr]=new I.Tensor("int64",BigInt64Array.from(bt.flatMap(Vr=>Vr[fr]).map(BigInt)),nA)}else{for(const nA of Object.keys(bt[0]))cA[nA]=bt.map(fr=>fr[nA]);if(!Je)for(const nA of Object.keys(cA))cA[nA]=cA[nA][0]}return cA}_encode_text(X){if(X===null)return null;const de=this.added_tokens_splitter.split(X);for(let Be=0;Be<de.length;++Be){const je=this.added_tokens_map.get(de[Be]);je&&(je.lstrip&&Be>0&&(de[Be-1]=de[Be-1].trimEnd()),je.rstrip&&Be<de.length-1&&(de[Be+1]=de[Be+1].trimStart()))}return de.flatMap((Be,je)=>{if(Be.length===0)return[];if(this.added_tokens_map.has(Be))return[Be];if(this.remove_space===!0&&(Be=Be.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Be=N(Be)),this.normalizer!==null&&(Be=this.normalizer(Be)),Be.length===0)return[];const tt=this.pre_tokenizer!==null?this.pre_tokenizer(Be,{section_index:je}):[Be];return this.model(tt)})}_encode_plus(X,{text_pair:de=null,add_special_tokens:Ie=!0,return_token_type_ids:Be=null}={}){const{tokens:je,token_type_ids:tt}=this._tokenize_helper(X,{pair:de,add_special_tokens:Ie}),Bt=this.model.convert_tokens_to_ids(je),Mt={input_ids:Bt,attention_mask:new Array(Bt.length).fill(1)};return(Be??this.return_token_type_ids)&&tt&&(Mt.token_type_ids=tt),Mt}_tokenize_helper(X,{pair:de=null,add_special_tokens:Ie=!1}={}){const Be=this._encode_text(X),je=this._encode_text(de);return this.post_processor?this.post_processor(Be,je,{add_special_tokens:Ie}):{tokens:(0,p.mergeArrays)(Be??[],je??[])}}tokenize(X,{pair:de=null,add_special_tokens:Ie=!1}={}){return this._tokenize_helper(X,{pair:de,add_special_tokens:Ie}).tokens}encode(X,{text_pair:de=null,add_special_tokens:Ie=!0,return_token_type_ids:Be=null}={}){return this._encode_plus(X,{text_pair:de,add_special_tokens:Ie,return_token_type_ids:Be}).input_ids}batch_decode(X,de={}){return X instanceof I.Tensor&&(X=X.tolist()),X.map(Ie=>this.decode(Ie,de))}decode(X,de={}){if(X instanceof I.Tensor&&(X=L(X)),!Array.isArray(X)||X.length===0||!(0,p.isIntegralNumber)(X[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(X,de)}decode_single(X,{skip_special_tokens:de=!1,clean_up_tokenization_spaces:Ie=null}){let Be=this.model.convert_ids_to_tokens(X);de&&(Be=Be.filter(tt=>!this.special_tokens.includes(tt)));let je=this.decoder?this.decoder(Be):Be.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(je=je.replaceAll(this.decoder.end_of_word_suffix," "),de&&(je=je.trim())),(Ie??this.clean_up_tokenization_spaces)&&(je=Z(je)),je}get_chat_template({chat_template:X=null,tools:de=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const Ie=this.chat_template;if(X!==null&&Object.hasOwn(Ie,X))X=Ie[X];else if(X===null)if(de!==null&&"tool_use"in Ie)X=Ie.tool_use;else if("default"in Ie)X=Ie.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(Ie).sort()}.`)}else if(X===null)if(this.chat_template)X=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return X}apply_chat_template(X,{tools:de=null,documents:Ie=null,chat_template:Be=null,add_generation_prompt:je=!1,tokenize:tt=!0,padding:Bt=!1,truncation:Mt=!1,max_length:Je=null,return_tensor:bt=!0,return_dict:cA=!1,tokenizer_kwargs:nA={},...fr}={}){if(Be=this.get_chat_template({chat_template:Be,tools:de}),typeof Be!="string")throw Error(`chat_template must be a string, but got ${typeof Be}`);let Vr=this._compiled_template_cache.get(Be);Vr===void 0&&(Vr=new x.Template(Be),this._compiled_template_cache.set(Be,Vr));const tr=Object.create(null);for(const PA of Ta){const Or=this.getToken(PA);Or&&(tr[PA]=Or)}const QA=Vr.render({messages:X,add_generation_prompt:je,tools:de,documents:Ie,...tr,...fr});if(tt){const PA=this._call(QA,{add_special_tokens:!1,padding:Bt,truncation:Mt,max_length:Je,return_tensor:bt,...nA});return cA?PA:PA.input_ids}return QA}}class Qr extends wt{return_token_type_ids=!0}class ZA extends wt{return_token_type_ids=!0}class oA extends wt{return_token_type_ids=!0}class Us extends wt{return_token_type_ids=!0}class U extends wt{return_token_type_ids=!0}class Ee extends wt{return_token_type_ids=!0}class ce extends wt{return_token_type_ids=!0}class ke extends wt{return_token_type_ids=!0}class Me extends wt{return_token_type_ids=!0}class Le extends wt{}class st extends wt{}class Ot extends wt{return_token_type_ids=!0;constructor(X,de){super(X,de),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ht extends wt{return_token_type_ids=!0}class yt extends wt{}class gA extends wt{}class lA extends wt{}class Sr extends wt{constructor(X,de){super(X,de),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Ie=>this.languageRegex.test(Ie)),this.lang_to_token=Ie=>Ie}_build_translation_inputs(X,de,Ie){return yr(this,X,de,Ie)}}class GA extends Sr{}class kr extends wt{}class Ms extends wt{}const DA="▁";class Fr extends wt{padding_side="left";constructor(X,de){super(X,de),this.legacy=de.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new KA({replacement:DA,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(X){if(X===null)return null;if(this.legacy||X.length===0)return super._encode_text(X);let de=super._encode_text(DA+X.replaceAll(DA," "));return de.length>1&&de[0]===DA&&this.special_tokens.includes(de[1])&&(de=de.slice(1)),de}}class Rs extends wt{}class xr extends wt{}class bs extends wt{}class js extends wt{}class LA extends wt{}class Ks extends wt{}class Ws extends wt{}class Cr extends wt{}class cs extends wt{}function yr(Fe,X,de,Ie){if(!("language_codes"in Fe)||!Array.isArray(Fe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Fe)||!(Fe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Fe)||typeof Fe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const Be=Ie.src_lang,je=Ie.tgt_lang;if(!Fe.language_codes.includes(je))throw new Error(`Target language code "${je}" is not valid. Must be one of: {${Fe.language_codes.join(", ")}}`);if(Be!==void 0){if(!Fe.language_codes.includes(Be))throw new Error(`Source language code "${Be}" is not valid. Must be one of: {${Fe.language_codes.join(", ")}}`);for(const tt of Fe.post_processor.config.single)if("SpecialToken"in tt&&Fe.languageRegex.test(tt.SpecialToken.id)){tt.SpecialToken.id=Fe.lang_to_token(Be);break}}return Ie.forced_bos_token_id=Fe.model.convert_tokens_to_ids([Fe.lang_to_token(je)])[0],Fe._call(X,de)}class Br extends wt{constructor(X,de){super(X,de),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Ie=>this.languageRegex.test(Ie)),this.lang_to_token=Ie=>Ie}_build_translation_inputs(X,de,Ie){return yr(this,X,de,Ie)}}class vs extends wt{constructor(X,de){super(X,de),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Ie=>this.languageRegex.test(Ie)).map(Ie=>Ie.slice(2,-2)),this.lang_to_token=Ie=>`__${Ie}__`}_build_translation_inputs(X,de,Ie){return yr(this,X,de,Ie)}}class qt extends wt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(X,{return_timestamps:de=!1,return_language:Ie=!1,time_precision:Be=null,force_full_sequences:je=!0}={}){if(Be===null)throw Error("Must specify time_precision");let tt=null;const Bt=de==="word";function Mt(){return{language:tt,timestamp:[null,null],text:""}}const Je=[];let bt=Mt(),cA=0;const nA=this.timestamp_begin,Vr=nA+1500;let tr=[],QA=[],PA=!1,Or=null;const xs=new Set(this.all_special_ids);for(const Ar of X){const ur=Ar.tokens,yA=Bt?Ar.token_timestamps:null;let rr=null,Zs=nA;if("stride"in Ar){const[Pr,JA,Wt]=Ar.stride;if(cA-=JA,Or=Pr-Wt,JA&&(Zs=JA/Be+nA),Wt)for(let wA=ur.length-1;wA>=0;--wA){const Tr=Number(ur[wA]);if(Tr>=nA){if(rr!==null&&(Tr-nA)*Be<Or)break;rr=Tr}}}let dr=[],Bs=[];for(let Pr=0;Pr<ur.length;++Pr){const JA=Number(ur[Pr]);if(xs.has(JA)){const Wt=this.decode([JA]),wA=D.WHISPER_LANGUAGE_MAPPING.get(Wt.slice(2,-2));if(wA!==void 0){if(tt!==null&&wA!==tt&&!de){tr.push(dr);const Tr=this.findLongestCommonSequence(tr)[0],Ga=this.decode(Tr);bt.text=Ga,Je.push(bt),tr=[],dr=[],bt=Mt()}tt=bt.language=wA}}else if(JA>=nA&&JA<=Vr){const Wt=(JA-nA)*Be+cA,wA=(0,C.round)(Wt,2);if(rr!==null&&JA>=rr)PA=!0;else if(PA||tr.length>0&&JA<Zs)PA=!1;else if(bt.timestamp[0]===null)bt.timestamp[0]=wA;else if(wA!==bt.timestamp[0]){bt.timestamp[1]=wA,tr.push(dr),Bt&&QA.push(Bs);const[Tr,Ga]=this.findLongestCommonSequence(tr,QA),fn=this.decode(Tr);bt.text=fn,Bt&&(bt.words=this.collateWordTimestamps(Tr,Ga,tt)),Je.push(bt),tr=[],dr=[],QA=[],Bs=[],bt=Mt()}}else if(dr.push(JA),Bt){let Wt=(0,C.round)(yA[Pr]+cA,2),wA;if(Pr+1<yA.length){wA=(0,C.round)(yA[Pr+1]+cA,2);const Tr=this.decode([JA]);d.test(Tr)&&(wA=(0,C.round)(Math.min(Wt+Be,wA),2))}else wA=null;Bs.push([Wt,wA])}}if("stride"in Ar){const[Pr,JA,Wt]=Ar.stride;cA+=Pr-Wt}dr.length>0?(tr.push(dr),Bt&&QA.push(Bs)):tr.every(Pr=>Pr.length===0)&&(bt=Mt(),tr=[],dr=[],QA=[],Bs=[])}if(tr.length>0){if(je&&de)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Ar,ur]=this.findLongestCommonSequence(tr,QA),yA=this.decode(Ar);bt.text=yA,Bt&&(bt.words=this.collateWordTimestamps(Ar,ur,tt)),Je.push(bt)}let cr=Object.create(null);const ys=Je.map(Ar=>Ar.text).join("");if(de||Ie){for(let Ar=0;Ar<Je.length;++Ar){const ur=Je[Ar];de||delete ur.timestamp,Ie||delete ur.language}if(Bt){const Ar=[];for(const ur of Je)for(const yA of ur.words)Ar.push(yA);cr={chunks:Ar}}else cr={chunks:Je}}return[ys,cr]}findLongestCommonSequence(X,de=null){let Ie=X[0],Be=Ie.length,je=[];const tt=Array.isArray(de)&&de.length>0;let Bt=tt?[]:null,Mt=tt?de[0]:null;for(let Je=1;Je<X.length;++Je){const bt=X[Je];let cA=0,nA=[Be,Be,0,0];const fr=bt.length;for(let cr=1;cr<Be+fr;++cr){const ys=Math.max(0,Be-cr),Ar=Math.min(Be,Be+fr-cr),ur=Ie.slice(ys,Ar),yA=Math.max(0,cr-Be),rr=Math.min(fr,cr),Zs=bt.slice(yA,rr);if(ur.length!==Zs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let dr;tt?dr=ur.filter((JA,Wt)=>JA===Zs[Wt]&&Mt[ys+Wt]<=de[Je][yA+Wt]).length:dr=ur.filter((JA,Wt)=>JA===Zs[Wt]).length;const Bs=cr/1e4,Pr=dr/cr+Bs;dr>1&&Pr>cA&&(cA=Pr,nA=[ys,Ar,yA,rr])}const[Vr,tr,QA,PA]=nA,Or=Math.floor((tr+Vr)/2),xs=Math.floor((PA+QA)/2);je.push(...Ie.slice(0,Or)),Ie=bt.slice(xs),Be=Ie.length,tt&&(Bt.push(...Mt.slice(0,Or)),Mt=de[Je].slice(xs))}return je.push(...Ie),tt?(Bt.push(...Mt),[je,Bt]):[je,[]]}collateWordTimestamps(X,de,Ie){const[Be,je,tt]=this.combineTokensIntoWords(X,Ie),Bt=[];for(let Mt=0;Mt<Be.length;++Mt){const Je=tt[Mt];Bt.push({text:Be[Mt],timestamp:[de[Je.at(0)][0],de[Je.at(-1)][1]]})}return Bt}combineTokensIntoWords(X,de,Ie=`"'“¡¿([{-`,Be=`"'.。,，!！?？:：”)]}、`){de=de??"english";let je,tt,Bt;return["chinese","japanese","thai","lao","myanmar"].includes(de)?[je,tt,Bt]=this.splitTokensOnUnicode(X):[je,tt,Bt]=this.splitTokensOnSpaces(X),this.mergePunctuations(je,tt,Bt,Ie,Be)}decode(X,de){let Ie;return de?.decode_with_timestamps?(X instanceof I.Tensor&&(X=L(X)),Ie=this.decodeWithTimestamps(X,de)):Ie=super.decode(X,de),Ie}decodeWithTimestamps(X,de){const Ie=de?.time_precision??.02,Be=Array.from(this.all_special_ids).at(-1)+1;let je=[[]];for(let tt of X)if(tt=Number(tt),tt>=Be){const Bt=((tt-Be)*Ie).toFixed(2);je.push(`<|${Bt}|>`),je.push([])}else je[je.length-1].push(tt);return je=je.map(tt=>typeof tt=="string"?tt:super.decode(tt,de)),je.join("")}splitTokensOnUnicode(X){const de=this.decode(X,{decode_with_timestamps:!0}),Ie="�",Be=[],je=[],tt=[];let Bt=[],Mt=[],Je=0;for(let bt=0;bt<X.length;++bt){const cA=X[bt];Bt.push(cA),Mt.push(bt);const nA=this.decode(Bt,{decode_with_timestamps:!0});(!nA.includes(Ie)||de[Je+nA.indexOf(Ie)]===Ie)&&(Be.push(nA),je.push(Bt),tt.push(Mt),Bt=[],Mt=[],Je+=nA.length)}return[Be,je,tt]}splitTokensOnSpaces(X){const[de,Ie,Be]=this.splitTokensOnUnicode(X),je=[],tt=[],Bt=[],Mt=new RegExp(`^[${e}]$`,"gu");for(let Je=0;Je<de.length;++Je){const bt=de[Je],cA=Ie[Je],nA=Be[Je],fr=cA[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Vr=bt.startsWith(" "),tr=bt.trim(),QA=Mt.test(tr);if(fr||Vr||QA||je.length===0)je.push(bt),tt.push(cA),Bt.push(nA);else{const PA=je.length-1;je[PA]+=bt,tt[PA].push(...cA),Bt[PA].push(...nA)}}return[je,tt,Bt]}mergePunctuations(X,de,Ie,Be,je){const tt=structuredClone(X),Bt=structuredClone(de),Mt=structuredClone(Ie);let Je=tt.length-2,bt=tt.length-1;for(;Je>=0;)tt[Je].startsWith(" ")&&Be.includes(tt[Je].trim())?(tt[bt]=tt[Je]+tt[bt],Bt[bt]=(0,p.mergeArrays)(Bt[Je],Bt[bt]),Mt[bt]=(0,p.mergeArrays)(Mt[Je],Mt[bt]),tt[Je]="",Bt[Je]=[],Mt[Je]=[]):bt=Je,--Je;for(Je=0,bt=1;bt<tt.length;)!tt[Je].endsWith(" ")&&je.includes(tt[bt])?(tt[Je]+=tt[bt],Bt[Je]=(0,p.mergeArrays)(Bt[Je],Bt[bt]),Mt[Je]=(0,p.mergeArrays)(Mt[Je],Mt[bt]),tt[bt]="",Bt[bt]=[],Mt[bt]=[]):Je=bt,++bt;return[tt.filter(cA=>cA),Bt.filter(cA=>cA.length>0),Mt.filter(cA=>cA.length>0)]}}class Dr extends wt{}class Is extends wt{}class us extends wt{}class ut extends wt{constructor(X,de){super(X,de),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Ie=>this.languageRegex.test(Ie)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(X){if(X===null)return null;const[de,...Ie]=X.trim().split(this.languageRegex);if(Ie.length===0)return super._encode_text(de);if(Ie.length===2){const[Be,je]=Ie;return this.supported_language_codes.includes(Be)||console.warn(`Unsupported language code "${Be}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,p.mergeArrays)([Be],super._encode_text(je))}}}class ht extends wt{}class Qt extends wt{}class VA extends wt{}class Ia extends wt{}class na extends wt{}class wa extends wt{constructor(X,de){super(X,de),this.decoder=new Nt({})}}class Xs extends wt{}class qa extends wt{}class ka extends wt{}class dn{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:yt,DistilBertTokenizer:Le,CamembertTokenizer:st,DebertaTokenizer:U,DebertaV2Tokenizer:Ee,BertTokenizer:Qr,HerbertTokenizer:ce,ConvBertTokenizer:ke,RoFormerTokenizer:Me,XLMTokenizer:Ot,ElectraTokenizer:Ht,MobileBertTokenizer:oA,SqueezeBertTokenizer:Us,AlbertTokenizer:ZA,GPT2Tokenizer:gA,BartTokenizer:lA,MBartTokenizer:Sr,MBart50Tokenizer:GA,RobertaTokenizer:kr,WhisperTokenizer:qt,CodeGenTokenizer:Dr,CLIPTokenizer:Is,SiglipTokenizer:us,MarianTokenizer:ut,BloomTokenizer:Ms,NllbTokenizer:Br,M2M100Tokenizer:vs,LlamaTokenizer:Fr,CodeLlamaTokenizer:Rs,XLMRobertaTokenizer:xr,MPNetTokenizer:bs,FalconTokenizer:js,GPTNeoXTokenizer:LA,EsmTokenizer:Ks,Wav2Vec2CTCTokenizer:ht,BlenderbotTokenizer:Qt,BlenderbotSmallTokenizer:VA,SpeechT5Tokenizer:Ia,NougatTokenizer:na,VitsTokenizer:wa,Qwen2Tokenizer:Ws,GemmaTokenizer:Cr,Grok1Tokenizer:cs,CohereTokenizer:Xs,MgpstrTokenizer:qa,Ernie4_5_Tokenizer:ka,PreTrainedTokenizer:wt};static async from_pretrained(X,{progress_callback:de=null,config:Ie=null,cache_dir:Be=null,local_files_only:je=!1,revision:tt="main",legacy:Bt=null}={}){const[Mt,Je]=await y(X,{progress_callback:de,config:Ie,cache_dir:Be,local_files_only:je,revision:tt,legacy:Bt}),bt=Je.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let cA=this.TOKENIZER_CLASS_MAPPING[bt];return cA||(console.warn(`Unknown tokenizer class "${bt}", attempting to construct from base class.`),cA=wt),new cA(Mt,Je)}}},"./src/utils/audio.js":(a,n,i)=>{i.r(n),i.d(n,{RawAudio:()=>me,hamming:()=>M,hanning:()=>y,mel_filter_bank:()=>K,read_audio:()=>x,spectrogram:()=>B,window_function:()=>Ae});var c=i("./src/utils/hub.js"),p=i("./src/utils/maths.js"),m=i("./src/utils/core.js"),C=i("./src/env.js"),I=i("./src/utils/tensor.js"),E=i("?7992");async function x(ee,Ce){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const we=await(await(0,c.getFile)(ee)).arrayBuffer(),xe=new AudioContext({sampleRate:Ce});typeof Ce>"u"&&console.warn(`No sampling rate provided, using default of ${xe.sampleRate}Hz.`);const De=await xe.decodeAudioData(we);let ye;if(De.numberOfChannels===2){const Oe=Math.sqrt(2),_e=De.getChannelData(0),ne=De.getChannelData(1);ye=new Float32Array(_e.length);for(let te=0;te<De.length;++te)ye[te]=Oe*(_e[te]+ne[te])/2}else ye=De.getChannelData(0);return ye}function D(ee,Ce){if(ee<1)return new Float64Array;if(ee===1)return new Float64Array([1]);const we=1-Ce,xe=2*Math.PI/(ee-1),De=new Float64Array(ee);for(let ye=0;ye<ee;++ye)De[ye]=Ce-we*Math.cos(ye*xe);return De}function y(ee){return D(ee,.5)}function M(ee){return D(ee,.54)}const S={htk:ee=>2595*Math.log10(1+ee/700),kaldi:ee=>1127*Math.log(1+ee/700),slaney:(ee,Ce=1e3,we=15,xe=27/Math.log(6.4))=>ee>=Ce?we+Math.log(ee/Ce)*xe:3*ee/200};function F(ee,Ce="htk"){const we=S[Ce];if(!we)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ee=="number"?we(ee):ee.map(xe=>we(xe))}const L={htk:ee=>700*(10**(ee/2595)-1),kaldi:ee=>700*(Math.exp(ee/1127)-1),slaney:(ee,Ce=1e3,we=15,xe=Math.log(6.4)/27)=>ee>=we?Ce*Math.exp(xe*(ee-we)):200*ee/3};function Z(ee,Ce="htk"){const we=L[Ce];if(!we)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ee=="number"?we(ee):ee.map(xe=>we(xe))}function z(ee,Ce){const we=Float64Array.from({length:Ce.length-1},(Oe,_e)=>Ce[_e+1]-Ce[_e]),xe=Array.from({length:ee.length},()=>new Array(Ce.length));for(let Oe=0;Oe<ee.length;++Oe){const _e=xe[Oe];for(let ne=0;ne<Ce.length;++ne)_e[ne]=Ce[ne]-ee[Oe]}const De=Ce.length-2,ye=Array.from({length:De},()=>new Array(ee.length));for(let Oe=0;Oe<ee.length;++Oe){const _e=xe[Oe];for(let ne=0;ne<De;++ne){const te=-_e[ne]/we[ne],pe=_e[ne+2]/we[ne+1];ye[ne][Oe]=Math.max(0,Math.min(te,pe))}}return ye}function N(ee,Ce,we){const xe=(Ce-ee)/(we-1);return Float64Array.from({length:we},(De,ye)=>ee+xe*ye)}function K(ee,Ce,we,xe,De,ye=null,Oe="htk",_e=!1){if(ye!==null&&ye!=="slaney")throw new Error('norm must be one of null or "slaney"');if(ee<2)throw new Error(`Require num_frequency_bins: ${ee} >= 2`);if(we>xe)throw new Error(`Require min_frequency: ${we} <= max_frequency: ${xe}`);const ne=F(we,Oe),te=F(xe,Oe),pe=N(ne,te,Ce+2);let le=Z(pe,Oe),Qe;if(_e){const qe=De/((ee-1)*2);Qe=F(Float64Array.from({length:ee},(ot,Pt)=>Pt*qe),Oe),le=pe}else Qe=N(0,Math.floor(De/2),ee);const it=z(Qe,le);if(ye!==null&&ye==="slaney")for(let qe=0;qe<Ce;++qe){const ot=it[qe],Pt=2/(le[qe+2]-le[qe]);for(let et=0;et<ee;++et)ot[et]*=Pt}return it}function f(ee,Ce,we){const xe=new ee.constructor(ee.length+Ce+we),De=ee.length-1;for(let ye=0;ye<ee.length;++ye)xe[Ce+ye]=ee[ye];for(let ye=1;ye<=Ce;++ye)xe[Ce-ye]=ee[(0,m.calculateReflectOffset)(ye,De)];for(let ye=1;ye<=we;++ye)xe[De+Ce+ye]=ee[(0,m.calculateReflectOffset)(De-ye,De)];return xe}function k(ee,Ce,we,xe,De){if(we<=0)throw new Error("reference must be greater than zero");if(xe<=0)throw new Error("min_value must be greater than zero");we=Math.max(xe,we);const ye=Math.log10(we);for(let Oe=0;Oe<ee.length;++Oe)ee[Oe]=Ce*Math.log10(Math.max(xe,ee[Oe])-ye);if(De!==null){if(De<=0)throw new Error("db_range must be greater than zero");const Oe=(0,p.max)(ee)[0]-De;for(let _e=0;_e<ee.length;++_e)ee[_e]=Math.max(ee[_e],Oe)}return ee}function e(ee,Ce=1,we=1e-5,xe=null){return k(ee,20,Ce,we,xe)}function d(ee,Ce=1,we=1e-10,xe=null){return k(ee,10,Ce,we,xe)}async function B(ee,Ce,we,xe,{fft_length:De=null,power:ye=1,center:Oe=!0,pad_mode:_e="reflect",onesided:ne=!0,preemphasis:te=null,preemphasis_htk_flavor:pe=!0,mel_filters:le=null,mel_floor:Qe=1e-10,log_mel:it=null,reference:qe=1,min_value:ot=1e-10,db_range:Pt=null,remove_dc_offset:et=null,min_num_frames:be=null,max_num_frames:Ne=null,do_pad:ge=!0,transpose:Ve=!1}={}){const at=Ce.length;if(De===null&&(De=we),we>De)throw Error(`frame_length (${we}) may not be larger than fft_length (${De})`);if(at!==we)throw new Error(`Length of the window (${at}) must equal frame_length (${we})`);if(xe<=0)throw new Error("hop_length must be greater than zero");if(ye===null&&le!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!pe)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(Oe){if(_e!=="reflect")throw new Error(`pad_mode="${_e}" not implemented yet.`);const Ft=Math.floor((De-1)/2)+1;ee=f(ee,Ft,Ft)}let Ze=Math.floor(1+Math.floor((ee.length-we)/xe));be!==null&&Ze<be&&(Ze=be);const Ye=ne?Math.floor(De/2)+1:De;let Y=Ze,We=Ze;Ne!==null&&(Ne>Ze?ge&&(We=Ne):We=Y=Ne);const rt=new p.FFT(De),fe=new Float64Array(De),Et=new Float64Array(rt.outputBufferSize),Ue=new Float32Array(Ye*We);for(let Ft=0;Ft<Y;++Ft){const pt=Ft*xe,Dt=Math.min(ee.length-pt,we);Dt!==we&&fe.fill(0,0,we);for(let Tt=0;Tt<Dt;++Tt)fe[Tt]=ee[pt+Tt];if(et){let Tt=0;for(let jt=0;jt<Dt;++jt)Tt+=fe[jt];const aA=Tt/Dt;for(let jt=0;jt<Dt;++jt)fe[jt]-=aA}if(te!==null){for(let Tt=Dt-1;Tt>=1;--Tt)fe[Tt]-=te*fe[Tt-1];fe[0]*=1-te}for(let Tt=0;Tt<Ce.length;++Tt)fe[Tt]*=Ce[Tt];rt.realTransform(Et,fe);for(let Tt=0;Tt<Ye;++Tt){const aA=Tt<<1;Ue[Tt*We+Ft]=Et[aA]**2+Et[aA+1]**2}}if(ye!==null&&ye!==2){const Ft=ye/2;for(let pt=0;pt<Ue.length;++pt)Ue[pt]**=Ft}const Lt=le.length;let It=await(0,I.matmul)(new I.Tensor("float32",le.flat(),[Lt,Ye]),new I.Tensor("float32",Ue,[Ye,We]));Ve&&(It=It.transpose(1,0));const mt=It.data;for(let Ft=0;Ft<mt.length;++Ft)mt[Ft]=Math.max(Qe,mt[Ft]);if(ye!==null&&it!==null){const Ft=Math.min(mt.length,Y*Lt);switch(it){case"log":for(let pt=0;pt<Ft;++pt)mt[pt]=Math.log(mt[pt]);break;case"log10":for(let pt=0;pt<Ft;++pt)mt[pt]=Math.log10(mt[pt]);break;case"dB":if(ye===1)e(mt,qe,ot,Pt);else if(ye===2)d(mt,qe,ot,Pt);else throw new Error(`Cannot use log_mel option '${it}' with power ${ye}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${it}'`)}}return It}function Ae(ee,Ce,{periodic:we=!0,frame_length:xe=null,center:De=!0}={}){const ye=we?ee+1:ee;let Oe;switch(Ce){case"boxcar":Oe=new Float64Array(ye).fill(1);break;case"hann":case"hann_window":Oe=y(ye);break;case"hamming":Oe=M(ye);break;case"povey":Oe=y(ye).map(_e=>Math.pow(_e,.85));break;default:throw new Error(`Unknown window type ${Ce}.`)}if(we&&(Oe=Oe.subarray(0,ee)),xe===null)return Oe;if(ee>xe)throw new Error(`Length of the window (${ee}) may not be larger than frame_length (${xe})`);return Oe}function P(ee,Ce){let we=44;const xe=new ArrayBuffer(we+ee.length*4),De=new DataView(xe);O(De,0,"RIFF"),De.setUint32(4,36+ee.length*4,!0),O(De,8,"WAVE"),O(De,12,"fmt "),De.setUint32(16,16,!0),De.setUint16(20,3,!0),De.setUint16(22,1,!0),De.setUint32(24,Ce,!0),De.setUint32(28,Ce*4,!0),De.setUint16(32,4,!0),De.setUint16(34,32,!0),O(De,36,"data"),De.setUint32(40,ee.length*4,!0);for(let ye=0;ye<ee.length;++ye,we+=4)De.setFloat32(we,ee[ye],!0);return xe}function O(ee,Ce,we){for(let xe=0;xe<we.length;++xe)ee.setUint8(Ce+xe,we.charCodeAt(xe))}class me{constructor(Ce,we){this.audio=Ce,this.sampling_rate=we}toWav(){return P(this.audio,this.sampling_rate)}toBlob(){const Ce=this.toWav();return new Blob([Ce],{type:"audio/wav"})}async save(Ce){let we;if(C.apis.IS_BROWSER_ENV){if(C.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");we=m.saveBlob}else if(C.apis.IS_FS_AVAILABLE)we=async(xe,De)=>{let ye=await De.arrayBuffer();E.writeFileSync(xe,Buffer.from(ye))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await we(Ce,this.toBlob())}}},"./src/utils/constants.js":(a,n,i)=>{i.r(n),i.d(n,{CHAT_TEMPLATE_NAME:()=>E,CONFIG_NAME:()=>p,FEATURE_EXTRACTOR_NAME:()=>m,GENERATION_CONFIG_NAME:()=>x,GITHUB_ISSUE_URL:()=>c,IMAGE_PROCESSOR_NAME:()=>C,PROCESSOR_NAME:()=>I});const c="https://github.com/huggingface/transformers.js/issues/new/choose",p="config.json",m="preprocessor_config.json",C=m,I="processor_config.json",E="chat_template.jinja",x="generation_config.json"},"./src/utils/core.js":(a,n,i)=>{i.r(n),i.d(n,{calculateDimensions:()=>x,calculateReflectOffset:()=>S,count:()=>z,dispatchCallback:()=>c,escapeRegExp:()=>m,isIntegralNumber:()=>I,isNullishDimension:()=>E,isTypedArray:()=>C,len:()=>Z,mergeArrays:()=>y,pick:()=>L,pop:()=>D,product:()=>M,reverseDictionary:()=>p,saveBlob:()=>F});function c(N,K){N&&N(K)}function p(N){return Object.fromEntries(Object.entries(N).map(([K,f])=>[f,K]))}function m(N){return N.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function C(N){return N?.prototype?.__proto__?.constructor?.name==="TypedArray"}function I(N){return Number.isInteger(N)||typeof N=="bigint"}function E(N){return N==null||N===-1}function x(N){const K=[];let f=N;for(;Array.isArray(f);)K.push(f.length),f=f[0];return K}function D(N,K,f=void 0){const k=N[K];if(k!==void 0)return delete N[K],k;if(f===void 0)throw Error(`Key ${K} does not exist in object.`);return f}function y(...N){return Array.prototype.concat.apply([],N)}function M(...N){return N.reduce((K,f)=>K.flatMap(k=>f.map(e=>[k,e])))}function S(N,K){return Math.abs((N+K)%(2*K)-K)}function F(N,K){const f=URL.createObjectURL(K),k=document.createElement("a");k.href=f,k.download=N,k.click(),k.remove(),URL.revokeObjectURL(f)}function L(N,K){return Object.assign({},...K.map(f=>{if(N[f]!==void 0)return{[f]:N[f]}}))}function Z(N){let K=0;for(const f of N)++K;return K}function z(N,K){let f=0;for(const k of N)k===K&&++f;return f}},"./src/utils/data-structures.js":(a,n,i)=>{i.r(n),i.d(n,{CharTrie:()=>p,DictionarySplitter:()=>E,LRUCache:()=>x,PriorityQueue:()=>c,TokenLattice:()=>C});class c{constructor(y=(S,F)=>S>F,M=1/0){this._heap=[],this._comparator=y,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...y){return this.extend(y)}extend(y){for(const M of y)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const S=this._smallest();this._comparator(M,this._heap[S])&&(this._heap[S]=M,this._siftUpFrom(S))}return this.size}pop(){const y=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),y}replace(y){const M=this.peek();return this._heap[0]=y,this._siftDown(),M}_parent(y){return(y+1>>>1)-1}_left(y){return(y<<1)+1}_right(y){return y+1<<1}_greater(y,M){return this._comparator(this._heap[y],this._heap[M])}_swap(y,M){const S=this._heap[y];this._heap[y]=this._heap[M],this._heap[M]=S}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(y){for(;y>0&&this._greater(y,this._parent(y));)this._swap(y,this._parent(y)),y=this._parent(y)}_siftDown(){let y=0;for(;this._left(y)<this.size&&this._greater(this._left(y),y)||this._right(y)<this.size&&this._greater(this._right(y),y);){const M=this._right(y)<this.size&&this._greater(this._right(y),this._left(y))?this._right(y):this._left(y);this._swap(y,M),y=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class p{constructor(){this.root=m.default()}extend(y){for(const M of y)this.push(M)}push(y){let M=this.root;for(const S of y){let F=M.children.get(S);F===void 0&&(F=m.default(),M.children.set(S,F)),M=F}M.isLeaf=!0}*commonPrefixSearch(y){let M=this.root;if(M===void 0)return;let S="";for(const F of y){if(S+=F,M=M.children.get(F),M===void 0)return;M.isLeaf&&(yield S)}}}class m{constructor(y,M){this.isLeaf=y,this.children=M}static default(){return new m(!1,new Map)}}class C{constructor(y,M,S){this.chars=Array.from(y),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=S,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const F=new I(this.bosTokenId,0,0,0,0),L=new I(this.eosTokenId,1,this.len,0,0);this.nodes.push(F.clone()),this.nodes.push(L.clone()),this.beginNodes[this.len].push(L),this.endNodes[0].push(F)}insert(y,M,S,F){const L=this.nodes.length,Z=new I(F,L,y,M,S);this.beginNodes[y].push(Z),this.endNodes[y+M].push(Z),this.nodes.push(Z)}viterbi(){const y=this.len;let M=0;for(;M<=y;){if(this.beginNodes[M].length==0)return[];for(let z of this.beginNodes[M]){z.prev=null;let N=0,K=null;for(let f of this.endNodes[M]){const k=f.backtraceScore+z.score;(K===null||k>N)&&(K=f.clone(),N=k)}if(K!==null)z.prev=K,z.backtraceScore=N;else return[]}++M}const S=[],L=this.beginNodes[y][0].prev;if(L===null)return[];let Z=L.clone();for(;Z.prev!==null;)S.push(Z.clone()),Z=Z.clone().prev.clone();return S.reverse(),S}piece(y){return this.chars.slice(y.pos,y.pos+y.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class I{constructor(y,M,S,F,L){this.tokenId=y,this.nodeId=M,this.pos=S,this.length=F,this.score=L,this.prev=null,this.backtraceScore=0}clone(){const y=new I(this.tokenId,this.nodeId,this.pos,this.length,this.score);return y.prev=this.prev,y.backtraceScore=this.backtraceScore,y}}class E{constructor(y){this.trie=this._buildTrie(y)}_buildTrie(y){const M=Object.create(null);for(const S of y){let F=M;for(let L=0;L<S.length;++L)F=F[S[L]]??=Object.create(null);F.end=S}return M}split(y){const M=[],S=y.length;let F=0,L=0;for(;L<S;){let Z=this.trie,z=null,N=L;for(;N<S&&(Z=Z[y[N]]);)Z.end&&(z=Z.end),++N;z?(L>F&&M.push(y.slice(F,L)),M.push(z),L+=z.length,F=L):++L}return F<S&&M.push(y.slice(F)),M}}class x{constructor(y){this.capacity=y,this.cache=new Map}get(y){if(!this.cache.has(y))return;const M=this.cache.get(y);return this.cache.delete(y),this.cache.set(y,M),M}put(y,M){this.cache.has(y)&&this.cache.delete(y),this.cache.set(y,M),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(a,n,i)=>{i.r(n),i.d(n,{DEVICE_TYPES:()=>c});const c=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(a,n,i)=>{i.r(n),i.d(n,{DATA_TYPES:()=>C,DEFAULT_DEVICE_DTYPE_MAPPING:()=>I,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>E,isWebGpuFp16Supported:()=>m});var c=i("./src/env.js"),p=i("./src/utils/devices.js");const m=function(){let x;return async function(){if(x===void 0)if(!c.apis.IS_WEBGPU_AVAILABLE)x=!1;else try{x=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{x=!1}return x}}(),C=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),I=Object.freeze({[p.DEVICE_TYPES.wasm]:C.q8}),E=Object.freeze({[C.fp32]:"",[C.fp16]:"_fp16",[C.int8]:"_int8",[C.uint8]:"_uint8",[C.q8]:"_quantized",[C.q4]:"_q4",[C.q4f16]:"_q4f16",[C.bnb4]:"_bnb4"})},"./src/utils/generic.js":(a,n,i)=>{i.r(n),i.d(n,{Callable:()=>c});const c=class{constructor(){let p=function(...m){return p._call(...m)};return Object.setPrototypeOf(p,new.target.prototype)}_call(...p){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(a,n,i)=>{i.r(n),i.d(n,{MAX_EXTERNAL_DATA_CHUNKS:()=>I,getFile:()=>S,getModelFile:()=>N,getModelJSON:()=>f,getModelText:()=>K});var c=i("?7992"),p=i("?5af5"),m=i("./src/env.js"),C=i("./src/utils/core.js");const I=100,E={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class x{constructor(B){if(this.filePath=B,this.headers=new Headers,this.exists=c.existsSync(B),this.exists){this.status=200,this.statusText="OK";let Ae=c.statSync(B);this.headers.set("content-length",Ae.size.toString()),this.updateContentType();const P=c.createReadStream(B);this.body=new ReadableStream({start(O){P.on("data",me=>O.enqueue(me)),P.on("end",()=>O.close()),P.on("error",me=>O.error(me))},cancel(){P.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const B=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",E[B]??"application/octet-stream")}clone(){let B=new x(this.filePath);return B.exists=this.exists,B.status=this.status,B.statusText=this.statusText,B.headers=new Headers(this.headers),B}async arrayBuffer(){return(await c.promises.readFile(this.filePath)).buffer}async blob(){const B=await c.promises.readFile(this.filePath);return new Blob([B],{type:this.headers.get("content-type")})}async text(){return await c.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function D(d,B=null,Ae=null){let P;try{P=new URL(d)}catch{return!1}return!(B&&!B.includes(P.protocol)||Ae&&!Ae.includes(P.hostname))}const y=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function M(d){return!(!y.test(d)||d.includes("..")||d.includes("--")||d.endsWith(".git")||d.endsWith(".ipynb"))}async function S(d){if(m.env.useFS&&!D(d,["http:","https:","blob:"]))return new x(d instanceof URL?d.protocol==="file:"?d.pathname:d.toString():d);if(typeof process<"u"&&process?.release?.name==="node"){const B=!!U2?.TESTING_REMOTELY,Ae=m.env.version,P=new Headers;if(P.set("User-Agent",`transformers.js/${Ae}; is_ci/${B};`),D(d,["http:","https:"],["huggingface.co","hf.co"])){const me=U2?.HF_TOKEN??U2?.HF_ACCESS_TOKEN;me&&P.set("Authorization",`Bearer ${me}`)}return fetch(d,{headers:P})}else return fetch(d)}const F={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function L(d,B,Ae){if(!Ae)return null;const P=F[d]??`Error (${d}) occurred while trying to load file`;throw Error(`${P}: "${B}".`)}class Z{constructor(B){this.path=B}async match(B){let Ae=p.join(this.path,B),P=new x(Ae);if(P.exists)return P}async put(B,Ae,P=void 0){let O=p.join(this.path,B);try{const me=Ae.headers.get("Content-Length"),ee=parseInt(me??"0");let Ce=0;await c.promises.mkdir(p.dirname(O),{recursive:!0});const we=c.createWriteStream(O),xe=Ae.body.getReader();for(;;){const{done:De,value:ye}=await xe.read();if(De)break;await new Promise((_e,ne)=>{we.write(ye,te=>{if(te){ne(te);return}_e()})}),Ce+=ye.length;const Oe=ee?Ce/ee*100:0;P?.({progress:Oe,loaded:Ce,total:ee})}we.close()}catch(me){try{await c.promises.unlink(O)}catch{}throw me}}}async function z(d,...B){for(let Ae of B)try{let P=await d.match(Ae);if(P)return P}catch{continue}}async function N(d,B,Ae=!0,P={},O=!1){if(!m.env.allowLocalModels){if(P.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!m.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,C.dispatchCallback)(P.progress_callback,{status:"initiate",name:d,file:B});let me;if(!me&&m.env.useCustomCache){if(!m.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!m.env.customCache.match||!m.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");me=m.env.customCache}if(!me&&m.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{me=await caches.open("transformers-cache")}catch(Qe){console.warn("An error occurred while opening the browser cache:",Qe)}}if(!me&&m.env.useFSCache){if(!m.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");me=new Z(P.cache_dir??m.env.cacheDir)}const ee=P.revision??"main",Ce=e(d,B),we=M(d),xe=we?e(m.env.localModelPath,Ce):Ce,De=e(m.env.remoteHost,m.env.remotePathTemplate.replaceAll("{model}",d).replaceAll("{revision}",encodeURIComponent(ee)),B);let ye;const Oe=me instanceof Z?ee==="main"?Ce:e(d,ee,B):De;let _e=!1,ne;me&&(ne=await z(me,xe,Oe));const te=ne!==void 0;if(ne===void 0){if(m.env.allowLocalModels)if(D(Ce,["http:","https:"])){if(P.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${Ce}.`);if(!m.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${Ce}.`)}else try{ne=await S(xe),ye=xe}catch(it){console.warn(`Unable to load from local path "${xe}": "${it}"`)}if(ne===void 0||ne.status===404){if(P.local_files_only||!m.env.allowRemoteModels){if(Ae)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${xe}".`);return null}if(!we)throw Error(`Local file missing at "${xe}" and download aborted due to invalid model ID "${d}".`);if(ne=await S(De),ne.status!==200)return L(ne.status,De,Ae);ye=Oe}_e=me&&typeof Response<"u"&&ne instanceof Response&&ne.status===200}(0,C.dispatchCallback)(P.progress_callback,{status:"download",name:d,file:B});let pe;if(!(m.apis.IS_NODE_ENV&&O)){let Qe;P.progress_callback?te&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Qe=new Uint8Array(await ne.arrayBuffer()),(0,C.dispatchCallback)(P.progress_callback,{status:"progress",name:d,file:B,progress:100,loaded:Qe.length,total:Qe.length})):Qe=await k(ne,it=>{(0,C.dispatchCallback)(P.progress_callback,{status:"progress",name:d,file:B,...it})}):Qe=new Uint8Array(await ne.arrayBuffer()),pe=Qe}if(_e&&ye&&await me.match(ye)===void 0&&(pe?await me.put(ye,new Response(pe,{headers:ne.headers})).catch(Qe=>{console.warn(`Unable to add response to browser cache: ${Qe}.`)}):await me.put(ye,ne,P.progress_callback)),(0,C.dispatchCallback)(P.progress_callback,{status:"done",name:d,file:B}),pe){if(!m.apis.IS_NODE_ENV&&O)throw new Error("Cannot return path in a browser environment.");return pe}if(ne instanceof x)return ne.filePath;const le=await me?.match(ye);if(le instanceof x)return le.filePath;if(le instanceof Response)return new Uint8Array(await le.arrayBuffer());if(typeof le=="string")return le;throw new Error("Unable to get model file path or buffer.")}async function K(d,B,Ae=!0,P={}){const O=await N(d,B,Ae,P,!1);return O===null?null:new TextDecoder("utf-8").decode(O)}async function f(d,B,Ae=!0,P={}){const O=await K(d,B,Ae,P);return O===null?{}:JSON.parse(O)}async function k(d,B){const Ae=d.headers.get("Content-Length");Ae===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let P=parseInt(Ae??"0"),O=new Uint8Array(P),me=0;const ee=d.body.getReader();async function Ce(){const{done:we,value:xe}=await ee.read();if(we)return;const De=me+xe.length;if(De>P){P=De;const Oe=new Uint8Array(P);Oe.set(O),O=Oe}O.set(xe,me),me=De;const ye=me/P*100;return B({progress:ye,loaded:me,total:P}),Ce()}return await Ce(),O}function e(...d){return d=d.map((B,Ae)=>(Ae&&(B=B.replace(new RegExp("^/"),"")),Ae!==d.length-1&&(B=B.replace(new RegExp("/$"),"")),B)),d.join("/")}},"./src/utils/image.js":(a,n,i)=>{i.r(n),i.d(n,{RawImage:()=>F,load_image:()=>L});var c=i("./src/utils/core.js"),p=i("./src/utils/hub.js"),m=i("./src/env.js"),C=i("./src/utils/tensor.js"),I=i("?2b25");let E,x,D;const y=m.apis.IS_BROWSER_ENV||m.apis.IS_WEBWORKER_ENV;if(y)E=(Z,z)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Z,z)},D=self.createImageBitmap,x=self.ImageData;else if(I)D=async Z=>{const N=(await Z.metadata()).channels,{data:K,info:f}=await Z.rotate().raw().toBuffer({resolveWithObject:!0}),k=new F(new Uint8ClampedArray(K),f.width,f.height,f.channels);return N!==void 0&&N!==f.channels&&k.convert(N),k};else throw new Error("Unable to load image processing library.");const M={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},S=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class F{constructor(z,N,K,f){this.data=z,this.width=N,this.height=K,this.channels=f}get size(){return[this.width,this.height]}static async read(z){if(z instanceof F)return z;if(typeof z=="string"||z instanceof URL)return await this.fromURL(z);if(z instanceof Blob)return await this.fromBlob(z);if(typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&z instanceof OffscreenCanvas)return this.fromCanvas(z);throw new Error(`Unsupported input type: ${typeof z}`)}static fromCanvas(z){if(!y)throw new Error("fromCanvas() is only supported in browser environments.");const K=z.getContext("2d").getImageData(0,0,z.width,z.height).data;return new F(K,z.width,z.height,4)}static async fromURL(z){const N=await(0,p.getFile)(z);if(N.status!==200)throw new Error(`Unable to read image from "${z}" (${N.status} ${N.statusText})`);const K=await N.blob();return this.fromBlob(K)}static async fromBlob(z){if(y){const N=await D(z),K=E(N.width,N.height).getContext("2d");return K.drawImage(N,0,0),new this(K.getImageData(0,0,N.width,N.height).data,N.width,N.height,4)}else{const N=I(await z.arrayBuffer());return await D(N)}}static fromTensor(z,N="CHW"){if(z.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${z.dims.length} dimensions.`);if(N==="CHW")z=z.transpose(1,2,0);else if(N!=="HWC")throw new Error(`Unsupported channel format: ${N}`);if(!(z.data instanceof Uint8ClampedArray||z.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${z.type}`);switch(z.dims[2]){case 1:case 2:case 3:case 4:return new F(z.data,z.dims[1],z.dims[0],z.dims[2]);default:throw new Error(`Unsupported number of channels: ${z.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const z=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let N=0,K=0;N<this.data.length;N+=this.channels){const f=this.data[N],k=this.data[N+1],e=this.data[N+2];z[K++]=Math.round(.2989*f+.587*k+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(z,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const z=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let N=0,K=0;N<this.data.length;++N)z[K++]=this.data[N],z[K++]=this.data[N],z[K++]=this.data[N];break;case 4:for(let N=0,K=0;N<this.data.length;N+=4)z[K++]=this.data[N],z[K++]=this.data[N+1],z[K++]=this.data[N+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(z,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const z=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let N=0,K=0;N<this.data.length;++N)z[K++]=this.data[N],z[K++]=this.data[N],z[K++]=this.data[N],z[K++]=255;break;case 3:for(let N=0,K=0;N<this.data.length;N+=3)z[K++]=this.data[N],z[K++]=this.data[N+1],z[K++]=this.data[N+2],z[K++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(z,this.width,this.height,4)}putAlpha(z){if(z.width!==this.width||z.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${z.width}x${z.height}`);if(z.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${z.channels}`);const N=this.data,K=z.data,f=this.width*this.height;if(this.channels===3){const k=new Uint8ClampedArray(f*4);for(let e=0,d=0,B=0;e<f;++e)k[B++]=N[d++],k[B++]=N[d++],k[B++]=N[d++],k[B++]=K[e];return this._update(k,this.width,this.height,4)}else if(this.channels===4){for(let k=0;k<f;++k)N[4*k+3]=K[k];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(z,N,{resample:K=2}={}){if(this.width===z&&this.height===N)return this;let f=M[K]??K;const k=(0,c.isNullishDimension)(z),e=(0,c.isNullishDimension)(N);if(k&&e)return this;if(k?z=N/this.height*this.width:e&&(N=z/this.width*this.height),y){const d=this.channels,B=this.toCanvas(),Ae=E(z,N).getContext("2d");return Ae.drawImage(B,0,0,z,N),new F(Ae.getImageData(0,0,z,N).data,z,N,4).convert(d)}else{let d=this.toSharp();switch(f){case"box":case"hamming":(f==="box"||f==="hamming")&&(console.warn(`Resampling method ${f} is not yet supported. Using bilinear instead.`),f="bilinear");case"nearest":case"bilinear":case"bicubic":d=d.affine([z/this.width,0,0,N/this.height],{interpolator:f});break;case"lanczos":d=d.resize({width:z,height:N,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${f} is not supported.`)}return await D(d)}}async pad([z,N,K,f]){if(z=Math.max(z,0),N=Math.max(N,0),K=Math.max(K,0),f=Math.max(f,0),z===0&&N===0&&K===0&&f===0)return this;if(y){const k=this.channels,e=this.toCanvas(),d=this.width+z+N,B=this.height+K+f,Ae=E(d,B).getContext("2d");return Ae.drawImage(e,0,0,this.width,this.height,z,K,this.width,this.height),new F(Ae.getImageData(0,0,d,B).data,d,B,4).convert(k)}else{const k=this.toSharp().extend({left:z,right:N,top:K,bottom:f});return await D(k)}}async crop([z,N,K,f]){if(z=Math.max(z,0),N=Math.max(N,0),K=Math.min(K,this.width-1),f=Math.min(f,this.height-1),z===0&&N===0&&K===this.width-1&&f===this.height-1)return this;const k=K-z+1,e=f-N+1;if(y){const d=this.channels,B=this.toCanvas(),Ae=E(k,e).getContext("2d");return Ae.drawImage(B,z,N,k,e,0,0,k,e),new F(Ae.getImageData(0,0,k,e).data,k,e,4).convert(d)}else{const d=this.toSharp().extract({left:z,top:N,width:k,height:e});return await D(d)}}async center_crop(z,N){if(this.width===z&&this.height===N)return this;const K=(this.width-z)/2,f=(this.height-N)/2;if(y){const k=this.channels,e=this.toCanvas(),d=E(z,N).getContext("2d");let B=0,Ae=0,P=0,O=0;return K>=0?B=K:P=-K,f>=0?Ae=f:O=-f,d.drawImage(e,B,Ae,z,N,P,O,z,N),new F(d.getImageData(0,0,z,N).data,z,N,4).convert(k)}else{let k=this.toSharp();if(K>=0&&f>=0)k=k.extract({left:Math.floor(K),top:Math.floor(f),width:z,height:N});else if(K<=0&&f<=0){const e=Math.floor(-f),d=Math.floor(-K);k=k.extend({top:e,left:d,right:z-this.width-d,bottom:N-this.height-e})}else{let e=[0,0],d=0;f<0?(e[0]=Math.floor(-f),e[1]=N-this.height-e[0]):d=Math.floor(f);let B=[0,0],Ae=0;K<0?(B[0]=Math.floor(-K),B[1]=z-this.width-B[0]):Ae=Math.floor(K),k=k.extend({top:e[0],bottom:e[1],left:B[0],right:B[1]}).extract({left:Ae,top:d,width:z,height:N})}return await D(k)}}async toBlob(z="image/png",N=1){if(!y)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:z,quality:N})}toTensor(z="CHW"){let N=new C.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(z!=="HWC")if(z==="CHW")N=N.permute(2,0,1);else throw new Error(`Unsupported channel format: ${z}`);return N}toCanvas(){if(!y)throw new Error("toCanvas() is only supported in browser environments.");const z=this.clone().rgba(),N=E(z.width,z.height),K=new x(z.data,z.width,z.height);return N.getContext("2d").putImageData(K,0,0),N}split(){const{data:z,width:N,height:K,channels:f}=this,k=z.constructor,e=z.length/f,d=Array.from({length:f},()=>new k(e));for(let B=0;B<e;++B){const Ae=f*B;for(let P=0;P<f;++P)d[P][B]=z[Ae+P]}return d.map(B=>new F(B,N,K,1))}_update(z,N,K,f=null){return this.data=z,this.width=N,this.height=K,f!==null&&(this.channels=f),this}clone(){return new F(this.data.slice(),this.width,this.height,this.channels)}convert(z){if(this.channels===z)return this;switch(z){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(z){if(y){if(m.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const N=z.split(".").pop().toLowerCase(),K=S.get(N)??"image/png",f=await this.toBlob(K);(0,c.saveBlob)(z,f)}else{if(m.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(z);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(y)throw new Error("toSharp() is only supported in server-side environments.");return I(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const L=F.read.bind(F)},"./src/utils/maths.js":(a,n,i)=>{i.r(n),i.d(n,{FFT:()=>L,bankers_round:()=>N,cos_sim:()=>E,dot:()=>I,dynamic_time_warping:()=>K,interpolate_data:()=>c,log_softmax:()=>C,magnitude:()=>x,max:()=>y,medianFilter:()=>Z,min:()=>D,permute_data:()=>p,round:()=>z,softmax:()=>m});function c(f,[k,e,d],[B,Ae],P="bilinear",O=!1){const me=Ae/d,ee=B/e,Ce=new f.constructor(B*Ae*k),we=e*d,xe=B*Ae;for(let De=0;De<B;++De)for(let ye=0;ye<Ae;++ye){const Oe=De*Ae+ye,_e=(ye+.5)/me-.5,ne=(De+.5)/ee-.5;let te=Math.floor(_e),pe=Math.floor(ne);const le=Math.min(te+1,d-1),Qe=Math.min(pe+1,e-1);te=Math.max(te,0),pe=Math.max(pe,0);const it=_e-te,qe=ne-pe,ot=(1-it)*(1-qe),Pt=it*(1-qe),et=(1-it)*qe,be=it*qe,Ne=pe*d,ge=Qe*d,Ve=Ne+te,at=Ne+le,Ze=ge+te,Ye=ge+le;for(let Y=0;Y<k;++Y){const We=Y*we;Ce[Y*xe+Oe]=ot*f[We+Ve]+Pt*f[We+at]+et*f[We+Ze]+be*f[We+Ye]}}return Ce}function p(f,k,e){const d=new Array(e.length),B=new Array(e.length);for(let O=e.length-1,me=1;O>=0;--O)B[O]=me,d[O]=k[e[O]],me*=d[O];const Ae=e.map((O,me)=>B[e.indexOf(me)]),P=new f.constructor(f.length);for(let O=0;O<f.length;++O){let me=0;for(let ee=k.length-1,Ce=O;ee>=0;--ee)me+=Ce%k[ee]*Ae[ee],Ce=Math.floor(Ce/k[ee]);P[me]=f[O]}return[P,d]}function m(f){const k=y(f)[0],e=f.map(Ae=>Math.exp(Ae-k)),d=e.reduce((Ae,P)=>Ae+P,0);return e.map(Ae=>Ae/d)}function C(f){const k=y(f)[0];let e=0;for(let Ae=0;Ae<f.length;++Ae)e+=Math.exp(f[Ae]-k);const d=Math.log(e);return f.map(Ae=>Ae-k-d)}function I(f,k){let e=0;for(let d=0;d<f.length;++d)e+=f[d]*k[d];return e}function E(f,k){const e=I(f,k),d=x(f),B=x(k);return e/(d*B)}function x(f){return Math.sqrt(f.reduce((k,e)=>k+e*e,0))}function D(f){if(f.length===0)throw Error("Array must not be empty");let k=f[0],e=0;for(let d=1;d<f.length;++d)f[d]<k&&(k=f[d],e=d);return[k,e]}function y(f){if(f.length===0)throw Error("Array must not be empty");let k=f[0],e=0;for(let d=1;d<f.length;++d)f[d]>k&&(k=f[d],e=d);return[k,e]}function M(f){return f>0&&(f&f-1)===0}class S{constructor(k){if(this.size=k|0,this.size<=1||!M(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=k<<1,this.table=new Float64Array(this.size*2);for(let d=0;d<this.table.length;d+=2){const B=Math.PI*d/this.size;this.table[d]=Math.cos(B),this.table[d+1]=-Math.sin(B)}let e=0;for(let d=1;this.size>d;d<<=1)++e;this._width=e%2===0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let d=0;d<this._bitrev.length;++d){this._bitrev[d]=0;for(let B=0;B<this._width;B+=2){const Ae=this._width-B-2;this._bitrev[d]|=(d>>>B&3)<<Ae}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(k,e){const d=e||new Array(k.length>>>1);for(let B=0;B<k.length;B+=2)d[B>>>1]=k[B];return d}toComplexArray(k,e){const d=e||this.createComplexArray();for(let B=0;B<d.length;B+=2)d[B]=k[B>>>1],d[B+1]=0;return d}transform(k,e){if(k===e)throw new Error("Input and output buffers must be different");this._transform4(k,e,1)}realTransform(k,e){if(k===e)throw new Error("Input and output buffers must be different");this._realTransform4(k,e,1)}inverseTransform(k,e){if(k===e)throw new Error("Input and output buffers must be different");this._transform4(k,e,-1);for(let d=0;d<k.length;++d)k[d]/=this.size}_transform4(k,e,d){const B=this._csize;let P=1<<this._width,O=B/P<<1,me,ee;const Ce=this._bitrev;if(O===4)for(me=0,ee=0;me<B;me+=O,++ee){const xe=Ce[ee];this._singleTransform2(e,k,me,xe,P)}else for(me=0,ee=0;me<B;me+=O,++ee){const xe=Ce[ee];this._singleTransform4(e,k,me,xe,P,d)}const we=this.table;for(P>>=2;P>=2;P>>=2){O=B/P<<1;const xe=O>>>2;for(me=0;me<B;me+=O){const De=me+xe-1;for(let ye=me,Oe=0;ye<De;ye+=2,Oe+=P){const _e=ye,ne=_e+xe,te=ne+xe,pe=te+xe,le=k[_e],Qe=k[_e+1],it=k[ne],qe=k[ne+1],ot=k[te],Pt=k[te+1],et=k[pe],be=k[pe+1],Ne=we[Oe],ge=d*we[Oe+1],Ve=it*Ne-qe*ge,at=it*ge+qe*Ne,Ze=we[2*Oe],Ye=d*we[2*Oe+1],Y=ot*Ze-Pt*Ye,We=ot*Ye+Pt*Ze,rt=we[3*Oe],fe=d*we[3*Oe+1],Et=et*rt-be*fe,Ue=et*fe+be*rt,Lt=le+Y,It=Qe+We,mt=le-Y,Ft=Qe-We,pt=Ve+Et,Dt=at+Ue,Tt=d*(Ve-Et),aA=d*(at-Ue);k[_e]=Lt+pt,k[_e+1]=It+Dt,k[ne]=mt+aA,k[ne+1]=Ft-Tt,k[te]=Lt-pt,k[te+1]=It-Dt,k[pe]=mt-aA,k[pe+1]=Ft+Tt}}}}_singleTransform2(k,e,d,B,Ae){const P=k[B],O=k[B+1],me=k[B+Ae],ee=k[B+Ae+1];e[d]=P+me,e[d+1]=O+ee,e[d+2]=P-me,e[d+3]=O-ee}_singleTransform4(k,e,d,B,Ae,P){const O=Ae*2,me=Ae*3,ee=k[B],Ce=k[B+1],we=k[B+Ae],xe=k[B+Ae+1],De=k[B+O],ye=k[B+O+1],Oe=k[B+me],_e=k[B+me+1],ne=ee+De,te=Ce+ye,pe=ee-De,le=Ce-ye,Qe=we+Oe,it=xe+_e,qe=P*(we-Oe),ot=P*(xe-_e);e[d]=ne+Qe,e[d+1]=te+it,e[d+2]=pe+ot,e[d+3]=le-qe,e[d+4]=ne-Qe,e[d+5]=te-it,e[d+6]=pe-ot,e[d+7]=le+qe}_realTransform4(k,e,d){const B=this._csize;let P=1<<this._width,O=B/P<<1,me,ee;const Ce=this._bitrev;if(O===4)for(me=0,ee=0;me<B;me+=O,++ee){const De=Ce[ee];this._singleRealTransform2(e,k,me,De>>>1,P>>>1)}else for(me=0,ee=0;me<B;me+=O,++ee){const De=Ce[ee];this._singleRealTransform4(e,k,me,De>>>1,P>>>1,d)}const we=this.table;for(P>>=2;P>=2;P>>=2){O=B/P<<1;const De=O>>>1,ye=De>>>1,Oe=ye>>>1;for(me=0;me<B;me+=O)for(let _e=0,ne=0;_e<=Oe;_e+=2,ne+=P){const te=me+_e,pe=te+ye,le=pe+ye,Qe=le+ye,it=k[te],qe=k[te+1],ot=k[pe],Pt=k[pe+1],et=k[le],be=k[le+1],Ne=k[Qe],ge=k[Qe+1],Ve=it,at=qe,Ze=we[ne],Ye=d*we[ne+1],Y=ot*Ze-Pt*Ye,We=ot*Ye+Pt*Ze,rt=we[2*ne],fe=d*we[2*ne+1],Et=et*rt-be*fe,Ue=et*fe+be*rt,Lt=we[3*ne],It=d*we[3*ne+1],mt=Ne*Lt-ge*It,Ft=Ne*It+ge*Lt,pt=Ve+Et,Dt=at+Ue,Tt=Ve-Et,aA=at-Ue,jt=Y+mt,Nt=We+Ft,KA=d*(Y-mt),Es=d*(We-Ft);if(k[te]=pt+jt,k[te+1]=Dt+Nt,k[pe]=Tt+Es,k[pe+1]=aA-KA,_e===0){k[le]=pt-jt,k[le+1]=Dt-Nt;continue}if(_e===Oe)continue;const WA=me+ye-_e,Ls=me+De-_e;k[WA]=Tt-d*Es,k[WA+1]=-aA-d*KA,k[Ls]=pt-d*jt,k[Ls+1]=-Dt+d*Nt}}const xe=B>>>1;for(let De=2;De<xe;De+=2)k[B-De]=k[De],k[B-De+1]=-k[De+1]}_singleRealTransform2(k,e,d,B,Ae){const P=k[B],O=k[B+Ae];e[d]=P+O,e[d+1]=0,e[d+2]=P-O,e[d+3]=0}_singleRealTransform4(k,e,d,B,Ae,P){const O=Ae*2,me=Ae*3,ee=k[B],Ce=k[B+Ae],we=k[B+O],xe=k[B+me],De=ee+we,ye=ee-we,Oe=Ce+xe,_e=P*(Ce-xe);e[d]=De+Oe,e[d+1]=0,e[d+2]=ye,e[d+3]=-_e,e[d+4]=De-Oe,e[d+5]=0,e[d+6]=ye,e[d+7]=_e}}class F{constructor(k){const e=2*(k-1),d=2*(2*k-1),B=2**Math.ceil(Math.log2(d));this.bufferSize=B,this._a=e;const Ae=new Float64Array(d),P=new Float64Array(B);this._chirpBuffer=new Float64Array(B),this._buffer1=new Float64Array(B),this._buffer2=new Float64Array(B),this._outBuffer1=new Float64Array(B),this._outBuffer2=new Float64Array(B);const O=-2*Math.PI/k,me=Math.cos(O),ee=Math.sin(O);for(let Ce=0;Ce<d>>1;++Ce){const we=(Ce+1-k)**2/2,xe=Math.sqrt(me**2+ee**2)**we,De=we*Math.atan2(ee,me),ye=2*Ce;Ae[ye]=xe*Math.cos(De),Ae[ye+1]=xe*Math.sin(De),P[ye]=Ae[ye],P[ye+1]=-Ae[ye+1]}this._slicedChirpBuffer=Ae.subarray(e,d),this._f=new S(B>>1),this._f.transform(this._chirpBuffer,P)}_transform(k,e,d){const B=this._buffer1,Ae=this._buffer2,P=this._outBuffer1,O=this._outBuffer2,me=this._chirpBuffer,ee=this._slicedChirpBuffer,Ce=this._a;if(d)for(let we=0;we<ee.length;we+=2){const xe=we+1,De=we>>1,ye=e[De];B[we]=ye*ee[we],B[xe]=ye*ee[xe]}else for(let we=0;we<ee.length;we+=2){const xe=we+1;B[we]=e[we]*ee[we]-e[xe]*ee[xe],B[xe]=e[we]*ee[xe]+e[xe]*ee[we]}this._f.transform(P,B);for(let we=0;we<me.length;we+=2){const xe=we+1;Ae[we]=P[we]*me[we]-P[xe]*me[xe],Ae[xe]=P[we]*me[xe]+P[xe]*me[we]}this._f.inverseTransform(O,Ae);for(let we=0;we<O.length;we+=2){const xe=O[we+Ce],De=O[we+Ce+1],ye=ee[we],Oe=ee[we+1];k[we]=xe*ye-De*Oe,k[we+1]=xe*Oe+De*ye}}transform(k,e){this._transform(k,e,!1)}realTransform(k,e){this._transform(k,e,!0)}}class L{constructor(k){this.fft_length=k,this.isPowerOfTwo=M(k),this.isPowerOfTwo?(this.fft=new S(k),this.outputBufferSize=2*k):(this.fft=new F(k),this.outputBufferSize=this.fft.bufferSize)}realTransform(k,e){this.fft.realTransform(k,e)}transform(k,e){this.fft.transform(k,e)}}function Z(f,k){if(k%2===0||k<=0)throw new Error("Window size must be a positive odd number");const e=new f.constructor(f.length),d=new f.constructor(k),B=Math.floor(k/2);for(let Ae=0;Ae<f.length;++Ae){let P=0;for(let O=-B;O<=B;++O){let me=Ae+O;me<0?me=Math.abs(me):me>=f.length&&(me=2*(f.length-1)-me),d[P++]=f[me]}d.sort(),e[Ae]=d[B]}return e}function z(f,k){const e=Math.pow(10,k);return Math.round(f*e)/e}function N(f){const k=Math.round(f);return Math.abs(f)%1===.5?k%2===0?k:k-1:k}function K(f){const k=f.length,e=f[0].length,d=[k+1,e+1],B=Array.from({length:d[0]},()=>Array(d[1]).fill(1/0));B[0][0]=0;const Ae=Array.from({length:d[0]},()=>Array(d[1]).fill(-1));for(let Ce=1;Ce<d[1];++Ce)for(let we=1;we<d[0];++we){const xe=B[we-1][Ce-1],De=B[we-1][Ce],ye=B[we][Ce-1];let Oe,_e;xe<De&&xe<ye?(Oe=xe,_e=0):De<xe&&De<ye?(Oe=De,_e=1):(Oe=ye,_e=2),B[we][Ce]=f[we-1][Ce-1]+Oe,Ae[we][Ce]=_e}for(let Ce=0;Ce<d[1];++Ce)Ae[0][Ce]=2;for(let Ce=0;Ce<d[0];++Ce)Ae[Ce][0]=1;let P=k,O=e,me=[],ee=[];for(;P>0||O>0;)switch(me.push(P-1),ee.push(O-1),Ae[P][O]){case 0:--P,--O;break;case 1:--P;break;case 2:--O;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${P}, ${O}]. Please file a bug report.`)}return me.reverse(),ee.reverse(),[me,ee]}},"./src/utils/tensor.js":(a,n,i)=>{i.r(n),i.d(n,{DataTypeMap:()=>C,Tensor:()=>I,cat:()=>e,full:()=>ee,full_like:()=>Ce,interpolate:()=>D,interpolate_4d:()=>y,layer_norm:()=>N,matmul:()=>M,mean:()=>P,mean_pooling:()=>z,ones:()=>we,ones_like:()=>xe,permute:()=>x,quantize_embeddings:()=>_e,rand:()=>Oe,rfft:()=>S,slice:()=>Z,stack:()=>d,std_mean:()=>Ae,topk:()=>F,zeros:()=>De,zeros_like:()=>ye});var c=i("./src/utils/maths.js"),p=i("./src/backends/onnx.js"),m=i("./src/ops/registry.js");const C=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class I{get dims(){return this.ort_tensor.dims}set dims(te){this.ort_tensor.dims=te}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...te){return(0,p.isONNXTensor)(te[0])?this.ort_tensor=te[0]:this.ort_tensor=new p.Tensor(te[0],te[1],te[2]),new Proxy(this,{get:(pe,le)=>{if(typeof le=="string"){let Qe=Number(le);if(Number.isInteger(Qe))return pe._getitem(Qe)}return pe[le]},set:(pe,le,Qe)=>pe[le]=Qe})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[te,...pe]=this.dims;if(pe.length>0){const le=pe.reduce((Qe,it)=>Qe*it);for(let Qe=0;Qe<te;++Qe)yield this._subarray(Qe,le,pe)}else yield*this.data}_getitem(te){const[pe,...le]=this.dims;if(te=k(te,pe),le.length>0){const Qe=le.reduce((it,qe)=>it*qe);return this._subarray(te,Qe,le)}else return new I(this.type,[this.data[te]],le)}indexOf(te){const pe=this.data;for(let le=0;le<pe.length;++le)if(pe[le]==te)return le;return-1}_subarray(te,pe,le){const Qe=te*pe,it=(te+1)*pe,qe="subarray"in this.data?this.data.subarray(Qe,it):this.data.slice(Qe,it);return new I(this.type,qe,le)}item(){const te=this.data;if(te.length!==1)throw new Error(`a Tensor with ${te.length} elements cannot be converted to Scalar`);return te[0]}tolist(){return E(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const te=this.data;for(let pe=0;pe<te.length;++pe)te[pe]=1/(1+Math.exp(-te[pe]));return this}map(te){return this.clone().map_(te)}map_(te){const pe=this.data;for(let le=0;le<pe.length;++le)pe[le]=te(pe[le],le,pe);return this}mul(te){return this.clone().mul_(te)}mul_(te){const pe=this.data;for(let le=0;le<pe.length;++le)pe[le]*=te;return this}div(te){return this.clone().div_(te)}div_(te){const pe=this.data;for(let le=0;le<pe.length;++le)pe[le]/=te;return this}add(te){return this.clone().add_(te)}add_(te){const pe=this.data;for(let le=0;le<pe.length;++le)pe[le]+=te;return this}sub(te){return this.clone().sub_(te)}sub_(te){const pe=this.data;for(let le=0;le<pe.length;++le)pe[le]-=te;return this}clone(){return new I(this.type,this.data.slice(),this.dims.slice())}slice(...te){const pe=[],le=[];for(let be=0;be<this.dims.length;++be){let Ne=te[be];if(Ne==null)le.push([0,this.dims[be]]),pe.push(this.dims[be]);else if(typeof Ne=="number")Ne=k(Ne,this.dims[be],be),le.push([Ne,Ne+1]);else if(Array.isArray(Ne)&&Ne.length===2){let[ge,Ve]=Ne;if(ge=ge===null?0:k(ge,this.dims[be],be,!1),Ve=Ve===null?this.dims[be]:k(Ve,this.dims[be],be,!1),ge>Ve)throw new Error(`Invalid slice: ${Ne}`);const at=[Math.max(ge,0),Math.min(Ve,this.dims[be])];le.push(at),pe.push(at[1]-at[0])}else throw new Error(`Invalid slice: ${Ne}`)}const Qe=le.map(([be,Ne])=>Ne-be),it=Qe.reduce((be,Ne)=>be*Ne),qe=this.data,ot=new qe.constructor(it),Pt=this.stride();let et=!0;for(let be=1;be<Qe.length;++be)if(le[be][0]!==0||le[be][1]!==this.dims[be]){et=!1;break}if(et){const be=le[0][0]*Pt[0],Ne=le[0][1]*Pt[0];if(ArrayBuffer.isView(qe))ot.set(qe.subarray(be,Ne));else if(Array.isArray(qe)){const ge=qe.slice(be,Ne);for(let Ve=0;Ve<ge.length;++Ve)ot[Ve]=ge[Ve]}else throw new Error("Unsupported data type for slicing")}else for(let be=0;be<it;++be){let Ne=0;for(let ge=Qe.length-1,Ve=be;ge>=0;--ge){const at=Qe[ge];Ne+=(Ve%at+le[ge][0])*Pt[ge],Ve=Math.floor(Ve/at)}ot[be]=qe[Ne]}return new I(this.type,ot,pe)}permute(...te){return x(this,te)}transpose(...te){return this.permute(...te)}sum(te=null,pe=!1){return this.norm(1,te,pe)}norm(te="fro",pe=null,le=!1){if(te==="fro")te=2;else if(typeof te=="string")throw Error(`Unsupported norm: ${te}`);const Qe=this.data,it=(et,be)=>et+be**te;if(pe===null){const et=Qe.reduce(it,0)**(1/te);return new I(this.type,[et],[])}const[qe,ot,Pt]=B(it,this,pe,le);if(te!==1)for(let et=0;et<ot.length;++et)ot[et]=ot[et]**(1/te);return new I(qe,ot,Pt)}normalize_(te=2,pe=1){pe=k(pe,this.dims.length);const le=this.norm(te,pe,!0),Qe=this.data,it=le.data;for(let qe=0;qe<Qe.length;++qe){let ot=0;for(let Pt=this.dims.length-1,et=qe,be=1;Pt>=0;--Pt){const Ne=this.dims[Pt];if(Pt!==pe){const ge=et%Ne;ot+=ge*be,be*=this.dims[Pt]}et=Math.floor(et/Ne)}Qe[qe]/=it[ot]}return this}normalize(te=2,pe=1){return this.clone().normalize_(te,pe)}stride(){return O(this.dims)}squeeze(te=null){return new I(this.type,this.data,K(this.dims,te))}squeeze_(te=null){return this.dims=K(this.dims,te),this}unsqueeze(te=null){return new I(this.type,this.data,f(this.dims,te))}unsqueeze_(te=null){return this.dims=f(this.dims,te),this}flatten_(te=0,pe=-1){pe=(pe+this.dims.length)%this.dims.length;let le=this.dims.slice(0,te),Qe=this.dims.slice(te,pe+1),it=this.dims.slice(pe+1);return this.dims=[...le,Qe.reduce((qe,ot)=>qe*ot,1),...it],this}flatten(te=0,pe=-1){return this.clone().flatten_(te,pe)}view(...te){let pe=-1;for(let Qe=0;Qe<te.length;++Qe)if(te[Qe]===-1){if(pe!==-1)throw new Error("Only one dimension can be inferred");pe=Qe}const le=this.data;if(pe!==-1){const Qe=te.reduce((it,qe,ot)=>ot!==pe?it*qe:it,1);te[pe]=le.length/Qe}return new I(this.type,le,te)}neg_(){const te=this.data;for(let pe=0;pe<te.length;++pe)te[pe]=-te[pe];return this}neg(){return this.clone().neg_()}gt(te){const pe=new Uint8Array(this.data.length),le=this.data;for(let Qe=0;Qe<le.length;++Qe)pe[Qe]=le[Qe]>te?1:0;return new I("bool",pe,this.dims)}lt(te){const pe=new Uint8Array(this.data.length),le=this.data;for(let Qe=0;Qe<le.length;++Qe)pe[Qe]=le[Qe]<te?1:0;return new I("bool",pe,this.dims)}clamp_(te,pe){const le=this.data;for(let Qe=0;Qe<le.length;++Qe)le[Qe]=Math.min(Math.max(le[Qe],te),pe);return this}clamp(te,pe){return this.clone().clamp_(te,pe)}round_(){const te=this.data;for(let pe=0;pe<te.length;++pe)te[pe]=Math.round(te[pe]);return this}round(){return this.clone().round_()}mean(te=null,pe=!1){return P(this,te,pe)}min(te=null,pe=!1){if(te===null){const qe=(0,c.min)(this.data)[0];return new I(this.type,[qe],[])}const[le,Qe,it]=B((qe,ot)=>Math.min(qe,ot),this,te,pe,1/0);return new I(le,Qe,it)}max(te=null,pe=!1){if(te===null){const qe=(0,c.max)(this.data)[0];return new I(this.type,[qe],[])}const[le,Qe,it]=B((qe,ot)=>Math.max(qe,ot),this,te,pe,-1/0);return new I(le,Qe,it)}argmin(te=null,pe=!1){if(te!==null)throw new Error("`dim !== null` not yet implemented.");const le=(0,c.min)(this.data)[1];return new I("int64",[BigInt(le)],[])}argmax(te=null,pe=!1){if(te!==null)throw new Error("`dim !== null` not yet implemented.");const le=(0,c.max)(this.data)[1];return new I("int64",[BigInt(le)],[])}to(te){if(this.type===te)return this;if(!C.hasOwnProperty(te))throw new Error(`Unsupported type: ${te}`);let pe;const le=["int64","uint64"].includes(this.type),Qe=["int64","uint64"].includes(te);return le&&!Qe?pe=Number:!le&&Qe&&(pe=BigInt),new I(te,C[te].from(this.data,pe),this.dims)}}function E(ne,te){const pe=ne.length,le=te.reduce((it,qe)=>it*qe);if(pe!==le)throw Error(`cannot reshape array of size ${pe} into shape (${te})`);let Qe=ne;for(let it=te.length-1;it>=0;it--)Qe=Qe.reduce((qe,ot)=>{let Pt=qe[qe.length-1];return Pt.length<te[it]?Pt.push(ot):qe.push([ot]),qe},[[]]);return Qe[0]}function x(ne,te){const[pe,le]=(0,c.permute_data)(ne.data,ne.dims,te);return new I(ne.type,pe,le)}function D(ne,[te,pe],le="bilinear",Qe=!1){const it=ne.dims.at(-3)??1,qe=ne.dims.at(-2),ot=ne.dims.at(-1);let Pt=(0,c.interpolate_data)(ne.data,[it,qe,ot],[te,pe],le,Qe);return new I(ne.type,Pt,[it,te,pe])}async function y(ne,{size:te=null,mode:pe="bilinear"}={}){if(ne.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!te)throw new Error("`interpolate_4d` requires a `size` argument.");let le;if(te.length===2)le=[...ne.dims.slice(0,2),...te];else if(te.length===3)le=[ne.dims[0],...te];else if(te.length===4)le=te;else throw new Error("`size` must be of length 2, 3, or 4.");let Qe;if(pe==="nearest")Qe=await m.TensorOpRegistry.nearest_interpolate_4d;else if(pe==="bilinear")Qe=await m.TensorOpRegistry.bilinear_interpolate_4d;else if(pe==="bicubic")Qe=await m.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${pe}`);const it=new I("int64",new BigInt64Array(le.map(BigInt)),[le.length]);return await Qe({x:ne,s:it})}async function M(ne,te){return await(await m.TensorOpRegistry.matmul)({a:ne,b:te})}async function S(ne,te){return await(await m.TensorOpRegistry.rfft)({x:ne,a:te})}async function F(ne,te){const pe=await m.TensorOpRegistry.top_k;return te==null?te=ne.dims.at(-1):te=Math.min(te,ne.dims.at(-1)),await pe({x:ne,k:new I("int64",[BigInt(te)],[1])})}const L=ne=>new I("int64",ne,[ne.length]);async function Z(ne,te,pe,le,Qe){return await(await m.TensorOpRegistry.slice)({x:ne,s:L(te),e:L(pe),a:L(le),t:L(Qe??new Array(le.length).fill(1))})}function z(ne,te){const pe=ne.data,le=te.data,Qe=[ne.dims[0],ne.dims[2]],it=new pe.constructor(Qe[0]*Qe[1]),[qe,ot,Pt]=ne.dims;let et=0;for(let be=0;be<qe;++be){const Ne=be*Pt*ot;for(let ge=0;ge<Pt;++ge){let Ve=0,at=0;const Ze=be*ot,Ye=Ne+ge;for(let We=0;We<ot;++We){const rt=Number(le[Ze+We]);at+=rt,Ve+=pe[Ye+We*Pt]*rt}const Y=Ve/at;it[et++]=Y}}return new I(ne.type,it,Qe)}function N(ne,te,{eps:pe=1e-5}={}){if(ne.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[le,Qe]=ne.dims;if(te.length!==1&&te[0]!==Qe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[it,qe]=Ae(ne,1,0,!0),ot=it.data,Pt=qe.data,et=ne.data,be=new et.constructor(et.length);for(let Ne=0;Ne<le;++Ne){const ge=Ne*Qe;for(let Ve=0;Ve<Qe;++Ve){const at=ge+Ve;be[at]=(et[at]-Pt[Ne])/(ot[Ne]+pe)}}return new I(ne.type,be,ne.dims)}function K(ne,te){return ne=ne.slice(),te===null?ne=ne.filter(pe=>pe!==1):typeof te=="number"?ne[te]===1&&ne.splice(te,1):Array.isArray(te)&&(ne=ne.filter((pe,le)=>pe!==1||!te.includes(le))),ne}function f(ne,te){return te=k(te,ne.length+1),ne=ne.slice(),ne.splice(te,0,1),ne}function k(ne,te,pe=null,le=!0){if(ne<-te||ne>=te){if(le)throw new Error(`IndexError: index ${ne} is out of bounds for dimension${pe===null?"":" "+pe} with size ${te}`);return ne<-te?0:te}return ne<0&&(ne=(ne%te+te)%te),ne}function e(ne,te=0){te=k(te,ne[0].dims.length);const pe=ne[0].dims.slice();pe[te]=ne.reduce((qe,ot)=>qe+ot.dims[te],0);const le=pe.reduce((qe,ot)=>qe*ot,1),Qe=new ne[0].data.constructor(le),it=ne[0].type;if(te===0){let qe=0;for(const ot of ne){const Pt=ot.data;Qe.set(Pt,qe),qe+=Pt.length}}else{let qe=0;for(let ot=0;ot<ne.length;++ot){const{data:Pt,dims:et}=ne[ot];for(let be=0;be<Pt.length;++be){let Ne=0;for(let ge=et.length-1,Ve=be,at=1;ge>=0;--ge){const Ze=et[ge];let Ye=Ve%Ze;ge===te&&(Ye+=qe),Ne+=Ye*at,at*=pe[ge],Ve=Math.floor(Ve/Ze)}Qe[Ne]=Pt[be]}qe+=et[te]}}return new I(it,Qe,pe)}function d(ne,te=0){return e(ne.map(pe=>pe.unsqueeze(te)),te)}function B(ne,te,pe=null,le=!1,Qe=null){const it=te.data,qe=te.dims;pe=k(pe,qe.length);const ot=qe.slice();ot[pe]=1;const Pt=new it.constructor(it.length/qe[pe]);Qe!==null&&Pt.fill(Qe);for(let et=0;et<it.length;++et){let be=0;for(let Ne=qe.length-1,ge=et,Ve=1;Ne>=0;--Ne){const at=qe[Ne];if(Ne!==pe){const Ze=ge%at;be+=Ze*Ve,Ve*=ot[Ne]}ge=Math.floor(ge/at)}Pt[be]=ne(Pt[be],it[et],et,be)}return le||ot.splice(pe,1),[te.type,Pt,ot]}function Ae(ne,te=null,pe=1,le=!1){const Qe=ne.data,it=ne.dims;if(te===null){const Ve=Qe.reduce((Y,We)=>Y+We,0)/Qe.length,at=Math.sqrt(Qe.reduce((Y,We)=>Y+(We-Ve)**2,0)/(Qe.length-pe)),Ze=new I(ne.type,[Ve],[]);return[new I(ne.type,[at],[]),Ze]}te=k(te,it.length);const qe=P(ne,te,le),ot=qe.data,[Pt,et,be]=B((ge,Ve,at,Ze)=>ge+(Ve-ot[Ze])**2,ne,te,le);for(let ge=0;ge<et.length;++ge)et[ge]=Math.sqrt(et[ge]/(it[te]-pe));return[new I(Pt,et,be),qe]}function P(ne,te=null,pe=!1){const le=ne.dims,Qe=ne.data;if(te===null){const Pt=Qe.reduce((et,be)=>et+be,0);return new I(ne.type,[Pt/Qe.length],[])}te=k(te,le.length);const[it,qe,ot]=B((Pt,et)=>Pt+et,ne,te,pe);if(le[te]!==1)for(let Pt=0;Pt<qe.length;++Pt)qe[Pt]/=le[te];return new I(it,qe,ot)}function O(ne){const te=new Array(ne.length);for(let pe=ne.length-1,le=1;pe>=0;--pe)te[pe]=le,le*=ne[pe];return te}function me(ne,te,pe,le){const Qe=ne.reduce((it,qe)=>it*qe,1);return new I(pe,new le(Qe).fill(te),ne)}function ee(ne,te){let pe,le;if(typeof te=="number")pe="float32",le=Float32Array;else if(typeof te=="bigint")pe="int64",le=BigInt64Array;else if(typeof te=="boolean")pe="bool",le=Uint8Array;else throw new Error(`Unsupported data type: ${typeof te}`);return me(ne,te,pe,le)}function Ce(ne,te){return ee(ne.dims,te)}function we(ne){return me(ne,1n,"int64",BigInt64Array)}function xe(ne){return we(ne.dims)}function De(ne){return me(ne,0n,"int64",BigInt64Array)}function ye(ne){return De(ne.dims)}function Oe(ne){const te=ne.reduce((pe,le)=>pe*le,1);return new I("float32",Float32Array.from({length:te},()=>Math.random()),ne)}function _e(ne,te){if(ne.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(ne.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(te))throw new Error("The precision must be either 'binary' or 'ubinary'");const pe=te==="binary",le=pe?"int8":"uint8",Qe=pe?Int8Array:Uint8Array,it=ne.data,qe=new Qe(it.length/8);for(let ot=0;ot<it.length;++ot){const Pt=it[ot]>0?1:0,et=Math.floor(ot/8),be=ot%8;qe[et]|=Pt<<7-be,pe&&be===0&&(qe[et]-=128)}return new I(le,qe,[ne.dims[0],ne.dims[1]/8])}},"./src/utils/video.js":(a,n,i)=>{i.r(n),i.d(n,{RawVideo:()=>C,RawVideoFrame:()=>m,load_video:()=>I});var c=i("./src/utils/image.js"),p=i("./src/env.js");class m{constructor(x,D){this.image=x,this.timestamp=D}}class C{constructor(x,D){x.length>0&&x[0]instanceof c.RawImage&&(x=x.map((y,M)=>new m(y,(M+1)/(x.length+1)*D))),this.frames=x,this.duration=D}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function I(E,{num_frames:x=null,fps:D=null}={}){if(!p.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(x==null&&D==null)throw new Error("Either num_frames or fps must be provided.");const y=[],M=document.createElement("video");if(M.crossOrigin="anonymous",M.muted=!0,typeof E=="string")M.src=E;else if(E instanceof Blob)M.src=URL.createObjectURL(E);else if(E instanceof HTMLVideoElement)M.src=E.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(K=>M.onloadedmetadata=K),M.seekable.start(0)===M.seekable.end(0)){const f=await(await fetch(M.src)).blob();M.src=URL.createObjectURL(f),await new Promise(k=>M.onloadedmetadata=k)}const S=M.duration;let F,L;x!=null?(F=x,L=x===1?0:S/(x-1)):(L=1/D,F=Math.floor(S/L));let Z=[];for(let K=0;K<F;++K)Z.push(x===1?S/2:K*L);const z=document.createElement("canvas");z.width=M.videoWidth,z.height=M.videoHeight;const N=z.getContext("2d",{willReadFrequently:!0});for(const K of Z){M.currentTime=K,await new Promise(d=>{M.onseeked=d}),N.drawImage(M,0,0,z.width,z.height);const f=N.getImageData(0,0,z.width,z.height),k=new c.RawImage(f.data,z.width,z.height,4),e=new m(k,K);y.push(e)}return M.remove(),new C(y,S)}}},x4={};function YA(a){var n=x4[a];if(n!==void 0)return n.exports;var i=x4[a]={exports:{}};return ak[a](i,i.exports,YA),i.exports}(()=>{var a=Object.getPrototypeOf?i=>Object.getPrototypeOf(i):i=>i.__proto__,n;YA.t=function(i,c){if(c&1&&(i=this(i)),c&8||typeof i=="object"&&i&&(c&4&&i.__esModule||c&16&&typeof i.then=="function"))return i;var p=Object.create(null);YA.r(p);var m={};n=n||[null,a({}),a([]),a(a)];for(var C=c&2&&i;typeof C=="object"&&!~n.indexOf(C);C=a(C))Object.getOwnPropertyNames(C).forEach(I=>m[I]=()=>i[I]);return m.default=()=>i,YA.d(p,m),p}})();YA.d=(a,n)=>{for(var i in n)YA.o(n,i)&&!YA.o(a,i)&&Object.defineProperty(a,i,{enumerable:!0,get:n[i]})};YA.o=(a,n)=>Object.prototype.hasOwnProperty.call(a,n);YA.r=a=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})};var Q={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/YA.r(Q),YA.d(Q,{ASTFeatureExtractor:()=>y.ASTFeatureExtractor,ASTForAudioClassification:()=>i.ASTForAudioClassification,ASTModel:()=>i.ASTModel,ASTPreTrainedModel:()=>i.ASTPreTrainedModel,AlbertForMaskedLM:()=>i.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>i.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>i.AlbertForSequenceClassification,AlbertModel:()=>i.AlbertModel,AlbertPreTrainedModel:()=>i.AlbertPreTrainedModel,AlbertTokenizer:()=>c.AlbertTokenizer,ArceeForCausalLM:()=>i.ArceeForCausalLM,ArceeModel:()=>i.ArceeModel,ArceePreTrainedModel:()=>i.ArceePreTrainedModel,AudioClassificationPipeline:()=>n.AudioClassificationPipeline,AutoConfig:()=>p.AutoConfig,AutoFeatureExtractor:()=>M.AutoFeatureExtractor,AutoImageProcessor:()=>L.AutoImageProcessor,AutoModel:()=>i.AutoModel,AutoModelForAudioClassification:()=>i.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>i.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>i.AutoModelForAudioTextToText,AutoModelForCTC:()=>i.AutoModelForCTC,AutoModelForCausalLM:()=>i.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>i.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>i.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>i.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>i.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>i.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>i.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>i.AutoModelForImageTextToText,AutoModelForImageToImage:()=>i.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>i.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>i.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>i.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>i.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>i.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>i.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>i.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>i.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>i.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>i.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>i.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>i.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>i.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>i.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>i.AutoModelForVision2Seq,AutoModelForXVector:()=>i.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>i.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>N.AutoProcessor,AutoTokenizer:()=>c.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>n.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>n.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>i.BartForConditionalGeneration,BartForSequenceClassification:()=>i.BartForSequenceClassification,BartModel:()=>i.BartModel,BartPretrainedModel:()=>i.BartPretrainedModel,BartTokenizer:()=>c.BartTokenizer,BaseModelOutput:()=>i.BaseModelOutput,BaseStreamer:()=>K.BaseStreamer,BeitFeatureExtractor:()=>F.BeitFeatureExtractor,BeitForImageClassification:()=>i.BeitForImageClassification,BeitModel:()=>i.BeitModel,BeitPreTrainedModel:()=>i.BeitPreTrainedModel,BertForMaskedLM:()=>i.BertForMaskedLM,BertForQuestionAnswering:()=>i.BertForQuestionAnswering,BertForSequenceClassification:()=>i.BertForSequenceClassification,BertForTokenClassification:()=>i.BertForTokenClassification,BertModel:()=>i.BertModel,BertPreTrainedModel:()=>i.BertPreTrainedModel,BertTokenizer:()=>c.BertTokenizer,BitImageProcessor:()=>F.BitImageProcessor,BlenderbotForConditionalGeneration:()=>i.BlenderbotForConditionalGeneration,BlenderbotModel:()=>i.BlenderbotModel,BlenderbotPreTrainedModel:()=>i.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>i.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>i.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>i.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>c.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>c.BlenderbotTokenizer,BloomForCausalLM:()=>i.BloomForCausalLM,BloomModel:()=>i.BloomModel,BloomPreTrainedModel:()=>i.BloomPreTrainedModel,BloomTokenizer:()=>c.BloomTokenizer,CLIPFeatureExtractor:()=>F.CLIPFeatureExtractor,CLIPImageProcessor:()=>F.CLIPImageProcessor,CLIPModel:()=>i.CLIPModel,CLIPPreTrainedModel:()=>i.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>i.CLIPSegForImageSegmentation,CLIPSegModel:()=>i.CLIPSegModel,CLIPSegPreTrainedModel:()=>i.CLIPSegPreTrainedModel,CLIPTextModel:()=>i.CLIPTextModel,CLIPTextModelWithProjection:()=>i.CLIPTextModelWithProjection,CLIPTokenizer:()=>c.CLIPTokenizer,CLIPVisionModel:()=>i.CLIPVisionModel,CLIPVisionModelWithProjection:()=>i.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>i.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>i.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>i.CamembertForSequenceClassification,CamembertForTokenClassification:()=>i.CamembertForTokenClassification,CamembertModel:()=>i.CamembertModel,CamembertPreTrainedModel:()=>i.CamembertPreTrainedModel,CamembertTokenizer:()=>c.CamembertTokenizer,CausalLMOutput:()=>i.CausalLMOutput,CausalLMOutputWithPast:()=>i.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>F.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>i.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>i.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>i.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>y.ClapFeatureExtractor,ClapModel:()=>i.ClapModel,ClapPreTrainedModel:()=>i.ClapPreTrainedModel,ClapTextModelWithProjection:()=>i.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>k.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>i.CodeGenForCausalLM,CodeGenModel:()=>i.CodeGenModel,CodeGenPreTrainedModel:()=>i.CodeGenPreTrainedModel,CodeGenTokenizer:()=>c.CodeGenTokenizer,CodeLlamaTokenizer:()=>c.CodeLlamaTokenizer,CohereForCausalLM:()=>i.CohereForCausalLM,CohereModel:()=>i.CohereModel,CoherePreTrainedModel:()=>i.CoherePreTrainedModel,CohereTokenizer:()=>c.CohereTokenizer,ConvBertForMaskedLM:()=>i.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>i.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>i.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>i.ConvBertForTokenClassification,ConvBertModel:()=>i.ConvBertModel,ConvBertPreTrainedModel:()=>i.ConvBertPreTrainedModel,ConvBertTokenizer:()=>c.ConvBertTokenizer,ConvNextFeatureExtractor:()=>F.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>i.ConvNextForImageClassification,ConvNextImageProcessor:()=>F.ConvNextImageProcessor,ConvNextModel:()=>i.ConvNextModel,ConvNextPreTrainedModel:()=>i.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>i.ConvNextV2ForImageClassification,ConvNextV2Model:()=>i.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>i.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>i.DFineForObjectDetection,DFineModel:()=>i.DFineModel,DFinePreTrainedModel:()=>i.DFinePreTrainedModel,DPTFeatureExtractor:()=>F.DPTFeatureExtractor,DPTForDepthEstimation:()=>i.DPTForDepthEstimation,DPTImageProcessor:()=>F.DPTImageProcessor,DPTModel:()=>i.DPTModel,DPTPreTrainedModel:()=>i.DPTPreTrainedModel,DacDecoderModel:()=>i.DacDecoderModel,DacDecoderOutput:()=>i.DacDecoderOutput,DacEncoderModel:()=>i.DacEncoderModel,DacEncoderOutput:()=>i.DacEncoderOutput,DacFeatureExtractor:()=>y.DacFeatureExtractor,DacModel:()=>i.DacModel,DacPreTrainedModel:()=>i.DacPreTrainedModel,DataTypeMap:()=>E.DataTypeMap,DebertaForMaskedLM:()=>i.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>i.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>i.DebertaForSequenceClassification,DebertaForTokenClassification:()=>i.DebertaForTokenClassification,DebertaModel:()=>i.DebertaModel,DebertaPreTrainedModel:()=>i.DebertaPreTrainedModel,DebertaTokenizer:()=>c.DebertaTokenizer,DebertaV2ForMaskedLM:()=>i.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>i.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>i.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>i.DebertaV2ForTokenClassification,DebertaV2Model:()=>i.DebertaV2Model,DebertaV2PreTrainedModel:()=>i.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>c.DebertaV2Tokenizer,DecisionTransformerModel:()=>i.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>i.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>F.DeiTFeatureExtractor,DeiTForImageClassification:()=>i.DeiTForImageClassification,DeiTImageProcessor:()=>F.DeiTImageProcessor,DeiTModel:()=>i.DeiTModel,DeiTPreTrainedModel:()=>i.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>i.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>i.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>n.DepthEstimationPipeline,DepthProForDepthEstimation:()=>i.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>i.DepthProPreTrainedModel,DetrFeatureExtractor:()=>F.DetrFeatureExtractor,DetrForObjectDetection:()=>i.DetrForObjectDetection,DetrForSegmentation:()=>i.DetrForSegmentation,DetrImageProcessor:()=>F.DetrImageProcessor,DetrModel:()=>i.DetrModel,DetrObjectDetectionOutput:()=>i.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>i.DetrPreTrainedModel,DetrSegmentationOutput:()=>i.DetrSegmentationOutput,Dinov2ForImageClassification:()=>i.Dinov2ForImageClassification,Dinov2Model:()=>i.Dinov2Model,Dinov2PreTrainedModel:()=>i.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>i.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>i.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>i.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>i.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>i.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>i.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>i.DistilBertForTokenClassification,DistilBertModel:()=>i.DistilBertModel,DistilBertPreTrainedModel:()=>i.DistilBertPreTrainedModel,DistilBertTokenizer:()=>c.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>n.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>F.DonutFeatureExtractor,DonutImageProcessor:()=>F.DonutImageProcessor,DonutSwinModel:()=>i.DonutSwinModel,DonutSwinPreTrainedModel:()=>i.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>i.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>F.EfficientNetImageProcessor,EfficientNetModel:()=>i.EfficientNetModel,EfficientNetPreTrainedModel:()=>i.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>i.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>i.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>i.ElectraForSequenceClassification,ElectraForTokenClassification:()=>i.ElectraForTokenClassification,ElectraModel:()=>i.ElectraModel,ElectraPreTrainedModel:()=>i.ElectraPreTrainedModel,ElectraTokenizer:()=>c.ElectraTokenizer,EncodecFeatureExtractor:()=>y.EncodecFeatureExtractor,EosTokenCriteria:()=>f.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>i.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>i.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>i.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>c.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>i.EsmForMaskedLM,EsmForSequenceClassification:()=>i.EsmForSequenceClassification,EsmForTokenClassification:()=>i.EsmForTokenClassification,EsmModel:()=>i.EsmModel,EsmPreTrainedModel:()=>i.EsmPreTrainedModel,EsmTokenizer:()=>c.EsmTokenizer,ExaoneForCausalLM:()=>i.ExaoneForCausalLM,ExaoneModel:()=>i.ExaoneModel,ExaonePreTrainedModel:()=>i.ExaonePreTrainedModel,FFT:()=>x.FFT,FalconForCausalLM:()=>i.FalconForCausalLM,FalconModel:()=>i.FalconModel,FalconPreTrainedModel:()=>i.FalconPreTrainedModel,FalconTokenizer:()=>c.FalconTokenizer,FastViTForImageClassification:()=>i.FastViTForImageClassification,FastViTModel:()=>i.FastViTModel,FastViTPreTrainedModel:()=>i.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>n.FeatureExtractionPipeline,FeatureExtractor:()=>D.FeatureExtractor,FillMaskPipeline:()=>n.FillMaskPipeline,Florence2ForConditionalGeneration:()=>i.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>i.Florence2PreTrainedModel,Florence2Processor:()=>z.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>k.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>k.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>F.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>i.GLPNForDepthEstimation,GLPNModel:()=>i.GLPNModel,GLPNPreTrainedModel:()=>i.GLPNPreTrainedModel,GPT2LMHeadModel:()=>i.GPT2LMHeadModel,GPT2Model:()=>i.GPT2Model,GPT2PreTrainedModel:()=>i.GPT2PreTrainedModel,GPT2Tokenizer:()=>c.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>i.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>i.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>i.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>i.GPTJForCausalLM,GPTJModel:()=>i.GPTJModel,GPTJPreTrainedModel:()=>i.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>i.GPTNeoForCausalLM,GPTNeoModel:()=>i.GPTNeoModel,GPTNeoPreTrainedModel:()=>i.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>i.GPTNeoXForCausalLM,GPTNeoXModel:()=>i.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>i.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>c.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>i.Gemma2ForCausalLM,Gemma2Model:()=>i.Gemma2Model,Gemma2PreTrainedModel:()=>i.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>i.Gemma3ForCausalLM,Gemma3Model:()=>i.Gemma3Model,Gemma3PreTrainedModel:()=>i.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>y.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>i.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>i.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>z.Gemma3nProcessor,GemmaForCausalLM:()=>i.GemmaForCausalLM,GemmaModel:()=>i.GemmaModel,GemmaPreTrainedModel:()=>i.GemmaPreTrainedModel,GemmaTokenizer:()=>c.GemmaTokenizer,GlmForCausalLM:()=>i.GlmForCausalLM,GlmModel:()=>i.GlmModel,GlmPreTrainedModel:()=>i.GlmPreTrainedModel,GraniteForCausalLM:()=>i.GraniteForCausalLM,GraniteModel:()=>i.GraniteModel,GranitePreTrainedModel:()=>i.GranitePreTrainedModel,Grok1Tokenizer:()=>c.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>i.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>F.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>i.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>z.GroundingDinoProcessor,GroupViTModel:()=>i.GroupViTModel,GroupViTPreTrainedModel:()=>i.GroupViTPreTrainedModel,HeliumForCausalLM:()=>i.HeliumForCausalLM,HeliumModel:()=>i.HeliumModel,HeliumPreTrainedModel:()=>i.HeliumPreTrainedModel,HerbertTokenizer:()=>c.HerbertTokenizer,HieraForImageClassification:()=>i.HieraForImageClassification,HieraModel:()=>i.HieraModel,HieraPreTrainedModel:()=>i.HieraPreTrainedModel,HubertForCTC:()=>i.HubertForCTC,HubertForSequenceClassification:()=>i.HubertForSequenceClassification,HubertModel:()=>i.HubertModel,HubertPreTrainedModel:()=>i.HubertPreTrainedModel,IJepaForImageClassification:()=>i.IJepaForImageClassification,IJepaModel:()=>i.IJepaModel,IJepaPreTrainedModel:()=>i.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>i.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>F.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>i.Idefics3PreTrainedModel,Idefics3Processor:()=>z.Idefics3Processor,ImageClassificationPipeline:()=>n.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>n.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>y.ImageFeatureExtractor,ImageMattingOutput:()=>i.ImageMattingOutput,ImageProcessor:()=>S.ImageProcessor,ImageSegmentationPipeline:()=>n.ImageSegmentationPipeline,ImageToImagePipeline:()=>n.ImageToImagePipeline,ImageToTextPipeline:()=>n.ImageToTextPipeline,InterruptableStoppingCriteria:()=>f.InterruptableStoppingCriteria,JAISLMHeadModel:()=>i.JAISLMHeadModel,JAISModel:()=>i.JAISModel,JAISPreTrainedModel:()=>i.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>F.JinaCLIPImageProcessor,JinaCLIPModel:()=>i.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>i.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>z.JinaCLIPProcessor,JinaCLIPTextModel:()=>i.JinaCLIPTextModel,JinaCLIPVisionModel:()=>i.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>i.Lfm2ForCausalLM,Lfm2Model:()=>i.Lfm2Model,Lfm2PreTrainedModel:()=>i.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>i.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>i.LlamaForCausalLM,LlamaModel:()=>i.LlamaModel,LlamaPreTrainedModel:()=>i.LlamaPreTrainedModel,LlamaTokenizer:()=>c.LlamaTokenizer,LlavaForConditionalGeneration:()=>i.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>i.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>F.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>i.LlavaPreTrainedModel,LlavaProcessor:()=>z.LlavaProcessor,LlavaQwen2ForCausalLM:()=>i.LlavaQwen2ForCausalLM,LogitsProcessor:()=>k.LogitsProcessor,LogitsProcessorList:()=>k.LogitsProcessorList,LogitsWarper:()=>k.LogitsWarper,LongT5ForConditionalGeneration:()=>i.LongT5ForConditionalGeneration,LongT5Model:()=>i.LongT5Model,LongT5PreTrainedModel:()=>i.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>i.M2M100ForConditionalGeneration,M2M100Model:()=>i.M2M100Model,M2M100PreTrainedModel:()=>i.M2M100PreTrainedModel,M2M100Tokenizer:()=>c.M2M100Tokenizer,MBart50Tokenizer:()=>c.MBart50Tokenizer,MBartForCausalLM:()=>i.MBartForCausalLM,MBartForConditionalGeneration:()=>i.MBartForConditionalGeneration,MBartForSequenceClassification:()=>i.MBartForSequenceClassification,MBartModel:()=>i.MBartModel,MBartPreTrainedModel:()=>i.MBartPreTrainedModel,MBartTokenizer:()=>c.MBartTokenizer,MPNetForMaskedLM:()=>i.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>i.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>i.MPNetForSequenceClassification,MPNetForTokenClassification:()=>i.MPNetForTokenClassification,MPNetModel:()=>i.MPNetModel,MPNetPreTrainedModel:()=>i.MPNetPreTrainedModel,MPNetTokenizer:()=>c.MPNetTokenizer,MT5ForConditionalGeneration:()=>i.MT5ForConditionalGeneration,MT5Model:()=>i.MT5Model,MT5PreTrainedModel:()=>i.MT5PreTrainedModel,MarianMTModel:()=>i.MarianMTModel,MarianModel:()=>i.MarianModel,MarianPreTrainedModel:()=>i.MarianPreTrainedModel,MarianTokenizer:()=>c.MarianTokenizer,Mask2FormerImageProcessor:()=>F.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>F.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>i.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>F.MaskFormerImageProcessor,MaskFormerModel:()=>i.MaskFormerModel,MaskFormerPreTrainedModel:()=>i.MaskFormerPreTrainedModel,MaskedLMOutput:()=>i.MaskedLMOutput,MaxLengthCriteria:()=>f.MaxLengthCriteria,Metric3DForDepthEstimation:()=>i.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>i.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>i.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>i.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>i.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>i.MgpstrModelOutput,MgpstrPreTrainedModel:()=>i.MgpstrPreTrainedModel,MgpstrProcessor:()=>z.MgpstrProcessor,MgpstrTokenizer:()=>c.MgpstrTokenizer,MimiDecoderModel:()=>i.MimiDecoderModel,MimiDecoderOutput:()=>i.MimiDecoderOutput,MimiEncoderModel:()=>i.MimiEncoderModel,MimiEncoderOutput:()=>i.MimiEncoderOutput,MimiModel:()=>i.MimiModel,MimiPreTrainedModel:()=>i.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>k.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>k.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>i.MistralForCausalLM,MistralModel:()=>i.MistralModel,MistralPreTrainedModel:()=>i.MistralPreTrainedModel,MobileBertForMaskedLM:()=>i.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>i.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>i.MobileBertForSequenceClassification,MobileBertModel:()=>i.MobileBertModel,MobileBertPreTrainedModel:()=>i.MobileBertPreTrainedModel,MobileBertTokenizer:()=>c.MobileBertTokenizer,MobileLLMForCausalLM:()=>i.MobileLLMForCausalLM,MobileLLMModel:()=>i.MobileLLMModel,MobileLLMPreTrainedModel:()=>i.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>F.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>i.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>i.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>F.MobileNetV1ImageProcessor,MobileNetV1Model:()=>i.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>i.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>F.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>i.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>i.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>F.MobileNetV2ImageProcessor,MobileNetV2Model:()=>i.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>i.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>F.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>i.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>i.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>F.MobileNetV3ImageProcessor,MobileNetV3Model:()=>i.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>i.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>F.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>i.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>i.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>F.MobileNetV4ImageProcessor,MobileNetV4Model:()=>i.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>i.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>F.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>i.MobileViTForImageClassification,MobileViTImageProcessor:()=>F.MobileViTImageProcessor,MobileViTModel:()=>i.MobileViTModel,MobileViTPreTrainedModel:()=>i.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>i.MobileViTV2ForImageClassification,MobileViTV2Model:()=>i.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>i.MobileViTV2PreTrainedModel,ModelOutput:()=>i.ModelOutput,ModernBertDecoderForCausalLM:()=>i.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>i.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>i.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>i.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>i.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>i.ModernBertForTokenClassification,ModernBertModel:()=>i.ModernBertModel,ModernBertPreTrainedModel:()=>i.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>i.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>y.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>i.MoonshineForConditionalGeneration,MoonshineModel:()=>i.MoonshineModel,MoonshinePreTrainedModel:()=>i.MoonshinePreTrainedModel,MoonshineProcessor:()=>z.MoonshineProcessor,MptForCausalLM:()=>i.MptForCausalLM,MptModel:()=>i.MptModel,MptPreTrainedModel:()=>i.MptPreTrainedModel,MultiModalityCausalLM:()=>i.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>i.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>i.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>i.MusicgenForConditionalGeneration,MusicgenModel:()=>i.MusicgenModel,MusicgenPreTrainedModel:()=>i.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>i.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>i.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>i.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>i.NeoBertForTokenClassification,NeoBertModel:()=>i.NeoBertModel,NeoBertPreTrainedModel:()=>i.NeoBertPreTrainedModel,NllbTokenizer:()=>c.NllbTokenizer,NoBadWordsLogitsProcessor:()=>k.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>k.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>i.NomicBertModel,NomicBertPreTrainedModel:()=>i.NomicBertPreTrainedModel,NougatImageProcessor:()=>F.NougatImageProcessor,NougatTokenizer:()=>c.NougatTokenizer,OPTForCausalLM:()=>i.OPTForCausalLM,OPTModel:()=>i.OPTModel,OPTPreTrainedModel:()=>i.OPTPreTrainedModel,ObjectDetectionPipeline:()=>n.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>i.Olmo2ForCausalLM,Olmo2Model:()=>i.Olmo2Model,Olmo2PreTrainedModel:()=>i.Olmo2PreTrainedModel,OlmoForCausalLM:()=>i.OlmoForCausalLM,OlmoModel:()=>i.OlmoModel,OlmoPreTrainedModel:()=>i.OlmoPreTrainedModel,OpenELMForCausalLM:()=>i.OpenELMForCausalLM,OpenELMModel:()=>i.OpenELMModel,OpenELMPreTrainedModel:()=>i.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>F.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>i.OwlViTForObjectDetection,OwlViTImageProcessor:()=>F.OwlViTImageProcessor,OwlViTModel:()=>i.OwlViTModel,OwlViTPreTrainedModel:()=>i.OwlViTPreTrainedModel,OwlViTProcessor:()=>z.OwlViTProcessor,Owlv2ForObjectDetection:()=>i.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>F.Owlv2ImageProcessor,Owlv2Model:()=>i.Owlv2Model,Owlv2PreTrainedModel:()=>i.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>i.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>i.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>z.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>i.PatchTSMixerForPrediction,PatchTSMixerModel:()=>i.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>i.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>i.PatchTSTForPrediction,PatchTSTModel:()=>i.PatchTSTModel,PatchTSTPreTrainedModel:()=>i.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>i.Phi3ForCausalLM,Phi3Model:()=>i.Phi3Model,Phi3PreTrainedModel:()=>i.Phi3PreTrainedModel,Phi3VForCausalLM:()=>i.Phi3VForCausalLM,Phi3VImageProcessor:()=>F.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>i.Phi3VPreTrainedModel,Phi3VProcessor:()=>z.Phi3VProcessor,PhiForCausalLM:()=>i.PhiForCausalLM,PhiModel:()=>i.PhiModel,PhiPreTrainedModel:()=>i.PhiPreTrainedModel,Pipeline:()=>n.Pipeline,PreTrainedModel:()=>i.PreTrainedModel,PreTrainedTokenizer:()=>c.PreTrainedTokenizer,PretrainedConfig:()=>p.PretrainedConfig,PretrainedMixin:()=>i.PretrainedMixin,Processor:()=>Z.Processor,PvtForImageClassification:()=>i.PvtForImageClassification,PvtImageProcessor:()=>F.PvtImageProcessor,PvtModel:()=>i.PvtModel,PvtPreTrainedModel:()=>i.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>y.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>i.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>i.PyAnnoteModel,PyAnnotePreTrainedModel:()=>i.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>z.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>i.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>n.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>i.Qwen2ForCausalLM,Qwen2Model:()=>i.Qwen2Model,Qwen2PreTrainedModel:()=>i.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>c.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>i.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>F.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>i.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>z.Qwen2VLProcessor,Qwen3ForCausalLM:()=>i.Qwen3ForCausalLM,Qwen3Model:()=>i.Qwen3Model,Qwen3PreTrainedModel:()=>i.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>i.RFDetrForObjectDetection,RFDetrModel:()=>i.RFDetrModel,RFDetrObjectDetectionOutput:()=>i.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>i.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>i.RTDetrForObjectDetection,RTDetrImageProcessor:()=>F.RTDetrImageProcessor,RTDetrModel:()=>i.RTDetrModel,RTDetrObjectDetectionOutput:()=>i.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>i.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>i.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>i.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>i.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>i.RTDetrV2PreTrainedModel,RawAudio:()=>m.RawAudio,RawImage:()=>C.RawImage,RawVideo:()=>I.RawVideo,RawVideoFrame:()=>I.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>k.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>i.ResNetForImageClassification,ResNetModel:()=>i.ResNetModel,ResNetPreTrainedModel:()=>i.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>i.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>i.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>i.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>i.RoFormerForTokenClassification,RoFormerModel:()=>i.RoFormerModel,RoFormerPreTrainedModel:()=>i.RoFormerPreTrainedModel,RoFormerTokenizer:()=>c.RoFormerTokenizer,RobertaForMaskedLM:()=>i.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>i.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>i.RobertaForSequenceClassification,RobertaForTokenClassification:()=>i.RobertaForTokenClassification,RobertaModel:()=>i.RobertaModel,RobertaPreTrainedModel:()=>i.RobertaPreTrainedModel,RobertaTokenizer:()=>c.RobertaTokenizer,SamImageProcessor:()=>F.SamImageProcessor,SamImageSegmentationOutput:()=>i.SamImageSegmentationOutput,SamModel:()=>i.SamModel,SamPreTrainedModel:()=>i.SamPreTrainedModel,SamProcessor:()=>z.SamProcessor,SapiensForDepthEstimation:()=>i.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>i.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>i.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>i.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>y.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>F.SegformerFeatureExtractor,SegformerForImageClassification:()=>i.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>i.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>F.SegformerImageProcessor,SegformerModel:()=>i.SegformerModel,SegformerPreTrainedModel:()=>i.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>i.Seq2SeqLMOutput,SequenceClassifierOutput:()=>i.SequenceClassifierOutput,SiglipImageProcessor:()=>F.SiglipImageProcessor,SiglipModel:()=>i.SiglipModel,SiglipPreTrainedModel:()=>i.SiglipPreTrainedModel,SiglipTextModel:()=>i.SiglipTextModel,SiglipTokenizer:()=>c.SiglipTokenizer,SiglipVisionModel:()=>i.SiglipVisionModel,SmolLM3ForCausalLM:()=>i.SmolLM3ForCausalLM,SmolLM3Model:()=>i.SmolLM3Model,SmolLM3PreTrainedModel:()=>i.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>i.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>F.SmolVLMImageProcessor,SmolVLMProcessor:()=>z.SmolVLMProcessor,SnacDecoderModel:()=>i.SnacDecoderModel,SnacEncoderModel:()=>i.SnacEncoderModel,SnacFeatureExtractor:()=>y.SnacFeatureExtractor,SnacModel:()=>i.SnacModel,SnacPreTrainedModel:()=>i.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>y.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>i.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>i.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>i.SpeechT5HifiGan,SpeechT5Model:()=>i.SpeechT5Model,SpeechT5PreTrainedModel:()=>i.SpeechT5PreTrainedModel,SpeechT5Processor:()=>z.SpeechT5Processor,SpeechT5Tokenizer:()=>c.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>i.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>i.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>i.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>i.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>i.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>c.SqueezeBertTokenizer,StableLmForCausalLM:()=>i.StableLmForCausalLM,StableLmModel:()=>i.StableLmModel,StableLmPreTrainedModel:()=>i.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>i.Starcoder2ForCausalLM,Starcoder2Model:()=>i.Starcoder2Model,Starcoder2PreTrainedModel:()=>i.Starcoder2PreTrainedModel,StoppingCriteria:()=>f.StoppingCriteria,StoppingCriteriaList:()=>f.StoppingCriteriaList,StyleTextToSpeech2Model:()=>i.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>i.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>n.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>k.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>i.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>F.Swin2SRImageProcessor,Swin2SRModel:()=>i.Swin2SRModel,Swin2SRPreTrainedModel:()=>i.Swin2SRPreTrainedModel,SwinForImageClassification:()=>i.SwinForImageClassification,SwinForSemanticSegmentation:()=>i.SwinForSemanticSegmentation,SwinModel:()=>i.SwinModel,SwinPreTrainedModel:()=>i.SwinPreTrainedModel,T5ForConditionalGeneration:()=>i.T5ForConditionalGeneration,T5Model:()=>i.T5Model,T5PreTrainedModel:()=>i.T5PreTrainedModel,T5Tokenizer:()=>c.T5Tokenizer,TableTransformerForObjectDetection:()=>i.TableTransformerForObjectDetection,TableTransformerModel:()=>i.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>i.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>i.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>k.TemperatureLogitsWarper,Tensor:()=>E.Tensor,Text2TextGenerationPipeline:()=>n.Text2TextGenerationPipeline,TextClassificationPipeline:()=>n.TextClassificationPipeline,TextGenerationPipeline:()=>n.TextGenerationPipeline,TextStreamer:()=>K.TextStreamer,TextToAudioPipeline:()=>n.TextToAudioPipeline,TokenClassificationPipeline:()=>n.TokenClassificationPipeline,TokenClassifierOutput:()=>i.TokenClassifierOutput,TokenizerModel:()=>c.TokenizerModel,TopKLogitsWarper:()=>k.TopKLogitsWarper,TopPLogitsWarper:()=>k.TopPLogitsWarper,TrOCRForCausalLM:()=>i.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>i.TrOCRPreTrainedModel,TranslationPipeline:()=>n.TranslationPipeline,UltravoxModel:()=>i.UltravoxModel,UltravoxPreTrainedModel:()=>i.UltravoxPreTrainedModel,UltravoxProcessor:()=>z.UltravoxProcessor,UniSpeechForCTC:()=>i.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>i.UniSpeechForSequenceClassification,UniSpeechModel:()=>i.UniSpeechModel,UniSpeechPreTrainedModel:()=>i.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>i.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>i.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>i.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>i.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>i.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>z.VLChatProcessor,VLMImageProcessor:()=>F.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTForImageClassification:()=>i.ViTForImageClassification,ViTImageProcessor:()=>F.ViTImageProcessor,ViTMAEModel:()=>i.ViTMAEModel,ViTMAEPreTrainedModel:()=>i.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>i.ViTMSNForImageClassification,ViTMSNModel:()=>i.ViTMSNModel,ViTMSNPreTrainedModel:()=>i.ViTMSNPreTrainedModel,ViTModel:()=>i.ViTModel,ViTPreTrainedModel:()=>i.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>i.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>i.VitMatteForImageMatting,VitMatteImageProcessor:()=>F.VitMatteImageProcessor,VitMattePreTrainedModel:()=>i.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>i.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>F.VitPoseImageProcessor,VitPosePreTrainedModel:()=>i.VitPosePreTrainedModel,VitsModel:()=>i.VitsModel,VitsModelOutput:()=>i.VitsModelOutput,VitsPreTrainedModel:()=>i.VitsPreTrainedModel,VitsTokenizer:()=>c.VitsTokenizer,VoxtralForConditionalGeneration:()=>i.VoxtralForConditionalGeneration,VoxtralProcessor:()=>z.VoxtralProcessor,Wav2Vec2BertForCTC:()=>i.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>i.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>i.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>i.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>c.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>y.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>i.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>i.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>i.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>i.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>i.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>z.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>z.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>i.WavLMForAudioFrameClassification,WavLMForCTC:()=>i.WavLMForCTC,WavLMForSequenceClassification:()=>i.WavLMForSequenceClassification,WavLMForXVector:()=>i.WavLMForXVector,WavLMModel:()=>i.WavLMModel,WavLMPreTrainedModel:()=>i.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>y.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>i.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>i.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>y.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>i.WhisperForConditionalGeneration,WhisperModel:()=>i.WhisperModel,WhisperPreTrainedModel:()=>i.WhisperPreTrainedModel,WhisperProcessor:()=>z.WhisperProcessor,WhisperTextStreamer:()=>K.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>k.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>c.WhisperTokenizer,XLMForQuestionAnswering:()=>i.XLMForQuestionAnswering,XLMForSequenceClassification:()=>i.XLMForSequenceClassification,XLMForTokenClassification:()=>i.XLMForTokenClassification,XLMModel:()=>i.XLMModel,XLMPreTrainedModel:()=>i.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>i.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>i.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>i.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>i.XLMRobertaForTokenClassification,XLMRobertaModel:()=>i.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>i.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>c.XLMRobertaTokenizer,XLMTokenizer:()=>c.XLMTokenizer,XLMWithLMHeadModel:()=>i.XLMWithLMHeadModel,XVectorOutput:()=>i.XVectorOutput,YolosFeatureExtractor:()=>F.YolosFeatureExtractor,YolosForObjectDetection:()=>i.YolosForObjectDetection,YolosImageProcessor:()=>F.YolosImageProcessor,YolosModel:()=>i.YolosModel,YolosObjectDetectionOutput:()=>i.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>i.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>n.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>n.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>n.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>n.ZeroShotObjectDetectionPipeline,bankers_round:()=>x.bankers_round,cat:()=>E.cat,cos_sim:()=>x.cos_sim,dot:()=>x.dot,dynamic_time_warping:()=>x.dynamic_time_warping,env:()=>a.env,full:()=>E.full,full_like:()=>E.full_like,getCacheShapes:()=>p.getCacheShapes,hamming:()=>m.hamming,hanning:()=>m.hanning,interpolate:()=>E.interpolate,interpolate_4d:()=>E.interpolate_4d,interpolate_data:()=>x.interpolate_data,is_chinese_char:()=>c.is_chinese_char,layer_norm:()=>E.layer_norm,load_image:()=>C.load_image,load_video:()=>I.load_video,log_softmax:()=>x.log_softmax,magnitude:()=>x.magnitude,matmul:()=>E.matmul,max:()=>x.max,mean:()=>E.mean,mean_pooling:()=>E.mean_pooling,medianFilter:()=>x.medianFilter,mel_filter_bank:()=>m.mel_filter_bank,min:()=>x.min,ones:()=>E.ones,ones_like:()=>E.ones_like,permute:()=>E.permute,permute_data:()=>x.permute_data,pipeline:()=>n.pipeline,quantize_embeddings:()=>E.quantize_embeddings,rand:()=>E.rand,read_audio:()=>m.read_audio,rfft:()=>E.rfft,round:()=>x.round,slice:()=>E.slice,softmax:()=>x.softmax,spectrogram:()=>m.spectrogram,stack:()=>E.stack,std_mean:()=>E.std_mean,topk:()=>E.topk,window_function:()=>m.window_function,zeros:()=>E.zeros,zeros_like:()=>E.zeros_like});var a=YA("./src/env.js"),n=YA("./src/pipelines.js"),i=YA("./src/models.js"),c=YA("./src/tokenizers.js"),p=YA("./src/configs.js"),m=YA("./src/utils/audio.js"),C=YA("./src/utils/image.js"),I=YA("./src/utils/video.js"),E=YA("./src/utils/tensor.js"),x=YA("./src/utils/maths.js"),D=YA("./src/base/feature_extraction_utils.js"),y=YA("./src/models/feature_extractors.js"),M=YA("./src/models/auto/feature_extraction_auto.js"),S=YA("./src/base/image_processors_utils.js"),F=YA("./src/models/image_processors.js"),L=YA("./src/models/auto/image_processing_auto.js"),Z=YA("./src/base/processing_utils.js"),z=YA("./src/models/processors.js"),N=YA("./src/models/auto/processing_auto.js"),K=YA("./src/generation/streamers.js"),f=YA("./src/generation/stopping_criteria.js"),k=YA("./src/generation/logits_process.js")})();Q.ASTFeatureExtractor;Q.ASTForAudioClassification;Q.ASTModel;Q.ASTPreTrainedModel;Q.AlbertForMaskedLM;Q.AlbertForQuestionAnswering;Q.AlbertForSequenceClassification;Q.AlbertModel;Q.AlbertPreTrainedModel;Q.AlbertTokenizer;Q.ArceeForCausalLM;Q.ArceeModel;Q.ArceePreTrainedModel;Q.AudioClassificationPipeline;Q.AutoConfig;Q.AutoFeatureExtractor;Q.AutoImageProcessor;var nk=Q.AutoModel;Q.AutoModelForAudioClassification;Q.AutoModelForAudioFrameClassification;Q.AutoModelForAudioTextToText;Q.AutoModelForCTC;Q.AutoModelForCausalLM;Q.AutoModelForDepthEstimation;Q.AutoModelForDocumentQuestionAnswering;Q.AutoModelForImageClassification;Q.AutoModelForImageFeatureExtraction;Q.AutoModelForImageMatting;Q.AutoModelForImageSegmentation;Q.AutoModelForImageTextToText;Q.AutoModelForImageToImage;Q.AutoModelForMaskGeneration;Q.AutoModelForMaskedLM;Q.AutoModelForNormalEstimation;Q.AutoModelForObjectDetection;Q.AutoModelForPoseEstimation;Q.AutoModelForQuestionAnswering;Q.AutoModelForSemanticSegmentation;Q.AutoModelForSeq2SeqLM;Q.AutoModelForSequenceClassification;Q.AutoModelForSpeechSeq2Seq;Q.AutoModelForTextToSpectrogram;Q.AutoModelForTextToWaveform;Q.AutoModelForTokenClassification;Q.AutoModelForUniversalSegmentation;Q.AutoModelForVision2Seq;Q.AutoModelForXVector;Q.AutoModelForZeroShotObjectDetection;Q.AutoProcessor;var ik=Q.AutoTokenizer;Q.AutomaticSpeechRecognitionPipeline;Q.BackgroundRemovalPipeline;Q.BartForConditionalGeneration;Q.BartForSequenceClassification;Q.BartModel;Q.BartPretrainedModel;Q.BartTokenizer;Q.BaseModelOutput;Q.BaseStreamer;Q.BeitFeatureExtractor;Q.BeitForImageClassification;Q.BeitModel;Q.BeitPreTrainedModel;Q.BertForMaskedLM;Q.BertForQuestionAnswering;Q.BertForSequenceClassification;Q.BertForTokenClassification;Q.BertModel;Q.BertPreTrainedModel;Q.BertTokenizer;Q.BitImageProcessor;Q.BlenderbotForConditionalGeneration;Q.BlenderbotModel;Q.BlenderbotPreTrainedModel;Q.BlenderbotSmallForConditionalGeneration;Q.BlenderbotSmallModel;Q.BlenderbotSmallPreTrainedModel;Q.BlenderbotSmallTokenizer;Q.BlenderbotTokenizer;Q.BloomForCausalLM;Q.BloomModel;Q.BloomPreTrainedModel;Q.BloomTokenizer;Q.CLIPFeatureExtractor;Q.CLIPImageProcessor;Q.CLIPModel;Q.CLIPPreTrainedModel;Q.CLIPSegForImageSegmentation;Q.CLIPSegModel;Q.CLIPSegPreTrainedModel;Q.CLIPTextModel;Q.CLIPTextModelWithProjection;Q.CLIPTokenizer;Q.CLIPVisionModel;Q.CLIPVisionModelWithProjection;Q.CamembertForMaskedLM;Q.CamembertForQuestionAnswering;Q.CamembertForSequenceClassification;Q.CamembertForTokenClassification;Q.CamembertModel;Q.CamembertPreTrainedModel;Q.CamembertTokenizer;Q.CausalLMOutput;Q.CausalLMOutputWithPast;Q.ChineseCLIPFeatureExtractor;Q.ChineseCLIPModel;Q.ChineseCLIPPreTrainedModel;Q.ClapAudioModelWithProjection;Q.ClapFeatureExtractor;Q.ClapModel;Q.ClapPreTrainedModel;Q.ClapTextModelWithProjection;Q.ClassifierFreeGuidanceLogitsProcessor;Q.CodeGenForCausalLM;Q.CodeGenModel;Q.CodeGenPreTrainedModel;Q.CodeGenTokenizer;Q.CodeLlamaTokenizer;Q.CohereForCausalLM;Q.CohereModel;Q.CoherePreTrainedModel;Q.CohereTokenizer;Q.ConvBertForMaskedLM;Q.ConvBertForQuestionAnswering;Q.ConvBertForSequenceClassification;Q.ConvBertForTokenClassification;Q.ConvBertModel;Q.ConvBertPreTrainedModel;Q.ConvBertTokenizer;Q.ConvNextFeatureExtractor;Q.ConvNextForImageClassification;Q.ConvNextImageProcessor;Q.ConvNextModel;Q.ConvNextPreTrainedModel;Q.ConvNextV2ForImageClassification;Q.ConvNextV2Model;Q.ConvNextV2PreTrainedModel;Q.DFineForObjectDetection;Q.DFineModel;Q.DFinePreTrainedModel;Q.DPTFeatureExtractor;Q.DPTForDepthEstimation;Q.DPTImageProcessor;Q.DPTModel;Q.DPTPreTrainedModel;Q.DacDecoderModel;Q.DacDecoderOutput;Q.DacEncoderModel;Q.DacEncoderOutput;Q.DacFeatureExtractor;Q.DacModel;Q.DacPreTrainedModel;Q.DataTypeMap;Q.DebertaForMaskedLM;Q.DebertaForQuestionAnswering;Q.DebertaForSequenceClassification;Q.DebertaForTokenClassification;Q.DebertaModel;Q.DebertaPreTrainedModel;Q.DebertaTokenizer;Q.DebertaV2ForMaskedLM;Q.DebertaV2ForQuestionAnswering;Q.DebertaV2ForSequenceClassification;Q.DebertaV2ForTokenClassification;Q.DebertaV2Model;Q.DebertaV2PreTrainedModel;Q.DebertaV2Tokenizer;Q.DecisionTransformerModel;Q.DecisionTransformerPreTrainedModel;Q.DeiTFeatureExtractor;Q.DeiTForImageClassification;Q.DeiTImageProcessor;Q.DeiTModel;Q.DeiTPreTrainedModel;Q.DepthAnythingForDepthEstimation;Q.DepthAnythingPreTrainedModel;Q.DepthEstimationPipeline;Q.DepthProForDepthEstimation;Q.DepthProPreTrainedModel;Q.DetrFeatureExtractor;Q.DetrForObjectDetection;Q.DetrForSegmentation;Q.DetrImageProcessor;Q.DetrModel;Q.DetrObjectDetectionOutput;Q.DetrPreTrainedModel;Q.DetrSegmentationOutput;Q.Dinov2ForImageClassification;Q.Dinov2Model;Q.Dinov2PreTrainedModel;Q.Dinov2WithRegistersForImageClassification;Q.Dinov2WithRegistersModel;Q.Dinov2WithRegistersPreTrainedModel;Q.DistilBertForMaskedLM;Q.DistilBertForQuestionAnswering;Q.DistilBertForSequenceClassification;Q.DistilBertForTokenClassification;Q.DistilBertModel;Q.DistilBertPreTrainedModel;Q.DistilBertTokenizer;Q.DocumentQuestionAnsweringPipeline;Q.DonutFeatureExtractor;Q.DonutImageProcessor;Q.DonutSwinModel;Q.DonutSwinPreTrainedModel;Q.EfficientNetForImageClassification;Q.EfficientNetImageProcessor;Q.EfficientNetModel;Q.EfficientNetPreTrainedModel;Q.ElectraForMaskedLM;Q.ElectraForQuestionAnswering;Q.ElectraForSequenceClassification;Q.ElectraForTokenClassification;Q.ElectraModel;Q.ElectraPreTrainedModel;Q.ElectraTokenizer;Q.EncodecFeatureExtractor;Q.EosTokenCriteria;Q.Ernie4_5_ForCausalLM;Q.Ernie4_5_Model;Q.Ernie4_5_PretrainedModel;Q.Ernie4_5_Tokenizer;Q.EsmForMaskedLM;Q.EsmForSequenceClassification;Q.EsmForTokenClassification;Q.EsmModel;Q.EsmPreTrainedModel;Q.EsmTokenizer;Q.ExaoneForCausalLM;Q.ExaoneModel;Q.ExaonePreTrainedModel;Q.FFT;Q.FalconForCausalLM;Q.FalconModel;Q.FalconPreTrainedModel;Q.FalconTokenizer;Q.FastViTForImageClassification;Q.FastViTModel;Q.FastViTPreTrainedModel;Q.FeatureExtractionPipeline;Q.FeatureExtractor;Q.FillMaskPipeline;Q.Florence2ForConditionalGeneration;Q.Florence2PreTrainedModel;Q.Florence2Processor;Q.ForcedBOSTokenLogitsProcessor;Q.ForcedEOSTokenLogitsProcessor;Q.GLPNFeatureExtractor;Q.GLPNForDepthEstimation;Q.GLPNModel;Q.GLPNPreTrainedModel;Q.GPT2LMHeadModel;Q.GPT2Model;Q.GPT2PreTrainedModel;Q.GPT2Tokenizer;Q.GPTBigCodeForCausalLM;Q.GPTBigCodeModel;Q.GPTBigCodePreTrainedModel;Q.GPTJForCausalLM;Q.GPTJModel;Q.GPTJPreTrainedModel;Q.GPTNeoForCausalLM;Q.GPTNeoModel;Q.GPTNeoPreTrainedModel;Q.GPTNeoXForCausalLM;Q.GPTNeoXModel;Q.GPTNeoXPreTrainedModel;Q.GPTNeoXTokenizer;Q.Gemma2ForCausalLM;Q.Gemma2Model;Q.Gemma2PreTrainedModel;Q.Gemma3ForCausalLM;Q.Gemma3Model;Q.Gemma3PreTrainedModel;Q.Gemma3nAudioFeatureExtractor;Q.Gemma3nForConditionalGeneration;Q.Gemma3nPreTrainedModel;Q.Gemma3nProcessor;Q.GemmaForCausalLM;Q.GemmaModel;Q.GemmaPreTrainedModel;Q.GemmaTokenizer;Q.GlmForCausalLM;Q.GlmModel;Q.GlmPreTrainedModel;Q.GraniteForCausalLM;Q.GraniteModel;Q.GranitePreTrainedModel;Q.Grok1Tokenizer;Q.GroundingDinoForObjectDetection;Q.GroundingDinoImageProcessor;Q.GroundingDinoPreTrainedModel;Q.GroundingDinoProcessor;Q.GroupViTModel;Q.GroupViTPreTrainedModel;Q.HeliumForCausalLM;Q.HeliumModel;Q.HeliumPreTrainedModel;Q.HerbertTokenizer;Q.HieraForImageClassification;Q.HieraModel;Q.HieraPreTrainedModel;Q.HubertForCTC;Q.HubertForSequenceClassification;Q.HubertModel;Q.HubertPreTrainedModel;Q.IJepaForImageClassification;Q.IJepaModel;Q.IJepaPreTrainedModel;Q.Idefics3ForConditionalGeneration;Q.Idefics3ImageProcessor;Q.Idefics3PreTrainedModel;Q.Idefics3Processor;Q.ImageClassificationPipeline;Q.ImageFeatureExtractionPipeline;Q.ImageFeatureExtractor;Q.ImageMattingOutput;Q.ImageProcessor;Q.ImageSegmentationPipeline;Q.ImageToImagePipeline;Q.ImageToTextPipeline;Q.InterruptableStoppingCriteria;Q.JAISLMHeadModel;Q.JAISModel;Q.JAISPreTrainedModel;Q.JinaCLIPImageProcessor;Q.JinaCLIPModel;Q.JinaCLIPPreTrainedModel;Q.JinaCLIPProcessor;Q.JinaCLIPTextModel;Q.JinaCLIPVisionModel;Q.Lfm2ForCausalLM;Q.Lfm2Model;Q.Lfm2PreTrainedModel;Q.LiteWhisperForConditionalGeneration;Q.LlamaForCausalLM;Q.LlamaModel;Q.LlamaPreTrainedModel;Q.LlamaTokenizer;Q.LlavaForConditionalGeneration;Q.LlavaOnevisionForConditionalGeneration;Q.LlavaOnevisionImageProcessor;Q.LlavaPreTrainedModel;Q.LlavaProcessor;Q.LlavaQwen2ForCausalLM;Q.LogitsProcessor;Q.LogitsProcessorList;Q.LogitsWarper;Q.LongT5ForConditionalGeneration;Q.LongT5Model;Q.LongT5PreTrainedModel;Q.M2M100ForConditionalGeneration;Q.M2M100Model;Q.M2M100PreTrainedModel;Q.M2M100Tokenizer;Q.MBart50Tokenizer;Q.MBartForCausalLM;Q.MBartForConditionalGeneration;Q.MBartForSequenceClassification;Q.MBartModel;Q.MBartPreTrainedModel;Q.MBartTokenizer;Q.MPNetForMaskedLM;Q.MPNetForQuestionAnswering;Q.MPNetForSequenceClassification;Q.MPNetForTokenClassification;Q.MPNetModel;Q.MPNetPreTrainedModel;Q.MPNetTokenizer;Q.MT5ForConditionalGeneration;Q.MT5Model;Q.MT5PreTrainedModel;Q.MarianMTModel;Q.MarianModel;Q.MarianPreTrainedModel;Q.MarianTokenizer;Q.Mask2FormerImageProcessor;Q.MaskFormerFeatureExtractor;Q.MaskFormerForInstanceSegmentation;Q.MaskFormerImageProcessor;Q.MaskFormerModel;Q.MaskFormerPreTrainedModel;Q.MaskedLMOutput;Q.MaxLengthCriteria;Q.Metric3DForDepthEstimation;Q.Metric3DPreTrainedModel;Q.Metric3Dv2ForDepthEstimation;Q.Metric3Dv2PreTrainedModel;Q.MgpstrForSceneTextRecognition;Q.MgpstrModelOutput;Q.MgpstrPreTrainedModel;Q.MgpstrProcessor;Q.MgpstrTokenizer;Q.MimiDecoderModel;Q.MimiDecoderOutput;Q.MimiEncoderModel;Q.MimiEncoderOutput;Q.MimiModel;Q.MimiPreTrainedModel;Q.MinLengthLogitsProcessor;Q.MinNewTokensLengthLogitsProcessor;Q.MistralForCausalLM;Q.MistralModel;Q.MistralPreTrainedModel;Q.MobileBertForMaskedLM;Q.MobileBertForQuestionAnswering;Q.MobileBertForSequenceClassification;Q.MobileBertModel;Q.MobileBertPreTrainedModel;Q.MobileBertTokenizer;Q.MobileLLMForCausalLM;Q.MobileLLMModel;Q.MobileLLMPreTrainedModel;Q.MobileNetV1FeatureExtractor;Q.MobileNetV1ForImageClassification;Q.MobileNetV1ForSemanticSegmentation;Q.MobileNetV1ImageProcessor;Q.MobileNetV1Model;Q.MobileNetV1PreTrainedModel;Q.MobileNetV2FeatureExtractor;Q.MobileNetV2ForImageClassification;Q.MobileNetV2ForSemanticSegmentation;Q.MobileNetV2ImageProcessor;Q.MobileNetV2Model;Q.MobileNetV2PreTrainedModel;Q.MobileNetV3FeatureExtractor;Q.MobileNetV3ForImageClassification;Q.MobileNetV3ForSemanticSegmentation;Q.MobileNetV3ImageProcessor;Q.MobileNetV3Model;Q.MobileNetV3PreTrainedModel;Q.MobileNetV4FeatureExtractor;Q.MobileNetV4ForImageClassification;Q.MobileNetV4ForSemanticSegmentation;Q.MobileNetV4ImageProcessor;Q.MobileNetV4Model;Q.MobileNetV4PreTrainedModel;Q.MobileViTFeatureExtractor;Q.MobileViTForImageClassification;Q.MobileViTImageProcessor;Q.MobileViTModel;Q.MobileViTPreTrainedModel;Q.MobileViTV2ForImageClassification;Q.MobileViTV2Model;Q.MobileViTV2PreTrainedModel;Q.ModelOutput;Q.ModernBertDecoderForCausalLM;Q.ModernBertDecoderModel;Q.ModernBertDecoderPreTrainedModel;Q.ModernBertForMaskedLM;Q.ModernBertForSequenceClassification;Q.ModernBertForTokenClassification;Q.ModernBertModel;Q.ModernBertPreTrainedModel;Q.Moondream1ForConditionalGeneration;Q.MoonshineFeatureExtractor;Q.MoonshineForConditionalGeneration;Q.MoonshineModel;Q.MoonshinePreTrainedModel;Q.MoonshineProcessor;Q.MptForCausalLM;Q.MptModel;Q.MptPreTrainedModel;Q.MultiModalityCausalLM;Q.MultiModalityPreTrainedModel;Q.MusicgenForCausalLM;Q.MusicgenForConditionalGeneration;Q.MusicgenModel;Q.MusicgenPreTrainedModel;Q.NeoBertForMaskedLM;Q.NeoBertForQuestionAnswering;Q.NeoBertForSequenceClassification;Q.NeoBertForTokenClassification;Q.NeoBertModel;Q.NeoBertPreTrainedModel;Q.NllbTokenizer;Q.NoBadWordsLogitsProcessor;Q.NoRepeatNGramLogitsProcessor;Q.NomicBertModel;Q.NomicBertPreTrainedModel;Q.NougatImageProcessor;Q.NougatTokenizer;Q.OPTForCausalLM;Q.OPTModel;Q.OPTPreTrainedModel;Q.ObjectDetectionPipeline;Q.Olmo2ForCausalLM;Q.Olmo2Model;Q.Olmo2PreTrainedModel;Q.OlmoForCausalLM;Q.OlmoModel;Q.OlmoPreTrainedModel;Q.OpenELMForCausalLM;Q.OpenELMModel;Q.OpenELMPreTrainedModel;Q.OwlViTFeatureExtractor;Q.OwlViTForObjectDetection;Q.OwlViTImageProcessor;Q.OwlViTModel;Q.OwlViTPreTrainedModel;Q.OwlViTProcessor;Q.Owlv2ForObjectDetection;Q.Owlv2ImageProcessor;Q.Owlv2Model;Q.Owlv2PreTrainedModel;Q.PaliGemmaForConditionalGeneration;Q.PaliGemmaPreTrainedModel;Q.PaliGemmaProcessor;Q.PatchTSMixerForPrediction;Q.PatchTSMixerModel;Q.PatchTSMixerPreTrainedModel;Q.PatchTSTForPrediction;Q.PatchTSTModel;Q.PatchTSTPreTrainedModel;Q.Phi3ForCausalLM;Q.Phi3Model;Q.Phi3PreTrainedModel;Q.Phi3VForCausalLM;Q.Phi3VImageProcessor;Q.Phi3VPreTrainedModel;Q.Phi3VProcessor;Q.PhiForCausalLM;Q.PhiModel;Q.PhiPreTrainedModel;Q.Pipeline;Q.PreTrainedModel;Q.PreTrainedTokenizer;Q.PretrainedConfig;Q.PretrainedMixin;Q.Processor;Q.PvtForImageClassification;Q.PvtImageProcessor;Q.PvtModel;Q.PvtPreTrainedModel;Q.PyAnnoteFeatureExtractor;Q.PyAnnoteForAudioFrameClassification;Q.PyAnnoteModel;Q.PyAnnotePreTrainedModel;Q.PyAnnoteProcessor;Q.QuestionAnsweringModelOutput;Q.QuestionAnsweringPipeline;Q.Qwen2ForCausalLM;Q.Qwen2Model;Q.Qwen2PreTrainedModel;Q.Qwen2Tokenizer;Q.Qwen2VLForConditionalGeneration;Q.Qwen2VLImageProcessor;Q.Qwen2VLPreTrainedModel;Q.Qwen2VLProcessor;Q.Qwen3ForCausalLM;Q.Qwen3Model;Q.Qwen3PreTrainedModel;Q.RFDetrForObjectDetection;Q.RFDetrModel;Q.RFDetrObjectDetectionOutput;Q.RFDetrPreTrainedModel;Q.RTDetrForObjectDetection;Q.RTDetrImageProcessor;Q.RTDetrModel;Q.RTDetrObjectDetectionOutput;Q.RTDetrPreTrainedModel;Q.RTDetrV2ForObjectDetection;Q.RTDetrV2Model;Q.RTDetrV2ObjectDetectionOutput;Q.RTDetrV2PreTrainedModel;var ok=Q.RawAudio;Q.RawImage;Q.RawVideo;Q.RawVideoFrame;Q.RepetitionPenaltyLogitsProcessor;Q.ResNetForImageClassification;Q.ResNetModel;Q.ResNetPreTrainedModel;Q.RoFormerForMaskedLM;Q.RoFormerForQuestionAnswering;Q.RoFormerForSequenceClassification;Q.RoFormerForTokenClassification;Q.RoFormerModel;Q.RoFormerPreTrainedModel;Q.RoFormerTokenizer;Q.RobertaForMaskedLM;Q.RobertaForQuestionAnswering;Q.RobertaForSequenceClassification;Q.RobertaForTokenClassification;Q.RobertaModel;Q.RobertaPreTrainedModel;Q.RobertaTokenizer;Q.SamImageProcessor;Q.SamImageSegmentationOutput;Q.SamModel;Q.SamPreTrainedModel;Q.SamProcessor;Q.SapiensForDepthEstimation;Q.SapiensForNormalEstimation;Q.SapiensForSemanticSegmentation;Q.SapiensPreTrainedModel;Q.SeamlessM4TFeatureExtractor;Q.SegformerFeatureExtractor;Q.SegformerForImageClassification;Q.SegformerForSemanticSegmentation;Q.SegformerImageProcessor;Q.SegformerModel;Q.SegformerPreTrainedModel;Q.Seq2SeqLMOutput;Q.SequenceClassifierOutput;Q.SiglipImageProcessor;Q.SiglipModel;Q.SiglipPreTrainedModel;Q.SiglipTextModel;Q.SiglipTokenizer;Q.SiglipVisionModel;Q.SmolLM3ForCausalLM;Q.SmolLM3Model;Q.SmolLM3PreTrainedModel;Q.SmolVLMForConditionalGeneration;Q.SmolVLMImageProcessor;Q.SmolVLMProcessor;Q.SnacDecoderModel;Q.SnacEncoderModel;Q.SnacFeatureExtractor;Q.SnacModel;Q.SnacPreTrainedModel;Q.SpeechT5FeatureExtractor;Q.SpeechT5ForSpeechToText;Q.SpeechT5ForTextToSpeech;Q.SpeechT5HifiGan;Q.SpeechT5Model;Q.SpeechT5PreTrainedModel;Q.SpeechT5Processor;Q.SpeechT5Tokenizer;Q.SqueezeBertForMaskedLM;Q.SqueezeBertForQuestionAnswering;Q.SqueezeBertForSequenceClassification;Q.SqueezeBertModel;Q.SqueezeBertPreTrainedModel;Q.SqueezeBertTokenizer;Q.StableLmForCausalLM;Q.StableLmModel;Q.StableLmPreTrainedModel;Q.Starcoder2ForCausalLM;Q.Starcoder2Model;Q.Starcoder2PreTrainedModel;Q.StoppingCriteria;Q.StoppingCriteriaList;var lk=Q.StyleTextToSpeech2Model;Q.StyleTextToSpeech2PreTrainedModel;Q.SummarizationPipeline;Q.SuppressTokensAtBeginLogitsProcessor;Q.Swin2SRForImageSuperResolution;Q.Swin2SRImageProcessor;Q.Swin2SRModel;Q.Swin2SRPreTrainedModel;Q.SwinForImageClassification;Q.SwinForSemanticSegmentation;Q.SwinModel;Q.SwinPreTrainedModel;Q.T5ForConditionalGeneration;Q.T5Model;Q.T5PreTrainedModel;Q.T5Tokenizer;Q.TableTransformerForObjectDetection;Q.TableTransformerModel;Q.TableTransformerObjectDetectionOutput;Q.TableTransformerPreTrainedModel;Q.TemperatureLogitsWarper;var Wo=Q.Tensor;Q.Text2TextGenerationPipeline;Q.TextClassificationPipeline;Q.TextGenerationPipeline;Q.TextStreamer;Q.TextToAudioPipeline;Q.TokenClassificationPipeline;Q.TokenClassifierOutput;Q.TokenizerModel;Q.TopKLogitsWarper;Q.TopPLogitsWarper;Q.TrOCRForCausalLM;Q.TrOCRPreTrainedModel;Q.TranslationPipeline;Q.UltravoxModel;Q.UltravoxPreTrainedModel;Q.UltravoxProcessor;Q.UniSpeechForCTC;Q.UniSpeechForSequenceClassification;Q.UniSpeechModel;Q.UniSpeechPreTrainedModel;Q.UniSpeechSatForAudioFrameClassification;Q.UniSpeechSatForCTC;Q.UniSpeechSatForSequenceClassification;Q.UniSpeechSatModel;Q.UniSpeechSatPreTrainedModel;Q.VLChatProcessor;Q.VLMImageProcessor;Q.ViTFeatureExtractor;Q.ViTForImageClassification;Q.ViTImageProcessor;Q.ViTMAEModel;Q.ViTMAEPreTrainedModel;Q.ViTMSNForImageClassification;Q.ViTMSNModel;Q.ViTMSNPreTrainedModel;Q.ViTModel;Q.ViTPreTrainedModel;Q.VisionEncoderDecoderModel;Q.VitMatteForImageMatting;Q.VitMatteImageProcessor;Q.VitMattePreTrainedModel;Q.VitPoseForPoseEstimation;Q.VitPoseImageProcessor;Q.VitPosePreTrainedModel;Q.VitsModel;Q.VitsModelOutput;Q.VitsPreTrainedModel;Q.VitsTokenizer;Q.VoxtralForConditionalGeneration;Q.VoxtralProcessor;Q.Wav2Vec2BertForCTC;Q.Wav2Vec2BertForSequenceClassification;Q.Wav2Vec2BertModel;Q.Wav2Vec2BertPreTrainedModel;Q.Wav2Vec2CTCTokenizer;Q.Wav2Vec2FeatureExtractor;Q.Wav2Vec2ForAudioFrameClassification;Q.Wav2Vec2ForCTC;Q.Wav2Vec2ForSequenceClassification;Q.Wav2Vec2Model;Q.Wav2Vec2PreTrainedModel;Q.Wav2Vec2Processor;Q.Wav2Vec2ProcessorWithLM;Q.WavLMForAudioFrameClassification;Q.WavLMForCTC;Q.WavLMForSequenceClassification;Q.WavLMForXVector;Q.WavLMModel;Q.WavLMPreTrainedModel;Q.WeSpeakerFeatureExtractor;Q.WeSpeakerResNetModel;Q.WeSpeakerResNetPreTrainedModel;Q.WhisperFeatureExtractor;Q.WhisperForConditionalGeneration;Q.WhisperModel;Q.WhisperPreTrainedModel;Q.WhisperProcessor;Q.WhisperTextStreamer;Q.WhisperTimeStampLogitsProcessor;Q.WhisperTokenizer;Q.XLMForQuestionAnswering;Q.XLMForSequenceClassification;Q.XLMForTokenClassification;Q.XLMModel;Q.XLMPreTrainedModel;Q.XLMRobertaForMaskedLM;Q.XLMRobertaForQuestionAnswering;Q.XLMRobertaForSequenceClassification;Q.XLMRobertaForTokenClassification;Q.XLMRobertaModel;Q.XLMRobertaPreTrainedModel;Q.XLMRobertaTokenizer;Q.XLMTokenizer;Q.XLMWithLMHeadModel;Q.XVectorOutput;Q.YolosFeatureExtractor;Q.YolosForObjectDetection;Q.YolosImageProcessor;Q.YolosModel;Q.YolosObjectDetectionOutput;Q.YolosPreTrainedModel;Q.ZeroShotAudioClassificationPipeline;Q.ZeroShotClassificationPipeline;Q.ZeroShotImageClassificationPipeline;Q.ZeroShotObjectDetectionPipeline;Q.bankers_round;Q.cat;Q.cos_sim;Q.dot;Q.dynamic_time_warping;Q.env;Q.full;Q.full_like;Q.getCacheShapes;Q.hamming;Q.hanning;Q.interpolate;Q.interpolate_4d;Q.interpolate_data;Q.is_chinese_char;Q.layer_norm;Q.load_image;Q.load_video;Q.log_softmax;Q.magnitude;Q.matmul;Q.max;Q.mean;Q.mean_pooling;Q.medianFilter;Q.mel_filter_bank;Q.min;Q.ones;Q.ones_like;Q.permute;Q.permute_data;var ck=Q.pipeline;Q.quantize_embeddings;Q.rand;Q.read_audio;Q.rfft;Q.round;Q.slice;Q.softmax;Q.spectrogram;Q.stack;Q.std_mean;Q.topk;Q.window_function;Q.zeros;Q.zeros_like;var ae=ae!==void 0?ae:{};ae.expectedDataFileDownloads||(ae.expectedDataFileDownloads=0);var uk=typeof importScripts=="function",K2=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y4=typeof atob=="function"?atob:function(a){var n,i,c,p,m,C,I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",E="",x=0;a=a.replace(/[^A-Za-z0-9\+\/\=]/g,"");do n=I.indexOf(a.charAt(x++))<<2|(p=I.indexOf(a.charAt(x++)))>>4,i=(15&p)<<4|(m=I.indexOf(a.charAt(x++)))>>2,c=(3&m)<<6|(C=I.indexOf(a.charAt(x++))),E+=String.fromCharCode(n),m!==64&&(E+=String.fromCharCode(i)),C!==64&&(E+=String.fromCharCode(c));while(x<a.length);return E};K2&&(process.argv.length>1&&(g1=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(a){if(!(a instanceof dk))throw a}),process.on("unhandledRejection",function(a){throw a}),ae.inspect=function(){return"[Emscripten Module object]"}),ae.expectedDataFileDownloads++,function(){if(ae.ENVIRONMENT_IS_PTHREAD)return;const a="/usr/share/espeak-ng-data",n=a+"/lang",i=a+"/voices";(function(c){var p=null,m=null;function C(){function I(M,S){if(!M)throw S+new Error().stack}function E(M,S,F){this.start=M,this.end=S,this.audio=F}ae.FS_createPath("/","usr",!0,!0),ae.FS_createPath("/usr","share",!0,!0),ae.FS_createPath("/usr/share","espeak-ng-data",!0,!0),ae.FS_createPath(a,"lang",!0,!0),ae.FS_createPath(n,"aav",!0,!0),ae.FS_createPath(n,"art",!0,!0),ae.FS_createPath(n,"azc",!0,!0),ae.FS_createPath(n,"bat",!0,!0),ae.FS_createPath(n,"bnt",!0,!0),ae.FS_createPath(n,"ccs",!0,!0),ae.FS_createPath(n,"cel",!0,!0),ae.FS_createPath(n,"cus",!0,!0),ae.FS_createPath(n,"dra",!0,!0),ae.FS_createPath(n,"esx",!0,!0),ae.FS_createPath(n,"gmq",!0,!0),ae.FS_createPath(n,"gmw",!0,!0),ae.FS_createPath(n,"grk",!0,!0),ae.FS_createPath(n,"inc",!0,!0),ae.FS_createPath(n,"ine",!0,!0),ae.FS_createPath(n,"ira",!0,!0),ae.FS_createPath(n,"iro",!0,!0),ae.FS_createPath(n,"itc",!0,!0),ae.FS_createPath(n,"jpx",!0,!0),ae.FS_createPath(n,"map",!0,!0),ae.FS_createPath(n,"miz",!0,!0),ae.FS_createPath(n,"myn",!0,!0),ae.FS_createPath(n,"poz",!0,!0),ae.FS_createPath(n,"roa",!0,!0),ae.FS_createPath(n,"sai",!0,!0),ae.FS_createPath(n,"sem",!0,!0),ae.FS_createPath(n,"sit",!0,!0),ae.FS_createPath(n,"tai",!0,!0),ae.FS_createPath(n,"trk",!0,!0),ae.FS_createPath(n,"urj",!0,!0),ae.FS_createPath(n,"zle",!0,!0),ae.FS_createPath(n,"zls",!0,!0),ae.FS_createPath(n,"zlw",!0,!0),ae.FS_createPath(a,"voices",!0,!0),ae.FS_createPath(i,"!v",!0,!0),ae.FS_createPath(i,"mb",!0,!0),E.prototype={requests:{},open:function(M,S){this.name=S,this.requests[S]=this,ae.addRunDependency("fp "+this.name)},send:function(){},onload:function(){var M=this.byteArray.subarray(this.start,this.end);this.finish(M)},finish:function(M){ae.FS_createDataFile(this.name,null,M,!0,!0,!0),ae.removeRunDependency("fp "+this.name),this.requests[this.name]=null}};for(var x=c.files,D=0;D<x.length;++D)new E(x[D].start,x[D].end,x[D].audio||0).open("GET",x[D].filename);function y(M){I(M,"Loading data file failed."),I(M.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var S=new Uint8Array(M);E.prototype.byteArray=S;for(var F=c.files,L=0;L<F.length;++L)E.prototype.requests[F[L].filename].onload();ae.removeRunDependency("datafile_js/espeakng.worker.data")}ae.addRunDependency("datafile_js/espeakng.worker.data"),m?(y(m),m=null):p=y}(async()=>{const I=function(y){if(typeof K2=="boolean"&&K2){var M=Buffer.from(y,"base64");return new Uint8Array(M.buffer,M.byteOffset,M.byteLength)}try{for(var S=y4(y),F=new Uint8Array(S.length),L=0;L<S.length;++L)F[L]=S.charCodeAt(L);return F}catch(Z){throw console.error(y4),console.error(Z),new Error("Converting base64 string to bytes failed.")}}(""),E=new Blob([I]).stream().pipeThrough(new DecompressionStream("gzip")),x=[];for await(const y of E)x.push(y);const D=await new Blob(x).arrayBuffer();p?(p(D),p=null):m=D})(),ae.calledRun?C():(ae.preRun||(ae.preRun=[]),ae.preRun.push(C))})({files:[{filename:a+"/en_dict",start:0,end:167064},{filename:a+"/intonations",start:167064,end:169104},{filename:n+"/aav/vi",start:169104,end:169215},{filename:n+"/aav/vi-VN-x-central",start:169215,end:169358},{filename:n+"/aav/vi-VN-x-south",start:169358,end:169500},{filename:n+"/art/eo",start:169500,end:169541},{filename:n+"/art/ia",start:169541,end:169570},{filename:n+"/art/io",start:169570,end:169620},{filename:n+"/art/jbo",start:169620,end:169689},{filename:n+"/art/lfn",start:169689,end:169824},{filename:n+"/art/piqd",start:169824,end:169880},{filename:n+"/art/py",start:169880,end:170020},{filename:n+"/art/qdb",start:170020,end:170077},{filename:n+"/art/qya",start:170077,end:170250},{filename:n+"/art/sjn",start:170250,end:170425},{filename:n+"/azc/nci",start:170425,end:170539},{filename:n+"/bat/lt",start:170539,end:170567},{filename:n+"/bat/ltg",start:170567,end:170879},{filename:n+"/bat/lv",start:170879,end:171108},{filename:n+"/bnt/sw",start:171108,end:171149},{filename:n+"/bnt/tn",start:171149,end:171191},{filename:n+"/ccs/ka",start:171191,end:171315},{filename:n+"/cel/cy",start:171315,end:171352},{filename:n+"/cel/ga",start:171352,end:171418},{filename:n+"/cel/gd",start:171418,end:171469},{filename:n+"/cus/om",start:171469,end:171508},{filename:n+"/dra/kn",start:171508,end:171563},{filename:n+"/dra/ml",start:171563,end:171620},{filename:n+"/dra/ta",start:171620,end:171671},{filename:n+"/dra/te",start:171671,end:171741},{filename:n+"/esx/kl",start:171741,end:171771},{filename:n+"/eu",start:171771,end:171825},{filename:n+"/gmq/da",start:171825,end:171868},{filename:n+"/gmq/is",start:171868,end:171895},{filename:n+"/gmq/nb",start:171895,end:171982},{filename:n+"/gmq/sv",start:171982,end:172007},{filename:n+"/gmw/af",start:172007,end:172130},{filename:n+"/gmw/de",start:172130,end:172172},{filename:n+"/gmw/en",start:172172,end:172312},{filename:n+"/gmw/en-029",start:172312,end:172647},{filename:n+"/gmw/en-GB-scotland",start:172647,end:172942},{filename:n+"/gmw/en-GB-x-gbclan",start:172942,end:173180},{filename:n+"/gmw/en-GB-x-gbcwmd",start:173180,end:173368},{filename:n+"/gmw/en-GB-x-rp",start:173368,end:173617},{filename:n+"/gmw/en-US",start:173617,end:173874},{filename:n+"/gmw/en-US-nyc",start:173874,end:174145},{filename:n+"/gmw/lb",start:174145,end:174176},{filename:n+"/gmw/nl",start:174176,end:174199},{filename:n+"/grk/el",start:174199,end:174222},{filename:n+"/grk/grc",start:174222,end:174321},{filename:n+"/inc/as",start:174321,end:174363},{filename:n+"/inc/bn",start:174363,end:174388},{filename:n+"/inc/bpy",start:174388,end:174427},{filename:n+"/inc/gu",start:174427,end:174469},{filename:n+"/inc/hi",start:174469,end:174492},{filename:n+"/inc/kok",start:174492,end:174518},{filename:n+"/inc/mr",start:174518,end:174559},{filename:n+"/inc/ne",start:174559,end:174596},{filename:n+"/inc/or",start:174596,end:174635},{filename:n+"/inc/pa",start:174635,end:174660},{filename:n+"/inc/sd",start:174660,end:174726},{filename:n+"/inc/si",start:174726,end:174781},{filename:n+"/inc/ur",start:174781,end:174875},{filename:n+"/ine/hy",start:174875,end:174936},{filename:n+"/ine/hyw",start:174936,end:175301},{filename:n+"/ine/sq",start:175301,end:175404},{filename:n+"/ira/fa",start:175404,end:175494},{filename:n+"/ira/fa-Latn",start:175494,end:175763},{filename:n+"/ira/ku",start:175763,end:175803},{filename:n+"/iro/chr",start:175803,end:176372},{filename:n+"/itc/la",start:176372,end:176669},{filename:n+"/jpx/ja",start:176669,end:176721},{filename:n+"/ko",start:176721,end:176772},{filename:n+"/map/haw",start:176772,end:176814},{filename:n+"/miz/mto",start:176814,end:176997},{filename:n+"/myn/quc",start:176997,end:177207},{filename:n+"/poz/id",start:177207,end:177341},{filename:n+"/poz/mi",start:177341,end:177708},{filename:n+"/poz/ms",start:177708,end:178138},{filename:n+"/qu",start:178138,end:178226},{filename:n+"/roa/an",start:178226,end:178253},{filename:n+"/roa/ca",start:178253,end:178278},{filename:n+"/roa/es",start:178278,end:178341},{filename:n+"/roa/es-419",start:178341,end:178508},{filename:n+"/roa/fr",start:178508,end:178587},{filename:n+"/roa/fr-BE",start:178587,end:178671},{filename:n+"/roa/fr-CH",start:178671,end:178757},{filename:n+"/roa/ht",start:178757,end:178897},{filename:n+"/roa/it",start:178897,end:179006},{filename:n+"/roa/pap",start:179006,end:179068},{filename:n+"/roa/pt",start:179068,end:179163},{filename:n+"/roa/pt-BR",start:179163,end:179272},{filename:n+"/roa/ro",start:179272,end:179298},{filename:n+"/sai/gn",start:179298,end:179345},{filename:n+"/sem/am",start:179345,end:179386},{filename:n+"/sem/ar",start:179386,end:179436},{filename:n+"/sem/he",start:179436,end:179476},{filename:n+"/sem/mt",start:179476,end:179517},{filename:n+"/sem/ti",start:179517,end:179610},{filename:n+"/sit/cmn",start:179610,end:180296},{filename:n+"/sit/cmn-Latn-pinyin",start:180296,end:180457},{filename:n+"/sit/hak",start:180457,end:180585},{filename:n+"/sit/my",start:180585,end:180641},{filename:n+"/sit/yue",start:180641,end:180835},{filename:n+"/sit/yue-Latn-jyutping",start:180835,end:181048},{filename:n+"/tai/shn",start:181048,end:181140},{filename:n+"/tai/th",start:181140,end:181177},{filename:n+"/trk/az",start:181177,end:181222},{filename:n+"/trk/ba",start:181222,end:181247},{filename:n+"/trk/cv",start:181247,end:181287},{filename:n+"/trk/kk",start:181287,end:181327},{filename:n+"/trk/ky",start:181327,end:181370},{filename:n+"/trk/nog",start:181370,end:181409},{filename:n+"/trk/tk",start:181409,end:181434},{filename:n+"/trk/tr",start:181434,end:181459},{filename:n+"/trk/tt",start:181459,end:181482},{filename:n+"/trk/ug",start:181482,end:181506},{filename:n+"/trk/uz",start:181506,end:181545},{filename:n+"/urj/et",start:181545,end:181782},{filename:n+"/urj/fi",start:181782,end:182019},{filename:n+"/urj/hu",start:182019,end:182092},{filename:n+"/urj/smj",start:182092,end:182137},{filename:n+"/zle/be",start:182137,end:182189},{filename:n+"/zle/ru",start:182189,end:182246},{filename:n+"/zle/ru-LV",start:182246,end:182526},{filename:n+"/zle/ru-cl",start:182526,end:182617},{filename:n+"/zle/uk",start:182617,end:182714},{filename:n+"/zls/bg",start:182714,end:182825},{filename:n+"/zls/bs",start:182825,end:183055},{filename:n+"/zls/hr",start:183055,end:183317},{filename:n+"/zls/mk",start:183317,end:183345},{filename:n+"/zls/sl",start:183345,end:183388},{filename:n+"/zls/sr",start:183388,end:183638},{filename:n+"/zlw/cs",start:183638,end:183661},{filename:n+"/zlw/pl",start:183661,end:183699},{filename:n+"/zlw/sk",start:183699,end:183723},{filename:a+"/phondata",start:183723,end:734147},{filename:a+"/phonindex",start:734147,end:773403},{filename:a+"/phontab",start:773403,end:829491},{filename:i+"/!v/Alex",start:829491,end:829619},{filename:i+"/!v/Alicia",start:829619,end:830093},{filename:i+"/!v/Andrea",start:830093,end:830450},{filename:i+"/!v/Andy",start:830450,end:830770},{filename:i+"/!v/Annie",start:830770,end:831085},{filename:i+"/!v/AnxiousAndy",start:831085,end:831446},{filename:i+"/!v/Demonic",start:831446,end:835304},{filename:i+"/!v/Denis",start:835304,end:835609},{filename:i+"/!v/Diogo",start:835609,end:835988},{filename:i+"/!v/Gene",start:835988,end:836269},{filename:i+"/!v/Gene2",start:836269,end:836552},{filename:i+"/!v/Henrique",start:836552,end:836933},{filename:i+"/!v/Hugo",start:836933,end:837311},{filename:i+"/!v/Jacky",start:837311,end:837578},{filename:i+"/!v/Lee",start:837578,end:837916},{filename:i+"/!v/Marco",start:837916,end:838383},{filename:i+"/!v/Mario",start:838383,end:838653},{filename:i+"/!v/Michael",start:838653,end:838923},{filename:i+"/!v/Mike",start:838923,end:839035},{filename:i+"/!v/Mr serious",start:839035,end:842228},{filename:i+"/!v/Nguyen",start:842228,end:842508},{filename:i+"/!v/Reed",start:842508,end:842710},{filename:i+"/!v/RicishayMax",start:842710,end:842943},{filename:i+"/!v/RicishayMax2",start:842943,end:843378},{filename:i+"/!v/RicishayMax3",start:843378,end:843813},{filename:i+"/!v/Storm",start:843813,end:844233},{filename:i+"/!v/Tweaky",start:844233,end:847422},{filename:i+"/!v/UniRobot",start:847422,end:847839},{filename:i+"/!v/adam",start:847839,end:847914},{filename:i+"/!v/anika",start:847914,end:848407},{filename:i+"/!v/anikaRobot",start:848407,end:848919},{filename:i+"/!v/announcer",start:848919,end:849219},{filename:i+"/!v/antonio",start:849219,end:849600},{filename:i+"/!v/aunty",start:849600,end:849958},{filename:i+"/!v/belinda",start:849958,end:850298},{filename:i+"/!v/benjamin",start:850298,end:850499},{filename:i+"/!v/boris",start:850499,end:850723},{filename:i+"/!v/caleb",start:850723,end:850780},{filename:i+"/!v/croak",start:850780,end:850873},{filename:i+"/!v/david",start:850873,end:850985},{filename:i+"/!v/ed",start:850985,end:851272},{filename:i+"/!v/edward",start:851272,end:851423},{filename:i+"/!v/edward2",start:851423,end:851575},{filename:i+"/!v/f1",start:851575,end:851899},{filename:i+"/!v/f2",start:851899,end:852256},{filename:i+"/!v/f3",start:852256,end:852631},{filename:i+"/!v/f4",start:852631,end:852981},{filename:i+"/!v/f5",start:852981,end:853413},{filename:i+"/!v/fast",start:853413,end:853562},{filename:i+"/!v/grandma",start:853562,end:853825},{filename:i+"/!v/grandpa",start:853825,end:854081},{filename:i+"/!v/gustave",start:854081,end:854334},{filename:i+"/!v/ian",start:854334,end:857502},{filename:i+"/!v/iven",start:857502,end:857763},{filename:i+"/!v/iven2",start:857763,end:858042},{filename:i+"/!v/iven3",start:858042,end:858304},{filename:i+"/!v/iven4",start:858304,end:858565},{filename:i+"/!v/john",start:858565,end:861751},{filename:i+"/!v/kaukovalta",start:861751,end:862112},{filename:i+"/!v/klatt",start:862112,end:862150},{filename:i+"/!v/klatt2",start:862150,end:862188},{filename:i+"/!v/klatt3",start:862188,end:862227},{filename:i+"/!v/klatt4",start:862227,end:862266},{filename:i+"/!v/klatt5",start:862266,end:862305},{filename:i+"/!v/klatt6",start:862305,end:862344},{filename:i+"/!v/linda",start:862344,end:862694},{filename:i+"/!v/m1",start:862694,end:863029},{filename:i+"/!v/m2",start:863029,end:863293},{filename:i+"/!v/m3",start:863293,end:863593},{filename:i+"/!v/m4",start:863593,end:863883},{filename:i+"/!v/m5",start:863883,end:864145},{filename:i+"/!v/m6",start:864145,end:864333},{filename:i+"/!v/m7",start:864333,end:864587},{filename:i+"/!v/m8",start:864587,end:864871},{filename:i+"/!v/marcelo",start:864871,end:865122},{filename:i+"/!v/max",start:865122,end:865347},{filename:i+"/!v/michel",start:865347,end:865751},{filename:i+"/!v/miguel",start:865751,end:866133},{filename:i+"/!v/mike2",start:866133,end:866321},{filename:i+"/!v/norbert",start:866321,end:869510},{filename:i+"/!v/pablo",start:869510,end:872652},{filename:i+"/!v/paul",start:872652,end:872936},{filename:i+"/!v/pedro",start:872936,end:873288},{filename:i+"/!v/quincy",start:873288,end:873642},{filename:i+"/!v/rob",start:873642,end:873907},{filename:i+"/!v/robert",start:873907,end:874181},{filename:i+"/!v/robosoft",start:874181,end:874632},{filename:i+"/!v/robosoft2",start:874632,end:875086},{filename:i+"/!v/robosoft3",start:875086,end:875541},{filename:i+"/!v/robosoft4",start:875541,end:875988},{filename:i+"/!v/robosoft5",start:875988,end:876433},{filename:i+"/!v/robosoft6",start:876433,end:876720},{filename:i+"/!v/robosoft7",start:876720,end:877130},{filename:i+"/!v/robosoft8",start:877130,end:877373},{filename:i+"/!v/sandro",start:877373,end:877903},{filename:i+"/!v/shelby",start:877903,end:878183},{filename:i+"/!v/steph",start:878183,end:878547},{filename:i+"/!v/steph2",start:878547,end:878914},{filename:i+"/!v/steph3",start:878914,end:879291},{filename:i+"/!v/travis",start:879291,end:879674},{filename:i+"/!v/victor",start:879674,end:879927},{filename:i+"/!v/whisper",start:879927,end:880113},{filename:i+"/!v/whisperf",start:880113,end:880505},{filename:i+"/!v/zac",start:880505,end:880780},{filename:i+"/mb/mb-af1",start:880780,end:880868},{filename:i+"/mb/mb-af1-en",start:880868,end:880951},{filename:i+"/mb/mb-ar1",start:880951,end:881035},{filename:i+"/mb/mb-ar2",start:881035,end:881119},{filename:i+"/mb/mb-br1",start:881119,end:881251},{filename:i+"/mb/mb-br2",start:881251,end:881387},{filename:i+"/mb/mb-br3",start:881387,end:881519},{filename:i+"/mb/mb-br4",start:881519,end:881655},{filename:i+"/mb/mb-ca1",start:881655,end:881760},{filename:i+"/mb/mb-ca2",start:881760,end:881865},{filename:i+"/mb/mb-cn1",start:881865,end:881957},{filename:i+"/mb/mb-cr1",start:881957,end:882068},{filename:i+"/mb/mb-cz1",start:882068,end:882138},{filename:i+"/mb/mb-cz2",start:882138,end:882220},{filename:i+"/mb/mb-de1",start:882220,end:882364},{filename:i+"/mb/mb-de1-en",start:882364,end:882460},{filename:i+"/mb/mb-de2",start:882460,end:882588},{filename:i+"/mb/mb-de2-en",start:882588,end:882668},{filename:i+"/mb/mb-de3",start:882668,end:882767},{filename:i+"/mb/mb-de3-en",start:882767,end:882863},{filename:i+"/mb/mb-de4",start:882863,end:882992},{filename:i+"/mb/mb-de4-en",start:882992,end:883073},{filename:i+"/mb/mb-de5",start:883073,end:883309},{filename:i+"/mb/mb-de5-en",start:883309,end:883399},{filename:i+"/mb/mb-de6",start:883399,end:883521},{filename:i+"/mb/mb-de6-en",start:883521,end:883595},{filename:i+"/mb/mb-de6-grc",start:883595,end:883678},{filename:i+"/mb/mb-de7",start:883678,end:883828},{filename:i+"/mb/mb-de8",start:883828,end:883899},{filename:i+"/mb/mb-ee1",start:883899,end:883996},{filename:i+"/mb/mb-en1",start:883996,end:884127},{filename:i+"/mb/mb-es1",start:884127,end:884241},{filename:i+"/mb/mb-es2",start:884241,end:884349},{filename:i+"/mb/mb-es3",start:884349,end:884453},{filename:i+"/mb/mb-es4",start:884453,end:884541},{filename:i+"/mb/mb-fr1",start:884541,end:884707},{filename:i+"/mb/mb-fr1-en",start:884707,end:884811},{filename:i+"/mb/mb-fr2",start:884811,end:884914},{filename:i+"/mb/mb-fr3",start:884914,end:885014},{filename:i+"/mb/mb-fr4",start:885014,end:885141},{filename:i+"/mb/mb-fr4-en",start:885141,end:885248},{filename:i+"/mb/mb-fr5",start:885248,end:885348},{filename:i+"/mb/mb-fr6",start:885348,end:885448},{filename:i+"/mb/mb-fr7",start:885448,end:885531},{filename:i+"/mb/mb-gr1",start:885531,end:885625},{filename:i+"/mb/mb-gr2",start:885625,end:885719},{filename:i+"/mb/mb-gr2-en",start:885719,end:885807},{filename:i+"/mb/mb-hb1",start:885807,end:885875},{filename:i+"/mb/mb-hb2",start:885875,end:885958},{filename:i+"/mb/mb-hu1",start:885958,end:886060},{filename:i+"/mb/mb-hu1-en",start:886060,end:886157},{filename:i+"/mb/mb-ic1",start:886157,end:886245},{filename:i+"/mb/mb-id1",start:886245,end:886346},{filename:i+"/mb/mb-in1",start:886346,end:886415},{filename:i+"/mb/mb-in2",start:886415,end:886500},{filename:i+"/mb/mb-ir1",start:886500,end:887253},{filename:i+"/mb/mb-it1",start:887253,end:887337},{filename:i+"/mb/mb-it2",start:887337,end:887424},{filename:i+"/mb/mb-it3",start:887424,end:887566},{filename:i+"/mb/mb-it4",start:887566,end:887711},{filename:i+"/mb/mb-jp1",start:887711,end:887782},{filename:i+"/mb/mb-jp2",start:887782,end:887883},{filename:i+"/mb/mb-jp3",start:887883,end:887970},{filename:i+"/mb/mb-la1",start:887970,end:888053},{filename:i+"/mb/mb-lt1",start:888053,end:888140},{filename:i+"/mb/mb-lt2",start:888140,end:888227},{filename:i+"/mb/mb-ma1",start:888227,end:888325},{filename:i+"/mb/mb-mx1",start:888325,end:888445},{filename:i+"/mb/mb-mx2",start:888445,end:888565},{filename:i+"/mb/mb-nl1",start:888565,end:888634},{filename:i+"/mb/mb-nl2",start:888634,end:888730},{filename:i+"/mb/mb-nl2-en",start:888730,end:888821},{filename:i+"/mb/mb-nl3",start:888821,end:888906},{filename:i+"/mb/mb-nz1",start:888906,end:888974},{filename:i+"/mb/mb-pl1",start:888974,end:889073},{filename:i+"/mb/mb-pl1-en",start:889073,end:889155},{filename:i+"/mb/mb-pt1",start:889155,end:889286},{filename:i+"/mb/mb-ro1",start:889286,end:889373},{filename:i+"/mb/mb-ro1-en",start:889373,end:889454},{filename:i+"/mb/mb-sw1",start:889454,end:889552},{filename:i+"/mb/mb-sw1-en",start:889552,end:889645},{filename:i+"/mb/mb-sw2",start:889645,end:889747},{filename:i+"/mb/mb-sw2-en",start:889747,end:889846},{filename:i+"/mb/mb-tl1",start:889846,end:889931},{filename:i+"/mb/mb-tr1",start:889931,end:890016},{filename:i+"/mb/mb-tr2",start:890016,end:890130},{filename:i+"/mb/mb-us1",start:890130,end:890300},{filename:i+"/mb/mb-us2",start:890300,end:890478},{filename:i+"/mb/mb-us3",start:890478,end:890658},{filename:i+"/mb/mb-vz1",start:890658,end:890802}]})}();var B4=Object.assign({},ae),g1="./this.program",Yl=ae.print||console.log.bind(console),Vo=ae.printErr||console.warn.bind(console);Object.assign(ae,B4),B4=null,ae.arguments&&ae.arguments,ae.thisProgram&&(g1=ae.thisProgram),ae.quit&&ae.quit,ae.wasmBinary&&ae.wasmBinary,ae.noExitRuntime;var Fl,Yo={Memory:function(a){this.buffer=new ArrayBuffer(65536*a.initial)},Module:function(a){},Instance:function(a,n){this.exports=function(i){for(var c,p=new Uint8Array(123),m=25;m>=0;--m)p[48+m]=52+m,p[65+m]=m,p[97+m]=26+m;function C(z,N,K){for(var f,k,e=0,d=N,B=K.length,Ae=N+(3*B>>2)-(K[B-2]=="=")-(K[B-1]=="=");e<B;e+=4)f=p[K.charCodeAt(e+1)],k=p[K.charCodeAt(e+2)],z[d++]=p[K.charCodeAt(e)]<<2|f>>4,d<Ae&&(z[d++]=f<<4|k>>2),d<Ae&&(z[d++]=k<<6|p[K.charCodeAt(e+3)])}p[43]=62,p[47]=63;var I=new ArrayBuffer(16),E=new Int32Array(I),x=new Float32Array(I),D=new Float64Array(I);function y(z){return E[z]}function M(z,N){E[z]=N}function S(){return D[0]}function F(z){D[0]=z}function L(){throw new Error("abort")}function Z(z){x[2]=z}return function(z){var N=z.a,K=N.a.buffer,f=new Int8Array(K),k=new Int16Array(K),e=new Int32Array(K),d=new Uint8Array(K),B=new Uint16Array(K),Ae=new Uint32Array(K),P=new Float64Array(K),O=Math.imul,me=Math.fround,ee=Math.abs,Ce=Math.clz32,we=Math.min,xe=Math.floor,De=Math.ceil,ye=N.b,Oe=N.c,_e=N.d,ne=N.e,te=N.f,pe=N.g,le=N.h,Qe=N.i,it=N.j,qe=N.k,ot=N.l,Pt=N.m,et=N.n,be=N.o,Ne=N.p,ge=N.q,Ve=N.r,at=N.s,Ze=N.t,Ye=N.u,Y=294656,We=0,rt=0,fe=0;function Et(t){var A,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0,qA=0,or=0,Ir=0,pr=0,zr=0,Ur=0,qr=0,is=0,gs=0,ps=0,fa=0,ga=0,Aa=0,Qn=0,Ai=0,Na=0,ri=0,si=0,mo=0,Co=0,s0=0,bo=0;if(Y=A=Y-16|0,(0|t)!=2)if(t=e[33283],e[t>>2]!=e[t+4>>2]){if(ns(e[e[32972]+60>>2]),H=e[47192],gs=A+12|0,Qn=A+8|0,Y=h=Y-6832|0,e[h+6816>>2]=0,e[h+6808>>2]=32,e[h+6800>>2]=0,H){e[47351]=0,e[47350]=0,e[47352]=0,f[189076]=0,t=e[33284],e[47353]=(0|t)>0?t:0,e[47355]=e[47354]+1,Je(ct=h+5184|0,0,1600),Ur=h+6800|0,Y=u=Y-2608|0,e[u+2156>>2]=32,e[u+2148>>2]=0,d[134760]&&(f[190280]=0,f[134760]=0),e[H+8216>>2]=0,e[H+8220>>2]=0,e[H+288>>2]=0,e[h+780>>2]=0,f[189360]=0;e:if(t=e[33691])e[u+2152>>2]=t;else{t:{r:{if(!(r=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2]){e[u+2152>>2]=0;break e}if(!(r=e[33285]))break r}e[33285]=0;break t}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}e[u+2152>>2]=r}si=ct+2|0,Se=32;e:{for(;;){Pe=Se;t:{r:{a:{if(r=e[33691],(o=e[33285])?t=0:(o=e[33285],t=e[33283],t=e[t>>2]==e[t+4>>2]),r|!t|o||!(e[32524]<0)){if(!xt(e[u+2156>>2])){if((o=(0|(t=e[49828]))>0)&(0|(r=t))<(0|(t=e[33284])))break a;if(!((0|(r=e[49845]))<=0|(0|t)<(0|r))){e[49845]=0,f[134760]=1,e[33285]=e[u+2152>>2],s=16384;break e}}Se=e[u+2156>>2],e[u+2156>>2]=e[u+2152>>2];n:{o:{c:{u:{l:{if((0|(r=e[32524]))>=0){if(d[r+134736|0])break l;e[32524]=-1}if(r=e[33285])break c;if(t=e[33283],e[t>>2]!=e[t+4>>2])break u;r=32;break n}e[33691]|r||(e[u+2156>>2]=f[134736],r=1),e[32524]=r+1,r=f[r+134736|0];break n}if(!(r=e[33285]))break o}e[33285]=0;break n}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}e[u+2152>>2]=r,e[33691]=0;n:if(!(w|!e[47203])){o:{if((0|(t=e[u+2156>>2]))!=60){if((0|r)!=35&r-97>>>0>25|(0|t)!=38)break n;for(o=e[33285],l=0;;){c:{if(e[u+2156>>2]=r,!o){if(t=e[33283],e[t>>2]==e[t+4>>2])break c;r=e[u+2156>>2]}if(!(!((r=!!(0|xt(r)))|(0|(t=e[u+2156>>2]))==35)|l>>>0>19)){f[(u+112|0)+l|0]=t,l=l+1|0,(r=e[33285])?(e[33285]=0,o=0):(e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t),o=e[33285]);continue}}break}f[(u+112|0)+l|0]=0;c:{u:{if(!(r=e[33285])){if(r=0,t=e[33283],e[t>>2]==e[t+4>>2])break c;if(!(r=e[33285]))break u}e[33285]=0;break c}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}e[u+2152>>2]=r,e[u+100>>2]=e[u+2156>>2],e[u+104>>2]=r,e[u+96>>2]=u+112,lt(134736,84252,u+96|0);c:{if(e[u+2156>>2]==59){l=u+2156|0,V=u+2152|0,Y=o=Y-32|0;u:if(d[0|(r=u+112|0)]!=35)t=-1,(0|(r=ss(130752,r)))!=-1&&(e[l>>2]=r,e[V>>2]||(e[V>>2]=32),t=r);else{if(d[0|(t=r+1|0)]==120){e[o>>2]=l,t=jt(r+2|0,90005,o);break u}e[o+16>>2]=l,t=jt(t,90070,o+16|0)}if(Y=o+32|0,(0|t)>0)break c}e[32524]=0,e[u+2156>>2]=38,e[u+2152>>2]=32;break n}if((0|(t=e[u+2156>>2]))>32)break n;if(!(r=e[33692]-20|0)|(0|r)==16)break o;break n}if((0|r)!=47&&!_t(r)&&(0|(t=e[u+2152>>2]))!=63&&(0|t)!=33)break n;if((0|(t=e[u+2148>>2]))>780){e[33691]=e[u+2156>>2],f[0|(t=t+189424|0)]=32,f[t+1|0]=0,e[33285]=e[u+2152>>2],s=16384;break e}for(V=e[33285],l=0,r=e[u+2152>>2];e[u+2156>>2]=r,o=0,V||(t=e[33283],o=e[t>>2]==e[t+4>>2],r=e[u+2156>>2]),!((0|r)==62|o|l>>>0>499);)e[(u+144|0)+(l<<2)>>2]=r,l=l+1|0,(r=e[33285])?(V=0,e[33285]=0):(e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t),V=e[33285]);e[(o=u+144|0)+(l<<2)>>2]=0,e[u+2152>>2]=32,ze=u+2148|0,Pe=e[32525],r=0,Y=ve=Y-560|0;c:if(W(o,84333,3)&&W(o,84477,4)){for(t=(o+(ao(o)<<2)|0)-4|0,(0|(gt=e[t>>2]))==47&&(e[t>>2]=32);;){if(t=e[o+(r<<2)>>2]){if(gr(t))t=r;else if(f[(ve+512|0)+r|0]=Ss(t<<24>>24),t=39,(0|(r=r+1|0))!=39)continue}else t=r;break}if(f[(ve+512|0)+t|0]=0,d[ve+512|0]!=47){if((0|(V=ss(130480,ve+512|0)))!=16&&(r=e[ze>>2],e[ze>>2]=r+1,f[r+189424|0]=32),(0|gt)==47&&(r=0,!(502241>>>V&1)))break c}else(0|(r=ss(130480,ve+512|1)))!=16&&(l=e[ze>>2],e[ze>>2]=l+1,f[l+189424|0]=32),V=r+32|0;l=o+(t<<2)|0,t=e[33708],w=O(t,76)+133076|0,r=262174;u:{l:{i:{p:switch(V-1|0){case 33:C:if(!((0|t)<=1)){for(;;){if(e[O(r=t-1|0,76)+133152>>2]==2)break C;if(e[33708]=r,o=t>>>0>2,t=r,!o)break}t=1}r=Le(l,34,t);break c;case 32:C:if(!((0|t)<=1)){for(;;){if(e[O(r=t-1|0,76)+133152>>2]==1)break C;if(e[33708]=r,o=t>>>0>2,t=r,!o)break}t=1}r=Le(l,33,t)+524328|0;break c;case 9:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(t=(w=r<<6)+134912|0)>>2]=10,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=yA(l,88301),o=yA(l,88390),Xt(t,88479)?Xt(t,88528)||(e[28+(134912+(r<<6)|0)>>2]=ia(o,130224)):e[24+(w+134912|0)>>2]=ia(o,130192),bs(ze,e[33709]);break i;case 2:for((0|(t=e[33709]))<=18&&(e[33709]=t+1),e[(t=(Ai=t<<6)+134912|0)>>2]=3,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,OA=1;;){if(o=yA(l,e[(qA=OA<<2)+130448>>2])){gt=0,t=e[qA+131072>>2];C:if(V=e[t>>2])for(;;){for(r=0;w=f[r+V|0],(Pe=e[(r<<2)+o>>2])&&(r=r+1|0,(0|w)==(0|Pe)););m:switch(Pe-34|0){case 0:case 5:if(!w)break C;break;default:break m}if(!(V=e[t+((gt=gt+1|0)<<3)>>2]))break}mo=qA+(Ai+134912|0)|0;C:if((0|(t=e[4+(t+(gt<<3)|0)>>2]))>=0)t=(0|O(t,e[4+(qA+134912|0)>>2]))/100|0;else{for(;o=(t=o)+4|0,gr(e[t>>2]););for(Na=e[t>>2]==43,o=((ri=e[(t=t+(Na<<2)|0)>>2]==45)<<2)+t|0,gt=ve+96|0,Y=V=(Y=w=Y-16|0)-224|0,Je(V+16|0,0,144),t=V+160|4,e[V+24>>2]=t,e[V+60>>2]=t,e[V+92>>2]=-1,e[V+64>>2]=60,e[V+20>>2]=t,e[V+48>>2]=19,r=o;r=(t=r)+4|0,Pe=(Pe=e[t>>2])?Hr(124960,Pe):0;);e[V+100>>2]=t,Gs(r=V+16|0,0,0),Ft(V,r,1,1),r=e[V+8>>2],Co=e[V+12>>2],Pe=e[V>>2],s0=e[V+4>>2],gt&&(bo=gt,gt=e[V+136>>2]+(e[V+20>>2]-e[V+60>>2]|0)|0,e[bo>>2]=gt?t+(gt<<2)|0:o),e[(t=w)+8>>2]=r,e[t+12>>2]=Co,e[t>>2]=Pe,e[t+4>>2]=s0,Y=V+224|0,he=ut(e[t>>2],e[t+4>>2],e[t+8>>2],e[t+12>>2]),Y=t+16|0;m:{r=100;b:if((0|(t=o))!=(0|(o=e[ve+96>>2]))){r=ri?-1:Na;h:{if((0|(t=e[o>>2]))!=115){if((0|t)!=37)break h;if(ee(he=r?+(0|r)*he+100:he)<2147483648){r=~~he;break b}r=-2147483648;break b}if(e[o+4>>2]==116){F(+(bA=he*+(0|r)/12)),t=0|y(1),y(0);x:{if((r=(t=t>>>20&2047)-969|0)>>>0>=63){if(he=bA+1,(0|r)<0)break x;if(F(+bA),r=0|y(1),o=0|y(0),!(t>>>0<1033)){if(he=0,!o&(0|r)==-1048576||(he=bA+1,t>>>0>=2047))break x;if((0|r)>0|(0|r)>=0){P[(t=Y-16|0)+8>>3]=3105036184601418e216,he=3105036184601418e216*P[t+8>>3];break x}if(!(r>>>0<3230714880)){P[(t=Y-16|0)+8>>3]=12882297539194267e-247,he=12882297539194267e-247*P[t+8>>3];break x}}w=t,t=!(o<<1)&(0|(t=r<<1|o>>>31))==-2129002496|t>>>0<2165964800?w:0}ps=(bA=(he=bA-((qr=(he=P[14416])+bA)-he))*he)*bA*(he*P[14421]+P[14420]),bA*=he*P[14419]+P[14418],he*=P[14417],F(+qr),y(1),w=0|y(0),he=ps+(bA+(he+P[(o=w<<4&2032)+115376>>3])),Pe=e[(o=o+115384|0)>>2],V=e[o+4>>2],o=(r=Pe)+(Pe=0)|0,r=(w<<13)+V|0,r=o>>>0<Pe>>>0?r+1|0:r,t?(M(0,0|o),M(1,0|r),he=(bA=+S())*he+bA):-2147483648&w?(M(0,0|o),M(1,r+1071644672|0),(he=(qr=(bA=+S())*he)+bA)<1&&(e[(t=Y-16|0)+8>>2]=0,e[t+12>>2]=1048576,P[t+8>>3]=22250738585072014e-324*P[t+8>>3],he=(he=(ps=he+1)+(qr+(bA-he)+(he+(1-ps)))+-1)==0?0:he),he*=22250738585072014e-324):(M(0,0|o),M(1,r+-1048576|0),he=(bA=+S())*he+bA,he+=he)}if(ee(he*=100)<2147483648){r=~~he;break b}r=-2147483648;break b}}if((0|OA)!=1)break m;if(r)r=(t=ee(he=he*+(0|r)*100)<2147483648?~~he:-2147483648)+100|0;else{if(ee(he*=100)<2147483648){r=~~he;break b}r=-2147483648}}t=(0|O(r,e[qA+134848>>2]))/100|0;break C}t=ee(he)<2147483648?~~he:-2147483648,r&&(t=e[qA+134848>>2]+O(t,r)|0)}e[mo+4>>2]=t}if((0|(OA=OA+1|0))==5)break}bs(ze,e[33709]);break i;case 11:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(t=134912+(r<<6)|0)>>2]=12,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=(t=yA(l,88658))?ia(t,130400):3,o=134912+(r<<6)|0,e[e[47192]+148>>2]!=1?(e[52+(134912+(r<<6)|0)>>2]=t,t=d[t+102776|0]):(e[20+(134912+(r<<6)|0)>>2]=d[t+102764|0],t=d[t+102770|0]),e[o+12>>2]=t,bs(ze,e[33709]);break i;case 34:case 41:case 43:if(!((0|(t=e[33709]))<=0)){if(l=V-32|0,V=0,o=0,r=0,t>>>0>=4)for(w=-4&t,gt=0;OA=2|r,qA=1|r,o=(0|l)==e[134912+((Pe=3|r)<<6)>>2]?Pe:(0|l)==e[134912+(OA<<6)>>2]?OA:(0|l)==e[134912+(qA<<6)>>2]?qA:(0|l)==e[134912+(r<<6)>>2]?r:o,r=r+4|0,(0|w)!=(0|(gt=gt+4|0)););if(w=3&t)for(;o=(0|l)==e[134912+(r<<6)>>2]?r:o,r=r+1|0,(0|w)!=(0|(V=V+1|0)););(0|o)<=0||(e[33709]=o,t=o)}bs(ze,t);break i;case 7:if(t=yA(l,88741),r=yA(l,88860),(0|ia(t,130176))!=1)break i;t=e[ze>>2],e[ze>>2]=t+1,f[t+189424|0]=91,t=e[ze>>2],e[ze>>2]=t+1,f[t+189424|0]=91,t=$a((t=e[ze>>2])+189424|0,r,800-t|0)+e[ze>>2]|0,e[ze>>2]=t+1,f[t+189424|0]=93,t=e[ze>>2],e[ze>>2]=t+1,f[t+189424|0]=93;break i;case 35:e[33692]==36&&(f[e[ze>>2]+189424|0]=0,(o=ss(131104,r=(t=e[33707])+189424|0))&&(e[ze>>2]=br(o,r)+t)),t=e[ze>>2],e[ze>>2]=t+1,f[t+189424|0]=1,t=e[ze>>2],e[ze>>2]=t+1,f[t+189424|0]=89,e[33692]=0;break i;case 8:if(!(t=yA(l,89299)))break i;f[134824]=1,r=e[ze>>2],e[ze>>2]=$a(r+189424|0,t,800-r|0)+e[ze>>2];break i;case 13:f[134824]=1;break i;case 40:case 45:f[134824]=0;break i;case 4:if(!(t=yA(l,89360)))break i;if($a(ve+352|0,t,160),d[ve+352|0]&&!sr(199328,ve+352|0)){f[134760]=1,f[199328]=0,r=16384;break c}if((0|(t=vn(ve+352|0)))<0)break i;e[ve+20>>2]=t,e[ve+16>>2]=1,lt(t=ve+352|0,89460,ve+16|0),Gt(e[ze>>2]+189424|0,t),e[ze>>2]=e[ze>>2]+kt(t);break i;case 10:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(t=134912+(r<<6)|0)>>2]=11,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1;C:if(t=yA(l,89514)){if($a(ve+352|0,t,160),e[34441]){if((0|(t=vn(ve+352|0)))<0||0|Zt[e[34441]](1,t+e[33282]|0,Pe))break C;e[ve+68>>2]=t,e[ve+64>>2]=1,lt(ve+352|0,89658,ve- -64|0)}else{if(!Pe|d[ve+352|0]==47?t=Hn(ve+352|0):(e[ve+48>>2]=Pe,e[ve+52>>2]=ve+352,lt(t=ve+96|0,89564,ve+48|0),t=Hn(t)),(0|t)<0)break C;e[ve+36>>2]=t,e[ve+32>>2]=1,lt(ve+352|0,89623,ve+32|0)}t=ve+352|0,Gt(e[ze>>2]+189424|0,t),e[ze>>2]=e[ze>>2]+kt(t),e[4+(134912+(r<<6)|0)>>2]=1}if(bs(ze,e[33709]),(0|gt)==47){Ga(11,ze),r=16384;break c}f[134772]=1,r=16384;break c;case 42:Ga(43,ze),f[134772]=0,r=16384;break c;case 12:C:{if(t=yA(l,89714)){if(r=16384,(w=(0|(t=ia(t,130336)))<0?2:t)>>>0<=2&&(t=e[ze>>2],e[ve+84>>2]=w,e[ve+80>>2]=1,lt(t+189424|0,89770,ve+80|0),e[ze>>2]=e[ze>>2]+3,r=0),t=e[102784+(w<<2)>>2],!(o=yA(l,89907)))break C;break l}if(r=16384,o=yA(l,89907))break l;t=21;break u}if(w>>>0<3)break i;break u;case 0:(t=yA(l,89965))&&($a(r=ve+352|0,t,160),vn(r)),r=Le(l,1,e[33708])?147456:0;break c;case 1:r=Le(l,2,t)?147456:0;break c;case 5:r=0,e[w>>2]==6&&(r=Le(l,38,t),t=e[33708]),r=524358+(Le(l,6,t)|r)|0;break c;case 6:r=0,(0|(o=e[w>>2]))==6&&(r=Le(l,38,t),o=e[w>>2]),(0|o)==7&&(r=Le(l,39,e[33708])|r),r=524358+(r|Le(l,7,e[33708]))|0;break c;case 37:if(r=524328,e[w>>2]!=6)break c;r=Le(l,38,t)+524328|0;break c;case 38:if(r=524358,(-2&e[w>>2])!=6)break c;r=Le(l,39,t)+524358|0;break c;case 14:case 46:break c;case 3:break p;default:break i}t=yA(l,88893),r=yA(l,88992),o=yA(l,89153),l=ia(t,130272),r=ia(r,130320),t=Qs(o,0),e[ve>>2]=1,o=(0|t)<2?193:t- -64|0,r=(0|(t=(0|r)==1?19:l))==64?o:t,e[ve+4>>2]=r,lt(t=ve+352|0,89230,ve),Gt(e[ze>>2]+189424|0,t),t=e[ze>>2]+kt(t)|0,e[ze>>2]=t,e[33707]=t,e[33692]=r}r=0;break c}t=Qs(o,1),o=e[33722],$e(1,e[33713]),(0|(t=(0|(o=(0|O(t,o))/100<<8))/(0|O(e[36429],10))|0))<=199&&(t=(0|o)/(0|O(e[36428],10))|0),r=r||16384}o=t>>>5|0,l=t,r=((t=(0|t)>4095)?o>>>0>=4095?4095:o:l)+(t?8388608|r:r)|0}if(Y=ve+560|0,r){if(t=e[u+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,!(131072&r)){s=r;break e}Gt(189360,134784),s=r;break e}e[u+2156>>2]=32;c:{u:{if(!(r=e[33285])){if(w=0,t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(r=e[33285]))break u}e[33285]=0;break c}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}e[u+2152>>2]=r,w=0;continue}e[u+2156>>2]=t+57344}if(d[134824])continue;if(o=e[u+2156>>2],!((0|(t=e[u+2152>>2]))!=10|e[47268]!=-1)){(0|(s=Br(o)))==16384?(t=e[u+2148>>2],k[ct+(t<<1)>>1]=e[33284]-e[47353],e[Ur>>2]=t,s=524328,t=br(e[u+2156>>2],t+189424|0)+e[u+2148>>2]|0):t=e[u+2148>>2],f[0|(t=t+189424|0)]=32,f[t+1|0]=0;break e}n:if((0|o)==1){if((0|t)!=66){if((0|t)!=86)break n;for(t=e[u+2148>>2],e[u+2148>>2]=t+1,f[t+189424|0]=0;;){o:{c:{u:{if(!(r=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break o;if(!(r=e[33285]))break u}e[33285]=0;break c}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}if(e[u+2156>>2]=r,!(gr(r)||(0|(t=e[u+2148>>2]))>=799)){e[u+2148>>2]=t+1,f[t+189424|0]=e[u+2156>>2];continue}}break}f[e[u+2148>>2]+189424|0]=0,s=147456;break e}r=e[u+2148>>2],f[0|(t=r+189424|0)]=32,f[t+1|0]=32,f[t+2|0]=32,f[t+3|0]=0,e[u+2148>>2]=r+3;o:{c:{u:{l:{i:{p:{if(!(r=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break l;if(!(r=e[33285]))break p}e[33285]=0;break i}e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t)}if(e[u+2152>>2]=r,o=0,(0|r)!=48)break u;break c}r=e[u+2152>>2]}if(e[47208]=0,e[47201]=1,(0|r)==49)break o;for(o=e[33285],l=0;;){u:{if(!o){if(t=e[33283],e[t>>2]==e[t+4>>2])break u;r=e[u+2152>>2]}if(!(gr(r)|l>>>0>58)){e[188832+(l<<2)>>2]=e[u+2152>>2],(r=e[33285])?(e[33285]=0,o=0):(e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t),o=e[33285]),l=l+1|0,e[u+2152>>2]=r,t=e[u+2148>>2],e[u+2148>>2]=t+1,f[t+189424|0]=32;continue}}break}o=2,e[188832+(l<<2)>>2]=0}e[47201]=o}o:{if(!(r=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(r=e[33285]))break o}e[33285]=0,e[u+2152>>2]=r;continue}e[33284]=e[33284]+1,t=e[33283],e[u+2152>>2]=Zt[e[t+8>>2]](t);continue}Ir=Ir+1|0,r=0,t=e[H+340>>2];n:if(l=B[t>>1]){for(;;){if((65535&l)!=(0|o)){if(l=B[t+((r=r+2|0)<<1)>>1])continue;break n}break}o:switch(0|(t=B[t+(r<<1|2)>>1])){case 1:continue;case 0:break n;default:break o}e[u+2156>>2]=t,o=t}xt(o)?(re=1,r=e[u+2156>>2]):Rt?(e[33285]=e[u+2152>>2],r=1328,e[u+2156>>2]=1328,e[u+2152>>2]=32,Rt=0):(0|(r=e[u+2156>>2]))!=3851?(Rt=0,(0|r)!=3405|e[u+2152>>2]!=8205||(r=3406,e[u+2156>>2]=3406)):(r=32,e[u+2156>>2]=32,Rt=0);n:if(Os(r)){if(e[H+8216>>2]=e[H+8216>>2]+1,e[33692]|e[47200]!=2||Os(Se)||(e[u+2544>>2]=0,e[u+2548>>2]=0,e[u+2304>>2]=84731,!LA(H,u+2304|0,u+2160|0,u+2544|0,0,0))||(KA(H,t=u+2160|0,u+2544|0,-1,0),Or(r=t,t=u+2336|0),e[u+80>>2]=t,lt(r=u+2240|0,85451,u+80|0),t=e[u+2148>>2],(0|(r=kt(r)+t|0))>=800))break n;Gt(t+189424|0,u+2240|0),e[u+2148>>2]=r}else _t(e[u+2156>>2])&&(e[H+8220>>2]=e[H+8220>>2]+1);if(r=e[u+2152>>2],t=e[u+2156>>2],e[47204])if((0|w)>0)w=w-1|0;else{if(!((0|t)!=91|(0|r)!=91)){o=0,w=-1;break t}w=(0|t)==93&&(0|r)==93?2:w}if((0|t)==10){for(o=e[33285],l=0;;){n:{if(!o){if(t=e[33283],e[t>>2]==e[t+4>>2])break n;r=e[u+2152>>2]}if(gr(r)){l=(e[u+2152>>2]==10)+l|0,(r=e[33285])?(e[33285]=0,o=0):(e[33284]=e[33284]+1,t=e[33283],r=0|Zt[e[t+8>>2]](t),o=e[33285]),e[u+2152>>2]=r;continue}}break}if((0|l)>0){s&&Je(t=pr+189424|0,32,Wt(u+2336|0,t)),t=e[u+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=e[u+2152>>2],s=e[47203]?524358:O((0|l)>=3?3:l,30)+524328|0;break e}if(t=e[47268]<(0|Ir),Ir=0,!t){t=e[u+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=e[u+2152>>2],s=262174;break e}}if(o=0,e[33692]|w)break t;if(t=0,!s)break r;if(gr(e[u+2156>>2])){t=s;break r}if(BA(e[u+2156>>2])&&ue(e[u+2156>>2]))break r;e[33691]=e[u+2156>>2],f[0|(t=pr+189424|0)]=32,f[t+1|0]=0,e[33285]=e[u+2152>>2];break e}Rt&&(e[u+2148>>2]=br(1328,e[u+2148>>2]+189424|0)+e[u+2148>>2]),s&&Je(t=pr+189424|0,32,Wt(u+2336|0,t)),t=e[u+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0}s=589864;break e}if(!((0|(r=e[u+2156>>2]))!=46|e[u+2152>>2]!=46)){r:{a:{n:{if(!(r=e[33285])){if(r=e[33283],e[r>>2]==e[r+4>>2])break r;if(!(r=e[33285]))break n}e[33285]=0;break a}e[33284]=e[33284]+1,r=e[33283],r=0|Zt[e[r+8>>2]](r)}if(g=r,(0|r)==46)for(e[u+2152>>2]=32,e[u+2156>>2]=8230,g=e[33285];;){a:{n:{if(!g){if(r=e[33283],e[r>>2]==e[r+4>>2]){g=46;break r}if(!(g=e[33285]))break n}e[33285]=0,r=0;break a}e[33284]=e[33284]+1,r=e[33283],g=0|Zt[e[r+8>>2]](r),r=e[33285]}if((0|g)!=46)break r;e[u+2152>>2]=32,e[u+2156>>2]=8230,g=r}}(0|(r=e[u+2156>>2]))!=8230?e[33285]=g:(e[u+2152>>2]=g,r=8230)}if(gt=0,(0|(V=Br(r)))!=16384){r:if(536621&V)for(r=e[33285];;){if(!r&&(r=e[33283],e[r>>2]==e[r+4>>2])||!(536621&Br(e[u+2152>>2])))break r;(g=e[33285])?(e[33285]=0,r=0):(e[33284]=e[33284]+1,r=e[33283],g=0|Zt[e[r+8>>2]](r),r=e[33285]),e[u+2152>>2]=g}if(1048576&V){e[h+780>>2]=V>>>12&15,Rt=1,w=0,s=t;continue}(gr(e[u+2152>>2])|32768&V||Pn(e[u+2152>>2])||(0|(r=e[u+2152>>2]))==63||(l=0,e[33285]||(r=e[33283],l=e[r>>2]==e[r+4>>2],r=e[u+2152>>2]),l||(0|r)==1))&&(gt=1)}if((0|(r=e[u+2156>>2]))==57404&&(e[u+2156>>2]=60,r=60),e[47201]){s=0;r:if(!(1<<(l=Tr(r))&1879048255&&l>>>0<=30)){if(!((l=Tr(r))>>>0>27)){if(116672&(w=1<<l))break r;if(134227968&w){s=!(1024&Ue(r,l));break r}}s=1}if(!(d[134772]|!s)&&(e[47201]==1||Hr(188832,e[u+2156>>2]))){e[H+288>>2]=0,o=e[u+2156>>2],f[u+2336|0]=0,w=e[u+2152>>2],r=0;r:{a:if(!((0|(s=e[34064]))<=0))for(;;){if((0|o)==e[136272+(r<<4)>>2]){if(e[136276+(r<<4)>>2])break r;if(kr(0,r))break a;break r}if((0|s)==(0|(r=r+1|0)))break}r=-1}r:if((0|r)>=0)e[u>>2]=r,lt(u+2336|0,86007,u),e[33285]=w;else if((l=!gt)|(0|o)!=46|(0|w)==46||(e[u+2600>>2]=0,e[u+2604>>2]=0,e[u+2540>>2]=86036,!LA(H,u+2540|0,u+2544|0,u+2600|0,0,0))?r=xr(u+2240|0,H,o,0):(KA(H,r=u+2544|0,u+2600|0,-1,0),Or(s=r,r=u+2160|0),e[u+64>>2]=r,lt(r=u+2304|0,85451,u- -64|0)),s=r,l|!e[u+2148>>2]|2&d[H+76|0]){for(r=e[33285],l=1;;){a:{n:{if(!r){if(r=e[33283],e[r>>2]==e[r+4>>2]|(0|o)==60|(0|o)!=(0|w))break a;if(l=l+1|0,w=e[33285])break n;e[33284]=e[33284]+1,r=e[33283],w=0|Zt[e[r+8>>2]](r),r=e[33285];continue}if((0|o)==60|(0|o)!=(0|w))break a;w=r,l=l+1|0}r=0,e[33285]=0;continue}break}if(e[u+2152>>2]=w,gt&&(e[33285]=w),(0|l)==1){e[u+16>>2]=s,lt(u+2336|0,86219,u+16|0);break r}if((0|l)<=3){if(f[u+2336|0]=0,(0|(r=e[50786]))<=299&&(e[u+2336>>2]=d[86728]|d[86729]<<8|d[86730]<<16|d[86731]<<24,k[u+2340>>1]=d[86732]|d[86733]<<8),(0|l)>0){for(;e[u+32>>2]=s,lt(r=u+2160|0,86219,u+32|0),w=l>>>0>1,ts(u+2336|0,r),l=l-1|0,w;);r=e[50786]}if((0|r)>299)break r;e[u+2160>>2]=d[86857]|d[86858]<<8|d[86859]<<16|d[86860]<<24,r=d[86860]|d[86861]<<8|d[86862]<<16|d[86863]<<24,f[u+2163|0]=r,f[u+2164|0]=r>>>8,f[u+2165|0]=r>>>16,f[u+2166|0]=r>>>24,ts(u+2336|0,u+2160|0);break r}e[u+56>>2]=s,e[u+52>>2]=l,e[u+48>>2]=s,lt(u+2336|0,86932,u+48|0)}else e[33691]=o,e[33285]=w,k[u+2336>>1]=32;if(l=kt(s=u+2336|0),Gt((r=e[u+2148>>2])+189424|0,s),e[u+2148>>2]=r+l,gt){if((0|o)==45){s=16384;break e}if(s=Br(o),!(2&d[H+76|0]|(0|r)<=0)){s=(-32769&s)==266270?262148:(28672&s)==4096?266244:262148;break e}if(!(524288&s)){s=(28672&s)==4096?266244:262148;break e}if((0|s)>=0)break e}o=e[u+2156>>2]}}if(o|!(2097152&V)||(r=Gt(e[u+2148>>2]+189424|0,xr(u+2336|0,H,e[u+2156>>2],1)),d[0|r]?(e[u+2148>>2]=e[u+2148>>2]+kt(r),V&=-28673,o=e[u+2156>>2]):o=0),w=0,gt){r:if(gr(g=e[u+2152>>2]))for(l=e[33285],r=0;;){if(!l&&(s=e[33283],e[s>>2]==e[s+4>>2])||!gr(g))break r;r=((0|g)==10)+r|0,(g=e[33285])?(e[33285]=0,l=0):(e[33284]=e[33284]+1,s=e[33283],g=0|Zt[e[s+8>>2]](s),l=e[33285])}else r=0;s=(0|(w=e[u+2156>>2]))==46&&(0|r)<2?4194304|V:V;r:{if(!r){l=1,(0|w)!=44|(0|Se)!=46|e[H+212>>2]!=26741|Pe-48>>>0>=10||g-48>>>0>=10&&!ue(g)||(e[u+2156>>2]=1367,l=0),(0|(V=e[u+2156>>2]))!=46|(0|g)!=39||(w=l,V=e[33283],(0|(ve=e[V>>2]))==e[V+4>>2]?l=0:(l=0|Zt[e[V+8>>2]](V),e[V>>2]=ve),V=e[u+2156>>2],l=(0|l)!=115&w);a:if((0|V)!=46)l&=re;else{n:if(1&f[H+106|0]){if(!(Se-48>>>0<10)&&((w=Se-73|0)>>>0>15|!(1<<w&40969)||!(1<<(w=Pe-73|0)&40969&&w>>>0<=15||gr(Pe))))break n;l=Se-48>>>0>=10?0:!ue(g)&(0|g)!=45&l}if(ue(g)&&(l=d[H+208|0]!=0&l),re){V=e[u+2156>>2];break a}V=32,e[u+2156>>2]=32,l=0}if(!(!l|(0|V)!=46|!e[47203]|(0|g)!=60)){pr=e[u+2148>>2],t=s;break r}if(!l)break r}if(t=e[u+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=g,Se-48>>>0<10&&(s=BA(g)?s:-4194305&s),(0|r)<2)break e;s=(0|s)==536621?536656:(0|s)==532520?532555:524358;break e}(e[33285]||(w=0,r=e[33283],e[r>>2]!=e[r+4>>2]))&&(w=0,gr(e[u+2152>>2])&&(e[33285]=g))}s=t}if(e[33712]!=1){if((0|o)!=(0|(r=e[u+2156>>2])))l=e[u+2148>>2],(0|r)==57404&&(r=60,e[u+2156>>2]=60);else{t:{if(Pn(o))r=57384;else{if(r=45,e[u+2156>>2]==45)break t;r=32}e[u+2156>>2]=r}l=e[u+2148>>2]}e[u+2148>>2]=br(r,l+189424|0)+e[u+2148>>2],gr(e[u+2156>>2])||Pn(e[u+2156>>2])||(t=e[u+2148>>2],k[ct+(t<<1)>>1]=e[33284]-e[47353],(0|t)<=(l+1|0)||Je(si+(l<<1)|0,255,t+~l<<1)),r=e[u+2148>>2],e[Ur>>2]=r;t:{r:{if((0|r)>725){if(!BA(e[u+2156>>2]))break r;r=e[u+2148>>2]}if((0|r)<796)continue;break t}if(r=e[u+2148>>2],!(e[u+2156>>2]-48>>>0>=10)&&(0|r)<796)continue}break}}f[0|(t=r+189424|0)]=32,f[t+1|0]=0,e[33285]=e[u+2152>>2],s=16384}Y=u+2608|0,Rt=s,gs&&(t=e[h+780>>2],e[gs>>2]=t||Rt>>>12&7),t=(h+5184|0)+(e[h+6800>>2]<<1)|0,k[t+6>>1]=0,k[t+2>>1]=0,k[t+4>>1]=32767,V=O(4095&Rt,8388608&Rt?320:10),s=189424;e:{t:{r:if(t=d[189424]){for(;;){if(!!(255&(t=t<<24>>24))&t>>>0<33){if(t=d[0|(s=s+1|0)])continue;break r}break}if(d[0|s])break t}V=(0|(r=V-(t=e[47566])|0))>0?r:0,e[47566]=V+t,Rt=d[190268]?524288|Rt:Rt,e[H+8240>>2]=Rt;break e}e[47566]=V,t=d[190268],e[H+8240>>2]=Rt,t&&($t=1,e[47568]=e[47568]+1,(0|(t=e[47569]))<=0||(t=t-1|0,e[47569]=t,t||(f[190280]=0)))}e[49572]=1,e[47572]=655360,e[47573]=0,e[H+8184>>2]=0,e[H+8188>>2]=0,t=0,e[H+288>>2]=0,e[(r=H- -8192|0)>>2]=0,e[r+4>>2]=0,e[H+8200>>2]=0,e[H+8224>>2]=0,e[H+8228>>2]=0,e[(r=H+8232|0)>>2]=0,e[r+4>>2]=0,f[h+786|0]=32,k[h+784>>1]=8192,e[h+6812>>2]=32,k[h+1588>>1]=3,e[h+1584>>2]=0,s=0;e:if(!((0|(r=e[h+6800>>2]))<=0)){for(;;){if(k[(h+5184|0)+(s<<1)>>1]>0)break e;if((0|r)==(0|(s=s+1|0)))break}s=r}if(r=B[(h+5184|0)+(s<<1)>>1],k[h+1592>>1]=r,r)for(;t=!!(65535&~r)+t|0,r=B[(h+5184|0)+((s=s+1|0)<<1)>>1];);for(f[h+1594|0]=t,l=3,ct=1,s=0;;){Pe=e[h+6808>>2],Pr(h+6808|0,(ze=(h+784|0)+l|0)-1|0),!d[H+170|0]|e[h+6808>>2]-48>>>0>=10||BA(Pe)&&(e[h+6808>>2]=97),ie?e[h+6812>>2]=ie:v&&Pr(h+6812|0,v+189423|0),r=v;e:{t:if(s||(r=Wt(h+6816|0,v+189424|0)+v|0,s=e[h+6816>>2])){if(re=Wt(h+6804|0,t=r+189424|0),(0|s)==1){if(o=r-1|0,ie=32,Se=0,e[h+6812>>2]!=32){r=o,t=32;break t}v=0,s=r;r:{a:switch(d[0|t]-43|0){case 0:s=r+1|0,v=64;break r;case 2:break a;default:break r}s=r+1|0,v=96}if(f[0|(t=s+189424|0)]-48>>>0>=10)g=s+1|0,re=-1;else{for(re=la(t);s=(t=s)+1|0,f[t+189424|0]-48>>>0<10;);g=s,s=t}if((0|(ie=e[47350]))>247)t=0;else if(t=0,!((0|(s=f[s+189424|0]))<0)&&(s=Qa(84868,255&s,14))){r=(t=s-84868|0)+1|0,(0|re)==-1&&(re=e[105536+(r<<2)>>2],v=0);r:{a:switch(t-8|0){case 0:e[49574]=0,e[49573]=re;break r;case 4:break a;default:break r}(0|re)>=3?f[199304]=1:f[199304]=0}t=1,e[47350]=ie+1,e[198304+(ie<<2)>>2]=(r+v|0)+(re<<8),r=g}ie=e[h+6812>>2],Je(o+189424|0,32,r-o|0),is=t+is|0,s=0;break e}ie=0,(0|s)==32|e[49573]!=36?(Se=0,t=s):(e[h+6812>>2]!=32|e[h+6804>>2]!=32||(e[49573]=20),Se=0,t=Dn(s,H))}else e[h+6804>>2]=32,Se=1,ie=0,re=0,t=32;t:if(or){if(or=1,ct=8,s=0,(0|t)!=93|e[h+6804>>2]!=93)break t;r=r+1|0,t=32,or=0}else if((240&(s=e[49573]))!=64)if(or=0,16&s)s=0;else{r:{a:{n:{o:{if(!((0|(g=(0|t)==8242||(0|t)==8217||(0|t)==146||(0|t)==180?39:t))!=8216&(0|g)!=63))if(BA(e[h+6808>>2])){if(g=t,BA(e[h+6804>>2])){g=39;break o}}else g=t;c:{if((0|g)!=1367){if((0|g)==1328){_|=1024,g=32;break o}if((t=g-44032|0)>>>0>11183)break o;if(o=((s=((w=65535&t)>>>0)/28|0)>>>0)%21|0,t=t-O(s,28)&65535,g-50500>>>0>587)break c;s=t?t+4519|0:0,o=o+4449|0;break a}_|=131072,pr=e[h+6804>>2],t=e[h+6812>>2],g=32;break n}s=50500+(t+O(o,28)|0)|0,o=(w>>>0)/588|4352;break a}if(pr=e[h+6804>>2],t=e[h+6812>>2],!((s=g-12592|0)>>>0>51)){o=4352|d[s+103296|0],s=0;break a}}u=r+189424|0;n:if(!((0|(s=e[H+212>>2]))!=28268&(0|s)!=24934|(0|g)!=39)&&!_t(t)&&(Wt(h+6820|0,u+1|0),Bn(e[h+6820>>2]))){o=601,s=0;o:switch(pr-110|0){case 6:break a;case 0:break o;default:break n}if(e[H+212>>2]!=24934)break a;f[0|u]=32;break a}if(e[h+6824>>2]=32,(0|(t=e[49897]))>0)e[49897]=t-1,s=0;else{if(!g){s=0,o=0;break r}n:{o:{c:{u:if((gt=e[H+180>>2])&&(w=g,(ve=Os(g))&&(w=Dn(g,H)),!oo(gt)))for(;;){e[h+16>>2]=0,e[h+624>>2]=w,t=Wt(h+16|0,gt)+gt|0;l:if(e[h+624>>2]==e[h+16>>2]){if(d[0|t]){for(o=1,OA=0,s=u;qA=Wt(h+16|0,t),Ir=Wt(h+624|0,s),Ur=Dn(e[h+624>>2],H),e[h+624>>2]=Ur,s=s+Ir|0,OA=(Ir=(0|Ur)==e[h+16>>2])+OA|0,o&=Ir,d[0|(t=t+qA|0)];);if(!o)break l;e[49897]=OA}if(!(t=t+1|0))break u;if(8&d[188788]&&(e[h>>2]=gt,e[h+4>>2]=t,ar(e[47195],85187,h)),t=Wt(h+6828|0,t)+t|0,d[0|t])break c;s=0;break o}for(;s=t,t=t+1|0,d[0|s];);for(;d[0|(s=(t=s)+1|0)];);if(oo(gt=t+2|0))break}s=0,o=g;break n}Wt(h+6824|0,t),ve&&Os(pr)&&(e[h+6824>>2]=an(e[h+6824>>2])),s=e[h+6824>>2]}o=e[h+6828>>2],_|=2097152,ve&&(o=an(o))}if((0|o)!=8)break a}o=r;break e}s?e[h+6804>>2]=s:s=0}BA(o)||Bn(o)||Hr(e[H+336>>2],o)||!BA(e[h+6808>>2])|!(!d[H+170|0]|o-48>>>0>=10)&e[h+6804>>2]-48>>>0>=10||(o=32,Xe=1);r:{a:{n:{o:{c:{if(e[h+6808>>2]-48>>>0<10){if(o-48>>>0<10){t=T;break c}if(1<<(t=o-32|0)&20481&&t>>>0<=14)break o;Xe=1}else if(t=0,e[h+6812>>2]!=44||(t=T,(0|o)!=44))break c;o=32;break o}if((0|o)==91&&((0|(g=e[h+6804>>2]))==2||(o=91,(0|g)==91&&e[47204])))break n;T=t}if(BA(o)){o:{c:{u:{if(BA(e[h+6808>>2])){if(!d[H+171|0]||(t=e[h+6808>>2],!((0|o)>12352)&&(0|t)<12353))break u}else t=e[h+6808>>2];if(zr=Hr(e[H+336>>2],t)?zr:0,(0|(t=e[h+6808>>2]))!=32&&!Hr(e[H+336>>2],t)){t=32,J=Pn(e[h+6808>>2])?J:256|J;break c}_=Os(o)?2|_:_,e[h+6808>>2]!=32|f[ze-2|0]-48>>>0>=10|e[h+6812>>2]-48>>>0<10||(f[(h+784|0)+l|0]=32,t=1588+(O(zt,12)+h|0)|0,k[t>>1]=B[t>>1]+1,l=l+1|0)}if(t=32,(0|o)==32)break o;if(zr=zr+1|0,(0|(g=e[H+600>>2]))<=0){t=o;break o}if(!((0|o)<=591&(0|(w=e[h+6808>>2]))>=(0|g))){if((0|o)<(0|g)){t=o;break o}if((0|zr)<2){t=o;break o}if(!((0|w)<=591)){t=o;break o}}if(!BA(w)){t=o;break o}_|=16384,J|=128}Xe=1}if(fa=fa+1|0,Os(t)){if(g=Dn(t,H),e[H- -64>>2]){t=ga?g:712,s=ga?s:g,ga=1;break t}if(ue(e[h+6812>>2])){if(e[h+6808>>2]==32){t=g;break t}if(t=32,e[H+212>>2]!=26465)break r;for(o=85240,w=(h+784|0)+l|0,re=0;;){if(u=kt(o),d[0|(Pe=w-u|0)]==32&&!Zr(Pe+1|0,o,u=u-1|0)){if((0|(o=f[o+u|0]))==(0|g)){t=g;break t}if((0|o)==65&&tn(H,g)){t=g;break t}}if(o=e[131184+((re=re+1|0)<<2)>>2],(0|re)==11)break}break r}if(t=32,(0|g)==32)break t;if(!Os(e[h+6812>>2])){t=g;break t}if(!ue(e[h+6804>>2])){t=g;break t}if(Wt(h+16|0,189424+(r+re|0)|0),!(e[H+212>>2]!=28268|(0|zr)!=2|(0|g)!=106|e[h+6812>>2]!=73)){t=g;break t}if(e[h+6808>>2]==32){t=g;break t}if(!BA(e[h+16>>2])){t=g;break t}J|=256,ie=32,Xe=1;break t}if(!ct){ct=0;break t}if((0|zr)<3){ct=0;break t}if((0|t)!=115){ct=0;break t}if(e[H+212>>2]!=25966){ct=0;break t}if(e[h+6804>>2]!=32){ct=0;break t}if(ct|=4,t=32,d[(o=l+h|0)+783|0]!=39)break t;f[o+783|0]=32;break t}t=32;o:{c:{u:{l:{i:switch(o-39|0){default:if((0|o)==95)break t;case 1:case 2:case 3:case 4:case 5:if(o-48>>>0>=10||d[H+170|0]&&BA(e[h+6808>>2])&&!((g=e[h+6804>>2])-48>>>0<10|g-2406>>>0<10))break o;if((0|(w=e[h+6808>>2]))==32)break c;if(g=e[h+6808>>2],w-48>>>0<10)break u;if((0|(w=g))==(0|(g=e[H+128>>2])))break l;Xe=1;break t;case 6:if(!Bn(e[h+6812>>2])&&BA(e[h+6804>>2])){if(e[h+6808>>2]!=32){Xe=1;break t}if(_|=128,(0|zt)<=0)break t;o=1572+(O(zt,12)+h|0)|0,e[o>>2]=16384|e[o>>2];break t}if(o=e[h+6804>>2],!(e[h+6812>>2]!=32|(0|o)!=32)){vA=4;break t}if((0|o)==45){r=r+1|0,vA=4;break t}if(t=45,e[h+6808>>2]!=32||!BA(Pe)||BA(e[h+6812>>2]))break t;f[(h+784|0)+l|0]=32,o=1588+(O(zt,12)+h|0)|0,k[o>>1]=B[o>>1]+1,l=l+1|0;break t;case 7:if(e[h+6808>>2]==46){Xe=1;break t}if(t=46,(0|zt)<=0||(o=1572+(O(zt,12)+h|0)|0,1&f[o+1|0])||!BA(e[h+6812>>2]))break t;e[o>>2]=65536|e[o>>2],t=(t=Bn(e[h+6804>>2]))||e[h+6804>>2]==45?32:46;break t;case 0:break i}i:{if((0|(g=e[h+6812>>2]))!=46||(o=115,e[h+6804>>2]!=115)){if(!xt(g))break i;o=e[h+6804>>2]}if(BA(o))break a}if(1&(o=e[H+88>>2])){if(BA(e[h+6804>>2]))break a;o=e[H+88>>2]}if(2&o&&BA(e[h+6812>>2]))break a;if(!(!Hr(e[H+332>>2],e[h+6812>>2])|(0|Pe)!=32)){r=(e[h+6804>>2]==32)+r|0;break a}if(g=(0|(o=e[h+6808>>2]))!=115|Aa,Aa=0,!(1&g))break t;Aa=!!(0|Bn(o)),vA=4;break t}if((0|g)==44&T){Xe=1;break t}T=1;break o}if((0|g)!=32)break o}BA(Pe)&&(BA(e[h+6812>>2])||(f[(h+784|0)+l|0]=32,t=1588+(O(zt,12)+h|0)|0,k[t>>1]=B[t>>1]+1,l=l+1|0))}t=o;break t}or=1,o=r+1|0,T=t;break e}t=39,Aa=0;break t}Xe=1,ie=32}else{if(t-48>>>0<10){s=0,o=(0|(g=e[49574]+1|0))>(15&e[49573]),e[49574]=o?0:g,t=o?32:t,Xe|=o,or=0;break t}s=0,e[49574]=0,t=(o=e[h+6808>>2]-48>>>0<10)?32:t,Xe|=o,or=0}if(Bn(t)){if(e[h+6808>>2]==32){_|=262144,o=r;break e}if(o=e[h+6816>>2]-9>>>0<2,w=1&Xe){re=0;t:if(!((0|b)>(0|(t=r-1|0))))for(;;){if(!(g=k[(h+5184|0)+(t<<1)>>1]))break t;if(re=((0|g)>0)+re|0,!((0|b)<=(0|(t=t-1|0))))break}f[1594+(O(zt,12)+h|0)|0]=re}if(J=o?262144|J:J,f[(h+784|0)+l|0]=32,t=l+1|0,!((0|zt)>298||(o=(h+1584|0)+O(zt,12)|0,(0|(g=B[o+4>>1]))>=(0|t)))){if((0|is)<=0?b=e[o>>2]:(b=198300+(e[47350]<<2)|0,e[b>>2]=128|e[b>>2],is=0,b=64|e[o>>2]),u=e[47352],f[o+6|0]=u,e[o>>2]=b|(fa?ct:-2&ct)|(d[199304]?2048:0)|_,(0|u)>0){for(;_=(b=h+784|0)+t|0,b=b+(t=t-1|0)|0,f[0|_]=d[0|b],(0|t)>(0|g););f[0|b]=32,k[o+4>>1]=g+1,t=l+2|0}g=(h+1584|0)+O(zt=zt+1|0,12)|0,e[g>>2]=0,k[g+4>>1]=t,l=r;t:if(!((0|(o=e[h+6800>>2]))<=(0|r))){for(;;){if(k[(h+5184|0)+(l<<1)>>1]>0)break t;if((0|o)==(0|(l=l+1|0)))break}l=o}if(re=B[(h+5184|0)+(l<<1)>>1],k[g+8>>1]=re,fa=0,o=0,re)for(;o=!!(65535&~re)+o|0,re=B[(h+5184|0)+((l=l+1|0)<<1)>>1];);f[g+10|0]=o,e[47352]=0,ct=1,_=J,J=0,ga=0}Xe=0,s=w?0:s,o=w?v:r}else(0|l)>795?(o=r,r=b,t=l):(t=br(t,(h+784|0)+l|0)+l|0,o=r,r=b);e[47352]<(0|vA)&&(e[47352]=vA),vA=0,b=r,l=t}if(Se||(v=o,!((0|l)<799)))break}(0|is)<=0|zt||(t=198300+(e[47350]<<2)|0,e[t>>2]=128|e[t>>2],e[h+1584>>2]=64|e[h+1584>>2],zt=1),t=(h+784|0)+l|0,e[H+8204>>2]=t-1,r=0,f[0|t]=0,f[h+1590|0]=0,f[1590+(O(zt,12)+h|0)|0]=8;e:if((0|zt)<=0)e[h+1584>>2]=512|e[h+1584>>2],l=e[49572];else{t=zt-1|0;t:if((0|zt)!=1)for(s=t;;){if(!Pn(f[B[1588+(O(s,12)+h|0)>>1]+(h+784|0)|0])){r=s;break t}if(g=(0|s)>1,s=s-1|0,!g)break}if(r=(h+1584|0)+O(r,12)|0,e[r>>2]=16|e[r>>2],4194304&Rt&&(t=(h+1584|0)+O(t,12)|0,256&(r=e[t>>2])||(e[t>>2]=65536|r)),e[h+1584>>2]=512|e[h+1584>>2],!((0|zt)<=0|(0|(l=e[49572]))>990))for(g=3|(t=h+624|0),w=2|t,ie=h+754|0,Se=!(4194304&Rt),v=0,b=0;;){e[47354]=e[47354]+1;t:{if((0|(t=e[49827]))<=0||(t=t-1|0,e[49827]=t,t)){if(d[190280])break t}else f[190280]=0;t=B[1588+(O(v,12)+h|0)>>1]+(h+784|0)|0;r:if(!(f[0|t]-48>>>0>=10)&&(r=h+624|0,s=t,e[H+112>>2]!=1227133512)){for(;;){a:{if(f[0|s]-48>>>0<10)f[0|r]=d[0|s],r=r+1|0,s=s+1|0;else{if(e[H+124>>2]!=f[0|s]|d[s+1|0]!=32||(l=s+2|0,d[s+3|0]==32|f[0|l]-48>>>0>=10|d[s+4|0]==32))break a;v=v+1|0,s=l}if(r>>>0<ie>>>0)continue;break r}break}Je(t+(r=r-(T=h+624|0)|0)|0,32,(s=(l=s-t|0)-r|0)>>>0<=l>>>0?s:0),qt(t,T,r)}for(r=0;s=r,r=r+1|0,f[t+s|0]-48>>>0<10;);r:if(s-5>>>0<=27){for(f[h+626|0]=32,k[h+624>>1]=8224,d[0|t]!=48&e[H+132>>2]>=(0|s)||(r=(h+1584|0)+O(v,12)|0,e[r>>2]=524288|e[r>>2]),J=(h+1584|0)+O(v,12)|0,re=0,l=g;r=t,!((t=f[0|t])-48>>>0>=10&(0|t)!=e[H+128>>2])&&(f[0|l]=t,t=l+1|0,T=s,(0|(s=s-1|0))<=0?l=t:e[H+112>>2]>>>s&1?(u=e[J+4>>2],_=(h+16|0)+O(re,12)|0,e[_>>2]=e[J>>2],e[_+4>>2]=u,e[_+8>>2]=e[J+8>>2],re=re+1|0,(0|(_=e[H+124>>2]))!=32&&(f[l+1|0]=_,t=l+2|0),f[0|t]=32,l=t+1|0,8&d[J+2|0]||((vA=e[H+112>>2])>>>T-2&1&&(f[t+1|0]=48,f[t+2|0]=48,vA=e[H+112>>2],l=t+3|0),vA>>>T-3&1&&(f[0|l]=48,l=l+1|0))):l=t,t=r+1|0,l>>>0<ie>>>0););if(s=e[J+4>>2],t=(h+16|0)+O(re,12)|0,e[t>>2]=e[J>>2],e[t+4>>2]=s,s=e[J+20>>2],e[t+16>>2]=e[J+16>>2],e[t+20>>2]=s,s=e[J+12>>2],e[t+8>>2]=e[J+8>>2],e[t+12>>2]=s,s=1,(0|re)>0)for(;t=(h+16|0)+O(s,12)|0,e[t>>2]=-262209&e[t>>2],(0|re)>=(0|(s=s+1|0)););if(t=d[r+4|0]|d[r+5|0]<<8|d[r+6|0]<<16|d[r+7|0]<<24,s=d[0|r]|d[r+1|0]<<8|d[r+2|0]<<16|d[r+3|0]<<24,f[0|l]=s,f[l+1|0]=s>>>8,f[l+2|0]=s>>>16,f[l+3|0]=s>>>24,f[l+4|0]=t,f[l+5|0]=t>>>8,f[l+6|0]=t>>>16,f[l+7|0]=t>>>24,t=d[r+12|0]|d[r+13|0]<<8|d[r+14|0]<<16|d[r+15|0]<<24,r=d[r+8|0]|d[r+9|0]<<8|d[r+10|0]<<16|d[r+11|0]<<24,f[l+8|0]=r,f[l+9|0]=r>>>8,f[l+10|0]=r>>>16,f[l+11|0]=r>>>24,f[l+12|0]=t,f[l+13|0]=t>>>8,f[l+14|0]=t>>>16,f[l+15|0]=t>>>24,f[l+16|0]=0,l>>>0<=g>>>0)break r;for(t=d[J+6|0],re=0,s=g;;){for(b=XA(H,s,(h+16|0)+O(re,12)|0,255&t);t=d[0|s],s=s+1|0,(0|t)!=32;);if(t=0,f[J+6|0]=0,re=re+1|0,!(s>>>0<l>>>0))break}}else{if(e[47352]=0,b=XA(H,t,r=(h+1584|0)+O(v,12)|0,d[r+6|0]),(0|(s=e[47352]))>d[r+18|0]&&(f[r+18|0]=s,e[47352]=0),!(!(4096&b)|d[0|t]==32))for(;Je(h+624|0,0,150),e[h+624>>2]=538976288,e[h+628>>2]=538976288,f[h+632|0]=32,XA(H,qt(w,t,s=Wt(h+16|0,t)),r,0),d[0|(t=t+s|0)]!=32;);50331648&b&&(V=(t=Se|(~e[33264]+zt|0)!=(0|v))?V:10,t|!gs||(e[gs>>2]=4,V=10))}if(128&b&&!((0|(r=e[33264]))<=0)){if(t=0,s=r,l=3&r)for(;T=(h+1584|0)+O(s+v|0,12)|0,e[T>>2]=1048576|e[T>>2],s=s-1|0,(0|l)!=(0|(t=t+1|0)););if(r>>>0>=4)for(;t=(h+1584|0)+O(s+v|0,12)|0,e[t>>2]=1048576|e[t>>2],e[(r=t-12|0)>>2]=1048576|e[r>>2],e[(r=t-24|0)>>2]=1048576|e[r>>2],e[(t=t-36|0)>>2]=1048576|e[t>>2],s=s-4|0;);e[33264]=s}}if(l=e[49572],(0|zt)<=(0|(v=v+1|0)))break e;if(!((0|l)<991))break}}if((0|(s=e[47351]))<(0|(g=e[47350]))){for(ie=e[47202],Se=e[49846],re=e[47352];;){t=(r=e[198304+(s<<2)>>2])>>8;e:{t:switch((31&r)-9|0){case 0:ie=t;break e;case 4:Se=t;break e;case 3:break t;default:break e}re=r>>>0>=256?t+re|0:0}if(!(!(128&r)&(0|g)>(0|(s=s+1|0))))break}e[47352]=re,e[47351]=s,e[49846]=Se,e[47202]=ie}e[49572]=l+2,e[(t=190288+(l<<3)|0)>>2]=589824,k[t+4>>1]=o,e[t+8>>2]=589824,k[t+12>>1]=o,r=zt&&e[47199]?V:10,e[33285]?t=0:(t=e[33283],t=e[t>>2]==e[t+4>>2]),V=t?r:V,v=$t,g=0,zt=0,Y=w=Y-32192|0,e[w+24>>2]=0,e[w+28>>2]=0,e[w+16>>2]=0,e[w+20>>2]=0,e[w+8>>2]=0,e[w+12>>2]=0,e[w>>2]=0,e[w+4>>2]=0,o=e[49572],u=B[190284+(o<<3)>>1];e:{if((0|(s=o-3|0))<0)t=s;else{for(;;){if(g=(0|(r=127&d[(t=190288+(s<<3)|0)+3|0]))<(0|g)?g:r,B[t+4>>1])t=s;else if(t=-1,r=(0|s)>0,s=s-1|0,r)continue;break}if(g>>>0>3)break e}for(;;){if((0|(t=t-1|0))<0)break e;if(64&d[0|(r=190288+(t<<3)|0)]){f[r+3|0]=4;break e}if(!(d[r+3|0]<4))break}}if(t=e[H+292>>2],s=0,(0|o)<=0)g=0;else for(T=-1,g=0;;){r=t,e[H+292>>2]!=(0|t)&&(k[(t=190288+(s<<3)|0)>>1]=32|B[t>>1]),(0|g)>0&&(J=e[(b=190288+(s<<3)|0)+4>>2],e[(l=(t=s-g<<3)+190288|0)>>2]=e[b>>2],e[l+4>>2]=J,(0|T)!=-1&&(k[4+(t+190288|0)>>1]=T),T=-1);e:{if(d[2+((l=s<<3)+190288|0)|0]==21){if(t=d[(b=l+190288|0)+7|0],2&d[0|b])break e;t:if((0|t)!=(0|r)){if(b=d[10+(l+190288|0)|0]-9|0){if((0|b)==12)break t;break e}if(d[18+(l+190288|0)|0]!=21)break e}(0|T)==-1&&(T=(t=B[4+(l+190288|0)>>1])||-1),g=g+1|0}t=r}if((0|o)==(0|(s=s+1|0)))break}if(e[49572]=o-g,ns(t),(r=e[H+36>>2])&&!((0|(t=(g=e[49572])-1|0))<0))for(ie=256&r,_=4&r,Se=8&r,J=15&r,Xe=16&r,$t=2&r,r=r>>>8&1,s=0;;){if(l=g,o=s,g=t,(0|(t=d[(b=(ct=t<<3)+190288|0)+2|0]))==21){e:{t:{if((0|(s=l-2|0))>=0)for(;;){if(d[2+((t=s<<3)+190288|0)|0]==21)break t;if(t=(0|s)>0,s=s-1|0,!t)break}t=e[H+292>>2];break e}t=d[7+(t+190288|0)|0]}ns(t),t=d[b+2|0]}if(s=o,(t=e[144464+((255&t)<<2)>>2])&&(s=r,!(32&d[0|b]))){s=d[t+11|0],T=0,$t&&((0|(l=d[0|t]))!=118&(0|l)!=82||(o=Xe?0:o,T=1));e:{t:{r:{a:switch((l=253&s)-4|0){case 1:break r;case 0:break a;default:break t}if(J&&(s=1,!o)||(0|(s=o))!=2||(s=2,!(t=d[t+13|0])))break e;f[b+2|0]=t;break e}if(J&&(s=2,!o)||(0|(s=o))!=1||(s=1,!(t=d[t+13|0])))break e;f[b+2|0]=t;break e}s=0,Se&&(s=l?o:0)}s=t=T?0:s,B[4+(ct+190288|0)>>1]&&(s=t=_?0:t,ie&&(s=t||1))}if(!((0|(t=g-1|0))>=0))break}if(ns(e[H+292>>2]),e[49572]<=0)Xe=-2,s=0;else{for(s=-1,o=0,b=0,Se=0;;){t=b<<3,(0|s)!=-1&&(k[4+(t+190288|0)>>1]=s),d[(T=t+190288|0)+2|0]==21&&ns(d[7+(t+190288|0)|0]),J=e[49572];e:{if(!(32&d[0|(l=t+190288|0)])){o=(0|(r=J-1|0))>(0|b)?e[144464+(d[10+(t+190288|0)|0]<<2)>>2]:o,!(B[l+12>>1]|(0|r)==(0|b))&&(re=0,d[o+11|0]|!o)||(re=1),g=d[T+2|0];t:if(!((0|(Xe=e[49848]))<=0))for(r=t+190288|0,s=0;;){if(ie=O(s,3),d[ie+199408|0]==(255&g)&&!((_=d[2+(ie+199408|0)|0])&(1^re)|(4&d[r+3|0]?2&_:0)|(B[r+4>>1]?0:4&_))){if(g=d[1+(ie+199408|0)|0],f[T+2|0]=g,!(2&d[e[144464+(g<<2)>>2]+4|0])|d[r+3|0]<2)break t;f[r+3|0]=0;break t}if((0|Xe)==(0|(s=s+1|0)))break}if(!(255&g)){s=B[4+(t+190288|0)>>1];break e}}s=e[l+4>>2],t=(w+32|0)+(Se<<5)|0,r=e[l>>2],e[t>>2]=r,e[t+4>>2]=s,r=e[144464+(r>>>14&1020)>>2],e[t+8>>2]=r,f[t+17|0]=d[r+11|0],Se=Se+1|0,s=-1}if(!((0|Se)<1e3&(0|J)>(0|(b=b+1|0))))break}if(g=0,s=0,!((0|(Xe=Se-2|0))<=0))for(;;){e:if(B[4+((w+32|0)+(g<<5)|0)>>1]){for(r=(0|g)>(0|Xe)?g:Xe,s=0,t=g;;){if((0|t)!=(0|r)){if(s=(0|s)>(0|(l=d[3+((o=w+32|0)+(t<<5)|0)|0]))?s:l,!B[4+(o+((t=t+1|0)<<5)|0)>>1])continue}else t=r;break}if((0|t)<=(0|g))break e;if(r=~g+t|0,o=0,l=t-g&7)for(;f[6+((w+32|0)+(g<<5)|0)|0]=s,g=g+1|0,(0|l)!=(0|(o=o+1|0)););if(r>>>0<7)break e;for(;f[(r=(w+32|0)+(g<<5)|0)+6|0]=s,f[r+38|0]=s,f[r+70|0]=s,f[r+102|0]=s,f[r+134|0]=s,f[r+166|0]=s,f[r+198|0]=s,f[r+230|0]=s,(0|(g=g+8|0))!=(0|t););}else t=g+1|0;if(g=t,!((0|Xe)>(0|t)))break}}for(e[w+40>>2]=e[36125],ns(e[H+292>>2]),Pe=(0|s)<4,b=1,ie=1,J=0,r=0,s=0,$t=0;;){e:{t:{r:{a:{if(r){if(o=(t=w+32|0)+((T=s-1|0)<<5)|0,J=d[2+(t+(s<<5)|0)|0],(0|T)>0){if(t=b-(s=(0|b)>0)|0,T>>>0>=(g=s?b:2)>>>0)for(;l=(s=(w+32|0)+(g<<5)|0)-32|0,b=e[s+12>>2],e[l+8>>2]=e[s+8>>2],e[l+12>>2]=b,b=e[s+4>>2],e[l>>2]=e[s>>2],e[l+4>>2]=b,b=e[s+28>>2],e[l+24>>2]=e[s+24>>2],e[l+28>>2]=b,b=e[s+20>>2],e[l+16>>2]=e[s+16>>2],e[l+20>>2]=b,(0|T)>=(0|(g=g+1|0)););b=t}re=e[144464+(J<<2)>>2],e[o>>2]=0,e[o+4>>2]=0,e[o+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+8>>2]=0,e[o+12>>2]=0,f[o+2|0]=r,t=e[144464+(r<<2)>>2],e[o+8>>2]=t,J=o}else{if((0|s)>=(0|Xe)|(0|$t)>=997)break a;l=d[(o=(g=s<<5)+(w+32|0)|0)+2|0],t=e[144464+(l<<2)>>2],e[o+8>>2]=t,T=B[o+4>>1],(0|l)==21&&ns(d[7+(g+(w+32|0)|0)|0]),b=T?s:b,re=e[144464+(d[o+34|0]<<2)>>2],e[o+40>>2]=re,T=s}if(!t){r=0,s=T+1|0;continue}if(WA(H,256,o,w+32040|0,w),(0|(s=e[w+32052>>2]))>0&&(g=(w+32|0)+(T<<5)|0,re=e[144464+(s<<2)>>2],e[g+40>>2]=re,f[g+34|0]=s,f[g+49|0]=d[re+11|0]),s=0,r)r=t;else if((0|(g=e[w+32056>>2]))<=0)r=t;else{r=e[144464+(g<<2)>>2],e[o+8>>2]=r,s=d[o+2|0],f[o+2|0]=g,g=B[o>>1];n:if(d[r+11|0]!=2)k[o>>1]=65531&g;else{if(k[o>>1]=4|g,d[t+11|0]==2)break n;f[o+3|0]=0}WA(H,256,o,w+32040|0,w)}if((0|(l=e[w+32048>>2]))<=0)g=r;else{if(g=e[144464+(l<<2)>>2],f[o+2|0]=l,e[o+8>>2]=g,t=d[g+11|0],Se=1,(0|l)==1){ct=(0|t)==2;break t}l=B[o>>1];n:if((0|t)!=2)k[o>>1]=65531&l;else{if(k[o>>1]=4|l,d[r+11|0]==2)break n;f[o+3|0]=0}WA(H,256,o,w+32040|0,w)}if(ct=0,(0|(t=d[g+11|0]))!=2){Se=0;break t}if(ct=1,Se=0,t=2,d[o+3|0]>1){zt=0;break t}l=o+3|0,zt=zt+1|0,r=o;n:{if(8&(_=e[H+12>>2])){for(;;){o:switch(_=r,r=r+32|0,d[_+49|0]){case 0:break t;case 2:break o;default:continue}break}if(d[0|(r=_+35|0)]>1)break t;if(d[o+6|0]<=3&&(f[0|l]=0),d[_+38|0]<4)break n;break t}if(1&zt|(0|zt)<2)break t;if(2&_)break r;if(Pe)r=l;else if(r=l,B[o+36>>1])break r}f[0|r]=0;break t}e[36423]=$t+2,k[(t=145840+($t<<5)|0)>>1]=0,f[t+2|0]=9,f[t+20|0]=2,e[t+12>>2]=V,k[t+4>>1]=u,f[t+17|0]=0,f[t+18|0]=0,e[t+8>>2]=e[36125],k[t+32>>1]=0,f[t+34|0]=9,f[t+52|0]=0,e[t+44>>2]=0,k[t+36>>1]=0,f[t+49|0]=0,f[t+50|0]=0,e[t+40>>2]=e[36126],ns(e[H+292>>2]),Y=w+32192|0;break e}zt=1}if(!(8&(r=B[o+32>>1]))|(0|T)<=0||(l=d[re+11|0])>>>0>15|!(1<<l&457)||(s=d[re+10|0],k[o+32>>1]=8^r),ve=B[o+36>>1]){t:if(r=e[H+4>>2]){r:switch(0|t){default:s=512&r?11:s;break;case 0:break t;case 2:break r}if(d[re+11|0]==2){(l=12&r)&&(s=(0|l)!=12?23:11);r:if(ct){a:switch(3&r){case 2:s=10;break r;case 0:break r;default:break a}s=23}d[o+35|0]<4||(s=256&r?10:s)}}if(!((0|o)==(0|J)|(0|$t)<=0)){t:{r:{a:switch(0|(r=7&e[H>>2])){case 0:break t;case 1:break a;default:break r}if(s-12>>>0>4294967293)break t}s=d[r+101916|0]}s=e[47205]>0?24:s}}if(e[o+72>>2]=e[144464+(d[o+66|0]<<2)>>2],r=e[w+32060>>2],r=s||r||s,!Se){f[(l=(_=$t<<5)+145840|0)+17|0]=t,e[l+8>>2]=g,f[l+16|0]=0,k[l>>1]=B[o>>1],f[l+3|0]=15&d[o+3|0],f[l+6|0]=d[o+6|0],s=d[o+7|0],k[l+4>>1]=0,f[l+7|0]=s,Se=d[g+10|0],f[l+2|0]=Se;t:if(s=B[o+4>>1]){if(k[l+4>>1]=s,v=1&v?5:1,f[(o=_+145840|0)+20|0]=v,s=ie,ie=0,!s){v=0;break t}f[o+20|0]=8|v,v=0}else f[20+(_+145840|0)|0]=0;e[(s=_+145840|0)+12>>2]=e[w+32084>>2]<<1,!ve|(0|Se)!=24||(0|(o=e[47205]))<=0||(e[l+8>>2]=e[36126],e[s+12>>2]=O(o,14)),(1<<t&428?t>>>0<=8:0)|2&d[g+7|0]&&(e[s+12>>2]=128,f[l+16|0]=0),f[(t=_+145840|0)+21|0]=255,f[t+22|0]=255,k[t+18>>1]=5120,$t=$t+1|0}s=T+1|0;continue}break}k[88922]=1,e[44462]=0,is&&(k[145776+(e[36423]<<5)>>1]=2,t=198304+(e[47350]<<2)|0,e[t>>2]=128,e[(t=t-4|0)>>2]=128|e[t>>2]),f[190268]=Rt>>>19&1,Qn&&(e[Qn>>2]=Rt<<14>>31&189360)}Y=h+6832|0,Xe=e[47192],ct=e[A+12>>2],r=0,l=0,b=0,_=0,J=0,vA=0,V=0,Y=u=Y-6e3|0;e:if(!((0|(o=($t=e[36423])-1|0))<=0)){for(;f[2+(u+O(r,6)|0)|0]=0,4&d[(t=r<<5)+145840|0]?(s=u+O(_,6)|0,f[s+1|0]=0,t=t+145840|0,f[s+3|0]=d[t+49|0],t=d[t+3|0],f[0|s]=t,_=_+1|0,vA=(t>>>0>3)+vA|0):d[e[8+(t+145840|0)>>2]+10|0]!=27|(0|_)<=0||(t=(u+O(_,6)|0)-4|0,f[0|t]=4|d[0|t]),(0|o)!=(0|(r=r+1|0)););if(f[u+O(_,6)|0]=0,_)if(e[Xe+148>>2]==1){if(!((0|$t)<=0)){for(t=-2&$t,s=1&$t,r=145840;b=d[r+17|0]==2&&d[r+3|0]>3?l:b,b=d[r+49|0]==2&&d[r+35|0]>3?1|l:b,r=r- -64|0,l=l+2|0,(0|t)!=(0|(J=J+2|0)););!s|d[r+17|0]!=2||(b=d[r+3|0]>3?l:b)}if(f[(g=(t=b<<5)+145840|0)+3|0]=7,e[Xe+212>>2]==30313&&(d[(t=t+145840|0)+7|0]||(f[t+7|0]=q(55),$t=e[36423])),!((0|$t)<=0)){for(J=0,r=145840,t=145840,l=T=e[36125],o=0,ie=1;;){if(d[r+17|0]?v=e[36125]:(v=e[36125],T=(s=d[e[r+8>>2]+14|0]>50)?v:T,ie|=s),s=d[r+20|0]?v:l,4&d[0|r]){v=d[r+7|0],l=e[144464+(v<<2)>>2];t:{if((0|(_=e[Xe+212>>2]))==6840683){if(e[s>>2]!=49||(_=e[l>>2]-49|0)>>>0>5|!(1<<_&41))break t;f[t+7|0]=q(50),_=e[Xe+212>>2]}if(!((0|_)!=6516078&(0|_)!=31336)){_=0,v||(o=q(1&(_=o|ie)?13621:12593),f[r+7|0]=o,l=e[144464+(o<<2)>>2]),(0|b)!=(0|J)|(1024|e[l>>2])!=13621||(f[g+3|0]=6),e[T>>2]==3420466&&(f[t+7|0]=q(e[l>>2]==3420466?13619:12594));r:{if(e[s>>2]==12597){if((0|(v=e[l>>2]))!=12597)break r;f[t+7|0]=q(13109)}v=e[l>>2]}o=_,(0|v)==12593&&((0|(v=e[T>>2]))==13621&&(f[r+7|0]=q(12850),v=e[T>>2]),(0|v)==13619&&(f[r+7|0]=q(13107),v=e[T>>2]),(0|v)==3420466&&(f[r+7|0]=q(13364)),f[r+3|0]=0)}}ie=0,T=l,t=r}else l=s;if(r=r+32|0,!((0|(J=J+1|0))<(0|(s=e[36423]))))break}if(l=0,r=145840,!((0|s)<=0))for(;4&d[0|r]&&((t=d[r+7|0])||(f[r+7|0]=17,t=17),t=e[144464+(t<<2)>>2],f[r+21|0]=d[t+12|0],f[r+22|0]=d[t+13|0]),r=r+32|0,(0|s)!=(0|(l=l+1|0)););}}else{if(t=e[Xe+152>>2],t=Xe+O(Pe=(0|t)>7?1:t,6)|0,H=d[0|(Pe?t+637:Xe+157)],Rt=d[0|(Pe?636+(t+ct|0):156+(Xe+ct|0))],f[133068]=(0|ct)==4,!((0|_)<=0)){for(Se=_-1|0,re=ct-1>>>0>1,s=0,o=0;;){h=u+O(o,6)|0,V=((t=d[0|h])<<24>>24>3)+V|0;t:if((0|t)==6){t=o-3|0,r=o;r:{for(;;){if((0|r)<=(0|s)|(0|t)>=(0|r))break r;a:switch(g=u+O(r=r-1|0,6)|0,d[0|g]-4|0){case 2:break r;case 0:break a;default:continue}break}f[0|g]=3}r=o;r:{for(;;){if((0|_)<=(0|(r=r+1|0)))break r;a:switch(d[u+O(r,6)|0]-4|0){case 0:break r;case 2:break a;default:continue}break}f[h+2|0]=2,f[0|h]=5,t=s;break t}if(d[0|h]==6){f[h+2|0]=2,w=0;r:if((0|_)<=(0|(t=o+1|0)))g=o,or=0;else if(or=1,(0|(l=f[u+O(t,6)|0]))>4)g=o;else{for(b=(vA-V|0)>1,g=o;;){if(r=t,(255&l)==4&&(t=b+1|0,b=1,!((0|t)<=1))){t=r;break r}if(or=(0|_)>(0|(t=r+1|0)),(0|t)==(0|_))break;if(g=r,(0|(l=f[u+O(t,6)|0]))>4)break r}g=Se,t=_}l=-1,v=0,b=0,ie=-1,J=0,T=-1;r:{if((0|(r=s))<(0|t)){for(;l=(ve=(0|(T=f[u+O(r,6)|0]))>3)&&(0|l)<0?r-s|0:l,w=(J=(0|b)>(0|T))?w:(0|b)<(0|T)?r:v,ie=ve?r:ie,v=J?v:r,ve=(0|r)!=(0|g),b=J?b:T,r=r+1|0,ve;);if(J=v,T=ie,(0|l)>=0)break r}l=t,v=J,ie=T}e[33269]=g-v,e[33268]=l,e[33270]=v,e[33271]=w;r:if(d[133068])e[33270]=t,e[33271]=t;else if((0|ie)>=0){if((0|t)!=(0|_))break r;f[u+O(ie,6)|0]=7}else f[u+O(v,6)|0]=7;Xr(u,Pe,s,t,Rt),!or&!!(0|ct)||(Rt=re?d[Xe+156|0]:d[Xe+157|0])}else t=s}else t=s;if((0|t)>=(0|o))s=t;else if(4&d[h+2|0]){for(s=o+1|0,l=-1,ie=0,v=0,b=0,r=t,w=-1;l=(J=(0|(g=f[u+O(r,6)|0]))>3)&&(0|l)<0?r-t|0:l,ie=(T=(0|g)<(0|b))?ie:(0|g)>(0|b)?r:v,w=J?r:w,v=T?v:r,J=(0|r)!=(0|o),b=T?b:g,r=r+1|0,J;);e[33269]=o-v,e[33270]=v,e[33271]=ie,e[33268]=(0|l)<0?s:l,d[133068]?(e[33270]=s,e[33271]=s):(0|w)>=0?f[u+O(w,6)|0]=7:f[u+O(v,6)|0]=7,Xr(u,Pe,t,s,H)}else s=t;if((0|_)==(0|(o=o+1|0)))break}if(!((0|s)>=(0|_))){for(l=-1,ie=0,v=0,b=0,r=s,w=-1;l=(g=(0|(t=f[u+O(r,6)|0]))>3)&&(0|l)<0?r-s|0:l,ie=(o=(0|t)<(0|b))?ie:(0|t)>(0|b)?r:v,w=g?r:w,v=o?v:r,b=o?b:t,(0|_)!=(0|(r=r+1|0)););e[33270]=v,e[33271]=ie,e[33269]=~v+_,e[33268]=(0|l)<0?_:l,d[133068]?(e[33270]=_,e[33271]=_):(0|w)>=0?f[u+O(w,6)|0]=7:f[u+O(v,6)|0]=7,Xr(u,Pe,s,_,Rt)}}if((0|$t)<=0)break e;for(r=0,J=0;;){if(T=s=(g=r<<5)+145840|0,t=u+O(J,6)|0,l=d[0|t],f[s+3|0]=l,4&d[0|s]){o=g+145840|0,s=d[t+4|0],f[o+21|0]=s,b=d[t+5|0],f[o+16|0]=0,f[o+22|0]=b;t:{if(1&(v=d[t+2|0]))t=2;else{if(l>>>0<6)break t;t=d[t+1|0]}f[o+16|0]=t}s>>>0<=(255&b)>>>0?(t=b,b=s):(f[o+21|0]=b,f[o+22|0]=s,t=s),(s=d[7+(g+145840|0)|0])&&(t=(255&t)+(255&b)>>>1|0,s=e[144464+(s<<2)>>2],f[o+22|0]=t+d[s+13|0],f[o+21|0]=t+d[s+12|0]),2&v&&(f[T+3|0]=8|l),J=J+1|0}if((0|$t)==(0|(r=r+1|0)))break}}}if(Y=u+6e3|0,J=e[47192],r=0,re=0,w=0,V=0,Y=u=Y-160|0,e[36423]>=2)for(ct=e[30450],l=1;;){if(l=(t=l)+1|0,_=d[(o=(b=t<<5)+145840|0)+3|0],2&(v=B[o>>1])){for(;(31&(g=e[198304+(V<<2)>>2]))==2&&(Ks(127&g,g>>>8|0),e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,v=e[50786],T=e[32972],(0|(s=e[T+84>>2]))>0&&(v=(0|O(s,v))/100|0),ie=d[((0|(s=(0|v)>=359?359:v))<=80?80:s)+101856|0],s=(0|(s=(0|v)>=450?450:v))>399?6:(0|s)>379?7:ie,e[32526]=(0|O(s,e[T+72>>2]))/256,e[32527]=(0|O(s,e[T+76>>2]))/256,e[32528]=(0|O(s,e[T+80>>2]))/256,s>>>0>7||(T=s-1|0,e[32528]=T,e[32526]=s,e[32527]=T)),V=V+1|0,!(128&g););v=B[o>>1]}T=l<<5,ie=t-1|0,s=7&_;e:{t:{r:{a:{n:{o:{c:{u:{l:{i:switch(Rt=d[17+(b+145840|0)|0],0|(g=4&v?2:Rt)){case 2:break n;case 3:case 8:break o;case 5:break c;case 6:case 7:break u;case 4:break l;case 0:break i;default:break e}r=0;break e}if((0|(t=d[17+(145840+(ie<<5)|0)|0]))!=6?(s=(0|t)==4?60:e[34063]>0||s>>>0<4?48:60,f[18+(b+145840|0)|0]=s):(s=25,f[18+(b+145840|0)|0]=25),!(16&d[0|J])|!d[20+(b+145840|0)|0]||(f[18+(b+145840|0)|0]=60,s=60),64&d[e[8+(b+145840|0)>>2]+6|0]&&(s=s+30|0,f[18+(b+145840|0)|0]=s),r=0,!(8&v))break e;f[18+(b+145840|0)|0]=d[J+164|0]+s;break e}!(o=d[(t=b+145840|0)+20|0])|1&f[e[t+8>>2]+7|0]&d[17+(145840+(ie<<5)|0)|0]==2||(f[18+(b+145840|0)|0]=15),s=d[17+(T+145840|0)|0],8&d[e[8+(b+145840|0)>>2]+4|0]|s|d[17+(145840+(ie<<5)|0)|0]!=8||(f[18+(b+145840|0)|0]=25),64&d[e[8+((t=ie<<5)+145840|0)>>2]+5|0]&&(f[18+(b+145840|0)|0]=30),!o|!(16&e[J>>2])||(f[18+(b+145840|0)|0]=30);u:if(d[20+(T+145840|0)|0]|!(32&d[e[8+(b+145840|0)>>2]+4|0])|(0|s)!=4)e[12+(b+145840|0)>>2]=256;else{if(o=b+145840|0,d[17+(t+145840|0)|0]==2){e[o+12>>2]=200;break u}e[o+12>>2]=150}if((0|g)!=7||(re|=(0|s)==2,(254&d[17+(t+145840|0)|0])!=2))break e;e[12+(b+145840|0)>>2]=e[12+(t+145840|0)>>2]+255>>>1;break e}(254&(s=d[17+((t=ie<<5)+145840|0)|0]))==6|(0|s)==3|32&e[e[8+(t+145840|0)>>2]+4>>2]&&(f[18+(b+145840|0)|0]=30);c:if((254&(o=d[17+(T+145840|0)|0]))==2){re=d[20+(T+145840|0)|0]&&(0|o)!=2?re:1,f[(o=b+145840|0)+18|0]=40,_=0;u:{l:switch(0|s){case 0:if((t=e[12+(t+145840|0)>>2])>>>0>39)break u;_=40-t|0;break u;case 2:break u;default:break l}if(d[20+(b+145840|0)|0])break c;_=20;l:switch(s-3|0){case 1:if(_=0,!(8&d[e[8+(t+145840|0)>>2]+4|0]))break u;break c;case 0:break u;case 5:break l;default:break c}_=12}f[o+18|0]=_}if(!(16&d[0|J])|!d[20+(b+145840|0)|0]||d[(t=b+145840|0)+18|0]>19)break e;f[t+18|0]=20;break e}o=d[J+296|0],g=s=b+145840|0,e[s+12>>2]=256,f[s+19|0]=o;o:if(d[s+20|0]){v=25;c:switch(d[17+(145840+(ie<<5)|0)|0]-2|0){case 0:if(v=12,1&f[e[8+(b+145840|0)>>2]+7|0])break o;break;case 1:break c;default:break o}f[18+(b+145840|0)|0]=v}if((0|(T=d[17+(T+145840|0)|0]))==2){w=1;break e}if(f[(o=b+145840|0)+22|0]=r,(254&d[17+((s=ie<<5)+145840|0)|0])==2)break a;if(s=r,(0|(g=e[36423]))<=(0|t))break t;for(;;){if(d[17+((s=t<<5)+145840|0)|0]==2){s=d[22+(s+145840|0)|0],f[o+22|0]=s;break t}if((0|g)==(0|(t=t+1|0)))break}break r}if(Xe=b+145840|0,Se=s^s>>>0<2,s=($t=8&_)?25:d[296+(Se+J|0)|0]-w|0,f[Xe+19|0]=s,(e[36423]-3|0)>(0|t)||(0|(g=255&s))<=(0|(s=e[J+52>>2]))||(f[Xe+19|0]=s),s=0,_=0,!(v=d[o+52|0]))for(;g=e[o+40>>2],_=d[o+49|0]==2?(~e[g+4>>2]>>>20&1)+_|0:_,s=d[g+10|0]==27?2:s,g=o,o=o+32|0,!(v=d[g+84|0]););g=Xe+96|0,t=(Pe=t+2<<5)+145840|0,e[34063]=_,h=d[e[o+40>>2]+10|0],T=T+145840|0,d[17+(Pe+145840|0)|0]|d[e[T+8>>2]+10|0]!=23?(o=g,g=t,t=T):o=b+145968|0,T=d[e[g+8>>2]+15|0];n:if(_)T=d[e[J+96>>2]+(d[e[t+8>>2]+15|0]+O(T,10)|0)|0],d[t+17|0]!=8|(254&d[g+17|0])!=4||(T=8&d[e[o+8>>2]+4|0]?T-15|0:T);else{if(H=e[J+100>>2],Pe=d[e[t+8>>2]+15|0],o=d[t+20|0],T=d[H+(Pe+O(o|d[g+20|0]?(0|T)==1:T,10)|0)|0],!o|!(32&d[0|J]))break n;T=d[1+(H+O(Pe,10)|0)|0]+T>>>1|0}o=v>>>1|0,Pe=!_,v=(0|(T=(0|O(e[130104+(_?(0|_)==1?4:8:0)>>2],T))/128|0))<=8?8:T;n:if((0|Se)!=7)$t&&(v=e[J+200>>2]+v|0);else{if(v=(T=e[J+200>>2])+v|0,!$t)break n;v=((0|T)/2|0)+v|0}T=o&Pe|(0|h)==27,(o=B[304+(J+(Se<<1)|0)>>1])||(o=B[J+316>>1]),v=O(o<<16>>16,v),(_=d[(o=b+145840|0)+7|0])&&(Se=d[e[144464+(_<<2)>>2]+14|0])&&(v=(0|O(v,Se))/100|0),(T|(0|s)==2)==1&&(2097152&(s=e[J+12>>2])||(v=(0|O(262144&s?282:256+((280-(d[e[8+(b+145840|0)>>2]+14|0]<<1)|0)/3|0)&65535,v))/256|0)),Se=b+145840|0,s=O(e[32526],e[J+196>>2]),$t=(0|Rt)!=2?256:(0|((0|s)>(0|v)?v:s))/128|0,e[Se+12>>2]=$t,(s=d[Se+16|0])>>>0>=19&&(Ti(84371,28,ct),f[Se+16|0]=0,_=d[o+7|0],s=0),v=s+1|0,(s=255&_)?(_a(s,u+8|0),s=no(e[u+132>>2])):s=e[129280+((255&v)<<2)>>2],T=b+145840|0,1&(w|re)&&(o=(b=ie<<5)+145840|0,w=d[0|s],s=d[T+21|0],s=((0|O(w,d[T+22|0]-s|0))/256|0)+s|0,f[o+22|0]=s,r=(s-(r=(0|s)==255?255:r)|0)>16?s-16|0:r,f[o+21|0]=r,o=0,(0|r)<(0|s)&&(f[Se+16|0]=v,o=2),e[(r=b+145840|0)+12>>2]=$t,f[r+16|0]=o,s=d[Xe+19|0],f[r+19|0]=d[r+17|0]!=3&&s>>>0>18?18:s),r=(0|Rt)!=2,o=-2&(s=B[t>>1]),k[t>>1]=o;n:{o:{c:switch(d[t+17|0]-3|0){case 5:if(d[g+17|0]==2)break n;o=1|s;break o;case 0:break c;default:break n}if(k[t>>1]=1|s,d[g+17|0]!=2&&e[e[t+8>>2]>>2]!=12146)break n}k[t>>1]=o}r?(0|(t=r<<4))<=((s=d[T+22|0])-(o=d[T+21|0])|0)||(o=(0|(t=s-t|0))>0?t:0,f[T+21|0]=o):(s=d[T+22|0],o=d[T+21|0]),t=255&o,r=((0|O(d[e[129280+(d[Se+16|0]<<2)>>2]+127|0],s-t|0))/256|0)+t|0,w=0,re=0;break e}o=e[12+(s+145840|0)>>2],e[g+12>>2]=o,(0|Rt)==3&&(o=e[32526],e[g+12>>2]=o),s=r;a:switch(T-5|0){case 0:e[g+12>>2]=(O(o,160)>>>0)/100;break r;case 2:break a;default:break t}e[g+12>>2]=(O(o,120)>>>0)/100}s=r}re=0,f[(t=b+145840|0)+16|0]=0,o=t,s=(t=255&s)-16|0,f[o+21|0]=t>>>0>=s>>>0?s:0}if(!(e[36423]>(0|l)))break}if(Y=u+160|0,15&(o=e[47197])|e[36456]){t=0,g=0,Y=s=Y-80|0;e:if((r=e[33222])||(e[33223]=500,r=Nt(500),e[33222]=r,r)){if(!((e[36423]-2|0)<2)){for(t=o>>8,J=128&o?0:t,_=t&o<<24>>31,T=2&o,o=s+32|1,b=1;;){if(Qt(s,e[(l=(ie=b<<5)+145840|0)+8>>2],l,T,s+72|0),t=s+32|0,(13&(r=d[l+20|0]))==1&&(f[s+32|0]=32,t=o),!J|(0|J)!=32&!!(0|r)|b>>>0<2||(Wt(s+76|0,s),e[s+76>>2]-880>>>0>4294967103||(t=br(J,t)+t|0)),4&d[0|l]&&((r=d[3+(ie+145840|0)|0])>>>0<2||(r=r>>>0>=5?5:r,r=T?r>>>0>3?712:716:f[r+94144|0],e[s+76>>2]=r,t=br(r,t)+t|0)),v=0,e[s+72>>2]=0,d[0|(r=s)])for(;r=Wt(s+76|0,r)+r|0,e[s+72>>2]>>>v-1&1|!_|(0|v)<=0||(w=e[s+76>>2])-880>>>0>4294967103||Di(w)&&(t=br(_,t)+t|0),v=v+1|0,t=br(e[s+76>>2],t)+t|0,d[0|r];);if(d[e[l+8>>2]+10|0]!=21&&(8&(r=B[l>>1])&&(t=Qt(t,e[36128],l,T,0),r=B[l>>1]),!(4&r)|d[17+(ie+145840|0)|0]==2||(t=Qt(t,e[36136],l,T,0)),(r=d[7+(ie+145840|0)|0])&&(t=Qt(t,e[144464+(r<<2)>>2],l,T,0))),(t=(l=t-(s+32|0)|0)+g|0)>>>0<Ae[33223])r=e[33222];else{if(r=t+500|0,e[33223]=r,!(r=DA(e[33222],r))){e[33223]=0,r=86135;break e}e[33222]=r}if(f[(v=l)+(l=s+32|0)|0]=0,Gt(r+g|0,l),g=t,!((0|(b=b+1|0))<(e[36423]-2|0)))break}if(!r){r=86135;break e}}f[t+r|0]=0}else e[33223]=0,r=86135;Y=s+80|0,15&d[188788]&&(e[A>>2]=r,ar(e[47195],84367,A)),(t=e[36456])&&Zt[0|t](r)}d[190280]?(e[36423]=0,t=1):(mt(0),(t=e[A+8>>2])?(Y=r=Y+-64|0,FA(r,t,60),gn(r,1),s=0,(t=aA(r,0))&&(s=t,d[202976]&&(s=aA(202976,2))),Y=r- -64|0,e[44468]=s):s=e[44468],t=1,s&&(r=e[32972],(s=Nt(1344))&&(r=qt(s,r,1344),s=216192+(e[50758]<<4)|0,e[s>>2]=11,e[s+8>>2]=r,r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0),e[44468]=0))}else t=0,f[190280]=0;else t=0,e[36423]=0,e[50758]=0,e[50757]=0;return Y=A+16|0,t}function Ue(t,A){var r=0,s=0,o=0,l=0;r=1073741825;e:{t:{r:{a:{n:{o:{c:{u:{l:{i:{p:{C:{m:{b:{h:{x:{I:{y:{z:{L:{U:{B:{M:{Q:{S:{te:{R:{q:{_:{oe:{j:{Se:{K:{f:{g:{re:{k:{se:{w:{s:{At:{Ae:{A:{pe:{W:{he:{be:{rt:{de:{N:{Fe:{v:{Oe:{$:{Ie:{we:{_e:{Ne:{ze:{Le:{Re:{je:{We:{ke:{st:{ae:{Ve:{Ye:{Ee:{He:{G:{Me:{V:{ht:{mt:{Ct:{bt:{It:{wt:{kt:{Et:{Mt:{vt:{xt:{yt:{Bt:{Dt:{Pt:{Tt:{Gt:{Qt:{St:{Ft:{Ot:{_t:{Nt:{zt:{Lt:{Rt:{jt:{Wt:{Vt:{Yt:switch(0|A){case 0:A=t-9>>>0<5?1073741825:0,A=(t=(0|t)==133)?1073741825:A;break S;case 1:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{if((0|(A=-256&t))<=2047){if(!A)break ge;if((0|A)==1536)break fe;if((0|A)!=1792||(r=0,s=1,(0|t)!=1807))break d;break A}if((0|A)<=69631){if((0|A)==2048)break le;if((0|A)!=8192)break d;switch(r=131076,t-8204|0){case 1:break ne;case 0:break A;default:break ee}}if((0|A)==69632)break Z;if((0|A)!=917504)break d;switch(r=8388608,t-917505|0){case 62:break T;case 58:break O;case 57:break D;case 45:break P;case 43:break X;case 32:break Y;case 0:break A;default:break F}}if(r=16,(0|t)!=173)break d;break A}if(r=0,s=1,t-1536>>>0<6)break A;s=(0|t)==1757,A=(t=(0|t)==1564)?2:0;break Q}if(r=0,s=1,(0|t)!=2274)break d;break A}return fe=64,4}if(r=1073741826,(-2&t)==8206)break A;if(t-8234>>>0<5)return fe=0,2;if(r=128,t-8289>>>0<4||(r=2,t-8294>>>0<4))break A;if(r=8388608,t-8298>>>0>=6)break d;break A}A=!(t-69821&-17),t=0;break M}fe=536870976;break B}fe=268435520;break B}fe=-2147483584;break B}fe=134217792;break B}fe=67108928;break B}fe=1073741888;break B}if(r=131072,s=64,t-917536>>>0<96)break A}break s;case 2:d:{F:{T:{O:{D:{P:{X:{if((0|(A=-256&t))<=130303){if((0|A)<=127743){if((0|A)<=64767){if((0|A)<=11007){if((0|A)==8192)break X;if((0|A)!=9216)break d;if(t-9255>>>0>=25)break P;break w}if((0|A)==11008)break D;if((0|A)!=11776||(r=-2147483648,t-11845>>>0>=59))break d;break A}if((0|A)<=126975){if((0|A)==64768)break O;if((0|A)!=65280||(r=4194304,t-65520>>>0>=9))break d;break A}if((0|A)==126976|(0|A)==127232|(0|A)==127488)break Ae;break d}if((0|A)<=129023){if((0|A)<=128255){if((0|A)==127744|(0|A)==128e3)break Ae;break d}if((0|A)==128256|(0|A)==128512|(0|A)==128768)break Ae;break d}if((0|A)<=129535){if((0|A)==129024|(0|A)==129280)break Ae;break d}if((0|A)==129536|(0|A)==129792|(0|A)==130048)break Ae;break d}if((0|A)<=919039){if((0|A)<=917759){if((0|A)<=130815){if((0|A)==130304)break Ae;if((0|A)!=130560)break d;break Ae}if((0|A)==130816)break Ae;if((0|A)!=917504)break d;if((-128&t)!=917632)break T;break se}if((0|A)<=918271){if((0|A)==917760)break F;if(r=4194304,(0|A)!=918016)break d;break A}if((0|A)==918272|(0|A)==918528)break se;if(r=4194304,(0|A)!=918784)break d;break A}if((0|A)<=920319){if((0|A)<=919551){if((0|A)==919040)break se;if(r=4194304,(0|A)!=919296)break d;break A}if((0|A)==919552|(0|A)==919808)break se;if(r=4194304,(0|A)!=920064)break d;break A}if((0|A)<=920831){if((0|A)==920320)break se;if(r=4194304,(0|A)!=920576)break d;break A}if((0|A)==920832|(0|A)==921088)break se;if(r=4194304,(0|A)!=921344)break d;break A}if(r=4194304,(0|t)!=8293)break d;break A}if(r=-2147483648,t-9291>>>0>=21)break d;break A}if((-16&t)==11248|t-11219>>>0<25|(0|t)==11209|t-11194>>>0<3||(0|(A=-2&t))==11124)break w;if(r=-2147483648,(0|A)!=11158)break d;break A}if(r=65536,t-64976>>>0>=32)break d;break A}if((0|t)==917504)break se;if(r=4194304,t-917506>>>0>=30)break d;break A}if(r=4194304,t>>>0>917999)break A}A=(t=!(65534&~t))>>>16|0,t<<=16;break M;case 6:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{if((0|(A=-256&t))<=7679){if((0|A)<=767){if(!A)break le;if((0|A)==256)break ne;if((0|A)!=512)break s;if((0|t)!=585)break ee;break U}if((0|A)==768)break Z;if((0|A)==1024)break Y;if((0|A)!=7424||(r=16777216,(0|t)!=7574))break s;break A}if((0|A)<=119807){if((0|A)==7680)break X;if((0|A)==8448)break P;if((0|A)!=65280||(r=256,t-65345>>>0>=6))break s;break A}if((0|A)<=120319){if((0|A)==119808)break D;if((0|A)!=120064)break s;if(t>>>0>=120070)break O;break k}if((0|A)==120320)break T;if((0|A)!=120576)break s;if(t>>>0>=120597)break F;break k}if(r=768,t-97>>>0<6)break A;if(r=16777216,t-105>>>0>=2)break s;break A}r=(A=(0|t)==329)>>>9|0,A=(t=(0|t)==303)?16777216:A<<23;break L}if((0|t)==616)break U;if(r=16777216,(0|t)!=669)break s;break A}r=128;Z:switch(t-976|0){case 35:break d;case 0:case 1:case 2:case 5:case 32:case 33:break A;default:break Z}if((-2&t)!=1012)break s;break A}s=(t=!(t-1110&-3))>>>8|0,t<<=24;break z}s=(A=(0|t)==7883)>>>8|0,A=(t=(0|t)==7725)?16777216:A<<24;break Q}if(t-8458>>>0<10)break k;if((A=t-8495|0)>>>0<11)break Vt;break pe}if((0|(A=-2&t))==119842)break re;if(t-119808>>>0<85)break k;if(t-119894>>>0<2|t-119946>>>0<2)break re;if((0|t)==119995|t-119896>>>0<69|t-119982>>>0<12)break k;if((0|A)==119998)break re;if(t-119997>>>0<7)break k;if(r=16777344,(0|A)==120050)break A;if(r=128,t>>>0<=120004)break s;break A}if((-2&t)==120102)break re;if(t-120094>>>0<28)break k;O:{if((0|t)<=120257){if(t-120154>>>0<2)break re;if(r=16777344,t-120206>>>0>=2)break O;break A}if(t-120258>>>0<2)break re;if(r=16777344,t-120310>>>0<2)break A}if(r=128,t>>>0<=120145)break s;break A}if(t-120362>>>0<2|t-120414>>>0<2)break re;if(r=16777344,t-120466>>>0<2)break A;if(t-120540>>>0<31|t>>>0>120571|t>>>0<120486)break k;if(r=128,t-120514>>>0>=25)break s;break A}if(t-120772>>>0<8|t-120746>>>0<25|t-120714>>>0<31|t-120688>>>0<25||(0|t)!=120597&t>>>0<120629|t-120656>>>0<31)break k;if(r=128,t-120630>>>0<25)break A;break s}break U;case 7:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{E:{ce:{J:{H:{ie:{ue:{ve:{xe:{if((0|(A=-256&t))<=11263){if((0|A)<=3583){if((0|A)<=1535){if((0|A)==512)break xe;if((0|A)==768)break ve;if((0|A)!=1280||(r=4096,(0|t)!=1369))break s;break A}if((0|A)==1536)break ue;if((0|A)==1792)break ie;if((0|A)!=2304||(r=4096,(0|t)!=2417))break s;break A}if((0|A)<=7167){if((0|A)==3584)break H;if((0|A)==6144)break J;if((0|A)!=6656||(r=8192,(0|t)!=6823))break s;break A}if((0|A)==7168)break ce;if((0|A)==7424)break E;if((0|A)!=8192)break s;if(r=16793600,!(A=t-8305|0))break A;if((0|A)==14)break ge;break fe}if((0|A)<=43263){if((0|A)<=40959){if((0|A)==11264)break le;if((0|A)==11776)break ne;if((0|A)!=12288)break s;switch(r=8192,t-12293|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:break Z;case 0:case 44:case 45:case 46:case 47:case 48:break A;default:break ee}}if((0|A)==40960)break Y;if((0|A)==42496)break X;if((0|A)!=42752)break s;if(t-42775>>>0>=9)break P;break g}if((0|A)<=65279){if((0|A)==43264)break D;if((0|A)==43520)break O;if((0|A)!=43776||(r=20480,(-4&t)!=43868))break s;break A}if((0|A)==65280)break T;if((0|A)==92928)break F;if((0|A)!=93952)break s;if(r=4096,t-94099>>>0<13)break A;if(r=8192,(-2&t)!=94176)break s;break A}if(r=16797696,(0|t)==690)break A;if(t-688>>>0<9)return fe=0,20480;if(t-697>>>0<7)break g;if((0|(A=-2&t))==704)return fe=0,20480;if(r=4096,t-710>>>0<10||(r=12288,(0|A)==720)||(r=20480,t-736>>>0<5))break A;r=(t=(-3&t)==748)>>>20|0,t<<=12;break y}A=(0|t)==890?20480:0,A=(t=(0|t)==884)?4096:A;break S}if(r=8192,(0|t)==1600)break A;if(r=4096,t-1765>>>0>=2)break s;break A}if(r=4096,(-2&t)==2036)break A;if(r=8192,(0|t)!=2042)break s;break A}A=(t=!(t-3654&-129))>>>19|0,t<<=13;break M}if(r=8192,(0|t)!=6211)break s;break A}if(r=12288,(0|t)==7291)break A;if(r=4096,t-7288>>>0>=6)break s;break A}if(r=16797696,(0|t)==7522||(r=20480,t-7468>>>0<63))break A;r=16384;E:switch(t-7588|0){default:if((0|t)==7544)break A;case 1:case 2:case 3:if(t-7579>>>0>=37)break s;break A;case 0:case 4:break E}return fe=0,16793600}return fe=0,16384}if(r=16384,t-8336>>>0>=13)break s;break A}A=(r=(0|t)==11389)>>>18|0,r=(t=(0|t)==11388)?16793600:r<<14;break I}if(r=-2147479552,(0|t)!=11823)break s;break A}if(t-12445>>>0<2)break A;if((0|t)==12540)break d}if(t-12541>>>0>=2)break s;break A}if(r=8192,(0|t)!=40981)break s;break A}if((0|t)==42508)break x;if((0|t)==42623)break g;if(r=20480,(-2&t)!=42652)break s;break A}if((0|t)==42864)return fe=0,16384;if((0|t)==42888)break g;if(r=20480,(-2&t)!=43e3)break s;break A}r=(A=(0|t)==43494)>>>19|0,A=(t=(0|t)==43471)?8192:A<<13;break L}if((0|t)==43632||(0|t)==43741)break x;if(r=8192,t-43763>>>0>=2)break s;break A}if(r=12288,(0|t)==65392)break A;if(r=135168,(-2&t)!=65438)break s;break A}if(r=8192,(-2&t)==92994)break A;break s}return fe=0,12288;case 8:r=128;d:{F:{T:{O:{D:{P:{X:{Y:{Z:{if((0|(A=-256&t))<=12543){if((0|A)<=5887){if((0|A)<=3583){if(!A)break Z;if((0|A)!=1536||(A=8388608,(0|t)!=1651))break v;break de}if((0|A)==3584)break Y;if((0|A)!=4352||(r=4194304,t-4447>>>0>=2))break v;break N}if((0|A)<=8447){if((0|A)==5888)break X;if((0|A)!=6400||(A=t-6581|0)>>>0>=6)break v;r=e[(A=81432+(A<<3)|0)>>2],s=e[A+4>>2];break N}if((0|A)==8448)break P;if((0|A)!=12288||(A=2048,(0|t)!=12294))break v;break de}if((0|A)<=68863){if((0|A)<=63999){if((0|A)==12544)break D;if((0|A)!=43520)break v;if((A=t-43701|0)>>>0<8)break F;break Fe}if((0|A)==64e3)break d;if((0|A)!=65280||(A=4194304,(0|t)!=65440))break v;break de}if((0|A)<=100095){if((0|A)==68864)break O;if((0|A)!=70400||(r=8192,(0|t)!=70493))break v;break be}if((0|A)==100096)break T;if((0|A)!=126464)break v;break N}s=(A=!(t-170&-17))>>>18|0,r=A<<14;break N}if(r=33554432,t-3648>>>0<5)break N;if(A=0,l=33554432,(0|t)==3759)break de;if(t-3776>>>0>=5)break v;break N}if(r=8388608,t-6051>>>0>=2)break v;break N}if(t-8501>>>0>=4)break v;break N}if(A=4194304,(0|t)!=12644)break v;break de}if(r=4096,(-2&t)!=68898)break v;break N}if(r=2048,t-100333>>>0<5)break N;break v}if(r=33554432,!(211>>>A&1))break Fe;break N}if((A=t-64014|0)>>>0>=28)break v;r=e[(A=81480+(A<<3)|0)>>2],s=e[A+4>>2];break N;case 10:d:{F:{T:{O:{D:{P:{if((0|(A=-256&t))<=119807){if((0|A)<=8447){if(!A)break P;if((0|A)!=768)break s;switch(r=128,t-976|0){case 0:case 1:case 2:case 36:case 37:break A;default:break s}}if((0|A)==8448)break D;if((0|A)!=65280||(r=256,t-65313>>>0>=6))break s;break A}if((0|A)<=120319){if((0|A)==119808)break O;if((0|A)!=120064)break s;if(t>>>0>=120070)break T;break k}if((0|A)==120320)break F;if((0|A)!=120576)break s;if(t-120772>>>0>=8)break d;break k}if(r=768,t-65>>>0>=6)break s;break A}r=128;D:switch(t-8450|0){case 0:case 5:break A;default:break D}if(t-8458>>>0<10)break k;if((A=t-8469|0)>>>0<20)break Wt;if((-4&t)==8508)break A;break Oe}if(t-119982>>>0<12|t>>>0>120004|t-119977>>>0<4|t-119973>>>0<2||(0|t)==119970|(-2&t)==119966|t-119808>>>0<85)break k;if(r=128,t-119894>>>0>=71)break s;break A}if(t-120138>>>0<7|t>>>0>120145|(0|t)==120134|t-120128>>>0<5||t-120123>>>0<4|t-120094>>>0<28|(0|t)!=120070&t>>>0<120075|t-120086>>>0<7)break k;if(r=128,t-120077>>>0>=8)break s;break A}if(t-120540>>>0<31|t>>>0<120486)break k;if(r=128,t-120488>>>0>=25)break s;break A}if(t-120714>>>0<31|t-120598>>>0<31)break k;if(r=128,t-120656>>>0<31)break A;break s;case 11:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{E:{ce:{J:{if((0|(A=-256&t))<=43263){if((0|A)<=3839){if((0|A)<=3071){if((0|A)==2304)break J;if((0|A)!=2816)break f;if((0|t)>3005)break E;if((0|t)!=2878)break ce;return fe=0,132096}if((0|A)==3072)break ge;if((0|A)!=3328)break f;switch(r=132096,t-3535|0){case 0:case 16:break A;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break f;default:break fe}}if((0|A)<=6911){if((0|A)==3840)break le;if((0|A)!=4096)break f;if(r=1024,t-4139>>>0<2)break A;switch(t-4145|0){case 0:case 7:case 10:case 11:case 37:case 38:case 49:case 54:case 55:case 82:case 83:break A;case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 105:case 106:break d;default:break ne}}if((0|A)==6912)break ee;if((0|A)==7168)break Z;if((0|A)!=12288||(r=135168,(-2&t)!=12334))break f;break A}if((0|A)<=70399){if((0|A)<=43775){if((0|A)==43264)break Y;if((0|A)!=43520)break f;return fe=0,t-43643&-3?1024:4096}if((0|A)==43776)break X;if((0|A)==69888)break P;if((0|A)!=70144||(r=4096,(0|t)!=70197))break f;break A}if((0|A)<=70911){if((0|A)==70400)break D;if((0|A)!=70656)break f;A=(0|t)==70845?132096:1024,A=(t=(0|t)==70832)?132096:A;break S}if((0|A)==70912)break O;if((0|A)==71168)break T;if((0|A)!=119040)break f;switch(r=131072,t-119141|0){case 8:break g;case 1:break s;case 0:break A;default:break F}}A=(0|t)==2519?132096:1024,A=(t=(0|t)==2494)?132096:A;break S}if(r=132096,(0|t)!=2903)break f;break A}if((0|t)==3006)return fe=0,132096;if(r=132096,(0|t)!=3031)break f;break A}if((t=t-3266|0)>>>0>20||(r=132096,!(1<<t&1572865)))break f;break A}if((0|t)==3390)break A;if((0|t)!=3415)break f;break A}if(r=4096,(-2&t)!=3902)break f;break A}r=(t=(0|t)==4252)>>>22|0,t<<=10;break y}r=1024;ee:switch(t-6965|0){default:if((0|t)==6916)break A;break;case 0:case 6:break A;case 1:case 2:case 3:case 4:case 5:break ee}if(t-6973>>>0<5)break A;ee:switch(t-6979|0){case 1:break g;case 0:break A;default:break ee}if((0|t)==7042|(0|t)==7073|(-2&t)==7078)break A;if((0|t)==7082)break g;if((0|t)==7143|t-7146>>>0<3)break A;r=(t=(0|t)==7150)>>>22|0,t<<=10;break y}A=(0|t)==7415?4096:1024,A=(t=(0|t)==7393)?4096:A;break S}A=(0|t)==43456?4096:1024,A=(t=(0|t)==43347)?4096:A;break S}if(r=4096,(0|t)!=44012)break f;break A}if(r=4096,(0|t)!=70080)break f;break A}r=132096;D:switch(t-70462|0){case 0:case 25:break A;case 15:break D;default:break f}break g}if(r=132096,(0|t)!=71087)break f;break A}if(r=4096,(0|t)!=71350)break f;break A}if(r=135168,t-119150>>>0<5)break A;break f}break g;case 12:A=((0|t)==8419)<<6,t=0;break M;case 13:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{E:{ce:{J:{H:{ie:{ue:{ve:{xe:{Ue:{ye:{Ke:{at:{Xe:{nt:{Ze:{it:{ot:{Be:{Je:{qe:{lt:{De:{Pe:{ct:{$e:{ut:{et:{me:{Te:{Ge:{Qe:{tt:{dt:{Ce:{ft:{gt:{pt:{if((0|(A=-256&t))<=43775){if((0|A)<=5887){if((0|A)<=2559){if((0|A)<=1535){if((0|A)==768)break pt;if((0|A)==1024)break gt;if((0|A)!=1280)break s;if(t-1425>>>0>=17)break ft;break g}if((0|A)<=2047){if((0|A)==1536)break Ce;if((0|A)!=1792)break s;if(r=1024,(0|t)==1809)break A;if((-16&t)!=1840)break dt;return fe=0,5120}if((0|A)==2048)break tt;if((0|A)!=2304)break s;if(t>>>0>=2307)break Qe;break f}if((0|A)<=3583){if((0|A)<=3071){if((0|A)==2560)break Ge;if((0|A)!=2816)break s;switch(r=1024,t-2876|0){case 0:break g;case 3:break A;case 1:case 2:break me;default:break Te}}if((0|A)==3072)break et;if((0|A)!=3328)break s;if((0|(A=-2&t))!=3328)break ut;break f}if((0|A)<=4095){if((0|A)==3584)break $e;if((0|A)!=3840)break s;if((0|(A=-2&t))!=3864)break ct;break g}if((0|A)==4096)break Pe;if((0|A)!=4864||(r=1024,(0|t)!=4959))break s;break A}if((0|A)<=8191){if((0|A)<=6655){if((0|A)==5888)break De;if((0|A)==6144)break lt;if((0|A)!=6400)break s;if((A=t-6432|0)>>>0<=18&&(r=1024,1<<A&262535))break A;if(r=4096,t-6457>>>0>=3)break s;break A}if((0|A)<=7167){if((0|A)==6656)break qe;if((0|A)!=6912)break s;if(r=1024,(-4&t)==6912)break A;if((0|t)!=6964)break Je;break g}if((0|A)==7168)break Be;if((0|A)!=7424)break s;if(r=4096,t-7620>>>0<12||(r=1024,t-7655>>>0<14))break A;if((t=t-7669|0)>>>0>=11)break s;A=e[(t=82104+(t<<3)|0)>>2];break h}if((0|A)<=42495){if((0|A)<=11519){if((0|A)==8192)break ot;if((0|A)!=11264||(r=4096,t-11503>>>0>=3))break s;break A}if((0|A)==11520)break it;if((0|A)!=12288)break s;if(t-12330>>>0>=4)break Ze;break g}if((0|A)<=43263){if((0|A)==42496)break nt;if((0|A)!=43008)break s;if(t-43045>>>0>=2)break Xe;break f}if((0|A)==43264)break at;if((0|A)!=43520)break s;switch(r=1024,t-43561|0){case 83:case 150:case 152:break g;case 0:case 1:case 2:case 3:case 4:case 5:case 8:case 9:case 12:case 13:case 26:case 35:case 135:case 137:case 138:case 139:case 142:case 143:case 149:break A;default:break Ke}}if((0|A)<=71423){if((0|A)<=69375){if((0|A)<=66047){if((0|A)==43776)break ye;if((0|A)==64256)break Ue;if((0|A)!=65024)break s;if(r=536870912,t-65024>>>0<15||(s=64,(0|t)==65039))break A;if(r=4096,s=0,(-16&t)!=65056)break s;break A}if((0|A)<=68095){if((0|A)==66048)break xe;if((0|A)!=66304||(r=1024,t-66422>>>0>=5))break s;break A}if((0|A)==68096)break ve;if((0|A)!=68864||(r=5120,(-4&t)!=68900))break s;break A}if((0|A)<=70399){if((0|A)<=69887){if((0|A)==69376)break ue;if((0|A)!=69632)break s;if(t-69688>>>0>=14)break ie;break f}if((0|A)==69888)break H;if((0|A)!=70144)break s;if(r=1024,t-70191>>>0<3)break A;switch(t-70196|0){case 2:break g;case 0:case 3:case 10:break A;case 1:case 4:case 5:case 6:case 7:case 8:case 9:break ce;default:break J}}if((0|A)<=70911){if((0|A)==70400)break E;if((0|A)!=70656)break s;if((-8&t)!=70712)break ge;break f}if((0|A)==70912)break fe;if((0|A)!=71168)break s;if(r=1024,t-71219>>>0<8)break A;switch(t-71229|0){case 2:break g;case 0:case 3:break A;case 1:break ne;default:break le}}if((0|A)<=92927){if((0|A)<=72703){if((0|A)==71424)break _t;if((0|A)==71680)break ee;if((0|A)!=72192)break s;if(t-72193>>>0>=10)break Z;break f}if((0|A)<=73215){if((0|A)==72704)break Y;if((0|A)!=72960)break s;if((A=t-73009|0)>>>0<19)break Ft;break $}if((0|A)==73216)break X;if((0|A)!=92672||(r=4096,t-92912>>>0>=5))break s;break A}if((0|A)<=122879){if((0|A)<=113663){if((0|A)==92928)break P;if((0|A)!=93952||(r=4096,t-94095>>>0>=4))break s;break A}if((0|A)==113664)break D;if((0|A)!=119040)break s;switch(r=4096,t-119143|0){case 0:case 1:case 2:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 67:case 68:case 69:case 70:break A;default:break s}}if((0|A)<=125183){if((0|A)==122880)break O;if((0|A)!=124928||(r=4096,t-125136>>>0>=7))break s;break A}if((0|A)==125184)break T;if((0|A)!=917760||(r=536870912,t-917760>>>0>=240))break s;break A}if(t-768>>>0<69)break g;if(r=21504,(0|t)==837)break A;if(t-838>>>0<9)break g;if(r=4194304,(0|t)==847)break A;if((-8&t)==848)break g;if(r=4096,t-861>>>0>=6)break s;break A}if(r=4096,t-1155>>>0>=5)break s;break A}if(r=4096,t-1443>>>0<13||(r=5120,t-1456>>>0<14))break A;if((t=t-1471|0)>>>0>=9)break s;A=e[(t=81944+(t<<3)|0)>>2];break h}if(t-1552>>>0<11)break f;if(r=5120,t-1611>>>0<8)break A;if(t-1619>>>0<4)break f;Ce:switch(t-1623|0){case 1:break g;case 0:break A;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 25:case 127:case 128:case 129:case 130:case 131:case 132:case 133:break f;default:break Ce}if(r=4096,t-1759>>>0<2)break A;if((A=t-1761|0)>>>0<8)break jt;break Ie}if(t-1856>>>0<11)break g;if(r=5120,t-1958>>>0<11)break A;if(r=4096,t-2027>>>0>=9)break s;break A}r=1024;tt:switch((-2&t)-2070|0){case 2:break g;case 0:break A;default:break tt}if(t-2260>>>0<12|t-2089>>>0<4|t-2075>>>0<9|t-2085>>>0<3)break f;if(t-2275>>>0<7)return fe=0,5120;if(r=4096,t-2282>>>0<6||(r=5120,t-2288>>>0<15))break A;if(r=1024,(0|t)!=2303)break s;break A}r=1024;Qe:switch(t-2362|0){case 2:break g;case 0:break A;default:break Qe}if(t-2369>>>0<8)break f;r=4096;Qe:switch(t-2381|0){case 0:case 4:case 5:case 6:case 7:case 111:break A;case 8:case 9:case 10:case 21:case 22:case 52:break f;default:break Qe}if(t-2497>>>0<4)break f;if((0|t)==2509)break A;if(r=1024,(-2&t)!=2530)break s;break A}if(t-2561>>>0<2)break f;r=4096;Ge:switch(t-2620|0){case 0:case 17:case 128:case 145:break A;case 5:case 6:case 11:case 12:case 15:case 16:case 21:case 52:case 53:case 57:case 69:case 70:case 133:case 134:case 135:case 136:case 137:case 139:case 140:case 166:case 167:case 190:case 191:case 192:break f;default:break Ge}if(t-2813>>>0>=3)break s;break A}if((0|t)==2817)break f}if(t-2881>>>0<4)break f;r=4096;me:switch(t-2893|0){case 0:break A;case 9:break f;default:break me}if((-2&t)==2914)break f;r=1024;me:switch(t-3008|0){default:if((0|t)!=2946)break s;break A;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break s;case 0:break A;case 13:break me}break g}r=1024;et:switch(t-3072|0){case 77:case 188:case 205:break g;case 0:case 62:case 63:case 64:case 70:case 71:case 72:case 74:case 75:case 76:case 85:case 86:case 98:case 99:case 129:case 191:case 198:case 204:break A;default:break et}if((-2&t)!=3298)break s;break A}if(r=4096,t-3387>>>0<2)break A;if(t-3393>>>0<4)break f;if((0|t)==3405)break A;if((0|A)==3426)break f;switch(t-3530|0){case 0:break A;case 8:case 9:case 10:case 12:break f;default:break s}}if((A=t-3633|0)>>>0<10)break Rt;break we}if((r=t-3893|0)>>>0>4|!(1<<r&21))break _e;break g}r=1024;Pe:switch(t-4141|0){case 10:case 12:case 13:break g;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:case 9:case 16:case 17:case 43:case 44:case 49:case 50:case 51:case 68:case 69:case 70:case 71:case 85:case 88:case 89:break A;default:break Pe}A=(r=(0|t)==4253)>>>22|0,r=(t=(0|t)==4237)?4096:r<<10;break I}r=1024;De:{Pe:switch(t-5906|0){case 0:case 1:case 32:case 33:break A;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:break De;default:break Pe}switch(t-5970|0){case 0:case 1:case 32:case 33:break A;default:break De}}if(r=4194304,(-2&t)==6068)break A;if((A=t-6071|0)>>>0<16)break Lt;break Ne}if(r=536870912,t-6155>>>0<3||(r=67109888,t-6277>>>0<2))break A;if(r=1024,(0|t)!=6313)break s;break A}if(t-6679>>>0<2)break f;r=1024;qe:switch(t-6683|0){case 0:case 59:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 71:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 88:case 89:break A;default:break qe}if(r=4096,t-6832>>>0<14)break A;if((t=t-6773|0)>>>0>=11)break s;A=e[(t=82016+(t<<3)|0)>>2];break h}if(t-6966>>>0<5)break A;Je:switch(t-6972|0){case 0:case 6:break A;default:break Je}if(t-7019>>>0<9)break g;switch(t-7040|0){case 43:break g;case 0:case 1:case 34:case 35:case 36:case 37:case 40:case 41:case 44:case 45:case 104:case 105:case 109:case 111:case 112:case 113:break A;default:break s}}if(r=1024,t-7212>>>0<8)break A;r=12288;Be:switch(t-7222|0){case 1:break g;case 0:break A;default:break Be}if(t-7380>>>0<13)break g;r=4096;Be:switch(t-7376|0){case 0:case 1:case 2:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 29:case 36:break A;default:break Be}if((-2&t)!=7416)break s;break A}if(r=128,t-8400>>>0<13)break A;if((t=t-8417|0)>>>0>=15)break s;A=e[(t=82192+(t<<3)|0)>>2];break h}if(r=1024,(-32&t)!=11744)break s;break A}if(r=4096,t-12441>>>0>=2)break s;break A}if((0|t)==42607)break g;if(t-42612>>>0<8)break f;if((0|(t&=-2))==42620)break g;if((0|t)==42654)break d;if(r=4096,(0|t)!=42736)break s;break A}r=4096;Xe:switch(t-43204|0){case 0:break A;case 1:break f;default:break Xe}if(t-43232>>>0>=18)break s;break A}if(t-43302>>>0<5)break f;if(t-43307>>>0<3)break g;if(t-43335>>>0<11|t-43392>>>0<3)break f;if(r=4096,(0|t)==43443||(r=1024,t-43446>>>0<4))break A;s=(A=(0|t)==43493)>>>20|0,A=(t=(0|t)==43452)?1024:A<<12;break Q}if((-2&t)==43756)break A;if(r=4096,(0|t)!=43766)break s;break A}r=1024;ye:switch(t-44005|0){case 0:case 3:break A;case 8:break ye;default:break s}break g}if(r=5120,(0|t)!=64286)break s;break A}if(r=4096,(0|t)!=66272)break s;break A}if((-4&t)==68108)break f;if((A=t-68097|0)>>>0<6)break zt;break ze}if(r=4096,t-69446>>>0>=11)break s;break A}if(t-69811>>>0<4)break f;if(r=1024,(0|t)==69633)break A;if(r=4096,t-69817>>>0>=2)break s;break A}r=1024;H:switch(t-69888|0){case 51:case 52:case 115:break g;case 0:case 1:case 2:case 39:case 40:case 41:case 42:case 43:case 45:case 46:case 47:case 48:case 49:case 50:break A;default:break H}if((-2&t)==70016|t-70070>>>0<9)break A;if(r=4096,t-70090>>>0>=3)break s;break A}if((0|t)==70367)break A}if(t-70371>>>0<6)break A;if(r=4096,t-70377>>>0>=2)break s;break A}if((-2&t)==70400)break f;r=4096;E:switch(t-70460|0){case 0:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 52:case 53:case 54:case 55:case 56:break A;case 4:break E;default:break s}break f}if((0|t)==70722)break g;if(t-70723>>>0<2)break f;if((A=t-70835|0)>>>0<=13)break F;break Le}if((A=t-71090|0)>>>0<12)break Nt;break Re}switch(t-71339|0){case 0:case 2:break A;default:break ne}}if(t-71344>>>0<6)break A;if(r=4096,(0|t)!=71351)break s;break A}if(r=1024,t-71727>>>0<10)break A;if(r=4096,t-71737>>>0>=2)break s;break A}if((0|t)==72244)break g;if(t-72245>>>0<10)break f;if(r=4096,(0|t)==72263)break A;if(t-72273>>>0<11)break f;if(r=1024,t-72330>>>0<13)break A;r=(A=(0|t)==72345)>>>20|0,A=(t=(0|t)==72344)?8192:A<<12;break L}if((A=t-72752|0)>>>0<16)break Ot;break je}if(r=1024,t-73459>>>0>=2)break s;break A}if(r=1024,t-92976>>>0>=7)break s;break A}if(r=1024,(0|t)!=113822)break s;break A}if(r=1024,t-122888>>>0<17)break A;if((t=t-122880|0)>>>0>=43)break s;A=e[(t=82816+(t<<3)|0)>>2];break h}if(r=12288,t-125252>>>0<3||(r=1024,(0|t)==125255)||(r=4096,t-125256>>>0<3))break A;break s}if(!(1<<A&12479))break Le;break f}break f;case 14:d:{if((0|(A=-256&t))!=120576){if((0|A)!=65280){if(A||(r=768,s=66,t-48>>>0>=10))break d;break A}if(r=256,t-65296>>>0>=10)break d;break A}if(r=128,t-120782>>>0<50)break A}break s;case 15:d:{if((0|(A=-256&t))!=12288){if((0|A)!=8448)break d;A=(t=(0|(r=-16&t))==8560)>>>18|0,s=t<<14,r=(t=(0|r)==8544)?32768:s;break I}if(t-12321>>>0<9||t-12344>>>0<3)return fe=0,2048;if(r=2048,(0|t)==12295)break A}break s;case 16:d:{F:{T:{if((0|(A=-256&t))<=9215){if((0|A)==4864)break T;if((0|A)!=6400||(r=134217728,(0|t)!=6618))break d;break A}if((0|A)==9216)break F;if((0|A)!=127232)break d;if(r=0,s=-2147483648,(0|t)==127232)break A;if(s=268435456,t-127233>>>0>=10)break d;break A}if(r=134217728,t-4969>>>0>=9)break d;break A}if(r=0,s=-2147483648,t-9352>>>0<20)break A}break s;case 17:s=(t=(0|t)==8256)>>>25|0,t<<=7;break z;case 18:d:{F:{T:{O:{if((0|(A=-256&t))<=11775){if((0|A)<=6143){if(r=-2147483624,!A)break A;if((0|A)!=1280||(r=24,(0|t)!=1418))break d;break A}if((0|A)==6144)break O;if((0|A)!=8192)break d;if(r=-2147483624,(-2&t)==8208)break A;t=t-8211>>>0<2,A=-2147483640;break b}if((0|A)<=65023){if((0|A)==11776)break T;if((0|A)!=12288)break d;A=(0|t)==12336,r=(t=(0|t)==12316)||A?-2147483640:8,fe=t?0:A?130:0;break m}if((0|A)==65024)break F;if((0|A)!=65280||(r=24,(0|t)!=65293))break d;break A}if(r=24,(0|t)!=6150)break d;break A}if(r=-2147483624,(0|t)==11799)break A;t=(-2&t)==11834,A=-2147483640;break b}if(r=8,s=8388608,t-65073>>>0<2||(r=152,s=0,(0|t)==65123))break A}return fe=0,8;case 19:d:{F:{T:{O:{D:{P:{if((0|(A=-256&t))<=11775){if((0|A)<=8959){if(A)break P;break w}if((0|A)==8960)break D;if((0|A)==9984)break O;if((0|A)!=10496)break s;break K}if((0|A)<=64767){if(r=-2147483648,(0|A)==11776)break A;if((0|A)!=12288)break s;switch(r=-2147483616,t-12301|0){case 0:case 2:break A;default:break T}}if((0|A)==64768)break F;if((0|A)==65024)break d;if((0|A)!=65280)break s;if(r=32,(0|t)==65379)break A;break s}if((0|A)!=8192)break s;P:switch(t-8318|0){default:if(r=-2147483648,(0|t)!=8262)break s;break A;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break s;case 0:case 16:break P}break k}r=-2147483520;D:switch(t-8969|0){case 1:break s;case 0:case 2:break A;default:break D}if((0|t)!=9002)break s;return fe=0,-2139095040}if(r=-2147483520,(0|t)==10182)break A;break Se}return fe=0,(-2&t)==12318?-2147483616:-2147483648}if(r=-2147483648,(0|t)!=64830)break s;break A}s=(t=!(t-65090&-3))>>>27|0,t<<=5;break z;case 20:case 21:if(!(t&=-256))break C;if(r=-2147483616,(0|t)==8192)break A;break At;case 22:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{E:{ce:{J:{H:{ie:{ue:{ve:{xe:{Ue:{ye:{Ke:{at:{Xe:{nt:{Ze:{it:{ot:{Be:{Je:{qe:{lt:{De:{Pe:{ct:{$e:{ut:{et:{me:{Te:{Ge:{Qe:{tt:{dt:{Ce:{if((0|(A=-256&t))<=43519){if((0|A)<=5887){if((0|A)<=2303){if((0|A)<=1535){if(!A)break Ce;if((0|A)==768)break dt;if((0|A)!=1280)break s;if(r=0,s=538968064,t-1371>>>0<2)break A;switch(s=268435456,t-1373|0){case 0:break A;case 1:break Qe;default:break tt}}if((0|A)==1536)break Te;if((0|A)==1792)break me;if((0|A)!=2048)break s;if((A=t-2103|0)>>>0<8)break Qt;break We}if((0|A)<=3839){if((0|A)==2304)break et;if((0|A)==3328)break ut;if((0|A)!=3584||(r=64,(-2&t)!=3674))break s;break A}if((0|A)<=4863){if((0|A)==3840)break $e;if((0|A)!=4096)break s;if(r=268435520,(-2&t)==4170)break A;if(r=0,s=16777216,(0|t)!=4347)break s;break A}if((0|A)==4864)break ct;if((0|A)!=5632)break s;switch(r=64,t-5741|0){case 1:break n;case 0:break A;default:break Pe}}if((0|A)<=11263){if((0|A)<=6655){if((0|A)==5888)break De;if((0|A)==6144)break Tt;if((0|A)!=6400)break s;A=(0|t)==6469,r=(t=(0|t)==6468)||A?268435520:0,fe=t?536870912:A?1073741824:0;break m}if((0|A)<=7167){if((0|A)==6656)break lt;if((0|A)!=6912)break s;if((0|(A=-2&t))!=7002)break qe;break j}if((0|A)==7168)break Je;if((0|A)!=8192)break s;switch(r=-2147483520,t-8214|0){case 1:break w;case 0:break A;case 16:break Be;default:break ot}}if((0|A)<=41983){if((0|A)==11264)break it;if((0|A)==11776)break Ze;if((0|A)!=12288)break s;switch(r=-2147483584,s=272629760,t-12289|0){case 2:break w;case 0:break A;case 1:break Xe;default:break nt}}if((0|A)<=43007){if((0|A)==41984)break at;if((0|A)!=42496)break s;switch(r=64,s=268435456,t-42739|0){case 4:break o;case 0:break n;case 3:break r;case 2:break A;case 1:break ye;default:break Ke}}if((0|A)==43008)break Ue;if((0|A)!=43264)break s;switch(r=4096,t-43310|0){case 0:break A;case 1:break j;default:break xe}}if((0|A)<=70655){if((0|A)<=67839){if((0|A)<=65279){if((0|A)==43520)break ve;if((0|A)==43776)break ue;if((0|A)!=65024)break s;if(r=0,s=268435456,(0|(l=-2&t))==65040)break A;if((A=t-65042|0)>>>0<8)break Dt;break ke}if((0|A)==65280)break ie;if((0|A)==66304)break H;if((0|A)!=67584||(r=64,(0|t)!=67671))break s;break A}if((0|A)<=69375){if((0|A)==67840)break J;if((0|A)==68096)break ce;if((0|A)!=68352)break s;switch(r=64,t-68410|0){case 0:case 1:case 2:case 3:case 4:case 5:case 95:case 96:case 97:case 98:break A;default:break s}}if((0|A)<=69887){if((0|A)==69376)break E;if((0|A)!=69632)break s;if(t-69703>>>0>=2)break ge;break j}if((0|A)==69888)break fe;if((0|A)!=70144)break s;if((A=t-70200|0)>>>0<=4)break le;if((0|t)!=70313)break s;break j}if((0|A)<=74751){if((0|A)<=71423){if((0|A)==70656)break ne;if((0|A)==70912)break ee;if((0|A)!=71168||(r=268435520,t-71233>>>0>=2))break s;break A}if((0|A)<=72703){if((0|A)==71424)break Z;if((0|A)!=72192)break s;if(t-72258>>>0>=2)break Y;break j}if((0|A)==72704)break X;if((0|A)!=73216||(r=268435520,t-73463>>>0>=2))break s;break A}if((0|A)<=93695){if((0|A)==74752)break P;if((0|A)==92672)break O;if((0|A)!=92928)break s;if(r=268435520,t-92983>>>0<2)break A;A=(0|t)==92996?268435520:0,A=(t=(0|t)==92985)?64:A;break S}if((0|A)<=121343){if((0|A)==93696)break D;if((0|A)!=113664||(r=268435520,s=-2147483648,(0|t)!=113823))break s;break A}if((0|A)==121344)break Bt;if((0|A)!=125184)break s;r=((0|t)==125279)<<30,A=0,fe=(t=(0|t)==125278)?536870912:r;break i}r=-1879048128,s=536870912;Ce:{ft:{gt:{pt:{Ht:switch(t-33|0){default:switch(t-183|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:break Ce;case 8:break gt;case 0:break pt;default:break ft}case 2:case 9:fe=66;break u;case 11:return fe=268435456,-2147483584;case 13:return fe=-2147483648,-1879048128;case 25:return fe=134217728,-2147483584;case 26:return fe=67108864,-2147483584;case 1:case 6:break C;case 0:break A;case 3:case 4:case 5:case 7:case 8:case 10:case 12:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 27:case 28:case 29:break Ce;case 30:break Ht}return fe=1073741824,-1879048128}return fe=0,134230016}fe=1078984704;break u}if((0|t)==161)break st}break w}A=(0|t)==903,r=(t=(0|t)==894)?64:A?134217792:0,fe=t?1073741824:A?67108864:0;break m}if((0|t)==1417)break Ge;if((0|t)!=1475)break s;break oe}fe=1075838976;break c}fe=-2143289344;break a}r=64,s=268435456;Te:switch(t-1548|0){case 15:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 16:case 17:break s;case 0:break A;case 19:break Te;case 18:break j;default:break T}break o}if((A=t-1792|0)>>>0<6)break St;if(r=64,s=134217728,(-2&t)==1798)break A;s=67108864;me:{Te:{Ge:switch(t-1800|0){default:switch(t-2040|0){case 1:break me;case 0:break Te;default:break s}case 3:break s;case 0:break A;case 1:break Ge;case 2:case 4:break oe}fe=1073741824;break t}fe=268435456;break t}fe=536870912;break a}A=(0|t)==2405,r=(t=(0|t)==2404)||A?268435520:0,fe=t?-2143289344:A?16777216:0;break m}if(r=0,s=-2143289344,(0|t)!=3572)break s;break A}r=64;$e:switch(t-3848|0){case 5:fe=-2143289344;break t;case 6:fe=16777216;break t;case 0:break A;default:break $e}if(t-3854>>>0<5)break A;if(r=0,s=268435456,(0|t)!=3860)break s;break A}if((A=t-4961|0)>>>0<4)break Gt;if(r=64,s=134217728,t-4965>>>0<2)break A;A=(0|t)==4968,r=(t=(0|t)==4967)||A?268435520:0,fe=t?1073741824:A?16777216:0;break m}if(t-5867>>>0>=3)break s;break A}if(r=268435520,t-5941>>>0<2)break A;if((t=t-6100|0)>>>0>=7)break s;A=e[(t=83240+(t<<3)|0)>>2];break h}if(r=268435520,(-4&t)!=6824)break s;break A}if(r=64,(0|t)==7005)break A;if(r=268435520,(0|A)!=7006)break s;break A}if(t-7227>>>0<2)break j;if(r=64,t-7229>>>0<3||(r=268435520,(-2&t)==7294))break A;if(r=4096,(0|t)!=7379)break s;break A}fe=33554432;break u}if((-8&t)==8224)break w;if(t-8242>>>0<3)break A;if(t-8240>>>0<9)break w;if((A=t-8251|0)>>>0<21)break Pt;break ae}if((0|t)==11513){fe=-2147483648;break c}if(r=0,s=1073741824,(-2&t)==11514)break A;if(s=-2147483648,(0|t)!=11518)break s;break A}r=-1879048128;Ze:switch(t-11822|0){case 4:case 6:fe=268435456;break u;case 5:fe=-2147483648;break u;case 7:fe=67108864;break u;case 14:return fe=-2147483648,-1879048128;case 19:return fe=268435456,-2147483584;case 30:case 32:return fe=0,-2147483584;case 0:break A;default:break Ze}break w}if((0|t)==12349)break _;if((0|t)!=12539)break s;return fe=0,16}return fe=-2143289344,-1879048128}A=(0|t)==42239,r=(t=(0|t)==42238)?64:A?268435520:0,fe=t?268435456:A?-2147483648:0;break m}Ke:switch(t-42509|0){case 1:break n;case 0:break A;case 2:break Ke;default:break s}break o}fe=134217728;break t}if(t-43126>>>0<2)break j;if(r=268435520,t-43214>>>0>=2)break s;break A}if((0|t)==43463)break oe;if(r=268435520,(-2&t)!=43464)break s;break A}if(t-43613>>>0<3)break j;if(r=64,(0|t)==43743)break A;if(r=268435520,(-2&t)!=43760)break s;break A}if(r=268435520,(0|t)!=44011)break s;break A}r=268435520,s=541065216;ie:switch(t-65281|0){case 1:case 6:return fe=0,32;case 11:fe=272629760;break t;case 13:fe=-2143289344;break a;case 100:return fe=0,16;case 25:fe=138412032;break t;case 26:fe=71303168;break t;case 30:fe=1077936128;break a;case 96:break n;case 59:break k;case 0:break A;case 99:break ie;default:break s}fe=268435456;break t}r=(A=(0|t)==66512)>>>26|0,A=(t=(0|t)==66463)?64:A<<6;break L}if(r=64,(0|t)!=67871)break s;break A}if(r=268435520,(-2&t)==68182)break A;if(r=64,t-68336>>>0>=6)break s;break A}if(r=268435520,t-69461>>>0>=5)break s;break A}if(r=64,t-69705>>>0<5)break A;if(r=268435520,t-69822>>>0>=4)break s;break A}if(t-69953>>>0<2)break j;if((A=t-70085|0)>>>0<=26)break F;break Ve}if((0|A)!=2)break j;break oe}if(r=268435520,t-70731>>>0<2)break A;s=(A=(0|t)==70747)>>>26|0,A=(t=(0|t)==70733)?64:A<<6,fe=t?268435456:s;break i}r=268435520;ee:switch((-2&t)-71106|0){case 0:break A;case 2:break d;default:break ee}if(r=8192,t-71110>>>0<3)break A;if(r=268435520,t-71113>>>0>=15)break s;break A}if(r=268435520,t-71484>>>0>=3)break s;break A}if(r=268435520,t-72347>>>0<2)break A;if(r=64,t-72353>>>0>=2)break s;break A}if(r=268435520,t-72769>>>0<2)break A;r=(A=(0|t)==72817)>>>26|0,A=(t=(0|t)==72771)?64:A<<6;break L}if(r=64,s=134217728,t-74865>>>0<2)break A;if(s=0,t-74864>>>0>=5)break s;break A}A=(0|t)==93848?268435520:0,A=(t=(0|t)==93847)?64:A;break S}if(r=268435520,(-2&t)==92782)break A;if(s=-2147483648,(0|t)!=92917)break s;break A}if((0|t)==1748)break n;break s}if(!(1<<A&100663555))break Ve;break j}break oe;case 23:d:{F:{T:{O:{D:{P:{if((0|(A=-256&t))<=11775){if((0|A)<=8959){if(A)break P;break w}if((0|A)==8960)break D;if((0|A)==9984)break O;if((0|A)!=10496)break s;break K}if((0|A)<=64767){if((0|A)==11776)break T;if((0|A)!=12288)break s;if((t=t-12300|0)>>>0<=17&&(r=-2147483616,1<<t&131077))break A;break w}if((0|A)==64768)break F;if((0|A)==65024)break d;if((0|A)!=65280)break s;if(r=32,(0|t)==65378)break A;break s}if((0|A)!=8192)break s;r=-2147483616;P:switch(t-8218|0){case 1:case 2:case 3:break s;case 0:case 4:break A;default:break P}P:switch(t-8317|0){default:if((0|t)!=8261)break s;break w;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break s;case 0:case 16:break P}break k}r=-2147483520;D:switch(t-8968|0){case 1:break s;case 0:case 2:break A;default:break D}if((0|t)!=9001)break s;return fe=0,-2139095040}if(r=-2147483520,(0|t)==10181)break A;break Se}return fe=0,(0|t)==11842?-2147483616:-2147483648}if(r=-2147483648,(0|t)!=64831)break s;break A}r=(t=!(t-65089&-3))>>>27|0,t<<=5;break y;case 24:r=(t=t>>>0<256)>>>1|0,t<<=31;break y;case 25:d:{F:{T:{O:{D:{P:{X:{Y:{if((0|(A=-256&t))<=12287){if((0|A)<=767){if(!A)break Y;if((0|A)!=512)break d;if(t-751>>>0>=17)break X;break g}if((0|A)==768)break P;if((0|A)!=7936)break d;switch(r=4096,t-8125|0){case 0:case 2:case 3:case 4:case 16:case 17:case 18:case 32:case 33:case 34:case 48:case 49:case 50:case 64:case 65:break A;default:break d}}if((0|A)<=43775){if((0|A)==12288)break D;if((0|A)!=42752||(r=4096,(-2&t)!=42784))break d;break A}if((0|A)==43776)break O;if((0|A)==65280)break T;if(r=0,s=78,(0|A)!=127744)break d;break A}Y:switch(t-168|0){default:r=-2147479424;Z:switch(t-94|0){case 0:break A;case 2:break Z;default:break d}return fe=0,-2147479552;case 0:case 7:break g;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:case 13:case 14:case 15:break d;case 12:case 16:break Y}break g}if((0|t)==749|t-741>>>0<7)break g;if(t-706>>>0>=4)break F;break g}if((t=t-885|0)>>>0>16||(r=4096,!(1<<t&98305)))break d;break A}if(r=67112960,t-12443>>>0>=2)break d;break A}if(r=4096,(0|t)!=43867)break d;break A}r=4224;T:switch(t-65342|0){default:if((0|t)!=65507)break d;break;case 0:break A;case 1:break d;case 2:break T}break g}if(r=4096,t-722>>>0<14)break A}break s;case 26:d:{F:{T:{O:{D:{P:{if((0|(A=-256&t))<=9471){if((0|A)<=8447){if(A)break d;break w}if((0|A)==8448)break P;if((0|A)==8704)break D;if(r=-2147483648,(0|A)!=8960)break s;break A}if((0|A)<=10495){if((0|A)==9472)break O;if((0|A)==9728)break T;if((0|A)==9984)break w;break s}if((0|A)==10496)break F;if((0|A)==10752)break w;if(r=-2147483648,(0|A)!=11008)break s;break A}if((0|t)==8472)return fe=0,67108864;if((0|t)==8596)break q;if(r=-2147483648,t>>>0<=8591)break s;break A}if(r=-2147483640,(0|t)==8722)break A;A=-2147483648,fe=(t=t-8942>>>0<4)?33554432:0;break i}if(r=-2147483648,s=130,t-9723>>>0<2)break A;A=-2147483648,fe=(t=t-9725>>>0<2)?134:0;break i}if(r=-2147483648,s=128,(0|t)==9839)break A;break w}if(r=-2147483648,s=130,(-2&t)==10548)break A;A=-2147483648,fe=(t=(0|t)==10626)?134217728:0;break i}if((0|A)==8192)break Ye;break s;case 27:d:{F:{T:{O:{D:{P:{X:{Y:{Z:{ee:{ne:{le:{fe:{ge:{E:{ce:{J:{H:{ie:{ue:{ve:{xe:{Ue:{ye:{if((0|(A=-256&t))<=12287){if((0|A)<=9727){if((0|A)<=8959){if(!A)break ye;if((0|A)!=8448)break s;switch(r=0,s=130,t-8482|0){case 7:break k;case 0:break A;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:break ue;case 12:break xe;default:break Ue}}if((0|A)==8960)break ie;if((0|A)==9216)break H;if((0|A)!=9472)break s;switch(r=-2147483520,(-2&t)-9632|0){case 0:break A;case 10:break q;default:break J}}if((0|A)<=11007){if((0|A)==9728)break ce;if((0|A)==9984)break E;if(r=-2147483648,(0|A)!=10240)break s;break A}if((0|A)==11008)break ge;if((0|A)==11776)break fe;if((0|A)!=12032)break s;if(r=1048576,t>>>0<12246)break A;switch(r=262144,(-2&t)-12272|0){case 0:break A;case 2:break d;default:break le}}if((0|A)<=127999){if((0|A)<=127231){if((0|A)==12288)break ne;if((0|A)==12800)break ee;if((0|A)!=126976)break s;A=(0|t)==127183,r=0,fe=(t=(0|t)==126980)||A?134:128;break m}if((0|A)==127232)break Z;if((0|A)==127488)break Y;if((0|A)!=127744)break s;if(t>>>0>=127777)break X;break R}if((0|A)<=128767){if((0|A)==128e3)break P;if((0|A)==128256)break D;if((0|A)!=128512)break s;if((A=t-128581|0)>>>0<11)break Ct;break Ee}if((0|A)==128768)break O;if((0|A)==129280)break T;if((0|A)!=129536)break s;fe=128;break c}A=(0|t)==174,r=-2147483648,fe=(t=(0|t)==169)||A?130:0;break m}switch(t-8616|0){case 0:break w;case 1:case 2:break ve;default:break ue}}return fe=0,67108864}return fe=130,-2147483520}if(r=-2147483520,t-8597>>>0<5)break A;if(t-8604>>>0<18)break K;if((A=t-8624|0)>>>0<8)break yt;break He}if(t>>>0<8968)break w;if((0|(A=-2&t))==8986)break l;if(t-8972>>>0<20|t-8994>>>0<6)break w;if((0|t)==9e3)break q;if(t-9003>>>0<81)break w;if(r=-2147483648,s=128,(0|t)==9096)break A;if(t-9085>>>0<30)break w;if(r=-2147483520,s=0,(0|A)==9140)break A;ie:switch(t-9143|0){case 0:case 25:break A;case 24:break q;default:break ie}if(t-9140>>>0<40)break w;if((0|t)==9186)break A;if((A=t-9193|0)>>>0<4)break l;r=-2147483648,s=134;ie:switch(t-9200|0){case 0:case 3:break A;default:break ie}if(A>>>0<11)break q;if(s=130,t-9208>>>0<3)break A;if(s=0,t>>>0<=9186)break s;break A}if(r=-2147483648,t-9216>>>0<75||(r=33792,s=130,(0|t)==9410)||(s=0,t-9398>>>0<26))break A;if(r=17408,t-9424>>>0>=26)break s;break A}if(t-9646>>>0<8)break K;if(s=130,(0|t)==9654)break A;if((-4&t)==9660)break K;J:switch(t-9664|0){case 0:break A;case 6:case 7:case 10:case 11:case 15:case 16:case 17:case 18:case 19:case 34:case 36:break K;default:break J}return fe=0,t-9703>>>0<6?-2147483520:-2147483648}ce:switch((-16&t)-9728>>>4|0){case 0:if(t>>>0<9733)break q;r=-2147483520,s=128;J:switch(t-9733|0){case 0:break A;case 9:break J;case 1:break K;default:break G}break q;case 2:if((A=t-9760|0)>>>0<11)break vt;if(r=-2147483648,s=130,t>>>0<=9773)break G;break A;case 3:if(r=-2147483648,s=130,t-9784>>>0>=3)break G;break A;case 4:r=-2147483520,s=130;J:switch(t-9792|0){case 0:case 2:break A;default:break J}if(r=-2147483648,s=134,t>>>0<=9799)break G;break A;case 5:if(r=-2147483648,s=134,t>>>0<9812)break A;if(s=130,(0|t)!=9823)break G;break A;case 6:if((0|t)==9734)break K;if((0|t)==9824)return fe=130,-2147483520;if(r=-2147483520,s=128,t-9825>>>0<2)break A;if((A=t-9827|0)>>>0<6)break Mt;break Me;case 8:if(r=-2147483648,t>>>0<=9861)break G;break A;case 10:r=-2147483648,s=130;J:switch(t-9888|0){case 1:break l;case 0:break A;default:break J}if(s=134,(-2&t)!=9898)break G;break A;case 11:if(r=-2147483648,s=130,(-2&t)==9904)break A;if(s=134,t-9917>>>0>=2)break G;break A;case 12:if((-2&t)==9924)break l;r=-2147483648,s=130;J:switch(t-9928|0){case 0:case 7:break A;case 6:break J;default:break G}break l;case 14:A=(0|t)==9962,r=-2147483648,fe=(t=(0|t)==9961)?130:A?134:128;break m;case 13:break wt;case 9:break kt;case 15:break ce;case 7:break Et;case 1:break xt;default:break G}if((0|t)==9972|t>>>0<9970)break q;if(r=-2147483648,s=134,t>>>0<9974||(0|t)!=9974&&(s=130,t>>>0<9977))break A;if((t=t-9977|0)>>>0<5)break It;break G}E:{ce:{J:{H:{ie:switch((-16&t)-9984>>>4|0){case 0:if(r=0,s=130,(0|t)==9986||(s=128,t>>>0<9989)||(s=134,(0|t)==9989))break E;s=150;ue:switch((-2&t)-9994|0){case 0:break E;case 2:break J;default:break ue}if(s=130,t-9992>>>0<6)break E;A=(0|t)==9999,r=0,s=(t=(0|t)==9998)?128:A?130:0;break E;case 1:if(r=0,s=128,t>>>0<10002)break E;if((t=t-10002|0)>>>0>11||(s=130,!(1<<t&2069)))break H;break E;case 2:A=(0|t)==10024,r=0,s=(t=(0|t)==10017)?130:A?134:0;break E;case 4:r=0,s=130;ue:switch(t-10052|0){case 0:case 3:break E;case 8:case 10:break ue;default:break H}s=134;break E;case 5:if(r=0,s=1073741958,t-10067>>>0<2)break E;s=(t=t-10069&-3)?0:536871046;break E;case 6:if((A=t-10082|0)>>>0<3)break ce;if(r=0,s=128,t>>>0<=10084)break H;break E;case 9:if(r=0,s=134,t-10133>>>0>=3)break H;break E;case 10:if(r=0,s=130,(0|t)!=10145)break H;break E;case 11:A=(0|t)==10175,r=0,s=(t=(0|t)==10160)||A?134:0;break E;case 3:break ie;default:break H}if(r=0,s=130,t-10035>>>0<2)break E}r=0,s=0;break E}s=146;break E}r=e[(t=83992+(A<<3)|0)>>2],s=e[t+4>>2]}return fe=s,-2147483648|r}if(r=-2147483648,s=130,t-11013>>>0<3||(s=134,t-11035>>>0<2))break A;A=(0|t)==11093,r=-2147483648,fe=(t=(0|t)==11088)||A?134:0;break m}if(t-11904>>>0>=26)break F;return fe=0,1048576}if(t-12276>>>0>=8)break s;break A}if((t=t-12306|0)>>>0>14||(r=-2147483648,!(1<<t&16387)))break s;break A}A=0,fe=(t=t-12951&-3)?0:130;break i}if(r=0,s=128,(0|t)==127279)break A;if(t-127280>>>0<26||t-127312>>>0<26)return fe=0,33792;if((A=t-127344|0)>>>0<=15&&(r=33792,s=130,1<<A&49155)||(r=33792,s=0,A>>>0<26))break A;if((0|t)==127374)break R;if(r=0,s=134,t-127377>>>0<10)break A;if(s=102,t>>>0<=127461)break s;break A}r=0,s=134;Y:{Z:switch(t-127489|0){case 0:case 25:break A;case 1:break _;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:break Y;default:break Z}switch(t-127535|0){case 0:break A;case 8:break _;default:break Y}}if((-2&t)==127568|t-127538>>>0<9)break A;if(s=128,t>>>0<=127583)break s;break A}if((0|t)==127777)break _;if(t-127789>>>0<9|t-127799>>>0<70)break R;if((0|t)==127877)break te;if(t-127870>>>0<22)break R;if(t-127780>>>0<112)break _;r=0,s=130;X:switch(t-127894|0){case 44:case 45:case 46:case 49:break te;case 0:case 1:case 3:case 4:case 5:break A;default:break X}if(t-127904>>>0<42)break R;if(s=150,(0|t)==127946||(s=146,t-127947>>>0<2))break A;if(t-127951>>>0<5)break R;if(s=134,t-127968>>>0<17||(s=130,t-127902>>>0<83))break A;if((A=t-127987|0)>>>0<5)break bt;break V}r=0,s=130;P:switch(t-128063|0){case 0:case 2:break A;default:break P}if((0|t)==128124|(-5&t)-128129>>>0<3|(0|t)==128110|t-128112>>>0<9||(-2&t)==128066|t-128102>>>0<4|t-128070>>>0<11)break te;P:switch(t-128253|0){case 1:fe=128;break c;case 0:break _;default:break P}if(s=150,(0|t)==128170)break A;break R}if(t>>>0<128318)break R;if(r=0,t>>>0<128326)break A;if(t-128329>>>0<2)break _;if(t-128331>>>0<4|t-128336>>>0<24)break R;if(t-128367>>>0<2)break _;if((-2&t)==128372){fe=146;break c}if(t-128371>>>0<7)break _;if(s=150,!(A=t-128378|0))break A;if((0|A)==13|t-128394>>>0<4)break _;if(s=146,(0|t)==128400||(s=150,t-128405>>>0<2))break A;s=134;D:switch(t-128420|0){case 0:break A;case 1:case 4:case 13:case 14:case 24:case 30:case 31:case 32:case 45:case 46:case 47:case 56:case 57:case 58:case 61:case 63:case 68:case 75:case 79:case 86:break _;default:break D}t=t>>>0>128506,A=0;break p}if(r=0,s=128,t-128981>>>0>=4)break s;break A}if(t>>>0<129292)break s;if(t-129328>>>0<10)break te;r=0,s=150;T:switch(t-129304|0){case 35:break s;case 0:case 1:case 2:case 3:case 4:case 6:case 7:case 14:break A;default:break T}if(t-129341>>>0<2)break te;if(s=0,(0|t)==129350||(s=198,(-4&t)==129456))break A;if((A=t-129461|0)>>>0<5)break mt;break ht}if(r=1048576,t-11931>>>0<89)break A;break s}return fe=0,524288;case 29:return fe=16777216,1073741825;case 28:break A;case 30:break Yt;default:break s}return fe=0,(0|t)==32?1073741825:1}if(!(1079>>>A&1))break pe;A=e[(t=81344+(A<<3)|0)>>2];break h}if(557553>>>A&1)break k;if((-4&t)!=8508)break Oe;break A}if(!(207>>>A&1))break Ie;break f}if(r=1024,!(1017>>>A&1))break we;break A}if(r=1024,!(32895>>>A&1))break Ne;break A}if(r=1024,!(55>>>A&1))break ze;break A}if(r=1024,!(3087>>>A&1))break Re;break A}if((t=t-71453|0)>>>0>=15)break s;A=e[(t=82312+(t<<3)|0)>>2];break h}if(!(49023>>>A&1))break je;A=e[(t=82432+(A<<3)|0)>>2];break h}if(!(514623>>>A&1))break $;A=e[(t=82664+(A<<3)|0)>>2];break h}A=e[(t=83160+(A<<3)|0)>>2];break h}if(r=268435520,!(197>>>A&1))break We;break A}A=e[(t=83208+(A<<3)|0)>>2];break h}if((t=t-6145|0)>>>0>=10)break s;A=e[(t=83296+(t<<3)|0)>>2];break h}if(!(1077711>>>A&1))break ae;A=e[(t=83376+(A<<3)|0)>>2];break h}if(!(159>>>A&1))break ke;A=e[(t=83544+(A<<3)|0)>>2];break h}if((t=t-121479|0)>>>0>=4)break s;A=e[(t=83608+(t<<3)|0)>>2];break h}if(!(195>>>A&1))break He;break K}if((t=t-9745|0)>>>0>=13)break G;A=e[(t=83640+(t<<3)|0)>>2];break h}if(1101>>>A&1)break q;if(r=-2147483648,s=130,t>>>0<=9773)break G;break A}if(!(45>>>A&1))break Me;A=e[(t=83744+(A<<3)|0)>>2];break h}if((t=t-9851|0)>>>0>=5)break G;A=e[(t=83792+(t<<3)|0)>>2];break h}if((t=t-9874|0)>>>0>=11)break G;A=e[(t=83832+(t<<3)|0)>>2];break h}if((t=t-9937|0)>>>0>=4)break G;A=e[(t=83920+(t<<3)|0)>>2];break h}A=e[(t=83952+(t<<3)|0)>>2];break h}if(!(23>>>A&1))break V;A=e[(t=84016+(A<<3)|0)>>2];break h}if(r=0,s=150,!(1991>>>A&1))break Ee;break A}if(s=150,27>>>A&1)break A}A=0,fe=(t=t-129489>>>0<13)?150:134;break i}t=t-127992>>>0<3,A=0;break p}if(t-9837>>>0<2)break A}fe=128;break u}if(t-8623>>>0<13)break w;if(t-8636>>>0<18)break K;if((A=t-8656|0)>>>0<22&&(s=0,3157995>>>A&1)||(r=-2147483648,s=0,t-8661>>>0<31))break A;break s}if(t>>>0<128592)break R;if(r=0,s=0,t>>>0<128640)break A;if(!((A=t-128675|0)>>>0>29|!(1<<A&537788417)))break te;if(t>>>0<128710)break R;if(s=150,(0|t)==128716)break A;if(t-128715>>>0<5)break _;if(t-128720>>>0<3)break R;if(!((A=t-128736|0)>>>0>=10|!(575>>>A&1)))break _;if(s=134,t-128747>>>0<2)break A;s=130;Ee:switch(t-128752|0){case 0:case 3:break A;default:break Ee}t=t-128756>>>0<6,A=0;break p}r=-2147483648;Ye:switch(t-8260|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:break s;case 0:case 14:break A;default:break Ye}if((0|(t=t-8315|0))!=16&&t)break s;return fe=0,8}if(r=268435520,s=1073741824,(0|t)!=69955)break s;break A}if(t-8266>>>0<8)break w;if(r=-2147483640,(0|t)==8275)break A;if(r=-2147483648,t-8277>>>0>=10)break s;break A}fe=542113792;break u}if(r=-2147483648,s=0,t-65093>>>0<2||(r=64,s=268435456,(0|l)==65104))break A;r=268435520,s=-2147483648;ke:switch(t-65106|0){case 3:fe=134217728;break t;case 5:fe=536870912;break a;case 4:break o;case 2:break r;case 0:break A;case 15:case 22:break ke;default:break s}break k}if((0|t)==2142)break oe;if(r=64,t-2096>>>0<15)break A;break s}if(r=1024,t-72850>>>0<22)break A;if((t=t-72874|0)>>>0>=13)break s;A=e[(t=82560+(t<<3)|0)>>2];break h}if(r=4096,t-71103>>>0<2)break A;if(r=1024,(-2&t)!=71132)break s;break A}if((0|t)==70726)break g;if(r=4096,(-2&t)!=70850)break s;break A}if(r=4096,t-68325>>>0>=2)break s;break A}if((0|t)==6109)break g;if(r=4096,t-6089>>>0>=11)break s;break A}_e:switch(t-3959|0){case 0:case 2:return fe=0,8389632;default:break _e}if((0|A)==3968|t-3953>>>0<14)break f;if(!((A=t-3970|0)>>>0>=6|!(55>>>A&1)))break g;if(t-3981>>>0<11)break f;if(r=1024,t-3993>>>0<36)break A;if(r=4096,(0|t)!=4038)break s;break A}if(t-3655>>>0<6)break g;if(!((A=t-3761|0)>>>0>11|!(1<<A&3577)))break f;r=1024;we:switch(t-3661|0){case 1:break g;case 0:break A;default:break we}if(r=4096,t-3784>>>0<5)break A;if(r=1024,(0|t)!=3789)break s;break A}if(t-1770>>>0<3)break A;if(r=1024,(0|t)!=1773)break s;break A}if((-2&t)==73028)break g;r=1024;$:switch(t-73104|0){default:if((0|t)!=73031)break s;break A;case 2:case 3:case 4:case 6:break s;case 0:case 1:case 5:break A;case 7:break $}break g}if((t=t-8492|0)>>>0>=30)break s;A=e[(t=81704+(t<<3)|0)>>2];break h}r=0;break N}s=(A=(-3&t)==43712)>>>20|0,r=A<<12}if((0|(o=-65536&t))==131072)break rt;if((0|o)==65536)break be;if(A=r,l=s,o)break he}if(t-13312>>>0<6582||t-19968>>>0<20976)break e;if(o=2048,t-63744>>>0<366)return fe=l,2048|A;if(r=A,s=l,t-64112>>>0>=106)break he;break W}if(o=2099200,t-183984>>>0<7473|t-178208>>>0<5762|t-177984>>>0<222|t-131072>>>0<42711||t-173824>>>0<4149||(o=2048,t-194560>>>0<542))break W;break he}if(o=2048,t-110960>>>0<396|t-94208>>>0<6125|t-100352>>>0<755)break W}o=0}return fe=s,r|o}if((-4&t)==8508)break k;if(r=128,!(t-8517>>>0<3)&&(r=16777344,(-2&t)!=8520))break s}fe=s;break m}A=(t=t>>>0>131069)?65536:0,fe=t?0:128;break i}if((0|t)==11776)break w}fe=0;break c}fe=0;break u}return fe=0,4194304}return fe=0,128}return fe=0,16777344}return fe=0,4096}return fe=0,1024}return fe=0,-2147483520}return fe=0,t-10214>>>0<10?-2147483520:-2147483648}fe=0;break a}fe=0;break t}fe=130;break c}fe=130;break u}fe=134;break c}return fe=150,0}fe=0;break i}fe=t?0:s;break i}return fe=A,t}return 131072}return fe=0,16777216}fe=t?0:r;break i}return fe=s,t}return fe=r,t}fe=t?0:A;break m}return fe=0,8192}fe=e[t+4>>2];break i}fe=t?8388608:0;break i}return r}return fe=0,-2147483616}fe=t?134:128}return A}fe=134}return-2147483648}return 0}fe=1073741824;break a}fe=-2147483648}return 268435520}fe=67108864}return 64}return fe=l,2099200|A}function Lt(t){var A,r=0,s=0,o=0,l=0,u=0;(A=Nt(8244))&&(e[A+328>>2]=2,f[132848]=0,e[A+684>>2]=0,e[A+688>>2]=0,e[A+320>>2]=0,e[A+324>>2]=0,f[A+268|0]=0,f[A+228|0]=0,e[A+8216>>2]=0,e[A+8220>>2]=0,e[A+224>>2]=104944,e[A+216>>2]=383,e[A+220>>2]=96,Je(A+344|0,0,292),e[A+8196>>2]=0,e[(r=A+8188|0)>>2]=0,e[r+4>>2]=0,e[A+8180>>2]=0,e[A+8184>>2]=0,f[A+460|0]=22,f[A+461|0]=129,f[A+466|0]=38,f[A+462|0]=38,f[A+463|0]=36,f[A+464|0]=22,f[A+465|0]=224,f[A+456|0]=22,f[A+457|0]=22,f[A+458|0]=44,f[A+459|0]=22,f[A+454|0]=46,f[A+455|0]=129,f[A+446|0]=22,f[A+447|0]=38,f[A+448|0]=28,f[A+449|0]=193,f[A+450|0]=38,f[A+451|0]=22,f[A+452|0]=46,f[A+453|0]=46,f[A+441|0]=129,f[A+442|0]=38,f[A+443|0]=22,f[A+444|0]=38,f[A+445|0]=193,e[A+332>>2]=104912,e[A+336>>2]=104916,e[A+340>>2]=105232,f[A+296|0]=18,f[A+297|0]=18,k[A+304>>1]=182,k[A+306>>1]=140,f[A+298|0]=20,k[A+308>>1]=220,k[A+310>>1]=220,k[A+312>>1]=220,f[A+299|0]=20,f[A+300|0]=20,k[A+314>>1]=240,f[A+301|0]=22,k[A+316>>1]=260,k[A+318>>1]=280,f[A+302|0]=22,f[A+303|0]=20,r=Je(A,0,212),e[r+200>>2]=20,e[r+192>>2]=25966,e[r+196>>2]=500,e[r+80>>2]=95,e[r+16>>2]=1,e[r+20>>2]=3,e[r+8>>2]=2,e[r+52>>2]=19,f[r+168|0]=3,e[r+92>>2]=2,e[r+72>>2]=4,e[r+40>>2]=115,e[r+44>>2]=95,e[r+140>>2]=105244,SA(r,201),e[r+120>>2]=2,e[r+124>>2]=44,e[r+164>>2]=100,e[r+128>>2]=46,e[r+132>>2]=14,e[r+112>>2]=1227133512,e[r+116>>2]=49,e[r+104>>2]=1,s=e[26313],e[r+636>>2]=e[26312],e[r+640>>2]=s,s=e[26315],e[r+644>>2]=e[26314],e[r+648>>2]=s,s=e[26317],e[r+652>>2]=e[26316],e[r+656>>2]=s,s=e[26319],e[r+660>>2]=e[26318],e[r+664>>2]=s,s=e[26321],e[r+668>>2]=e[26320],e[r+672>>2]=s,s=e[26323],e[r+676>>2]=e[26322],e[r+680>>2]=s,s=d[104928]|d[104929]<<8,f[r+160|0]=s,f[r+161|0]=s>>>8,s=d[104924]|d[104925]<<8|d[104926]<<16|d[104927]<<24,f[r+156|0]=s,f[r+157|0]=s>>>8,f[r+158|0]=s>>>16,f[r+159|0]=s>>>24),o=Gt(A+228|0,t),r=0;e:{t:if(s=d[0|t]){for(;r=(s<<24>>24)+(r<<8)|0,s=d[0|(t=t+1|0)];);r:{a:{n:{o:{c:{u:{l:{i:{p:{C:{m:{b:{h:{x:{I:{y:{z:{L:{U:{B:{M:{Q:{S:{te:{R:{q:{_:{oe:{j:{Se:{K:{f:{g:{re:{k:{se:{w:{s:{At:{Ae:{A:{pe:{W:{he:{be:{rt:{de:{N:{Fe:{v:{Oe:{$:{Ie:{we:{_e:{Ne:{ze:{Le:{Re:{je:{We:{ke:{st:{ae:{Ve:{Ye:{Ee:{He:{G:{Me:{if((0|r)<=28008){if((0|r)<=26464){if((0|r)<=25696){V:switch(r-24934|0){case 20:break i;case 1:case 2:case 3:case 4:case 5:case 6:case 9:case 10:case 11:case 14:case 15:case 16:case 17:case 18:case 19:break t;case 8:break $;case 12:break We;case 7:break ke;case 0:break st;case 13:break Me;default:break V}V:switch(r-25189|0){case 1:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 11:case 12:case 13:break t;case 14:break pe;case 2:break Re;case 0:break je;case 9:break Me;default:break V}switch(r-25441|0){case 18:break y;case 0:break $;case 24:break ze;default:break t}}V:switch(r-25964|0){case 1:case 4:case 5:case 6:break t;case 8:break Fe;case 9:break Oe;case 7:break $;case 3:break Ie;case 2:break we;case 0:break He;default:break V}V:switch(r-26209|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break t;case 17:break de;case 8:break N;case 0:break v;default:break V}switch(r-25697|0){case 4:break _e;case 0:break Ne;default:break t}}if((0|r)<=27488){V:switch(r-26729|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 13:case 14:case 15:break t;case 16:break At;case 12:break Ae;case 11:break A;case 9:break pe;case 0:break W;default:break V}V:switch(r-26977|0){case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 15:case 16:case 17:break t;case 19:break k;case 18:break se;case 3:break w;case 14:break s;case 0:break $;default:break V}switch(r-26465|0){case 20:break W;case 13:break he;case 0:case 3:break be;default:break t}}V:switch(r-27489|0){case 13:break p;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 12:case 15:case 16:case 17:case 18:case 19:case 21:case 22:case 23:break t;case 24:break oe;case 20:break j;case 14:break Se;case 11:break K;case 10:break f;case 0:break g;default:break V}switch(r-27745|0){case 19:break q;case 0:break _;case 21:break Ye;default:break t}}if((0|r)<=29792){if((0|r)<=28768){V:switch(r-28009|0){case 3:break p;case 11:break te;case 2:break R;case 1:case 4:case 5:case 6:case 7:case 8:case 12:case 13:case 14:case 15:break t;case 10:break w;case 9:break W;case 0:case 16:break ae;default:break V}V:switch(r-28258|0){case 0:break Q;case 10:break S;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:break t;case 3:break W;default:break V}switch(r-28525|0){case 0:break M;case 5:break W;default:break t}}if((0|r)<=29539){V:switch(r-28769|0){case 19:break U;case 11:break B;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 20:case 21:case 22:case 23:break t;case 0:break W;case 24:break ae;default:break V}V:switch(r-29295|0){case 6:break z;case 0:break L;case 1:case 2:case 3:case 4:case 5:break t;default:break V}if((0|r)==29045)break ae;break t}switch(r-29540|0){case 19:break C;case 18:break m;case 13:break b;case 8:break x;case 5:break I;case 7:break y;case 14:break pe;case 0:break c;default:break t}}if((0|r)>6514801)break G;if((0|r)<=30058)switch(r-29793|0){case 19:break l;case 17:break i;case 0:case 4:break p;case 13:break C;case 7:break ae;default:break t}if((0|r)<=30312)switch(r-30059|0){case 0:break u;case 15:break ae;case 7:break c;default:break t}if((0|r)==30313)break o;if((0|r)==31336)break n;if((0|r)!=6451321)break t}if(e[A+296>>2]=303174162,e[A+300>>2]=370545684,e[A+600>>2]=2432,e[A+8>>2]=0,e[A+12>>2]=65540,e[A+100>>2]=e[A+96>>2],t=e[25889],e[A+304>>2]=e[25888],e[A+308>>2]=t,t=e[25891],e[A+312>>2]=e[25890],e[A+316>>2]=t,lA(A),f[A+345|0]=2|d[A+345|0],f[A+406|0]=16|d[A+406|0],f[A+407|0]=16|d[A+407|0],f[A+408|0]=16|d[A+408|0],f[A+409|0]=16|d[A+409|0],f[A+410|0]=16|d[A+410|0],f[A+411|0]=16|d[A+411|0],f[A+412|0]=16|d[A+412|0],f[A+413|0]=16|d[A+413|0],f[A+414|0]=16|d[A+414|0],f[A+415|0]=16|d[A+415|0],f[A+416|0]=16|d[A+416|0],f[A+417|0]=16|d[A+417|0],f[A+418|0]=16|d[A+418|0],f[A+419|0]=16|d[A+419|0],f[A+420|0]=16|d[A+420|0],f[A+456|0]=4|d[A+456|0],f[A+457|0]=4|d[A+457|0],e[A+112>>2]=613567144,e[A+104>>2]=16,(0|r)!=6451321)break e;e[A+104>>2]=1,e[A+108>>2]=512,r=6451321;break e}if((0|r)>7364975)break Ve;if((0|r)>6840682)break Ee;if((0|r)==6514802)break Le;if((0|r)==6516078)break n;if((0|r)!=6779491)break t}if(e[A+600>>2]=896,e[A+328>>2]=8,e[A+296>>2]=336858127,e[A+300>>2]=353768980,e[A+332>>2]=103632,t=e[25905],e[A+304>>2]=e[25904],e[A+308>>2]=t,t=e[25907],e[A+312>>2]=e[25906],e[A+316>>2]=t,Je(A+344|0,0,256),f[A+388|0]=129,f[A+389|0]=129,f[A+390|0]=129,f[A+391|0]=129,f[A+420|0]=129,f[A+421|0]=129,f[A+422|0]=129,f[A+423|0]=129,f[A+360|0]=129,f[A+392|0]=129,f[A+393|0]=129,f[A+417|0]=129,f[A+418|0]=129,f[A+419|0]=129,f[A+420|0]=129,f[A+408|0]=6,f[A+409|0]=4,f[A+410|0]=6,f[A+411|0]=6,f[A+412|0]=6,f[A+413|0]=193,f[A+414|0]=6,f[A+415|0]=6,f[A+406|0]=6,f[A+407|0]=129,f[A+398|0]=4,f[A+399|0]=193,f[A+400|0]=6,f[A+401|0]=193,f[A+402|0]=6,f[A+403|0]=4,f[A+404|0]=4,f[A+405|0]=4,f[A+394|0]=4,f[A+395|0]=4,f[A+396|0]=4,f[A+397|0]=193,e[A+44>>2]=130,e[A+8>>2]=2,e[A+12>>2]=6,e[A+16>>2]=0,e[A+20>>2]=2,e[A+104>>2]=264,e[A+108>>2]=6146,f[A+391|0]=193,f[A+389|0]=193,f[A+390|0]=193,f[A+421|0]=193,e[A+100>>2]=e[A+96>>2],f[A+416|0]=4|d[A+416|0],(0|r)!=6779491)break e;e[A+40>>2]=1,r=6779491;break e}if((0|r)==6840683)break rt;if((0|r)==6972015)break re;if((0|r)!=7107687)break t}e[A+296>>2]=134875662,e[A+300>>2]=252968960,e[A+328>>2]=5,f[A+169|0]=1,e[A+132>>2]=33,e[A+104>>2]=99336,e[A+8>>2]=0,e[A+12>>2]=262182,t=e[26069],e[A+304>>2]=e[26068],e[A+308>>2]=t,t=e[26071],e[A+312>>2]=e[26070],e[A+316>>2]=t;break e}if((0|r)<=7564649){if((0|r)==7364976)break $;if((0|r)==7435619)break ae;if((0|r)!=7563374)break t;e[A+148>>2]=1,e[A+112>>2]=24,e[A+104>>2]=1,e[A+100>>2]=e[A+96>>2],r=7563374;break e}if((0|r)==7564650)break h;if((0|r)==7959909)break n;if((0|r)!=1885958500)break t}e[A+104>>2]=0;break e}e[A+4>>2]=48,e[A+8>>2]=0,e[A+144>>2]=1,e[A+104>>2]=16779472,e[A+32>>2]=1,e[A+24>>2]=1,t=e[25881],e[A+304>>2]=e[25880],e[A+308>>2]=t,t=e[25883],e[A+312>>2]=e[25882],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=24934;break e}e[A+600>>2]=4608,e[A+296>>2]=303173650,e[A+300>>2]=303174162,e[A+8>>2]=0,e[A+12>>2]=36,e[A+104>>2]=1024,e[A+100>>2]=e[A+96>>2],e[A+40>>2]=1,t=e[25865],e[A+304>>2]=e[25864],e[A+308>>2]=t,t=e[25867],e[A+312>>2]=e[25866],e[A+316>>2]=t,r=24941;break e}for(e[A+600>>2]=1536,e[A+224>>2]=0,e[A+216>>2]=1631,e[A+220>>2]=1536,e[A+104>>2]=2884720,e[A+328>>2]=7,e[A+40>>2]=1,Y=r=Y-16|0,e[r+12>>2]=-1,t=89684;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=1|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=89743;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=2|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=89795;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=4|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=89941;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=16|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=90045;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=32|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=90045;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=8|d[0|l]),t=t+o|0,s;);for(e[r+12>>2]=-1,t=90045;o=Wt(r+12|0,t),(0|(s=e[r+12>>2]))>=33&&(f[0|(l=(A+s|0)-1192|0)]=64|d[0|l]),t=t+o|0,s;);Y=r+16|0,r=24946;break e}e[A+600>>2]=1056,e[A+12>>2]=34,e[A+216>>2]=1118,e[A+220>>2]=1072,Je(A+344|0,0,256),f[A+406|0]=4,f[A+366|0]=4,f[A+367|0]=4,f[A+369|0]=4,f[A+370|0]=4,f[A+371|0]=4,f[A+372|0]=4,f[A+361|0]=4,f[A+362|0]=4,f[A+363|0]=4,f[A+364|0]=4,f[A+373|0]=4,f[A+380|0]=4,f[A+381|0]=4,f[A+382|0]=4,f[A+383|0]=4,f[A+375|0]=4,f[A+376|0]=4,f[A+377|0]=4,f[A+378|0]=4,f[A+384|0]=4,f[A+360|0]=129,e[A+328>>2]=6,e[A+296>>2]=134744588,e[A+300>>2]=286261248,e[A+40>>2]=1,e[A+8>>2]=0,e[A+104>>2]=1032,e[A+108>>2]=66,t=e[25885],e[A+304>>2]=e[25884],e[A+308>>2]=t,t=e[25887],e[A+312>>2]=e[25886],e[A+316>>2]=t,r=25189;break e}js(A),e[A+328>>2]=6,e[A+56>>2]=2,e[A+36>>2]=263,e[A+40>>2]=1074,e[A+124>>2]=32,e[A+104>>2]=184554728,e[A+8>>2]=2,f[A+386|0]=64&d[A+386|0]|129,r=25191;break e}e[A+12>>2]=262182,e[A+40>>2]=1,r=6514802;break e}e[A+328>>2]=14,e[A+296>>2]=303173393,e[A+300>>2]=336986112,e[A+104>>2]=1024,e[A+16>>2]=0,e[A+20>>2]=2,e[A+8>>2]=2,e[A+12>>2]=22,e[A+44>>2]=120,t=e[25893],e[A+304>>2]=e[25892],e[A+308>>2]=t,t=e[25895],e[A+312>>2]=e[25894],e[A+316>>2]=t,f[A+463|0]=64&d[A+463|0]|129,f[A+465|0]=64&d[A+465|0]|129,r=25465;break e}e[A+8>>2]=0,e[A+104>>2]=184618072,e[A+32>>2]=1,t=e[26101],e[A+304>>2]=e[26100],e[A+308>>2]=t,t=e[26103],e[A+312>>2]=e[26102],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=25697;break e}e[A+296>>2]=336860180,e[A+300>>2]=336991764,e[A+8>>2]=0,e[A+104>>2]=16846872,e[A>>2]=8,e[A+4>>2]=48,e[A+80>>2]=87,e[A+32>>2]=1,e[A+36>>2]=256,e[A+40>>2]=2,t=e[25897],e[A+304>>2]=e[25896],e[A+308>>2]=t,t=e[25899],e[A+312>>2]=e[25898],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=25701;break e}e[A+132>>2]=33,e[A+104>>2]=16779328,e[A+8>>2]=0,e[A+12>>2]=8,e[A+204>>2]=101,e[A+60>>2]=2,e[A+40>>2]=2,t=e[25901],e[A+304>>2]=e[25900],e[A+308>>2]=t,t=e[25903],e[A+312>>2]=e[25902],e[A+316>>2]=t,f[A+441|0]=64|d[A+441|0],f[A+445|0]=64|d[A+445|0],f[A+449|0]=64|d[A+449|0],f[A+455|0]=64|d[A+455|0],f[A+461|0]=64|d[A+461|0],f[A+465|0]=64|d[A+465|0],r=25966;break e}e[A+328>>2]=4,e[A+296>>2]=336858640,e[A+300>>2]=353768980,e[A+104>>2]=16782344,e[A+20>>2]=2,e[A+12>>2]=22,e[A+4>>2]=2,e[A+8>>2]=2,e[A+332>>2]=103640,t=e[25997],e[A+304>>2]=e[25996],e[A+308>>2]=t,t=e[25999],e[A+312>>2]=e[25998],e[A+316>>2]=t,r=25967;break e}e[A+296>>2]=269422096,e[A+300>>2]=370545684,e[A+104>>2]=86017320,e[A+108>>2]=6144,e[A+16>>2]=0,e[A+20>>2]=2,e[A+8>>2]=2,e[A+12>>2]=534,e[A+100>>2]=e[A+96>>2],e[A+44>>2]=120,t=e[25913],e[A+304>>2]=e[25912],e[A+308>>2]=t,t=e[25915],e[A+312>>2]=e[25914],e[A+316>>2]=t;$:{Ie:{if((0|r)<=26976){if((0|r)==24942)break Ie;if((0|r)!=25441)break $;e[A+12>>2]=566,e[A+336>>2]=103664,r=25441;break e}if((0|r)!=26977){if((0|r)!=7364976)break $;e[A+8>>2]=3,e[A+12>>2]=310,r=7364976;break e}e[A+104>>2]=85984264,r=26977;break e}e[A+104>>2]=153093416,e[A+108>>2]=2048,e[A+140>>2]=103676,r=24942;break e}e[A+40>>2]=2;break e}e[A+296>>2]=303173648,e[A+300>>2]=303174162,e[A+104>>2]=3147080,e[A+12>>2]=65792,e[A+84>>2]=1,t=e[25921],e[A+304>>2]=e[25920],e[A+308>>2]=t,t=e[25923],e[A+312>>2]=e[25922],e[A+316>>2]=t,r=25973;break e}e[A+600>>2]=1536,e[A+216>>2]=1740,e[A+220>>2]=1568,e[A+104>>2]=96,e[A+224>>2]=103696,e[A+340>>2]=103872,e[A+40>>2]=1,r=26209;break e}e[A+328>>2]=5}e[A+104>>2]=86024,e[A+164>>2]=130,f[A+465|0]=64&d[A+465|0]|129;break e}e[A+296>>2]=303173650,e[A+300>>2]=303174162,e[A+8>>2]=3,e[A+12>>2]=36,e[A+144>>2]=2,e[A+104>>2]=118658312,e[A+28>>2]=1,e[A+100>>2]=e[A+96>>2],t=e[25865],e[A+304>>2]=e[25864],e[A+308>>2]=t,t=e[25867],e[A+312>>2]=e[25866],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=26226;break e}k[A+170>>1]=257,e[A+148>>2]=1,e[A+12>>2]=2,r=6840683;break e}e[A+144>>2]=2,e[A+104>>2]=2098176,e[A+8>>2]=0,e[A+12>>2]=32,e[A+40>>2]=3,e[A+28>>2]=1;break e}e[A+8>>2]=3,e[A+100>>2]=e[A+96>>2],r=26478;break e}e[A+328>>2]=18,e[A+296>>2]=320081425,e[A+300>>2]=353768980,e[A+600>>2]=2304,e[A+112>>2]=84648,e[A+104>>2]=16,e[A+8>>2]=6,e[A+12>>2]=65540,e[A+100>>2]=e[A+96>>2],t=e[25973],e[A+304>>2]=e[25972],e[A+308>>2]=t,t=e[25975],e[A+312>>2]=e[25974],e[A+316>>2]=t;W:{he:{be:{if((0|r)<=28529){if((0|r)==26485)break be;if((0|r)!=28261)break W;t=e[25861],e[A+304>>2]=e[25860],e[A+308>>2]=t,t=e[25863],e[A+312>>2]=e[25862],e[A+316>>2]=t,e[A+296>>2]=320017171,e[A+300>>2]=320017171,e[A+132>>2]=22,e[A+112>>2]=-1431655768,e[A+108>>2]=32768|e[A+108>>2],lA(A);break e}if((0|r)==28530)break he;if((0|r)!=28769)break W;e[A+600>>2]=2560,lA(A);break e}t=e[25861],e[A+304>>2]=e[25860],e[A+308>>2]=t,t=e[25863],e[A+312>>2]=e[25862],e[A+316>>2]=t,e[A+600>>2]=2688,e[A+296>>2]=320017171,e[A+300>>2]=320017171,e[A+8>>2]=2,lA(A);break e}e[A+600>>2]=2816}lA(A);break e}f[0|o]=104,f[o+1|0]=98,f[o+2|0]=115,f[o+3|0]=0,(0|r)!=29554?(t=e[26093],e[A+304>>2]=e[26092],e[A+308>>2]=t,t=e[26095],e[A+312>>2]=e[26094],e[A+316>>2]=t):(t=e[25977],e[A+304>>2]=e[25976],e[A+308>>2]=t,t=e[25979],e[A+312>>2]=e[25978],e[A+316>>2]=t),e[A+328>>2]=3,e[A+296>>2]=336859409,e[A+300>>2]=353768980,k[A+168>>1]=261,e[A+8>>2]=0,e[A+12>>2]=16,e[A+144>>2]=1,e[A+184>>2]=1056,e[A+104>>2]=33572172,e[A+108>>2]=330,e[A+36>>2]=3,f[A+465|0]=64&d[A+465|0]|129,f[A+458|0]=64&d[A+458|0]|129;break e}e[A+104>>2]=17990912,e[A+8>>2]=3,e[A+12>>2]=36,r=26740;break e}e[A+328>>2]=3,e[A+296>>2]=320016657,e[A+300>>2]=353768980,e[A+124>>2]=32,e[A+128>>2]=44,e[A+104>>2]=186758144,e[A+12>>2]=1081398,e[A+16>>2]=2,e[A+4>>2]=32,e[A+8>>2]=0,e[A+116>>2]=899,e[A+120>>2]=1,f[A+169|0]=1,e[A+76>>2]=2,t=e[25981],e[A+304>>2]=e[25980],e[A+308>>2]=t,t=e[25983],e[A+312>>2]=e[25982],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,SA(A,3),r=26741;break e}for(e[A+600>>2]=1328,e[A+8>>2]=3,t=e[25985],e[A+304>>2]=e[25984],e[A+308>>2]=t,t=e[25987],e[A+312>>2]=e[25986],e[A+316>>2]=t,o=Je(A+344|0,0,256),f[A+429|0]=129,f[A+416|0]=129,f[A+403|0]=129,f[A+399|0]=129,f[A+400|0]=129,f[A+397|0]=129,f[A+393|0]=129,s=103952,l=50,u=50;f[0|(t=o+u|0)]=2|d[0|t],t=o+d[s+1|0]|0,f[0|t]=2|d[0|t],t=o+d[s+2|0]|0,f[0|t]=2|d[0|t],u=d[0|(s=s+3|0)],t=103952,(0|s)!=103982;);for(s=A+344|0;f[0|(o=s+l|0)]=4|d[0|o],o=s+d[t+1|0]|0,f[0|o]=4|d[0|o],o=s+d[t+2|0]|0,f[0|o]=4|d[0|o],l=d[0|(t=t+3|0)],(0|t)!=103982;);f[A+168|0]=6,e[A+104>>2]=5128,f[A+413|0]=4|d[A+413|0];break e}e[A+328>>2]=4,e[A+296>>2]=336858640,e[A+300>>2]=353768980,e[A+104>>2]=16782440,e[A+20>>2]=2,e[A+12>>2]=22,e[A+4>>2]=2,e[A+8>>2]=2,e[A+332>>2]=104e3,t=e[25997],e[A+304>>2]=e[25996],e[A+308>>2]=t,t=e[25999],e[A+312>>2]=e[25998],e[A+316>>2]=t,r=26991;break e}e[A+296>>2]=303174160,e[A+300>>2]=353768980,e[A+104>>2]=16781320,e[A+144>>2]=2,e[A+8>>2]=2,e[A+12>>2]=22,t=e[26005],e[A+304>>2]=e[26004],e[A+308>>2]=t,t=e[26007],e[A+312>>2]=e[26006],e[A+316>>2]=t;break e}for(e[A+8>>2]=0,e[A+12>>2]=16,e[A+56>>2]=2,e[A+28>>2]=17,t=e[26009],e[A+304>>2]=e[26008],e[A+308>>2]=t,t=e[26011],e[A+312>>2]=e[26010],e[A+316>>2]=t,t=0,s=A+344|0;f[0|(o=t+s|0)]=231&d[0|o],f[0|(o=s+(1|t)|0)]=231&d[0|o],f[0|(o=s+(2|t)|0)]=231&d[0|o],f[0|(o=s+(3|t)|0)]=231&d[0|o],(0|(t=t+4|0))!=256;);e[A+104>>2]=2280,e[A+108>>2]=2,e[A+608>>2]=104048,f[A+451|0]=16|d[A+451|0],f[A+456|0]=16|d[A+456|0],f[A+459|0]=16|d[A+459|0],f[A+460|0]=16|d[A+460|0],f[A+450|0]=8|d[A+450|0],f[A+462|0]=8|d[A+462|0],f[A+458|0]=8|d[A+458|0],f[A+465|0]=64&d[A+465|0]|129;break e}e[A+296>>2]=269618961,e[A+300>>2]=370546196,e[A+12>>2]=131110,e[A+144>>2]=2,e[A+104>>2]=184559112,e[A+108>>2]=8192,e[A+16>>2]=0,e[A+20>>2]=2,e[A+4>>2]=1,e[A+8>>2]=2,e[A+100>>2]=e[A+96>>2],e[A+140>>2]=103676,e[A+68>>2]=2,e[A+56>>2]=1,e[A+44>>2]=130,e[A+28>>2]=2,t=e[26025],e[A+304>>2]=e[26024],e[A+308>>2]=t,t=e[26027],e[A+312>>2]=e[26026],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=26996;break e}e[A+4>>2]=524,e[A+8>>2]=2,e[A+196>>2]=368,e[A+104>>2]=0,e[A+336>>2]=104128,e[A- -64>>2]=1,t=e[26029],e[A+304>>2]=e[26028],e[A+308>>2]=t,t=e[26031],e[A+312>>2]=e[26030],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=6972015;break e}for(e[A+296>>2]=303174162,e[A+300>>2]=370545684,t=e[25873],e[A+304>>2]=e[25872],e[A+308>>2]=t,t=e[25875],e[A+312>>2]=e[25874],e[A+316>>2]=t,o=Je(A+344|0,0,256),f[A+431|0]=1,f[A+429|0]=1,f[A+411|0]=1,f[A+405|0]=1,f[A+400|0]=1,f[A+396|0]=1,f[A+392|0]=1,t=104160,s=49;f[0|(s=s+o|0)]=4|d[0|s],s=o+d[t+1|0]|0,f[0|s]=4|d[0|s],s=o+d[t+2|0]|0,f[0|s]=4|d[0|s],s=d[0|(t=t+3|0)],(0|t)!=104193;);e[A+600>>2]=4256,e[A+8>>2]=0,e[A+12>>2]=16,f[A+168|0]=7,e[A+132>>2]=32,f[A+392|0]=128|d[A+392|0],f[A+396|0]=128|d[A+396|0],f[A+400|0]=128|d[A+400|0],f[A+405|0]=128|d[A+405|0],f[A+411|0]=128|d[A+411|0],f[A+429|0]=128|d[A+429|0],f[A+431|0]=128|d[A+431|0],e[A+188>>2]=1056,e[A+192>>2]=29301,e[A+104>>2]=19964960;break e}for(e[A+600>>2]=1056,o=Je(A+344|0,0,256),f[A+393|0]=1,f[A+365|0]=1,f[A+360|0]=1,f[A+545|0]=1,f[A+529|0]=1,f[A+391|0]=1,f[A+389|0]=1,f[A+390|0]=1,f[A+387|0]=1,f[A+379|0]=1,f[A+374|0]=1,f[A+368|0]=1,f[A+489|0]=1,f[A+487|0]=1,f[A+398|0]=1,t=104224,s=17;f[0|(s=s+o|0)]=4|d[0|s],s=o+d[t+1|0]|0,f[0|s]=4|d[0|s],s=o+d[t+2|0]|0,f[0|s]=4|d[0|s],s=d[0|(t=t+3|0)],(0|t)!=104251;);f[A+360|0]=128|d[A+360|0],f[A+365|0]=128|d[A+365|0],f[A+393|0]=128|d[A+393|0],f[A+368|0]=128|d[A+368|0],f[A+374|0]=128|d[A+374|0],f[A+379|0]=128|d[A+379|0],f[A+387|0]=128|d[A+387|0],f[A+389|0]=128|d[A+389|0],f[A+390|0]=128|d[A+390|0],f[A+391|0]=128|d[A+391|0],f[A+529|0]=128|d[A+529|0],f[A+545|0]=128|d[A+545|0],f[A+489|0]=128|d[A+489|0],f[A+487|0]=128|d[A+487|0],f[A+398|0]=128|d[A+398|0],t=e[26055],e[A+312>>2]=e[26054],e[A+316>>2]=t,t=e[26053],e[A+304>>2]=e[26052],e[A+308>>2]=t,e[A+296>>2]=353636370,e[A+300>>2]=336925972,e[A+200>>2]=0,e[A+8>>2]=7,e[A+12>>2]=2097184,f[A+168|0]=2,e[A+104>>2]=50176,e[A+84>>2]=1,SA(A,3);break e}e[A+296>>2]=320017171,e[A+300>>2]=320017171,e[A+104>>2]=184618072,e[A+8>>2]=12,e[A+12>>2]=32,t=e[25861],e[A+304>>2]=e[25860],e[A+308>>2]=t,t=e[25863],e[A+312>>2]=e[25862],e[A+316>>2]=t,r=27500;break e}e[A+184>>2]=42752,e[A+600>>2]=4352,Je(A+344|0,0,256),f[A+456|0]=1,f[A+457|0]=1,f[A+458|0]=1,f[A+459|0]=1,f[A+449|0]=1,f[A+450|0]=1,f[A+451|0]=1,f[A+452|0]=1,f[A+453|0]=1,f[A+454|0]=1,f[A+455|0]=1,f[A+456|0]=1,f[A+441|0]=1,f[A+442|0]=1,f[A+443|0]=1,f[A+444|0]=1,f[A+445|0]=1,f[A+446|0]=1,f[A+447|0]=1,f[A+448|0]=1,f[A+460|0]=65,f[A+461|0]=65,f[A+532|0]=32,f[A+527|0]=32,f[A+519|0]=32,f[A+515|0]=32,f[A+349|0]=32,f[A+350|0]=32,f[A+346|0]=32,e[A+132>>2]=20,e[A+112>>2]=286331152,e[A+104>>2]=1024,e[A+108>>2]=16384,e[A+40>>2]=1,e[A+8>>2]=8,f[A+458|0]=65,f[A+453|0]=65,f[A+447|0]=65,f[A+448|0]=65,f[A+443|0]=65,f[A+444|0]=65,r=27503;break e}e[A+328>>2]=10,e[A+296>>2]=336859666,e[A+300>>2]=353768980,f[A+168|0]=2,e[A+104>>2]=263264,e[A+8>>2]=7,t=e[26065],e[A+304>>2]=e[26064],e[A+308>>2]=t,t=e[26067],e[A+312>>2]=e[26066],e[A+316>>2]=t,r=27509;break e}e[A+104>>2]=1,r=27513;break e}e[A+116>>2]=5e3,e[A+104>>2]=16777216,e[A+24>>2]=1,e[A+16>>2]=0,e[A+20>>2]=2,e[A+8>>2]=2,e[A+12>>2]=32,e[A+328>>2]=5,r=27745;break e}e[A+116>>2]=5e3,e[A+104>>2]=99336,e[A+108>>2]=256,e[A+24>>2]=1,e[A+16>>2]=0,e[A+20>>2]=2,e[A+8>>2]=2,e[A+12>>2]=32,e[A+328>>2]=5,r=27764;break e}e[A+328>>2]=6,e[A+296>>2]=336859409,e[A+300>>2]=353768980,e[A+600>>2]=1056,e[A+104>>2]=2114600,e[A+108>>2]=138,e[A+8>>2]=4,e[A+632>>2]=104288,e[A+604>>2]=104288,t=e[26093],e[A+304>>2]=e[26092],e[A+308>>2]=t,t=e[26095],e[A+312>>2]=e[26094],e[A+316>>2]=t,r=28011;break e}e[A+328>>2]=4,e[A+104>>2]=1,e[A+8>>2]=2,e[A+36>>2]=256,r=28020;break e}e[A+4>>2]=48,e[A+8>>2]=0,e[A+12>>2]=128,e[A+104>>2]=2169880,e[A+32>>2]=1,e[A+36>>2]=256,e[A+24>>2]=1,e[A+136>>2]=85767,t=e[26097],e[A+304>>2]=e[26096],e[A+308>>2]=t,t=e[26099],e[A+312>>2]=e[26098],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=28268;break e}e[A+8>>2]=0,e[A+104>>2]=71752,t=e[26101],e[A+304>>2]=e[26100],e[A+308>>2]=t,t=e[26103],e[A+312>>2]=e[26102],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=28258;break e}e[A+296>>2]=336858898,e[A+300>>2]=370546196,e[A+104>>2]=1088,e[A+108>>2]=512,e[A+8>>2]=2,e[A+12>>2]=524310,t=e[26105],e[A+304>>2]=e[26104],e[A+308>>2]=t,t=e[26107],e[A+312>>2]=e[26106],e[A+316>>2]=t,r=28525;break e}e[A+328>>2]=3,e[A+296>>2]=320015633,e[A+300>>2]=353768980,f[A+168|0]=7,e[A+8>>2]=2,e[A+12>>2]=6,e[A+104>>2]=20488,e[A+108>>2]=192,e[A+36>>2]=9,e[A+60>>2]=260,t=e[26109],e[A+304>>2]=e[26108],e[A+308>>2]=t,t=e[26111],e[A+312>>2]=e[26110],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=28780;break e}for(e[A+296>>2]=353569552,e[A+300>>2]=353768980,e[A+116>>2]=5e3,e[A+104>>2]=33570920,e[A+108>>2]=14336,e[A+8>>2]=3,e[A+12>>2]=139286,e[A+100>>2]=e[A+96>>2],t=e[26113],e[A+304>>2]=e[26112],e[A+308>>2]=t,t=e[26115],e[A+312>>2]=e[26114],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,t=0,s=A+344|0;f[0|(o=t+s|0)]=253&d[0|o],f[0|(o=s+(1|t)|0)]=253&d[0|o],f[0|(o=s+(2|t)|0)]=253&d[0|o],f[0|(o=s+(3|t)|0)]=253&d[0|o],(0|(t=t+4|0))!=256;);f[A+442|0]=2|d[A+442|0],f[A+443|0]=2|d[A+443|0],f[A+444|0]=2|d[A+444|0],f[A+446|0]=2|d[A+446|0],f[A+447|0]=2|d[A+447|0],f[A+450|0]=2|d[A+450|0],f[A+451|0]=2|d[A+451|0],f[A+453|0]=2|d[A+453|0],f[A+454|0]=2|d[A+454|0],f[A+456|0]=2|d[A+456|0],f[A+457|0]=2|d[A+457|0],f[A+459|0]=2|d[A+459|0],f[A+460|0]=2|d[A+460|0],f[A+462|0]=2|d[A+462|0],f[A+464|0]=2|d[A+464|0],f[A+466|0]=2|d[A+466|0],e[A+144>>2]=2,e[A+68>>2]=2;break e}e[A+296>>2]=303172879,e[A+300>>2]=353768980,e[A+328>>2]=3,e[A+8>>2]=3,e[A+12>>2]=262,e[A+104>>2]=16805928,e[A+108>>2]=30,t=e[26117],e[A+304>>2]=e[26116],e[A+308>>2]=t,t=e[26119],e[A+312>>2]=e[26118],e[A+316>>2]=t,r=29295;break e}Sa(A),r=29301;break e}for(e[A+328>>2]=3,e[A+296>>2]=336859153,e[A+300>>2]=353768980,k[A+168>>1]=261,e[A+8>>2]=0,e[A+12>>2]=22,e[A+124>>2]=0,e[A+128>>2]=44,e[A+104>>2]=16794624,e[A+108>>2]=128,e[A+36>>2]=3,e[A+60>>2]=4,t=e[25869],e[A+304>>2]=e[25868],e[A+308>>2]=t,t=e[25871],e[A+312>>2]=e[25870],e[A+316>>2]=t,(0|r)==25459&&(e[A+108>>2]=136),f[A+465|0]=64&d[A+465|0]|129,f[A+458|0]=64&d[A+458|0]|129,t=0,s=A+344|0;f[0|(o=t+s|0)]=223&d[0|o],f[0|(o=s+(1|t)|0)]=223&d[0|o],f[0|(o=s+(2|t)|0)]=223&d[0|o],f[0|(o=s+(3|t)|0)]=223&d[0|o],(0|(t=t+4|0))!=256;);f[A+442|0]=32|d[A+442|0],f[A+444|0]=32|d[A+444|0],f[A+447|0]=32|d[A+447|0],f[A+450|0]=32|d[A+450|0],f[A+452|0]=32|d[A+452|0],f[A+453|0]=32|d[A+453|0],f[A+454|0]=32|d[A+454|0],f[A+458|0]=32|d[A+458|0],f[A+462|0]=32|d[A+462|0],f[A+463|0]=32|d[A+463|0],f[A+466|0]=32|d[A+466|0],f[A+441|0]=32|d[A+441|0],f[A+445|0]=32|d[A+445|0],f[A+449|0]=32|d[A+449|0],f[A+455|0]=32|d[A+455|0],f[A+461|0]=32|d[A+461|0],f[A+465|0]=32|d[A+465|0];break e}for(e[A+296>>2]=303174162,e[A+300>>2]=370545684,e[A+600>>2]=3456,f[A+169|0]=1,e[A+8>>2]=0,e[A+12>>2]=22,e[A+100>>2]=e[A+96>>2],t=e[25873],e[A+304>>2]=e[25872],e[A+308>>2]=t,t=e[25875],e[A+312>>2]=e[25874],e[A+316>>2]=t,Je(A+344|0,0,256),f[A+365|0]=1,f[A+366|0]=1,f[A+357|0]=1,f[A+358|0]=1,f[A+359|0]=1,f[A+360|0]=1,f[A+361|0]=1,f[A+362|0]=1,f[A+363|0]=1,f[A+364|0]=1,f[A+349|0]=1,f[A+350|0]=1,f[A+351|0]=1,f[A+352|0]=1,f[A+353|0]=1,f[A+354|0]=1,f[A+355|0]=1,f[A+356|0]=1,t=74,s=74;f[(o=A+s|0)+344|0]=1|d[o+344|0],f[o+345|0]=1|d[o+345|0],f[o+346|0]=1|d[o+346|0],(0|(s=s+3|0))!=116;);for(;f[(s=t+A|0)+344|0]=2|d[s+344|0],f[s+345|0]=2|d[s+345|0],f[s+346|0]=2|d[s+346|0],(0|(t=t+3|0))!=116;);for(s=26;f[(t=A+s|0)+344|0]=4|d[t+344|0],f[t+345|0]=4|d[t+345|0],f[t+346|0]=4|d[t+346|0],f[t+347|0]=4|d[t+347|0],f[t+348|0]=4|d[t+348|0],(0|(s=s+5|0))!=71;);e[A+112>>2]=84648,e[A+104>>2]=270589952,e[A+108>>2]=65536,e[A+40>>2]=1,e[A+204>>2]=e[A+600>>2]+74;break e}e[A+8>>2]=2,e[A+12>>2]=32,e[A+328>>2]=3,e[A+124>>2]=32,e[A+104>>2]=16864280,e[A+108>>2]=256,e[A+68>>2]=2,e[A+36>>2]=259,e[A+40>>2]=118,e[A+28>>2]=1,f[A+458|0]=128|d[A+458|0],r=29548;break e}e[A+296>>2]=370544658,e[A+300>>2]=370546196,e[A+164>>2]=130,e[A+8>>2]=0,e[A+12>>2]=86,e[A+104>>2]=87064,f[A+169|0]=1,e[A+152>>2]=3,t=e[26121],e[A+304>>2]=e[26120],e[A+308>>2]=t,t=e[26123],e[A+312>>2]=e[26122],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=7564650;break e}e[A+296>>2]=269487120,e[A+300>>2]=320148500,e[A+8>>2]=3,e[A+12>>2]=278,e[A+144>>2]=2,e[A+104>>2]=32872,t=e[26125],e[A+304>>2]=e[26124],e[A+308>>2]=t,t=e[26127],e[A+312>>2]=e[26126],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=29553;break e}e[A+296>>2]=336859152,e[A+300>>2]=353768980,e[A+8>>2]=0,e[A+144>>2]=1,e[A+104>>2]=6408,t=e[26129],e[A+304>>2]=e[26128],e[A+308>>2]=t,t=e[26131],e[A+312>>2]=e[26130],e[A+316>>2]=t,f[A+465|0]=64&d[A+465|0]|129,r=29558;break e}e[A+296>>2]=320015376,e[A+300>>2]=353768980,f[A+168|0]=4,e[A+12>>2]=22,e[A+4>>2]=1,e[A+8>>2]=2,e[A+104>>2]=1248,e[A+100>>2]=e[A+96>>2],t=e[26133],e[A+304>>2]=e[26132],e[A+308>>2]=t,t=e[26135],e[A+312>>2]=e[26134],e[A+316>>2]=t;break e}e[A+296>>2]=303174162,e[A+300>>2]=370545684,f[A+169|0]=1,e[A+8>>2]=0,e[A+12>>2]=22,e[A+112>>2]=5288,e[A+100>>2]=e[A+96>>2],t=e[25877],e[A+304>>2]=e[25876],e[A+308>>2]=t,t=e[25879],e[A+312>>2]=e[25878],e[A+316>>2]=t;p:switch(r-29793|0){default:if((0|r)!=27502){if((0|r)!=28012)break r;t=e[26137],e[A+304>>2]=e[26136],e[A+308>>2]=t,t=e[26139],e[A+312>>2]=e[26138],e[A+316>>2]=t,e[A+600>>2]=3328,e[A+296>>2]=320017171,e[A+300>>2]=320017171,e[A+104>>2]=2098176,e[A+108>>2]=131072,e[A+8>>2]=13;break r}e[A+104>>2]=1,e[A+600>>2]=3200;break r;case 4:break p;case 1:case 2:case 3:break r;case 0:break a}e[A+104>>2]=1,e[A+108>>2]=524288,e[A+600>>2]=3072;break r}e[A+328>>2]=10,e[A+296>>2]=353636370,e[A+300>>2]=336925972,f[A+173|0]=1,e[A+8>>2]=7,e[A+12>>2]=32,f[A+168|0]=2,e[A+84>>2]=1,t=e[26141],e[A+304>>2]=e[26140],e[A+308>>2]=t,e[A+104>>2]=(0|r)==24954?2118920:2114824,t=e[26143],e[A+312>>2]=e[26142],e[A+316>>2]=t;break e}js(A),e[A+296>>2]=303173650,e[A+300>>2]=303174162,e[A+104>>2]=2131208,e[A+8>>2]=3,e[A+12>>2]=32,t=e[25865],e[A+304>>2]=e[25864],e[A+308>>2]=t,t=e[25867],e[A+312>>2]=e[25866],e[A+316>>2]=t,r=29812;break e}Sa(A),r=30059;break e}e[A+112>>2]=21160,e[A+104>>2]=16,e[A+600>>2]=1536,e[A+40>>2]=1;break e}e[A+296>>2]=269488144,e[A+300>>2]=370546198,e[A+8>>2]=0,e[A>>2]=33,e[A+148>>2]=1,e[A+104>>2]=12615688,e[A+16>>2]=2,e[A+100>>2]=e[A+96>>2],e[A+632>>2]=104592,e[A+604>>2]=104592,t=e[26145],e[A+304>>2]=e[26144],e[A+308>>2]=t,t=e[26147],e[A+312>>2]=e[26146],e[A+316>>2]=t,r=30313;break e}if(e[A+296>>2]=370544662,e[A+300>>2]=370546198,e[A+8>>2]=3,e[A+12>>2]=2,e[A+148>>2]=1,e[A+184>>2]=12544,k[A+170>>1]=257,e[A+176>>2]=1,f[A+172|0]=1,e[A>>2]=33,e[A+4>>2]=0,e[A+100>>2]=e[A+96>>2],t=e[26225],e[A+304>>2]=e[26224],e[A+308>>2]=t,t=e[26227],e[A+312>>2]=e[26226],e[A+316>>2]=t,(0|r)!=7959909)break e;e[A+112>>2]=24,e[A+104>>2]=1,e[A+108>>2]=1048576,r=7959909;break e}t=e[25873],e[A+304>>2]=e[25872],e[A+308>>2]=t,t=e[25875],e[A+312>>2]=e[25874],e[A+316>>2]=t,e[A+600>>2]=2944,e[A+104>>2]=2097152,e[A+108>>2]=262144,e[A+48>>2]=1}lA(A),f[A+422|0]=2|d[A+422|0];break e}e[A+40>>2]=1}return e[A+212>>2]=r,8&(t=e[A+104>>2])&&(e[A+124>>2]=46,e[A+128>>2]=44),4&t&&(e[A+124>>2]=0),A}function It(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0;e:{r=e[32538],e[47354]=0,e[47568]=0,e[49828]=0,e[47569]=0,f[199328]=0,e[49827]=0,e[49845]=0,f[190280]=0,f[190268]=1,e[47202]=0,e[49573]=0,e[49846]=0,f[199304]=0,f[199388]=0,e[33691]=0,e[33285]=0,e[33708]=1,e[33709]=1,e[33288]=0,A=e[33730],e[33712]=e[33729],e[33713]=A,A=e[33732],e[33714]=e[33731],e[33715]=A,A=e[33734],e[33716]=e[33733],e[33717]=A,A=e[33736],e[33718]=e[33735],e[33719]=A,A=e[33738],e[33720]=e[33737],e[33721]=A,A=e[33740],e[33722]=e[33739],e[33723]=A,A=e[33742],e[33724]=e[33741],e[33725]=A,e[33726]=e[33743],f[134784]=0,f[134824]=0,f[134772]=0,f[134760]=0,e[33284]=-1,e[33692]=0,e[32525]=0,e[47201]=e[33717],e[47200]=e[33718],Jo(),e[34438]=0,e[34437]=0,A=e[33730],e[34048]=e[33729],e[34049]=A,A=e[33732],e[34050]=e[33731],e[34051]=A,A=e[33734],e[34052]=e[33733],e[34053]=A,A=e[33736],e[34054]=e[33735],e[34055]=A,A=e[33738],e[34056]=e[33737],e[34057]=A,A=e[33740],e[34058]=e[33739],e[34059]=A,A=e[33742],e[34060]=e[33741],e[34061]=A,e[34062]=e[33743];t:{r:{if(1&r){if(e[e[32539]>>2]=0,e[47569]|e[49845]|e[49827])break r;break t}if(e[e[32539]>>2]=0,!(e[49845]|e[49827]||e[47569]))break t}f[190280]=1}e[49828]=0,A=268436735;t:if(!(!e[34391]|!e[34388])&&(e[47204]=0,e[47203]=0,e[47199]=0,e[34439]=0,(e[47192]||!(A=fn(86228)))&&((A=e[33283])||((A=Nt(16))&&(e[A>>2]=0,e[A+4>>2]=0,e[A+8>>2]=0,e[A+12>>2]=0),e[33283]=A),l=268439807,(r=e[e[47192]+328>>2])>>>0>20|!e[129104+(r<<3)>>2]?A=l:(t?(l=4,o=kt(t)+1|0):(l=2,o=0),e[A+8>>2]=l,e[A>>2]=t,e[A+12>>2]=e[129108+(r<<3)>>2],e[A+4>>2]=t?t+o|0:0,A=0),!A))){Et(0);r:{for(;;){e[34436]=0,t=e[34391],e[51290]=t,e[54046]=t+e[34390],e[50767]<=102399&&(e[50767]=102400);a:if(!((u=e[51290])>>>0>=Ae[54046]))for(;;){if((((0|(t=(o=e[50757])-(g=e[50758])|0))<=0?t+170|0:t)-171|0)>=-1){if((0|(t=e[54731]))<=0)break a;l=0,e[50763]=0,e[50762]=0,e[50765]=2147483647,t=d[218920]?e[54732]:t;n:{for(;;){if(r=t-1|0,e[54732]=r,(0|t)<=0)break n;if(e[51290]=u+1,A=(t=e[51293])+1|0,e[51293]=(0|A)<=5499?A:0,A=(t=O(e[50755],k[205184+(t<<1)>>1]))>>8,f[0|u]=A,o=e[51290],e[51290]=o+1,f[0|o]=t>>>16,(o=e[50756])?(t=r,(r=e[o+4>>2])&&(Zt[0|r](A<<16>>16),t=e[54732])):t=r,o=(r=e[51292])+1|0,e[51292]=o,k[205184+(r<<1)>>1]=A,(0|o)>=5500&&(e[51292]=0),u=e[51290],!(Ae[54046]>=u+2>>>0))break}l=1}f[218920]=l;break a}t=e[(r=216192+(o<<4)|0)+4>>2];n:{o:{c:{u:{l:{i:{p:{C:{m:{b:{h:{x:{I:{y:{z:{L:switch((255&(A=e[r>>2]))-1|0){case 9:break c;case 7:break u;case 10:break l;case 11:break i;case 13:break p;case 0:break C;case 1:break m;case 2:break b;case 3:break h;case 6:break x;case 5:break I;case 4:break y;case 15:break z;case 8:break L;default:break o}if(!e[50759])break o;A=e[r+12>>2],r=e[r+8>>2],e[50768]=0,u=r||99232,e[50766]=u,e[50769]=t?2097152/(0|t)|0:0,t=e[50971],o=(0|O(t,e[50788]))/50|0,r=O(o-t|0,-18),t=((0|(t=e[50785]))>=101?101:t)-e[50790]|0,A=(l=r+((0|O(e[50970],d[((0|t)>0?t:0)+105680|0]))/128|0)|0)+((0|O(o,(0|(t=A>>16))<(0|(r=65535&A))?t:r))/2|0)|0,e[50770]=A,t=(l+((0|O(o,(0|t)>(0|r)?t:r))/2|0)|0)-A|0,e[50771]=t,r=d[0|u],e[33072]=e[50976],e[50767]=A+(O(t,r)>>8);break o}Zt[e[e[50756]>>2]](t,e[r+8>>2]),Me(t);break o}if(d[218920]||(e[54731]=e[54731]-t),e[50781]=100,e[50773]=0,na(),e[50763]=0,e[50762]=0,e[50765]=2147483647,!t)break o;for(t=d[218920]?e[54732]:t;;){if(r=t-1|0,e[54732]=r,(0|t)<=0)break o;if(t=e[51290],e[51290]=t+1,o=(A=e[51293])+1|0,e[51293]=(0|o)<=5499?o:0,o=t,A=(t=O(e[50755],k[205184+(A<<1)>>1]))>>8,f[0|o]=A,o=e[51290],e[51290]=o+1,f[0|o]=t>>>16,(o=e[50756])?(t=r,(r=e[o+4>>2])&&(Zt[0|r](A<<16>>16),t=e[54732])):t=r,o=(r=e[51292])+1|0,e[51292]=o,k[205184+(r<<1)>>1]=A,(0|o)>=5500&&(e[51292]=0),o=1,!(Ae[54046]>=e[51290]+2>>>0))break}break n}for(e[50773]=0,e[54731]=e[54729],na(),A=e[r+12>>2],o=e[r+8>>2],d[218920]?t=e[54733]:e[54734]=0,g=A>>8,l=255&A,e[50762]=0,e[50763]=0;;){if(r=t-1|0,e[54733]=r,(0|t)<=0)break o;if(A=(t=e[54734])+1|0,l?u=O(l,f[t+o|0]):(u=d[t+o|0]|f[A+o|0]<<8,A=t+2|0),e[54734]=A,h=(t=e[51293])+1|0,e[51293]=h,A=(0|(t=(0|(t=((0|O(g,O(e[33037],O(e[33038],u))>>10))/32|0)+(O(e[50755],k[205184+(t<<1)>>1])>>8)|0))<=-32768?-32768:t))>=32767?32767:t,(0|h)>=5500&&(e[51293]=0),f[e[51290]]=A,f[e[51290]+1|0]=A>>>8,(u=e[50756])?(t=r,(r=e[u+12>>2])&&(Zt[0|r](A<<16>>16),t=e[54733])):t=r,r=e[51290],e[51290]=r+2,h=(u=e[51292])+1|0,e[51292]=h,k[205184+(u<<1)>>1]=(0|O(A,3))/4,(0|h)>=5500&&(e[51292]=0),!(Ae[54046]>=r+4>>>0))break}o=1;break n}A=e[r+12>>2],o=t>>>16|0,e[50777]=o,t&=65535,e[50773]=t,l=255&A,e[50774]=l,e[50775]=A>>8,l||(e[50777]=o<<1,e[50773]=t<<1),e[50778]=0,e[50776]=0,e[50772]=e[r+8>>2];break o}e[50773]=0}if(e[54731]=e[54729],A=e[50759],d[218920]){if(!A)break o}else{if(!A)break o;for(l=e[r+12>>2],u=e[r+8>>2],r=t>>16,e[55912]=255&r,f[218960]=1,e[55908]=0,67108864&t&&(e[55908]=3,e[55909]=e[110496+(r>>>6&12)>>2]),134217728&t&&(e[55908]=4,e[55909]=e[110512+(r>>>6&12)>>2]),t&=65504;;){if((0|g)!=(0|(o=(0|(r=o+1|0))<=169?r:0)))if((0|(r=e[216192+(o<<4)>>2]))!=3){if(r-5>>>0>1)continue}else f[218960]=0;break}for(e[55913]=e[50762],t=(t=t+32&131008)||64,e[50763]=t+e[50763],e[55684]=O(k[101997],7800)+(B[102024]<<8)<<8,e[55704]=O(k[101998],9e3)+(B[102025]<<8)<<8,_=e[50980],s=+(0|t),v=+(t>>>2|0),t=0;(0|t)!=7&&(o=k[(h=(r=t<<1)+A|0)+218>>1]<<8,g=O(t,80)+222176|0,h=k[h+164>>1],T=o+O(h,k[2+(r+u|0)>>1])<<8,e[g>>2]=T,b=+(0|T),P[g+16>>3]=b,P[g+48>>3]=16*(+(o+O(h,k[2+(r+l|0)>>1])<<8)-b)/v),o=(r=O(t,80))+222176|0,h=k[(T=A+(t<<1)|0)+182>>1],H=O(h,d[(g=t+u|0)+18|0])<<6,e[o+4>>2]=H,b=+(0|H),P[o+24>>3]=b,V=o,o=t+l|0,P[V+56>>3]=64*(+(O(h,d[o+18|0])<<6)-b)/s,(0|t)>(0|_)|t>>>0>5||(h=r+222176|0,H=k[T+200>>1],T=O(H,d[g+26|0])<<10,e[h+8>>2]=T,b=+(0|T),P[h+32>>3]=b,V=h- -64|0,h=H<<10,P[V>>3]=64*(+(0|O(h,d[o+26|0]))-b)/s,t>>>0<=2?(r=r+222176|0,g=O(h,d[g+32|0]),e[r+12>>2]=g,b=+(0|g),P[r+40>>3]=b,P[r+72>>3]=64*(+(0|O(h,d[o+32|0]))-b)/s):e[r+222188>>2]=T),(0|(t=t+1|0))!=8;);}for(;;){if(t=e[50762],!d[218960]&(0|t)==e[50763])break o;b:{h:{if(63&t){if(7&t)break b;x:if(!((0|(r=e[54736]))<=0||(0|(A=e[54735]))<=0))for(o=e[50826],t=1;;){if(e[(u=(l=t<<2)+o|0)>>2]=e[u>>2]+e[l+203312>>2],t>>>0>28|(0|t)>=(0|r))break x;if(l=(0|t)<(0|A),t=t+1|0,!l)break}if((0|(t=e[33073]))>255)break b;e[33073]=t+1;break b}if(t)if(e[50759]){if(r=e[50768]+e[50769]|0,e[50768]=r,r=(A=e[50766])?O(d[A+((0|(r>>=8))>=127?127:r)|0],e[50771])>>8:0,e[55911]=e[55911]+e[55915],A=(0|(A=e[55914]))<=23551?A:0,e[55914]=A+e[50761],A=(r+e[50770]|0)+O(e[33072],d[110528+(A>>6)|0]-128|0)|0,e[50767]=A,!(o=e[51291])&(0|(r=o?o<<12:A))>102399||(A=(0|r)<=102400?102400:r,e[50767]=A),(0|t)!=e[55913]){if(t=0,!((0|(g=e[50980]))<0)){for(;u=O(t,80),s=P[(r=u+222176|0)+48>>3]+P[r+16>>3],P[r+16>>3]=s,v=P[r+56>>3]+P[r+24>>3],P[r+24>>3]=v,b=P[r- -64>>3]+P[r+32>>3],P[r+32>>3]=b,o=ee(s)<2147483648?~~s:-2147483648,e[r>>2]=o,o=ee(b)<2147483648?~~b:-2147483648,e[r+8>>2]=o,l=ee(v)<2147483648?~~v:-2147483648,e[r+4>>2]=(0|l)>0?l:0,(0|t)>2||(s=P[(r=u+222176|0)+72>>3]+P[r+40>>3],P[r+40>>3]=s,o=ee(s)<2147483648?~~s:-2147483648),e[u+222188>>2]=o,(0|g)>=(0|(t=t+1|0)););if((0|t)>=8)break h}for(;(0|t)!=7&&(r=O(t,80)+222176|0,s=P[r+48>>3]+P[r+16>>3],P[r+16>>3]=s,o=ee(s)<2147483648?~~s:-2147483648,e[r>>2]=o),r=O(t,80)+222176|0,s=P[r+56>>3]+P[r+24>>3],P[r+24>>3]=s,o=ee(s)<2147483648?~~s:-2147483648,e[r+4>>2]=(0|o)>0?o:0,(0|(t=t+1|0))!=8;);}}else A=e[50767];else e[50826]=218976,e[54742]=0,e[54736]=Rs(e[50767]<<4,218976,0),A=e[50767],e[54737]=890/(A>>12),e[54739]=(0|O(e[50781],O(e[50779],A>>8)))/8e4}if(e[55906]=A>>11,e[54735]=e[54736],e[55904]=O(e[50760],A>>7),e[55905]=e[50754]/(A>>12),r=1^(t=e[54742]),e[54742]=r,e[50826]=O(t,1600)+218976,e[54736]=Rs(A<<4,O(r,1600)+218976|0,1),!(!(A=e[50759])|!e[51022]))for(v=P[25430],b=P[25429],t=1;e[(r=A+(t<<2)|0)+272>>2]&&(o=e[r+308>>2],r=O(t,40)+203456|0,w=ds(v*+k[2+(O(t,80)+222176|0)>>1]),w*=s=Dr(b*+(0|o)),w+=w,P[r+8>>3]=w,s*=-s,P[r+16>>3]=s,P[r>>3]=1-w-s),(0|(t=t+1|0))!=9;);}if(l=e[50762]+1|0,e[50762]=l,u=(t=e[50765])+e[55904]|0,e[50765]=u,(0|u)<0&(0|t)>0){if(h=e[55905],A=e[50800]+((0|h)/-2|0)|0,e[55907]=A,(0|(T=e[50763]))<(0|l))break o;if(_=e[54738]+1|0,e[54738]=_,g=e[50767],!((0|(t=(r=e[50980])+1|0))>8)&&(o=g<<3,1&r&&(e[203264+(t<<2)>>2]=(1+(e[O(t,80)+222176>>2]/(0|o)|0)|0)/2,t=r+2|0),(0|r)!=7))for(;r=203264+(t<<2)|0,H=O(t,80)+222176|0,e[r>>2]=(1+(e[H>>2]/(0|o)|0)|0)/2,e[r+4>>2]=(1+(e[H+80>>2]/(0|o)|0)|0)/2,(0|(t=t+2|0))!=9;);t=(0|O(e[50781],O(e[50779],g>>8)))/8e4|0,e[54739]=t;b:if(!((0|(r=e[55908]))<=0)){h:switch(r-3|0){case 0:if((T-l|0)>=h<<1)break b;e[55908]=2,t=(0|O(e[55909],t))/256|0,e[54739]=t;break b;case 1:e[55908]=2,t=(0|O(e[55909],t))/256|0,e[54739]=t;break b;default:break h}e[55908]=r-1}(r=e[55910])&&(o=t,t=e[55911]>>8,t=(0|O(o,d[r+((0|t)>=127?127:t)|0]))/128|0,e[54739]=t),(0|(r=e[e[32972]+92>>2]))>7||(r=15&(o=d[e[55912]+(106336+(r<<3)|0)|0]),(o=o>>>4|0)&&((0|o)!=15?(0|_)%(0|o)|0||(e[54739]=(0|O(t,r))/16):(e[55912]=0,e[54739]=(0|O(t,r))/16)))}else A=e[55907];if(l=A+1|0,e[55907]=l,r=u>>>16|0,o=0,!((0|l)<0|(0|l)>=e[50799])){if(!((0|(t=(A=e[50980])+1|0))>8)){if(g=1&(u=8-A|0),(0|A)!=7)for(h=-2&u,A=0;o=O(e[(T=(u=t<<2)+4|0)+203216>>2],k[106400+(O(r,e[T+203264>>2])>>>4&4094)>>1])+(O(e[u+203216>>2],k[106400+(O(r,e[u+203264>>2])>>>4&4094)>>1])+o|0)|0,t=t+2|0,(0|h)!=(0|(A=A+2|0)););g&&(o=O(e[(t<<=2)+203216>>2],k[106400+(O(r,e[t+203264>>2])>>>4&4094)>>1])+o|0)}o=O(d[l+132160|0],(0|o)/e[55906]|0)}if(t=1,(0|(l=e[54737]))<=0)A=r;else for(u=e[50826],A=r;o=O(e[u+(t<<2)>>2],k[106400+((65504&A)>>>4|0)>>1])+o|0,A=A+r|0,(0|l)>=(0|(t=t+1|0)););if((0|(l=e[54735]))>=(0|t))for(u=e[50826];o=o-O(e[u+(t<<2)>>2],k[106400+((65504&A)>>>4|0)>>1])|0,A=A+r|0,(0|l)>=(0|(t=t+1|0)););if(l=(0|(t=e[54728]))==64?o:O(t,o>>6),e[51022]){if(e[50759])for(r=eA(e[33209],0,1103515245,0),t=fe,t=Gi(r=r+12345|0,t=r>>>0<12345?t+1|0:t),e[33209]=t,v=+((16383&t)- -8192|0),A=e[50759],u=0,t=1;(o=e[272+(A+(t<<2)|0)>>2])&&(g=e[O(t,80)+222180>>2],r=O(t,40)+203456|0,s=P[r+32>>3],b=P[r+24>>3],P[r+32>>3]=b,s=s*P[r+16>>3]+(P[r>>3]*v+b*P[r+8>>3]),P[r+24>>3]=s,r=ee(s)<2147483648?~~s:-2147483648,u=O(r,O(o,g>>14))+u|0),(0|(t=t+1|0))!=9;);else u=0;l=l+u|0}A=0,(0|(t=e[50776]))>=e[50773]||(r=e[50778],A=e[50772],(u=e[50774])?(o=t+1|0,e[50776]=o,t=O(u,f[A+(t+r|0)|0])):(u=d[0|(A=A+(t+r|0)|0)],A=f[A+1|0],o=t+2|0,e[50776]=o,t=u|A<<8),A=(0|O(O(t,e[50780])>>10,e[50775]))/32|0,(0|(t=e[50777]))>(r+o|0)||(e[50778]=r+((0|O(t,3))/-4|0))),r=(t=e[51293])+1|0,e[51293]=r,t=((O(e[54739],l>>8)>>13)+A|0)+(O(e[50755],k[205184+(t<<1)>>1])>>8)|0,(0|r)>=5500&&(e[51293]=0),r=e[33073];b:{h:{if((0|(A=O(r,t)))>=8388608){if((0|r)>=(0|(u=8388608/(0|t)|0)))break h;break b}if((0|A)>-8388353||(0|r)<(0|(u=-8388608/(0|t)|0)))break b}r=u-1|0,e[33073]=r,A=O(t,r)}if(t=e[51290],e[51290]=t+1,r=t,t=A>>8,f[0|r]=t,r=e[51290],e[51290]=r+1,f[0|r]=A>>>16,(r=e[50756])&&(r=e[r+8>>2])&&Zt[0|r](t<<16>>16),A=(r=e[51292])+1|0,e[51292]=A,k[205184+(r<<1)>>1]=t,(0|A)>=5500&&(e[51292]=0),!(Ae[54046]>=e[51290]+2>>>0))break}o=1;break n}e[50773]=0}e[54731]=e[54729],o=1,g=65535&t,A=d[218920],u=e[r+8>>2],l=e[r+12>>2],s=0,b=0,Y=r=Y+-64|0,h=e[50759];C:if((0|(t=e[h+132>>2]))!=6){if(!A){for(t-1>>>0<=4&&(e[55921]=t,e[55964]=e[110896+(t<<2)>>2]),t=e[h+88>>2],e[54741]=1,e[55922]=(0|t)/32,A=e[50758],t=e[50757];;){m:if((0|A)!=(0|(t=(0|(t=t+1|0))<=169?t:0)))if((0|(T=e[216192+(t<<4)>>2]))!=1){if(T-5>>>0>1)continue}else{if(e[54741]=0,t=e[8+(216192+(t<<4)|0)>>2],!(B[l+4>>1]!=B[t+4>>1]|B[t+6>>1]!=B[l+6>>1]|B[t+8>>1]!=B[l+8>>1]|B[t+10>>1]!=B[l+10>>1])&&B[t+12>>1]==B[l+12>>1])break m;e[54741]=2}break}for((B[u+4>>1]!=B[113564]|B[u+6>>1]!=B[113565]|B[u+8>>1]!=B[113566]|B[u+10>>1]!=B[113567]||B[u+12>>1]!=B[113568])&&(iA(),e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0),t=B[l+4>>1]|B[l+6>>1]<<16,A=B[l>>1]|B[l+2>>1]<<16,k[113562]=A,k[113563]=A>>>16,k[113564]=t,k[113565]=t>>>16,t=B[l+60>>1]|B[l+62>>1]<<16,A=B[l+56>>1]|B[l+58>>1]<<16,k[113590]=A,k[113591]=A>>>16,k[113592]=t,k[113593]=t>>>16,t=B[l+52>>1]|B[l+54>>1]<<16,A=B[l+48>>1]|B[l+50>>1]<<16,k[113586]=A,k[113587]=A>>>16,k[113588]=t,k[113589]=t>>>16,t=B[l+44>>1]|B[l+46>>1]<<16,A=B[l+40>>1]|B[l+42>>1]<<16,k[113582]=A,k[113583]=A>>>16,k[113584]=t,k[113585]=t>>>16,t=B[l+36>>1]|B[l+38>>1]<<16,A=B[l+32>>1]|B[l+34>>1]<<16,k[113578]=A,k[113579]=A>>>16,k[113580]=t,k[113581]=t>>>16,t=B[l+28>>1]|B[l+30>>1]<<16,A=B[l+24>>1]|B[l+26>>1]<<16,k[113574]=A,k[113575]=A>>>16,k[113576]=t,k[113577]=t>>>16,t=B[l+20>>1]|B[l+22>>1]<<16,A=B[l+16>>1]|B[l+18>>1]<<16,k[113570]=A,k[113571]=A>>>16,k[113572]=t,k[113573]=t>>>16,t=B[l+12>>1]|B[l+14>>1]<<16,A=B[l+8>>1]|B[l+10>>1]<<16,k[113566]=A,k[113567]=A>>>16,k[113568]=t,k[113569]=t>>>16,v=+(0|g),(V=1&k[u>>1])?(t=d[u+39|0],e[56680]=t,P[28364]=t>>>0,P[28354]=+(d[l+39|0]-t<<6)/v,t=d[u+40|0],P[28366]=t>>>0,P[28356]=+(d[l+40|0]-t<<6)/v,t=d[u+41|0],e[56682]=t,P[28368]=t>>>0,P[28358]=+(d[l+41|0]-t<<6)/v,A=d[u+42|0],e[56684]=A,P[28370]=A>>>0,t=d[u+43|0],s=+(d[l+43|0]-t<<6)/v,b=+(d[l+42|0]-A<<6)/v,w=+(t>>>0)):(e[56728]=0,e[56729]=0,t=0,e[56680]=0,e[56708]=0,e[56709]=0,e[56732]=0,e[56733]=0,e[56712]=0,e[56713]=0,e[56682]=0,e[56736]=0,e[56737]=0,e[56716]=0,e[56717]=0,e[56684]=0,e[56740]=0,e[56741]=0,w=0),e[56688]=t,P[28360]=b,P[28372]=w,P[28362]=s,e[56692]=0,e[56748]=0,e[56749]=0,e[56694]=0,e[56752]=0,e[56753]=0,e[56696]=0,e[56756]=0,e[56757]=0,e[56700]=0,e[56760]=0,e[56761]=0,e[56704]=0,e[56764]=0,e[56765]=0,e[50764]=g,t=1;_=k[(T=(g=t<<1)+h|0)+164>>1],A=(ve=O(t,80))+222896|0,b=+k[T+218>>1],s=.00390625*+(0|O(_,k[2+(u+g|0)>>1]))+b,P[A+16>>3]=s,H=ee(s)<2147483648?~~s:-2147483648,e[A>>2]=H,P[A+48>>3]=64*(.00390625*+(0|O(_,k[2+(l+g|0)>>1]))+b-s)/v,t>>>0<=3&&(A=ve+222896|0,s=.00390625*+k[T+200>>1]*+(d[35+(t+u|0)|0]<<1),P[A+24>>3]=s,g=ee(s)<2147483648?~~s:-2147483648,e[A+4>>2]=g,P[A+56>>3]=64*(+(d[35+(t+l|0)|0]<<1)-s)/v),(0|(t=t+1|0))!=6;);if(s=+((t=d[u+40|0])<<1),P[27864]=s,A=e[56618],t||(s=+(0|A),P[27864]=s),t=ee(s)<2147483648?~~s:-2147483648,e[55724]=t,g=d[l+40|0],e[55730]=0,e[55731]=1079394304,e[55738]=0,e[55739]=0,e[55725]=89,t=1,P[27868]=64*(+(0|(g?g<<1:A))-s)/v,V)for(;A=O(t,80)+222896|0,h=d[(g=t+u|0)+56|0]<<2,e[A+12>>2]=h,s=+(0|h),P[A+40>>3]=s,h=t+l|0,P[A+72>>3]=64*(+(d[h+56|0]<<2)-s)/v,g=d[g+49|0],e[A+8>>2]=g,s=+(g>>>0),P[A+32>>3]=s,P[A- -64>>3]=64*(+d[h+49|0]-s)/v,(0|(t=t+1|0))!=7;);e[56606]=0}for(;;){if((0|(H=e[50764]))>(0|(l=e[56606]))){for(t=e[50767],e[56609]=e[55724],e[56619]=e[55725],e[56610]=e[55744],e[56611]=e[55764],e[56612]=e[55784],e[56613]=e[55804],V=O(t,10),e[56607]=(0|V)/4096,e[56620]=e[55745],e[56621]=e[55765],e[56622]=e[55785],e[56614]=e[55824],e[56630]=e[55746],e[56631]=e[55766],e[56632]=e[55786],e[56633]=e[55806],e[56634]=e[55826],e[56635]=e[55846],ve=e[56680],e[56608]=ve,u=e[56694],e[56656]=u,g=e[56696],e[56653]=g,h=e[56700],e[56655]=h,T=e[56684],e[56649]=T,e[56651]=e[56704],e[56654]=e[56688],e[56652]=e[56682],e[56650]=e[56692],t=0;A=O(t,80)+222896|0,s=P[A+48>>3]+P[A+16>>3],P[A+16>>3]=s,v=P[A+56>>3]+P[A+24>>3],P[A+24>>3]=v,b=P[A+72>>3]+P[A+40>>3],P[A+40>>3]=b,w=P[A- -64>>3]+P[A+32>>3],P[A+32>>3]=w,_=ee(s)<2147483648?~~s:-2147483648,e[A>>2]=_,_=ee(v)<2147483648?~~v:-2147483648,e[A+4>>2]=_,_=ee(b)<2147483648?~~b:-2147483648,e[A+12>>2]=_,_=ee(w)<2147483648?~~w:-2147483648,e[A+8>>2]=_,(0|(t=t+1|0))!=9;);for(s=P[28354]+P[28364],P[28364]=s,P[28366]=P[28356]+P[28366],v=P[28358]+P[28368],P[28368]=v,b=P[28360]+P[28370],P[28370]=b,w=P[28362]+P[28372],P[28372]=w,t=ee(s)<2147483648?~~s:-2147483648,e[56680]=t,t=ee(v)<2147483648?~~v:-2147483648,e[56682]=t,t=ee(b)<2147483648?~~b:-2147483648,e[56684]=t,t=ee(w)<2147483648?~~w:-2147483648,e[56688]=t,s=P[28374]+0,P[28374]=s,t=ee(s)<2147483648?~~s:-2147483648,e[56692]=t,s=P[28376]+0,P[28376]=s,t=ee(s)<2147483648?~~s:-2147483648,e[56694]=t,s=P[28378]+0,P[28378]=s,t=ee(s)<2147483648?~~s:-2147483648,e[56696]=t,s=P[28380]+0,P[28380]=s,t=ee(s)<2147483648?~~s:-2147483648,e[56700]=t,s=P[28382]+0,P[28382]=s,t=ee(s)<2147483648?~~s:-2147483648,e[56704]=t,e[56659]=e[55724],e[56669]=e[55725],e[56660]=e[55744],e[56670]=e[55745],e[56661]=e[55764],e[56671]=e[55765],e[56662]=e[55784],e[56672]=e[55785],e[56663]=e[55804],e[56664]=e[55824],e[56665]=e[55844],t=e[50768]+e[50769]|0,e[50768]=t,t>>=8,e[50767]=e[50770]+(O(e[50771],d[e[50766]+((0|t)>=127?127:t)|0])>>8),t=H-l|0,e[55923]=(0|t)>=64?64:t,e[55961]=(0|V)/40960,t=ve-7|0,e[56658]=(0|t)>0?t:0,P[27974]=T>>>0<=87?.001*+k[111136+(T<<1)>>1]*.05:0,P[27975]=g>>>0<=87?.001*+k[111136+(g<<1)>>1]*.25:0,P[27973]=u>>>0<=87?.001*+k[111136+(u<<1)>>1]:0,P[27971]=h>>>0<=87?.001*+k[111136+(h<<1)>>1]*.05:0,s=(t=e[56629])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.6:0,P[r>>3]=s,s=(t=e[56630])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.4:0,P[r+8>>3]=s,s=(t=e[56631])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.15:0,P[r+16>>3]=s,s=(t=e[56632])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.06:0,P[r+24>>3]=s,s=(t=e[56633])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.04:0,P[r+32>>3]=s,s=(t=e[56634])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.022:0,P[r+40>>3]=s,s=(t=e[56635])>>>0<=87?.001*+k[111136+(t<<1)>>1]*.03:0,P[r+48>>3]=s,s=(t=(0|(t=e[56657]-3|0))<=0?57:t)>>>0<=87?.001*+k[111136+(t<<1)>>1]:0,P[27977]=s/+e[55964],v=P[27968],b=P[27967],t=1;A=(l=t<<6)+223664|0,w=(s=Dr(b*+e[(g=(u=t<<2)+226428|0)+48>>2]))*-s,P[A+216>>3]=w,s*=ds(v*+e[g+8>>2]),s+=s,P[A+208>>3]=s,ie=1-s-w,P[A+200>>3]=ie,t>>>0<=5&&(g=e[(u=u+226428|0)+208>>2],A=l+223664|0,re=(J=Dr(b*+e[u+248>>2]))*ds(v*+(0|g)),re+=re,P[A+1488>>3]=re,J*=-J,P[A+1496>>3]=J,he=1-re-J,P[A+1480>>3]=he,P[A+256>>3]=.015625*(J-w),P[A+248>>3]=.015625*(re-s),P[A+240>>3]=.015625*(he-ie)),(0|(t=t+1|0))!=10;);for(J=(s=Dr(b*+e[56619]))*-s,P[27985]=J,re=(s*=ds(v*+(0-e[56609]|0)))+s,P[27984]=re,s=1-re-J,P[27983]=s,s!=0&&(s=1/s,P[27983]=s,J*=w=-s,P[27985]=J,re*=w,P[27984]=re),ie=(w=Dr(b*+e[56669]))*-w,P[28145]=ie,he=(w*=ds(v*+(0-e[56659]|0)))+w,P[28144]=he,w=1-he-ie,P[28143]=w,w!=0&&(w=1/w,P[28143]=w,ie*=ze=-w,P[28145]=ie,he*=ze,P[28144]=he),P[27990]=.015625*(ie-J),P[27989]=.015625*(he-re),P[27988]=.015625*(w-s),t=0;u=e[(l=226428+(t<<2)|0)+8>>2],A=223664+(t<<6)|0,w=(s=Dr(b*+e[l+128>>2]))*ds(v*+(0|u)),w+=w,P[A+848>>3]=w,s*=-s,P[A+856>>3]=s,P[A+840>>3]=P[r+(t<<3)>>3]*(1-w-s),(0|(t=t+1|0))!=7;);if(b=(s=Dr(b*+(e[55918]/2|0)))*-s,P[28137]=b,s*=ds(0*v),s+=s,P[28136]=s,P[28135]=1-s-b,t=1,(0|Ca())!=1)continue;break C}break}t=1,e[54741]>0&&(e[54741]=0,e[55963]=64,e[56606]=l+-64,e[55923]=64,(0|Ca())==1)||(t=0)}else{if(Y=T=Y-752|0,!A){Je(t=T+376|0,0,376),yr(h,u,t),yr(h,l,t=Je(T,0,376)),A=e[50768]+O(e[50769],g>>>6|0)|0,e[50768]=A,A>>=8,A=e[50770]+(O(e[50771],d[e[50766]+((0|A)>=127?127:A)|0])>>8)|0,e[50767]=A,P[t+368>>3]=(0|A)/4096|0,e[50773]&&(P[t+736>>3]=P[t+736>>3]/5,P[t+360>>3]=P[t+360>>3]/5),A=e[e[56797]+4>>2],Zt[e[e[A>>2]>>2]](A,t+376|0,110,110,-1,0),l=g-110|0,h=e[50758],A=e[50757];m:{for(;;){if((0|h)!=(0|(A=(A+1|0)%170|0))&&!((_=e[216192+(A<<4)>>2])-5>>>0<2)){if(u=1,(0|_)!=1)continue;break m}break}l=g-220|0,u=0}(0|l)>0&&(A=e[e[56797]+4>>2],Zt[e[e[A>>2]>>2]](A,t,l,l||1,-1,0)),u||(e[t+352>>2]=0,e[t+356>>2]=0,P[t>>3]=P[t+368>>3],A=e[e[56797]+4>>2],Zt[e[e[A>>2]>>2]](A,t,55,55,-1,0),e[t+360>>2]=0,e[t+364>>2]=0,A=e[e[56797]+4>>2],Zt[e[e[A>>2]>>2]](A,t,55,55,-1,0))}t=e[e[56797]+8>>2],A=e[51290],g=0|Zt[e[e[t>>2]>>2]](t,e[54046]-A>>>1|0,A),h=e[51290];m:if(g&&!((0|(A=e[50776]))>=(0|(ve=e[50773]))))for(Pe=e[50777],Xe=(0|O(Pe,3))/-4|0,s=.0009765625*+e[50780],_=e[50772],l=e[50778],ct=e[50775],H=e[50774],t=0;;){if(V=d[_+(u=A+l|0)|0],H?V=O(H,V<<24>>24):(A=A+1|0,e[50776]=A,V|=f[_+(u=A+l|0)|0]<<8),V=ee(v=s*+(0|V))<2147483648?~~v:-2147483648,k[(Se=h+(t<<1)|0)>>1]=B[Se>>1]+((0|O(V,ct))/40|0),(0|u)>=(0|Pe)&&(l=l+Xe|0,e[50778]=l),A=A+1|0,e[50776]=A,(0|A)>=(0|ve))break m;if(!(g>>>0>(t=t+1|0)>>>0))break}t=h+(g<<1)|0,e[51290]=t,Y=T+752|0,t=Ae[54046]<=t>>>0}if(Y=r- -64|0,t)break n;break o}e[50781]=t||100;break o}Ks(t,e[r+8>>2]);break o}t=e[r+8>>2],e[50759]=qt(203816,t,1344),e[50801]=e[t+108>>2]?105792:106064,t=(0|O(e[t+120>>2],26))/100|0,e[33038]=t,(0|(o=e[50754]))<=11e3&&(f[203300]=1,e[33038]=t<<1),e[54728]=e[50982],t=e[50979],A=e[50978],Je(205184,0,11e3),e[51293]=0,t=(A=(u=(0|(l=e[50789]))>0)?130:(0|A)>=5499?5499:A)?u?l:(0|t)>=100?100:t:0,e[50755]=t,A=(0|O(A,o))/1e3|0,e[51292]=A,e[54729]=(0|t)>20?A<<1:t?A:0,e[33037]=(0|O(500-t|0,(0|O(d[e[50797]+105596|0],(0|O(e[50787],55))/100|0))/16|0))/500,t=256,(0|(A=(0|(A=e[50785]))>=101?101:A))>=51&&(t=256+(((O(A,25)-1250&65535)>>>0)/50|0)|0),k[101990]=(0|O(k[102026],t))/256,k[101991]=(0|O(k[102027],t))/256,k[101992]=(0|O(k[102028],t))/256,k[101993]=(0|O(k[102029],t))/256,k[101994]=(0|O(k[102030],t))/256,k[101995]=(0|O(k[102031],t))/256,t=e[50790],k[101999]=(0|O(k[102035],O(t,-6)+256|0))/256,k[102e3]=(0|O(k[102036],O(t,-3)+256|0))/256,Zs(8,0,e[50986],0,e[51290]),Me(e[r+8>>2]);break o}if(!e[50759])break o;A=e[r+12>>2],r=e[r+8>>2],e[55911]=0,e[55915]=t?2097152/(0|t)|0:0,e[55910]=r,t=(0|O(A,e[33037]))/16|0,e[50779]=t,e[50780]=(0|O(O(t,e[50985]),15))/100;break o}Zs(A>>8,t,e[r+8>>2],e[r+12>>2],u)}o=0,t=e[50757]+1|0,e[50757]=(0|t)<=169?t:0}if(f[218920]=o,!((u=e[51290])>>>0<Ae[54046]))break}l=e[34391],r=(e[51290]-l|0)/2|0,e[34439]=r+e[34439],A=e[34436],t=e[34388]+O(A,36)|0,e[t+4>>2]=0,e[t>>2]=0,e[t+24>>2]=e[34438];a:if(2&(t=e[32538])){if(u=e[34388],(-2&t)==2&&(!(r=A?u:0)|e[r>>2]!=8||(0|(r=e[r+28>>2]))!=e[34389]&&(e[34389]=r)),o=1,(0|A)<2)break a;for(;;){r=A?u+O(o,36)|0:0;n:{o:switch(0|t){case 2:case 3:if(!r|e[r>>2]!=8||(0|(r=e[r+28>>2]))==e[34389])break n;e[34389]=r;break n;case 0:break o;default:break n}(t=e[34440])?(Zt[0|t](l,0,r),A=e[34436],t=e[32538]):t=0}if(!((0|(o=o+1|0))<(0|A)))break}}else if((t=e[34440])&&0|Zt[0|t](l,r,e[34388]))break r;if(!mt(1)&&!(170-((0|(t=e[50757]-e[50758]|0))<=0?t+170|0:t)|0||(t=e[34388],e[t>>2]=0,e[t+4>>2]=e[34437],e[t+24>>2]=e[34438],Et(1))))break}if(A=0,2&d[130152]||!(t=e[34440])||!(0|Zt[0|t](0,0,e[34388])))break t}Et(2),A=268439295}if((0|A)<=268437502){if(!A|(0|A)==268436479|(0|A)!=268437247)break e;return}}}function mt(t){var A,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0;Y=A=Y-720|0,r=e[47198],t||(e[36443]=0,e[36442]=1,e[36444]=0,e[36440]=0,e[36441]=0,t=e[50758],e[36454]=t,e[36427]=-1,e[36424]=-1,e[36446]=0,e[36447]=0,e[36439]=-1,e[36426]=0,e[36455]=t,e[36448]=0,e[36449]=0,e[36450]=0,e[36451]=0,e[36452]=0,e[36453]=0,Ps(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0));e:{t:if(!((0|(t=e[36442]))>997|e[36423]<=(0|t)))for(V=r>>>1&1,H=A+48|4,J=A+348|0,re=A+652|0,ie=e[32322],v=e[32320],he=A+60|0,ve=A+648|0,Pe=A+56|0,Se=A+620|0,T=A- -64|0;;){if(s=145840+(t<<5)|0,!(t=e[50756])|!e[t>>2]||(e[A+12>>2]=0,Qt(t=A+16|0,e[s+8>>2],s,0,A+12|0),r=ei(t),o=d[s+17|0],t=216192+(e[50758]<<4)|0,e[t>>2]=16,e[t+8>>2]=o,e[t+4>>2]=r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),t=1,(0|(o=(0|(r=e[50757]-e[50758]|0))<=0?r+170|0:r))<=(0|((r=d[s+17|0])?(0|r)==2?25:15:10)))break e;if(w=e[36442],2&d[0|s])for(b=2047&B[s+4>>1];;){if(o=e[36443],g=127&(r=e[198304+(o<<2)>>2])){t=r>>>8|0,e[36443]=o+1;r:{a:{n:switch((31&r)-2|0){case 0:Ks(96&r|8,t),cs(2);break r;case 5:if((0|t)>=e[34064]||!e[(g=(o=t<<4)+136272|0)+4>>2])break r;QA(10,0),t=216192+(e[50758]<<4)|0,e[t>>2]=6,g=e[g+4>>2],e[t+8>>2]=e[8+(o+136272|0)>>2]+44,e[t+12>>2]=5376,e[t+4>>2]=g;break a;case 8:if((0|((0|(o=e[50757]-e[50758]|0))<=0?o+170:o))<6)break r;g=e[47353],o=216192+(e[50758]<<4)|0,e[o>>2]=778,e[o+8>>2]=t,e[o+4>>2]=g+b&16777215;break a;case 9:if((0|((0|(o=e[50757]-e[50758]|0))<=0?o+170:o))<6)break r;g=e[33284],o=216192+(e[50758]<<4)|0,e[o>>2]=1034,e[o+8>>2]=t,e[o+4>>2]=g+1&16777215;break a;default:break n}QA(10,0),o=216192+(e[50758]<<4)|0,e[o>>2]=12,e[o+8>>2]=t,e[o+4>>2]=g}t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}if(!(128&r))continue}break}(t=d[s+20|0])&&(1&f[e[47192]+48|0]&d[s+17|0]==2|1&f[e[s+8>>2]+7|0]||(e[36426]=0),r=e[47353]+(2047&B[s+4>>1])|0,e[36445]=r,4&t&&((0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(o=e[47568],t=216192+(e[50758]<<4)|0,e[t>>2]=522,e[t+8>>2]=o,e[t+4>>2]=16777215&r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),1&f[s+20|0]&&(r=B[s+4>>1],o=e[36444],e[36444]=o+1,(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(b=e[36445],g=e[47355],t=216192+(e[50758]<<4)|0,e[t>>2]=266,e[t+8>>2]=o+g,e[t+4>>2]=16777215&b|(63488&r)<<13,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0))),(0|(t=e[36441]))>0&&(r=216192+(e[36425]<<4)|0,e[r+4>>2]||(e[r+4>>2]=t),e[36441]=0),t=w+1<<5,r=w-1<<5,!(o=d[s+18|0])|2&d[e[s+8>>2]+7|0]||QA(o,1),g=t+145840|0,l=r+145840|0,b=1;r:{a:{if(e[47198]&&(h=e[s+8>>2],d[h+10|0]!=15)){n:if(d[s+17|0]==2)switch(d[l+17|0]-3|0){case 0:case 5:break a;default:break n}b=0,Qt(A+704|0,h,s,V,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(r=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&r,r=e[A+708>>2],e[t+8>>2]=e[A+704>>2],e[t+12>>2]=r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}n:switch(d[s+17|0]){case 0:QA(e[s+12>>2],0),f[s+23|0]=d[e[s+8>>2]+14|0];break r;case 4:r=e[s+8>>2],(0|(t=d[g+17|0]))==2|!d[g+20|0]&(0|t)==3||(k[s>>1]=8192|B[s>>1]),2&d[r+7|0]&&(e[A+88>>2]=0,e[A+92>>2]=0,e[A+80>>2]=0,e[A+84>>2]=0,e[A+72>>2]=0,e[A+76>>2]=0,e[T>>2]=0,e[T+4>>2]=0,e[A+56>>2]=0,e[A+60>>2]=0,e[A+48>>2]=0,e[A+52>>2]=0,WA(0,1,s,A+552|0,145784),e[A+56>>2]=e[A+620>>2],e[T>>2]=e[A+640>>2],e[36424]<0&&(o=d[g+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=o,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,b=d[g+22|0],o=d[g+21|0],g=e[129280+(d[s+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(h=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=h),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,b|=o<<16,o=(0|o)==255,e[t+12>>2]=o?3604556:b,e[t+8>>2]=o?v:g,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),pt(r,0,A+48|0,s,0)),WA(0,0,s,A+552|0,145784),e[A+552>>2]=4|e[A+552>>2],(0|(t=e[36440]))<=0||(0|(r=e[36424]))<0||(e[(r=216192+(r<<4)|0)+4>>2]||(e[r+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Ps(),e[36427]=-1,e[36422]=0,(t=e[A+624>>2])&&(o=t,t=e[A+644>>2],vs(o,2,e[A+596>>2]<<1,e[A+552>>2],0,t?(t<<5)/100|0:32)),e[36426]=0;break r;case 6:WA(0,0,s,A+552|0,145784),8&d[0|s]&&(t=e[s+12>>2],(0|(r=e[36440]))<=0||(0|(o=e[36424]))<0||(e[(o=216192+(o<<4)|0)+4>>2]||(e[o+4>>2]=r),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Ps(),e[36427]=-1,e[36422]=0,(r=e[A+624>>2])&&(o=t,t=e[A+644>>2],vs(r,2,e[A+596>>2]<<1,e[A+552>>2],o,t?(t<<5)/100|0:32))),t=e[s+12>>2],(0|(r=e[36440]))<=0||(0|(o=e[36424]))<0||(e[(o=216192+(o<<4)|0)+4>>2]||(e[o+4>>2]=r),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Ps(),e[36427]=-1,e[36422]=0,(r=e[A+624>>2])&&(o=t,t=e[A+644>>2],vs(r,2,e[A+596>>2]<<1,e[A+552>>2],o,t?(t<<5)/100|0:32)),e[36426]=0;break r;case 5:o=e[s+8>>2],e[H+40>>2]=0,e[(t=H)+32>>2]=0,e[t+36>>2]=0,e[t+24>>2]=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+8>>2]=0,e[t+12>>2]=0,e[t>>2]=0,e[t+4>>2]=0,e[A+48>>2]=4;o:{c:{u:{l:switch(d[g+17|0]-2|0){case 0:r=d[s+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,r=d[s+22|0],h=d[s+21|0],b=e[129280+(d[s+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(u=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=u),t=(u=!(255&~h))?v:b,b=1;break c;case 1:break l;default:break u}if(!d[g+20|0]){r=d[g+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,r=d[g+22|0],h=d[g+21|0],b=e[129280+(d[g+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(u=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=u),t=(u=!(255&~h))?v:b,b=1;break c}}if(b=0,e[36424]>=0)break o;r=d[g+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,r=d[s+22|0],h=d[s+21|0],b=e[129280+(d[s+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(u=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=u),t=(u=!(255&~h))?v:b,b=0}_=e[50758],e[36424]=_,e[36440]=0,e[(_=216192+(_<<4)|0)>>2]=9,e[_+4>>2]=0,e[_+12>>2]=u?3604556:255&r|(255&h)<<16,e[_+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}o:if(!(2&d[o+7|0])&d[l+17|0]!=2)8&d[0|s]&&QA(50,0);else{if(WA(0,1,s,A+552|0,145784),e[A+56>>2]=e[A+620>>2],e[A+64>>2]=e[A+640>>2],pt(o,0,A+48|0,s,0),!(8&d[0|s]))break o;QA(25,1),pt(o,0,A+48|0,s,0)}o:if(b){if(e[36455]!=e[36454])break o;e[36455]=e[50758]}else k[s>>1]=8192|B[s>>1];if(WA(0,0,s,A+552|0,145784),e[A+56>>2]=e[A+620>>2],e[A+64>>2]=e[A+640>>2],e[A+76>>2]=e[A+636>>2],e[A+80>>2]=e[A+656>>2],pt(o,0,A+48|0,s,0),d[s+20|0]|d[84+(145840+(w<<5)|0)|0]||((0|(t=d[g+17|0]))==7&&(QA(20,0),t=d[g+17|0]),(255&t)!=6))break r;QA(12,0);break r;case 7:o:{c:{u:{l:{i:switch((t=d[g+17|0])-2|0){case 1:break l;case 0:break i;default:break u}r=d[s+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,b=d[s+22|0],t=d[s+21|0],o=e[129280+(d[s+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(h=e[36440]))<=0||e[(r=216192+(r<<4)|0)+4>>2]||(e[r+4>>2]=h),r=(h=!(255&~t))?v:o;break c}r=d[g+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,b=d[g+22|0],t=d[g+21|0],o=e[129280+(d[g+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(h=e[36440]))<=0||e[(r=216192+(r<<4)|0)+4>>2]||(e[r+4>>2]=h),r=(h=!(255&~t))?v:o;break c}if(e[36424]>=0)break o;r=d[s+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,b=d[s+22|0],t=d[s+21|0],o=e[129280+(d[s+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(h=e[36440]))<=0||e[(r=216192+(r<<4)|0)+4>>2]||(e[r+4>>2]=h),r=(h=!(255&~t))?v:o}o=e[50758],e[36424]=o,e[36440]=0,e[(o=216192+(o<<4)|0)>>2]=9,e[o+4>>2]=0,e[o+12>>2]=h?3604556:(255&t)<<16|b,e[o+8>>2]=r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,t=d[g+17|0]}o:{c:{u:switch((255&t)-2|0){case 1:if(d[g+20|0])break c;break;case 0:break u;default:break c}if(e[36455]!=e[36454])break o;e[36455]=e[50758];break o}k[s>>1]=8192|B[s>>1]}WA(0,0,s,A+552|0,145784),e[A+56>>2]=0,e[A+60>>2]=0,e[T>>2]=0,e[T+4>>2]=0,e[A+80>>2]=0,e[A+84>>2]=0,e[A+72>>2]=0,e[A+76>>2]=0,e[A+88>>2]=0,e[A+56>>2]=e[A+620>>2],e[T>>2]=e[A+640>>2],e[A+80>>2]=e[A+656>>2],e[A+48>>2]=0,e[A+52>>2]=0,e[A+76>>2]=e[A+636>>2],e[A+92>>2]=e[A+596>>2]<<1,8&d[0|s]&&pt(e[s+8>>2],0,A+48|0,s,0),pt(e[s+8>>2],0,A+48|0,s,0);break r;case 8:if(e[A+88>>2]=0,e[A+92>>2]=0,e[A+80>>2]=0,e[A+84>>2]=0,e[A+72>>2]=0,e[A+76>>2]=0,e[T>>2]=0,e[T+4>>2]=0,e[A+56>>2]=0,e[A+60>>2]=0,e[A+48>>2]=0,e[A+52>>2]=0,1&f[0|s]||(r=d[s+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,o=d[s+22|0],r=d[s+21|0],b=e[129280+(d[s+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(h=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=h),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,o|=r<<16,r=(0|r)==255,e[t+12>>2]=r?3604556:o,e[t+8>>2]=r?v:b,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),d[l+17|0]==8&&(e[36426]=0),WA(0,0,s,A+552|0,145784),e[A+56>>2]=e[A+620>>2],e[A+64>>2]=e[A+640>>2],e[A+92>>2]=e[A+596>>2]<<1,d[g+17|0]==2){e[36455]==e[36454]&&(e[36455]=e[50758]),pt(e[s+8>>2],0,A+48|0,s,0);break r}if(!(!(1&f[0|s])|d[l+17|0]!=2)){pt(e[s+8>>2],0,A+48|0,s,0);break r}e[36426]=0,pt(e[s+8>>2],0,A+48|0,s,0),e[36426]=0;break r;case 3:e[A+88>>2]=0,e[A+92>>2]=0,e[A+80>>2]=0,e[A+84>>2]=0,e[A+72>>2]=0,e[A+76>>2]=0,e[T>>2]=0,e[T+4>>2]=0,e[A+56>>2]=0,e[A+60>>2]=0,e[A+48>>2]=0,e[A+52>>2]=0,o=e[e[s+8>>2]+4>>2],1&f[0|s]||(r=d[s+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[(t=216192+(t<<4)|0)+12>>2]=r,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,b=d[s+22|0],r=d[s+21|0],h=e[129280+(d[s+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(u=e[36440]))<=0||e[(t=216192+(t<<4)|0)+4>>2]||(e[t+4>>2]=u),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,b|=r<<16,r=(0|r)==255,e[t+12>>2]=r?3604556:b,e[t+8>>2]=r?v:h,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),d[l+17|0]==8&&(e[36426]=0),d[g+17|0]!=2|e[36455]!=e[36454]||(e[36455]=e[50758]),WA(0,0,s,A+552|0,145784),(0|(t=e[A+584>>2]-d[s+18|0]|0))>0&&QA(t,1),e[A+56>>2]=e[A+620>>2],e[A+64>>2]=e[A+640>>2],e[A+76>>2]=e[A+636>>2],e[A+80>>2]=e[A+656>>2],e[A+92>>2]=e[A+596>>2]<<1,pt(e[s+8>>2],0,A+48|0,s,o<<24>>31&5);break r;case 2:break n;default:break r}h=e[s+8>>2]}w=d[s+3|0],e[A+88>>2]=0,e[A+92>>2]=0,e[A+80>>2]=0,e[A+84>>2]=0,e[A+72>>2]=0,e[A+76>>2]=0,e[T>>2]=0,e[T+4>>2]=0,e[A+56>>2]=0,e[A+60>>2]=0,e[A+48>>2]=0,e[A+52>>2]=0,WA(0,0,s,A+552|0,145784),t=e[A+628>>2],e[A+56>>2]=t,e[A+92>>2]=e[A+596>>2]<<1;a:{if(!t||(u=0,o=ve,r=he,2&d[A+552|0])){if(d[l+17|0]?(u=0,WA(0,0,l,A+400|0,0),t=e[A+476>>2],e[A+56>>2]=t,!t|!(2&d[A+400|0])||(e[A+72>>2]=e[A+496>>2],u=1),r=e[A+512>>2],e[A+84>>2]=e[A+508>>2],e[A+88>>2]=r):u=0,t)break a;e[A+48>>2]=1,e[A+52>>2]=1,o=Se,r=Pe}e[r>>2]=e[o>>2]}e[A+64>>2]=e[A+640>>2],r=d[s+16|0],t=0,(o=d[s+7|0])?(_a(o,A+96|0),r=no(e[A+220>>2]),(0|(o=e[A+224>>2]))<=0||(t=no(o))):r=e[129280+(r<<2)>>2],e[36455]==e[36454]&&(e[36455]=e[50758]),o=(o=15&w)>>>0<2?1:o>>>0>6?3:2;a:{n:switch(d[l+17|0]-3|0){case 2:case 4:u=d[s+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[(l=216192+(l<<4)|0)+12>>2]=u,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,u=d[s+22|0],l=d[s+21|0],(0|(t=e[36440]))<=0||(0|(w=e[36424]))<0||e[(w=216192+(w<<4)|0)+4>>2]||(e[w+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,u|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:u,e[t+8>>2]=l?v:r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,pt(h,1,A+48|0,s,o);break a;case 0:case 5:u=d[s+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[(l=216192+(l<<4)|0)+12>>2]=u,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,pt(h,1,A+48|0,s,o),u=d[s+22|0],l=d[s+21|0],(0|(t=e[36440]))<=0||(0|(w=e[36424]))<0||e[(w=216192+(w<<4)|0)+4>>2]||(e[w+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,u|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:u,e[t+8>>2]=l?v:r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0;break a;default:break n}u?(u=d[s+22|0],(0|(l=e[36440]))<=0||(0|(w=e[36424]))<0||e[(w=216192+(w<<4)|0)+4>>2]||(e[w+4>>2]=l),l=e[50758],e[36424]=l,e[36440]=0,e[(l=216192+(l<<4)|0)>>2]=9,e[l+4>>2]=0,e[l+12>>2]=(u|u<<16)-983040,e[l+8>>2]=ie,l=e[50758]+1|0,e[50758]=(0|l)<=169?l:0,u=d[s+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[(l=216192+(l<<4)|0)>>2]=8,e[l+4>>2]=0,e[l+12>>2]=u-1,e[l+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,pt(h,1,A+48|0,s,o),l=d[s+21|0],u=d[s+22|0],(0|(t=e[36440]))<=0||(0|(w=e[36424]))<0||e[(w=216192+(w<<4)|0)+4>>2]||(e[w+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,u|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:u,e[t+8>>2]=l?v:r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0):(1&f[0|s]||(u=d[s+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[(l=216192+(l<<4)|0)+12>>2]=u,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,u=d[s+22|0],l=d[s+21|0],(0|(t=e[36440]))<=0||(0|(w=e[36424]))<0||e[(w=216192+(w<<4)|0)+4>>2]||(e[w+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,u|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:u,e[t+8>>2]=l?v:r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),pt(h,1,A+48|0,s,o))}!e[47198]|1^b||(Qt(A+704|0,e[s+8>>2],s,V,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(r=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&r,r=e[A+708>>2],e[t+8>>2]=e[A+704>>2],e[t+12>>2]=r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),e[A+56>>2]=e[A+620>>2],e[A+84>>2]=0,e[A+88>>2]=0,e[A+64>>2]=e[A+640>>2],r=e[A+632>>2],e[A+68>>2]=r,t=re;a:{if(!r&&(!d[g+17|0]||(e[A+72>>2]=0,WA(0,0,g,A+248|0,0),e[A+52>>2]=1,t=e[A+368>>2],e[A+84>>2]=e[A+364>>2],e[A+88>>2]=t,r=e[A+328>>2],e[A+68>>2]=r,t=J,!r)))break a;e[A+72>>2]=e[t>>2]}pt(h,2,A+48|0,s,o)}if(t=e[36442]+1|0,e[36442]=t,(0|t)>997)break t;if(!(e[36423]>(0|t)))break}(0|(t=e[36440]))<=0||(0|(r=e[36424]))<0||(e[(r=216192+(r<<4)|0)+4>>2]||(e[r+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Ps(),e[36427]=-1,t=0,e[36423]<=0||(r=e[47568],o=e[33284],(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))>=6&&(t=216192+(e[50758]<<4)|0,e[t>>2]=1290,e[t+8>>2]=r,e[t+4>>2]=16777215&o,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),e[36423]=0,t=0)}return Y=A+720|0,t}function Ft(t,A,r,s){var o,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0;Y=o=Y-48|0;e:{if(r>>>0<=2){for(ct=e[(r<<=2)+124732>>2],gt=e[r+124720>>2];(0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r]),(0|r)==32|r-9>>>0<5;);_=1;t:{r:switch(r-43|0){case 0:case 2:break r;default:break t}_=(0|r)==45?-1:1,(0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r])}t:{r:{for(;;){if(f[g+84056|0]==(32|r)){if(g>>>0>6||((0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r])),(0|(g=g+1|0))!=8)continue;break r}break}if((0|g)!=3){if((0|g)==8)break r;if(!s|g>>>0<4)break t;if((0|g)==8)break r}if((0|(r=e[A+116>>2]))>0|(0|r)>=0&&(e[A+4>>2]=e[A+4>>2]-1),!(!s|g>>>0<4))for(r=(0|r)<0;r||(e[A+4>>2]=e[A+4>>2]-1),(g=g-1|0)>>>0>3;);}Y=v=Y-16|0,Z(me(me(0|_)*me(1/0))),(A=2147483647&(h=y(2)))-8388608>>>0<=2130706431?(r=A,r<<=25,s=(A=A>>>7|0)+1065353216|0):(r=h<<25,s=h>>>7|2147418112,A>>>0>=2139095040||(r=0,s=0,A&&(wA(v,r=A,0,0,0,(A=Ce(A))+81|0),b=e[v>>2],w=e[v+4>>2],r=e[v+8>>2],s=65536^e[v+12>>2]|16265-A<<16))),e[o>>2]=b,e[o+4>>2]=w,e[o+8>>2]=r,e[o+12>>2]=-2147483648&h|s,Y=v+16|0,b=e[o+8>>2],w=e[o+12>>2],h=e[o>>2],T=e[o+4>>2];break e}t:{r:{a:if(!g){for(g=0;;){if(f[g+84473|0]!=(32|r))break a;if(g>>>0>1||((0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r])),(0|(g=g+1|0))==3)break}break r}a:switch(0|g){case 0:if((0|r)==48){if((0|(g=e[A+4>>2]))==e[A+104>>2]?g=Ie(A):(e[A+4>>2]=g+1,g=d[0|g]),(-33&g)==88){Y=u=Y-432|0,(0|(r=e[A+4>>2]))==e[A+104>>2]?g=Ie(A):(e[A+4>>2]=r+1,g=d[0|r]);n:{o:{for(;;){if((0|g)!=48){if((0|g)!=46)break n;if((0|(r=e[A+4>>2]))!=e[A+104>>2]){e[A+4>>2]=r+1,g=d[0|r];break o}break}(0|(r=e[A+4>>2]))!=e[A+104>>2]?(Xe=1,e[A+4>>2]=r+1,g=d[0|r]):(Xe=1,g=Ie(A))}g=Ie(A)}if(J=1,(0|g)==48){for(;re=(r=re)-1|0,ie=ie-!r|0,(0|(r=e[A+4>>2]))==e[A+104>>2]?g=Ie(A):(e[A+4>>2]=r+1,g=d[0|r]),(0|g)==48;);Xe=1}}for(T=1073676288;;){n:{r=32|g;o:{if(!((zt=g-48|0)>>>0<10)){if((0|g)!=46&r-97>>>0>=6)break n;if((0|g)==46){if(J)break n;J=1,re=b,ie=w;break o}}r=(0|g)>57?r-87|0:zt,(0|w)<=0&b>>>0<=7|(0|w)<0?l=r+(l<<4)|0:!w&b>>>0<=28?(fs(u+48|0,r),wt(u+32|0,Se,ze,h,T,0,0,0,1073414144),Se=e[u+32>>2],ze=e[u+36>>2],h=e[u+40>>2],T=e[u+44>>2],wt(u+16|0,e[u+48>>2],e[u+52>>2],e[u+56>>2],e[u+60>>2],Se,ze,h,T),ke(u,e[u+16>>2],e[u+20>>2],e[u+24>>2],e[u+28>>2],v,H,ve,Pe),ve=e[u+8>>2],Pe=e[u+12>>2],v=e[u>>2],H=e[u+4>>2]):V|!r||(wt(u+80|0,Se,ze,h,T,0,0,0,1073610752),ke(u- -64|0,e[u+80>>2],e[u+84>>2],e[u+88>>2],e[u+92>>2],v,H,ve,Pe),ve=e[u+72>>2],Pe=e[u+76>>2],V=1,v=e[u+64>>2],H=e[u+68>>2]),w=(b=b+1|0)?w:w+1|0,Xe=1}(0|(r=e[A+4>>2]))!=e[A+104>>2]?(e[A+4>>2]=r+1,g=d[0|r]):g=Ie(A);continue}break}n:if(Xe){if((0|w)<=0&b>>>0<=7|(0|w)<0)for(h=b,T=w;l<<=4,(0|(h=h+1|0))!=8|(T=h?T:T+1|0););o:{c:{u:{if((-33&g)==80){if(h=Cr(A,s),T=r=fe,h|(0|r)!=-2147483648)break o;if(s){if((0|(r=e[A+116>>2]))>0|(0|r)>=0)break u;break c}v=0,H=0,Gs(A,0,0),r=0,A=0;break n}if(h=0,T=0,e[A+116>>2]<0)break o}e[A+4>>2]=e[A+4>>2]-1}h=0,T=0}if(l)if(r=h+((A=J?re:b)<<2)|0,A=(w=(J?ie:w)<<2|A>>>30)+T|0,(b=r-32|0)>>>0>0-ct>>>0&(0|(A=w=(r>>>0<h>>>0?A+1|0:A)-(r>>>0<32)|0))>=0|(0|A)>0)e[56798]=68,fs(u+160|0,_),wt(u+144|0,e[u+160>>2],e[u+164>>2],e[u+168>>2],e[u+172>>2],-1,-1,-1,2147418111),wt(u+128|0,e[u+144>>2],e[u+148>>2],e[u+152>>2],e[u+156>>2],-1,-1,-1,2147418111),v=e[u+128>>2],H=e[u+132>>2],r=e[u+140>>2],A=e[u+136>>2];else if((0|w)>=(0|(r=(A=ct-226|0)>>31))&A>>>0<=b>>>0|(0|r)<(0|w)){if((0|l)>=0)for(;ke(u+416|0,v,H,ve,Pe,0,0,0,-1073807360),ke(u+400|0,v,H,ve,Pe,(A=r=(0|(A=wi(v,H,ve,Pe,1073610752)))>=0)?e[u+416>>2]:v,A?e[u+420>>2]:H,A?e[u+424>>2]:ve,A?e[u+428>>2]:Pe),b=(A=b)-1|0,w=w-!A|0,ve=e[u+408>>2],Pe=e[u+412>>2],v=e[u+400>>2],H=e[u+404>>2],(0|(l=r|l<<1))>=0;);A=w-((ct>>31)+(b>>>0<ct>>>0)|0)|0,(0|(r=(r=32+(b-ct|0)|0)>>>0<gt>>>0&(0|(A=r>>>0<32?A+1|0:A))<=0|(0|A)<0?(0|r)>0?r:0:gt))>=113?(fs(u+384|0,_),re=e[u+392>>2],ie=e[u+396>>2],Se=e[u+384>>2],ze=e[u+388>>2],h=0,A=0):(cr(u+352|0,oa(1,144-r|0)),fs(u+336|0,_),Se=e[u+336>>2],ze=e[u+340>>2],re=e[u+344>>2],ie=e[u+348>>2],Uo(u+368|0,e[u+352>>2],e[u+356>>2],e[u+360>>2],e[u+364>>2],Se,ze,re,ie),he=e[u+376>>2],Rt=e[u+380>>2],h=e[u+372>>2],A=e[u+368>>2]),ua(u+320|0,(s=!(1&l)&!!(0|PA(v,H,ve,Pe,0,0,0,0))&(0|r)<32)+l|0),wt(u+304|0,Se,ze,re,ie,e[u+320>>2],e[u+324>>2],e[u+328>>2],e[u+332>>2]),r=A,ke(u+272|0,e[u+304>>2],e[u+308>>2],e[u+312>>2],e[u+316>>2],A,h,he,Rt),wt(u+288|0,Se,ze,re,ie,(A=s)?0:v,A?0:H,A?0:ve,A?0:Pe),ke(u+256|0,e[u+288>>2],e[u+292>>2],e[u+296>>2],e[u+300>>2],e[u+272>>2],e[u+276>>2],e[u+280>>2],e[u+284>>2]),xn(u+240|0,e[u+256>>2],e[u+260>>2],e[u+264>>2],e[u+268>>2],r,h,he,Rt),PA(A=e[u+240>>2],s=e[u+244>>2],r=e[u+248>>2],h=e[u+252>>2],0,0,0,0)||(e[56798]=68),tt(u+224|0,A,s,r,h,b),v=e[u+224>>2],H=e[u+228>>2],r=e[u+236>>2],A=e[u+232>>2]}else e[56798]=68,fs(u+208|0,_),wt(u+192|0,e[u+208>>2],e[u+212>>2],e[u+216>>2],e[u+220>>2],0,0,0,65536),wt(u+176|0,e[u+192>>2],e[u+196>>2],e[u+200>>2],e[u+204>>2],0,0,0,65536),v=e[u+176>>2],H=e[u+180>>2],r=e[u+188>>2],A=e[u+184>>2];else cr(u+112|0,0*+(0|_)),v=e[u+112>>2],H=e[u+116>>2],r=e[u+124>>2],A=e[u+120>>2]}else{o:{c:{if((0|(r=e[A+116>>2]))>0|(0|r)>=0){if(r=e[A+4>>2],e[A+4>>2]=r-1,!s)break c;if(e[A+4>>2]=r-2,!J)break o;e[A+4>>2]=r-3;break o}if(s)break o}Gs(A,0,0)}cr(u+96|0,0*+(0|_)),v=e[u+96>>2],H=e[u+100>>2],r=e[u+108>>2],A=e[u+104>>2]}e[o+16>>2]=v,e[o+20>>2]=H,e[o+24>>2]=A,e[o+28>>2]=r,Y=u+432|0,b=e[o+24>>2],w=e[o+28>>2],h=e[o+16>>2],T=e[o+20>>2];break e}e[A+116>>2]<0||(e[A+4>>2]=e[A+4>>2]-1)}g=A,he=_,u=s,A=0,_=0,Y=l=Y-8976|0,Rt=(zt=0-ct|0)-gt|0;n:{o:{for(;;){if((0|r)!=48){if((0|r)!=46)break n;if((0|(r=e[g+4>>2]))!=e[g+104>>2]){e[g+4>>2]=r+1,r=d[0|r];break o}break}(0|(A=e[g+4>>2]))!=e[g+104>>2]?(e[g+4>>2]=A+1,r=d[0|A]):r=Ie(g),A=1}r=Ie(g)}if(V=1,(0|r)==48){for(;b=(A=b)-1|0,w=w-!A|0,(0|(A=e[g+4>>2]))==e[g+104>>2]?r=Ie(g):(e[g+4>>2]=A+1,r=d[0|A]),(0|r)==48;);A=1}}e[l+784>>2]=0;n:{o:{c:{u:{l:{if((s=(0|r)==46)|(v=r-48|0)>>>0<=9)for(;;){i:{if(1&s){if(!V){b=h,w=T,V=1;break i}s=!A;break l}T=(h=h+1|0)?T:T+1|0,(0|_)<=2044?(Xe=(0|r)==48?Xe:h,A=(l+784|0)+(_<<2)|0,J&&(v=(O(e[A>>2],10)+r|0)-48|0),e[A>>2]=v,A=1,J=(r=(0|(s=J+1|0))==9)?0:s,_=r+_|0):(0|r)!=48&&(e[l+8960>>2]=1|e[l+8960>>2],Xe=18396)}if((0|(r=e[g+4>>2]))==e[g+104>>2]?r=Ie(g):(e[g+4>>2]=r+1,r=d[0|r]),!((s=(0|r)==46)|(v=r-48|0)>>>0<10))break}if(b=V?b:h,w=V?w:T,!(!A|(-33&r)!=69)){if(v=Cr(g,u),H=A=fe,!(v|(0|A)!=-2147483648)){if(!u)break c;v=0,H=0,e[g+116>>2]<0||(e[g+4>>2]=e[g+4>>2]-1)}w=w+H|0,w=(b=b+v|0)>>>0<v>>>0?w+1|0:w;break o}if(s=!A,(0|r)<0)break u}e[g+116>>2]<0||(e[g+4>>2]=e[g+4>>2]-1)}if(!s)break o;e[56798]=28}h=0,T=0,Gs(g,0,0),r=0,A=0;break n}if(A=e[l+784>>2])if(h>>>0>9&(0|T)>=0|(0|T)>0|(0|h)!=(0|b)|(0|w)!=(0|T)|(A>>>gt|0?(0|gt)<=30:0))if(b>>>0>zt>>>1>>>0&(0|w)>=0|(0|w)>0)e[56798]=68,fs(l+96|0,he),wt(l+80|0,e[l+96>>2],e[l+100>>2],e[l+104>>2],e[l+108>>2],-1,-1,-1,2147418111),wt(l- -64|0,e[l+80>>2],e[l+84>>2],e[l+88>>2],e[l+92>>2],-1,-1,-1,2147418111),h=e[l+64>>2],T=e[l+68>>2],r=e[l+76>>2],A=e[l+72>>2];else if((r=b>>>0<(A=ct-226|0)>>>0)&(0|w)<=(0|(A>>=31))|(0|A)>(0|w))e[56798]=68,fs(l+144|0,he),wt(l+128|0,e[l+144>>2],e[l+148>>2],e[l+152>>2],e[l+156>>2],0,0,0,65536),wt(l+112|0,e[l+128>>2],e[l+132>>2],e[l+136>>2],e[l+140>>2],0,0,0,65536),h=e[l+112>>2],T=e[l+116>>2],r=e[l+124>>2],A=e[l+120>>2];else{if(J){if((0|J)<=8){for(g=e[(A=(l+784|0)+(_<<2)|0)>>2];g=O(g,10),(0|(J=J+1|0))!=9;);e[A>>2]=g}_=_+1|0}if(V=b,!((0|Xe)>(0|b)|(0|Xe)>=9|(0|b)>17)){if((0|V)==9){fs(l+192|0,he),ua(l+176|0,e[l+784>>2]),wt(l+160|0,e[l+192>>2],e[l+196>>2],e[l+200>>2],e[l+204>>2],e[l+176>>2],e[l+180>>2],e[l+184>>2],e[l+188>>2]),h=e[l+160>>2],T=e[l+164>>2],r=e[l+172>>2],A=e[l+168>>2];break n}if((0|V)<=8){fs(l+272|0,he),ua(l+256|0,e[l+784>>2]),wt(l+240|0,e[l+272>>2],e[l+276>>2],e[l+280>>2],e[l+284>>2],e[l+256>>2],e[l+260>>2],e[l+264>>2],e[l+268>>2]),fs(l+224|0,e[124720+(0-V<<2)>>2]),Es(l+208|0,e[l+240>>2],e[l+244>>2],e[l+248>>2],e[l+252>>2],e[l+224>>2],e[l+228>>2],e[l+232>>2],e[l+236>>2]),h=e[l+208>>2],T=e[l+212>>2],r=e[l+220>>2],A=e[l+216>>2];break n}if(A=27+(O(V,-3)+gt|0)|0,!((r=e[l+784>>2])>>>A|0&&(0|A)<=30)){fs(l+352|0,he),ua(l+336|0,r),wt(l+320|0,e[l+352>>2],e[l+356>>2],e[l+360>>2],e[l+364>>2],e[l+336>>2],e[l+340>>2],e[l+344>>2],e[l+348>>2]),fs(l+304|0,e[124648+(V<<2)>>2]),wt(l+288|0,e[l+320>>2],e[l+324>>2],e[l+328>>2],e[l+332>>2],e[l+304>>2],e[l+308>>2],e[l+312>>2],e[l+316>>2]),h=e[l+288>>2],T=e[l+292>>2],r=e[l+300>>2],A=e[l+296>>2];break n}}for(;!e[(l+784|0)+((_=(r=_)-1|0)<<2)>>2];);if(J=0,A=(0|V)%9|0){if(s=0,A=(0|V)<0?A+9|0:A,r){for(w=1e9/(0|(b=e[124720+(0-A<<2)>>2]))|0,v=0,g=0;h=(h=v)+(_=((T=e[(v=(l+784|0)+(g<<2)|0)>>2])>>>0)/(b>>>0)|0)|0,e[v>>2]=h,s=(h=!h&(0|s)==(0|g))?s+1&2047:s,V=h?V-9|0:V,v=O(w,T-O(b,_)|0),(0|(g=g+1|0))!=(0|r););v&&(e[(l+784|0)+(r<<2)>>2]=v,r=r+1|0)}else r=0;V=9+(V-A|0)|0}else s=0;for(;;){g=(l+784|0)+(s<<2)|0;o:{for(;;){if(((0|V)!=36|Ae[g>>2]>=10384593)&(0|V)>=36)break o;for(_=r+2047|0,v=0,A=r;r=A,b=v,v=(A=e[(_=(l+784|0)+((h=2047&_)<<2)|0)>>2])<<29,A=T=A>>>3|0,!(w=(b=b+v|0)>>>0<v>>>0?A+1|0:A)&b>>>0<1000000001?v=0:b=(A=b)-eA(v=go(A,w,1e9),fe,1e9,0)|0,e[_>>2]=b,A=(0|h)!=(r-1&2047)||(0|s)==(0|h)||b?r:h,_=h-1|0,(0|s)!=(0|h););if(J=J-29|0,v)break}(0|(s=s-1&2047))==(0|A)&&(g=r=(b=l+784|0)+((A+2046&2047)<<2)|0,w=e[r>>2],r=A-1&2047,e[g>>2]=w|e[b+(r<<2)>>2]),V=V+9|0,e[(l+784|0)+(s<<2)>>2]=v;continue}break}o:{c:for(;;){for(b=r+1&2047,v=(l+784|0)+((r-1&2047)<<2)|0;;){h=(0|V)>45?9:1;u:{for(;;){A=s,g=0;l:{for(;;){if((0|(s=A+g&2047))!=(0|r)&&!((s=e[(l+784|0)+(s<<2)>>2])>>>0<(w=e[124672+(g<<2)>>2])>>>0)){if(s>>>0>w>>>0)break l;if((0|(g=g+1|0))!=4)continue}break}if((0|V)==36){for(b=0,w=0,g=0,h=0,T=0;(0|(s=A+g&2047))==(0|r)&&(e[780+(l+((r=r+1&2047)<<2)|0)>>2]=0),ua(l+768|0,e[(l+784|0)+(s<<2)>>2]),wt(l+752|0,b,w,h,T,0,0,1342177280,1075633366),ke(l+736|0,e[l+752>>2],e[l+756>>2],e[l+760>>2],e[l+764>>2],e[l+768>>2],e[l+772>>2],e[l+776>>2],e[l+780>>2]),h=e[l+744>>2],T=e[l+748>>2],b=e[l+736>>2],w=e[l+740>>2],(0|(g=g+1|0))!=4;);if(fs(l+720|0,he),wt(l+704|0,b,w,h,T,e[l+720>>2],e[l+724>>2],e[l+728>>2],e[l+732>>2]),h=e[l+712>>2],T=e[l+716>>2],b=0,w=0,v=e[l+704>>2],H=e[l+708>>2],(0|(s=(_=(0|(g=(u=J+113|0)-ct|0))<(0|gt))?(0|g)>0?g:0:gt))<=112)break u;break o}}if(J=h+J|0,s=r,(0|A)!=(0|r))break}for(T=1e9>>>h|0,_=~(-1<<h),g=0,s=A;w=(w=g)+((u=e[(g=(l+784|0)+(A<<2)|0)>>2])>>>h|0)|0,e[g>>2]=w,s=(w=!w&(0|A)==(0|s))?s+1&2047:s,V=w?V-9|0:V,g=O(T,u&_),(0|r)!=(0|(A=A+1&2047)););if(!g)continue;if((0|s)!=(0|b)){e[(l+784|0)+(r<<2)>>2]=g,r=b;continue c}e[v>>2]=1|e[v>>2];continue}break}break}cr(l+656|0,oa(1,225-s|0)),Uo(l+688|0,e[l+656>>2],e[l+660>>2],e[l+664>>2],e[l+668>>2],v,H,h,T),Se=e[l+696>>2],ze=e[l+700>>2],ve=e[l+688>>2],Pe=e[l+692>>2],cr(l+640|0,oa(1,113-s|0)),Sr(l+672|0,v,H,h,T,e[l+640>>2],e[l+644>>2],e[l+648>>2],e[l+652>>2]),xn(l+624|0,v,H,h,T,b=e[l+672>>2],w=e[l+676>>2],re=e[l+680>>2],ie=e[l+684>>2]),ke(l+608|0,ve,Pe,Se,ze,e[l+624>>2],e[l+628>>2],e[l+632>>2],e[l+636>>2]),h=e[l+616>>2],T=e[l+620>>2],v=e[l+608>>2],H=e[l+612>>2]}if((0|(V=A+4&2047))!=(0|r)){o:if((V=e[(l+784|0)+(V<<2)>>2])>>>0<=499999999){if(!V&(A+5&2047)==(0|r))break o;cr(l+496|0,.25*+(0|he)),ke(l+480|0,b,w,re,ie,e[l+496>>2],e[l+500>>2],e[l+504>>2],e[l+508>>2]),re=e[l+488>>2],ie=e[l+492>>2],b=e[l+480>>2],w=e[l+484>>2]}else(0|V)==5e8?($t=+(0|he),(A+5&2047)!=(0|r)?(cr(l+560|0,.75*$t),ke(l+544|0,b,w,re,ie,e[l+560>>2],e[l+564>>2],e[l+568>>2],e[l+572>>2]),re=e[l+552>>2],ie=e[l+556>>2],b=e[l+544>>2],w=e[l+548>>2]):(cr(l+528|0,.5*$t),ke(l+512|0,b,w,re,ie,e[l+528>>2],e[l+532>>2],e[l+536>>2],e[l+540>>2]),re=e[l+520>>2],ie=e[l+524>>2],b=e[l+512>>2],w=e[l+516>>2])):(cr(l+592|0,.75*+(0|he)),ke(l+576|0,b,w,re,ie,e[l+592>>2],e[l+596>>2],e[l+600>>2],e[l+604>>2]),re=e[l+584>>2],ie=e[l+588>>2],b=e[l+576>>2],w=e[l+580>>2]);(0|s)>111||(Sr(l+464|0,b,w,re,ie,0,0,0,1073676288),PA(e[l+464>>2],e[l+468>>2],e[l+472>>2],e[l+476>>2],0,0,0,0)||(ke(l+448|0,b,w,re,ie,0,0,0,1073676288),re=e[l+456>>2],ie=e[l+460>>2],b=e[l+448>>2],w=e[l+452>>2]))}ke(l+432|0,v,H,h,T,b,w,re,ie),xn(l+416|0,e[l+432>>2],e[l+436>>2],e[l+440>>2],e[l+444>>2],ve,Pe,Se,ze),h=e[l+424>>2],T=e[l+428>>2],v=e[l+416>>2],H=e[l+420>>2],(Rt-2|0)>=(2147483647&u)||(e[l+408>>2]=h,e[l+412>>2]=2147483647&T,e[l+400>>2]=v,e[l+404>>2]=H,wt(l+384|0,v,H,h,T,0,0,0,1073610752),h=(A=(0|(A=wi(e[l+400>>2],e[l+404>>2],e[l+408>>2],e[l+412>>2],1081081856)))>=0)?e[l+392>>2]:h,T=A?e[l+396>>2]:T,v=A?e[l+384>>2]:v,H=A?e[l+388>>2]:H,J=A+J|0,!(!!(0|PA(b,w,re,ie,0,0,0,0))&(A?_&(0|s)!=(0|g):_))&(J+110|0)<=(0|Rt)||(e[56798]=68)),tt(l+368|0,v,H,h,T,J),h=e[l+368>>2],T=e[l+372>>2],r=e[l+380>>2],A=e[l+376>>2]}else fs(l+48|0,he),ua(l+32|0,A),wt(l+16|0,e[l+48>>2],e[l+52>>2],e[l+56>>2],e[l+60>>2],e[l+32>>2],e[l+36>>2],e[l+40>>2],e[l+44>>2]),h=e[l+16>>2],T=e[l+20>>2],r=e[l+28>>2],A=e[l+24>>2];else cr(l,0*+(0|he)),h=e[l>>2],T=e[l+4>>2],r=e[l+12>>2],A=e[l+8>>2]}e[o+40>>2]=A,e[o+44>>2]=r,e[o+32>>2]=h,e[o+36>>2]=T,Y=l+8976|0,b=e[o+40>>2],w=e[o+44>>2],h=e[o+32>>2],T=e[o+36>>2];break e;case 3:break r;default:break a}(0|(r=e[A+116>>2]))>0|(0|r)>=0&&(e[A+4>>2]=e[A+4>>2]-1);break t}if((0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r]),(0|r)!=40){if(w=2147450880,e[A+116>>2]<0)break e;e[A+4>>2]=e[A+4>>2]-1;break e}for(g=1;(0|(r=e[A+4>>2]))==e[A+104>>2]?r=Ie(A):(e[A+4>>2]=r+1,r=d[0|r]),r-48>>>0<10|r-65>>>0<26|(0|r)==95||!(r-97>>>0>=26);)g=g+1|0;if(w=2147450880,(0|r)==41)break e;(0|(r=e[A+116>>2]))>0|(0|r)>=0&&(e[A+4>>2]=e[A+4>>2]-1);r:{if(s){if(g)break r;break e}break t}for(;g=g-1|0,(0|r)>0|(0|r)>=0&&(e[A+4>>2]=e[A+4>>2]-1),g;);break e}e[56798]=28,Gs(A,0,0)}w=0}e[t>>2]=h,e[t+4>>2]=T,e[t+8>>2]=b,e[t+12>>2]=w,Y=o+48|0}function pt(t,A,r,s,o){var l,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0;if(Y=l=Y-112|0,e[r+8>>2]){ct=e[50754]/70|0,H=(v=e[s+12>>2])||256;e:if((0|A)!=2){if((0|A)==1){t:if(d[t+11|0]!=3)switch(d[s-15|0]-3|0){case 0:case 5:break t;default:break e}H=(0|(v=e[e[47192]+44>>2]))<(0|H)?H:v}}else{if((0|(v=e[e[47192]+80>>2]))<=0|!(8&d[0|s]|v>>>0<=d[t+14|0]|32&d[t+6|0]))break e;ct<<=1}if(e[36436]=0,ie=t,gt=A,b=s,Y=V=Y-16|0,t=e[34460]+e[r+8>>2]|0,A=(A=d[t+2|0])>>>0>=24?24:A,e[V+12>>2]=A,g=e[r+12>>2]+e[r+24>>2]|0,e[36422]=g,A){for(v=t+4|0,u=1&k[t+4>>1];t=145488+(w<<3)|0,s=v+(u?w<<6:O(w,44))|0,e[t+4>>2]=s,_=B[s>>1],k[t+2>>1]=_,k[t>>1]=d[s+16|0],h=2&_?w:h,(0|(w=w+1|0))!=(0|A););v=145488,(0|h)<=0||((0|gt)!=1?(A=A-h|0,e[V+12>>2]=A,v=145488+(h<<3)|0):(A=h+1|0,e[V+12>>2]=A,v=145488))}else A=0,v=145488;if(!(!e[r+4>>2]|e[r+20>>2]|d[ie+11|0]!=2)){if(u=e[r+36>>2],s=e[r+40>>2],t=0,(0|(A=e[V+12>>2]))>=2){h=u>>>12|0,_=s>>>26&7,he=s>>>18&248,J=O(re=63&s,50),Pe=63&(Se=u>>>6|0),w=u<<1&126,ze=O(s>>>16&31,50)-750|0,Xe=O(s>>>11&31,50)-750|0,ve=O(s>>>6&31,50)-750|0;e:{t:if((0|gt)!=1){if(!(h|re))break e;if(8&h?(A=e[4+(v+((g=A-1|0)<<3)|0)>>2],k[A>>1]<0?t=A:(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,g=B[A+20>>1]|B[A+22>>1]<<16,t=177888+(t<<6)|0,u=B[A+16>>1]|B[A+18>>1]<<16,k[t+16>>1]=u,k[t+18>>1]=u>>>16,k[t+20>>1]=g,k[t+22>>1]=g>>>16,g=B[A+4>>1]|B[A+6>>1]<<16,u=B[A>>1]|B[A+2>>1]<<16,k[t>>1]=u,k[t+2>>1]=u>>>16,k[t+4>>1]=g,k[t+6>>1]=g>>>16,g=B[A+12>>1]|B[A+14>>1]<<16,u=B[A+8>>1]|B[A+10>>1]<<16,k[t+8>>1]=u,k[t+10>>1]=u>>>16,k[t+12>>1]=g,k[t+14>>1]=g>>>16,g=B[A+28>>1]|B[A+30>>1]<<16,u=B[A+24>>1]|B[A+26>>1]<<16,k[t+24>>1]=u,k[t+26>>1]=u>>>16,k[t+28>>1]=g,k[t+30>>1]=g>>>16,g=B[A+36>>1]|B[A+38>>1]<<16,u=B[A+32>>1]|B[A+34>>1]<<16,k[t+32>>1]=u,k[t+34>>1]=u>>>16,k[t+36>>1]=g,k[t+38>>1]=g>>>16,g=B[A+44>>1]|B[A+46>>1]<<16,u=B[A+40>>1]|B[A+42>>1]<<16,k[t+40>>1]=u,k[t+42>>1]=u>>>16,k[t+44>>1]=g,k[t+46>>1]=g>>>16,g=B[A+52>>1]|B[A+54>>1]<<16,u=B[A+48>>1]|B[A+50>>1]<<16,k[t+48>>1]=u,k[t+50>>1]=u>>>16,k[t+52>>1]=g,k[t+54>>1]=g>>>16,g=B[A+60>>1]|B[A+62>>1]<<16,A=B[A+56>>1]|B[A+58>>1]<<16,k[t+56>>1]=A,k[t+58>>1]=A>>>16,k[t+60>>1]=g,k[t+62>>1]=g>>>16,f[t+16|0]=0,k[t>>1]=32768|B[t>>1],g=e[V+12>>2]-1|0),e[4+(v+(g<<3)|0)>>2]=t,A=1792,(0|(g=k[t+4>>1]))<300||(A=1536,g>>>0<400||(A=g>>>0<500?1280:1024)),e[36436]=A,u=35):(e[V+12>>2]=A+1,k[(t=(g=v+(A<<3)|0)-8|0)>>1]=w,A=e[t+4>>2],t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=(Se=t<<6)+177888|0)&&(u=B[A+4>>1]|B[A+6>>1]<<16,T=B[A>>1]|B[A+2>>1]<<16,k[t>>1]=T,k[t+2>>1]=T>>>16,k[t+4>>1]=u,k[t+6>>1]=u>>>16,u=B[A+60>>1]|B[A+62>>1]<<16,T=B[A+56>>1]|B[A+58>>1]<<16,k[t+56>>1]=T,k[t+58>>1]=T>>>16,k[t+60>>1]=u,k[t+62>>1]=u>>>16,u=B[A+52>>1]|B[A+54>>1]<<16,T=B[A+48>>1]|B[A+50>>1]<<16,k[t+48>>1]=T,k[t+50>>1]=T>>>16,k[t+52>>1]=u,k[t+54>>1]=u>>>16,u=B[A+44>>1]|B[A+46>>1]<<16,T=B[A+40>>1]|B[A+42>>1]<<16,k[t+40>>1]=T,k[t+42>>1]=T>>>16,k[t+44>>1]=u,k[t+46>>1]=u>>>16,u=B[A+36>>1]|B[A+38>>1]<<16,T=B[A+32>>1]|B[A+34>>1]<<16,k[t+32>>1]=T,k[t+34>>1]=T>>>16,k[t+36>>1]=u,k[t+38>>1]=u>>>16,u=B[A+28>>1]|B[A+30>>1]<<16,T=B[A+24>>1]|B[A+26>>1]<<16,k[t+24>>1]=T,k[t+26>>1]=T>>>16,k[t+28>>1]=u,k[t+30>>1]=u>>>16,u=B[A+20>>1]|B[A+22>>1]<<16,T=B[A+16>>1]|B[A+18>>1]<<16,k[t+16>>1]=T,k[t+18>>1]=T>>>16,k[t+20>>1]=u,k[t+22>>1]=u>>>16,u=B[A+12>>1]|B[A+14>>1]<<16,A=B[A+8>>1]|B[A+10>>1]<<16,k[t+8>>1]=A,k[t+10>>1]=A>>>16,k[t+12>>1]=u,k[t+14>>1]=u>>>16,f[Se+177904|0]=0,k[t>>1]=32768|B[t>>1]),k[g>>1]=0,e[g+4>>2]=t,w>>>0>=37&&(e[36422]=(w+e[36422]|0)-36),u=Pe<<1,re&&X(t,J,ve,Xe,_,ze,he,h)),e[e[32972]+132>>2]||(A=d[t+17|0])&&(A=k[102896+(((0|(A=(u<<6>>>0)/(A>>>0)|0))>=199?199:A)<<1)>>1],f[t+18|0]=(0|O(A,d[t+18|0]))/512,f[t+19|0]=(0|O(A,d[t+19|0]))/512,f[t+20|0]=(0|O(A,d[t+20|0]))/512,f[t+21|0]=(0|O(A,d[t+21|0]))/512,f[t+22|0]=(0|O(A,d[t+22|0]))/512,f[t+23|0]=(0|O(A,d[t+23|0]))/512,f[t+24|0]=(0|O(A,d[t+24|0]))/512,f[t+25|0]=(0|O(A,d[t+25|0]))/512),s-536870912>>>0<=1073741823){if(_=e[44469],(0|(g=e[V+12>>2]))>0)for(t=O(s>>>29|0,10)+102854|0,he=k[t+4>>1],re=k[t+2>>1],J=k[t>>1],ze=k[t+6>>1],Xe=k[t+8>>1],u=0;A=e[(ve=v+(u<<3)|0)+4>>2],k[A>>1]<0?t=A:(t=(Pe=(_=(0|(t=_+1|0))<=169?t:0)<<6)+177888|0)?(s=B[A+4>>1]|B[A+6>>1]<<16,g=B[A>>1]|B[A+2>>1]<<16,k[t>>1]=g,k[t+2>>1]=g>>>16,k[t+4>>1]=s,k[t+6>>1]=s>>>16,s=B[A+60>>1]|B[A+62>>1]<<16,g=B[A+56>>1]|B[A+58>>1]<<16,k[t+56>>1]=g,k[t+58>>1]=g>>>16,k[t+60>>1]=s,k[t+62>>1]=s>>>16,s=B[A+52>>1]|B[A+54>>1]<<16,g=B[A+48>>1]|B[A+50>>1]<<16,k[t+48>>1]=g,k[t+50>>1]=g>>>16,k[t+52>>1]=s,k[t+54>>1]=s>>>16,s=B[A+44>>1]|B[A+46>>1]<<16,g=B[A+40>>1]|B[A+42>>1]<<16,k[t+40>>1]=g,k[t+42>>1]=g>>>16,k[t+44>>1]=s,k[t+46>>1]=s>>>16,s=B[A+36>>1]|B[A+38>>1]<<16,g=B[A+32>>1]|B[A+34>>1]<<16,k[t+32>>1]=g,k[t+34>>1]=g>>>16,k[t+36>>1]=s,k[t+38>>1]=s>>>16,s=B[A+28>>1]|B[A+30>>1]<<16,g=B[A+24>>1]|B[A+26>>1]<<16,k[t+24>>1]=g,k[t+26>>1]=g>>>16,k[t+28>>1]=s,k[t+30>>1]=s>>>16,s=B[A+20>>1]|B[A+22>>1]<<16,g=B[A+16>>1]|B[A+18>>1]<<16,k[t+16>>1]=g,k[t+18>>1]=g>>>16,k[t+20>>1]=s,k[t+22>>1]=s>>>16,s=B[A+12>>1]|B[A+14>>1]<<16,A=B[A+8>>1]|B[A+10>>1]<<16,k[t+8>>1]=A,k[t+10>>1]=A>>>16,k[t+12>>1]=s,k[t+14>>1]=s>>>16,f[Pe+177904|0]=0,k[t>>1]=32768|B[t>>1],g=e[V+12>>2]):t=0,e[ve+4>>2]=t,k[t+8>>1]=(0|O(he,k[t+8>>1]))/256,k[t+6>>1]=(0|O(re,k[t+6>>1]))/256,k[t+4>>1]=(0|O(J,k[t+4>>1]))/256,k[t+12>>1]=(0|O(Xe,k[t+12>>1]))/256,k[t+10>>1]=(0|O(ze,k[t+10>>1]))/256,(0|g)>(0|(u=u+1|0)););e[44469]=_}if(!t)break e}else{A=e[v+4>>2],(0|(g=k[A>>1]))<0?t=A:(s=(0|(s=e[44469]+1|0))<=169?s:0,e[44469]=s,(s=(g=s<<6)+177888|0)&&(t=B[A+4>>1]|B[A+6>>1]<<16,T=B[A>>1]|B[A+2>>1]<<16,k[s>>1]=T,k[s+2>>1]=T>>>16,k[s+4>>1]=t,k[s+6>>1]=t>>>16,t=B[A+60>>1]|B[A+62>>1]<<16,T=B[A+56>>1]|B[A+58>>1]<<16,k[s+56>>1]=T,k[s+58>>1]=T>>>16,k[s+60>>1]=t,k[s+62>>1]=t>>>16,t=B[A+52>>1]|B[A+54>>1]<<16,T=B[A+48>>1]|B[A+50>>1]<<16,k[s+48>>1]=T,k[s+50>>1]=T>>>16,k[s+52>>1]=t,k[s+54>>1]=t>>>16,t=B[A+44>>1]|B[A+46>>1]<<16,T=B[A+40>>1]|B[A+42>>1]<<16,k[s+40>>1]=T,k[s+42>>1]=T>>>16,k[s+44>>1]=t,k[s+46>>1]=t>>>16,t=B[A+36>>1]|B[A+38>>1]<<16,T=B[A+32>>1]|B[A+34>>1]<<16,k[s+32>>1]=T,k[s+34>>1]=T>>>16,k[s+36>>1]=t,k[s+38>>1]=t>>>16,t=B[A+28>>1]|B[A+30>>1]<<16,T=B[A+24>>1]|B[A+26>>1]<<16,k[s+24>>1]=T,k[s+26>>1]=T>>>16,k[s+28>>1]=t,k[s+30>>1]=t>>>16,t=B[A+20>>1]|B[A+22>>1]<<16,T=B[A+16>>1]|B[A+18>>1]<<16,k[s+16>>1]=T,k[s+18>>1]=T>>>16,k[s+20>>1]=t,k[s+22>>1]=t>>>16,t=B[A+12>>1]|B[A+14>>1]<<16,A=B[A+8>>1]|B[A+10>>1]<<16,k[s+8>>1]=A,k[s+10>>1]=A>>>16,k[s+12>>1]=t,k[s+14>>1]=t>>>16,f[g+177904|0]=0,g=-32768|B[s>>1],k[s>>1]=g,t=s)),e[v+4>>2]=t,k[v>>1]=w||50,k[v+2>>1]=16384|B[v+2>>1],k[t>>1]=16384|g,g=e[v+12>>2],A=d[g+17|0],s=e[32972],e[s+132>>2]&&(f[t+39|0]=d[g+39|0]-4);r:if(re){if(2048&u){A=(O(A,31&Se)>>>0)/30|0,e[s+132>>2]||(s=d[t+17|0])&&(A=k[102896+(((0|(A=(A<<6>>>0)/(s>>>0)|0))>=199?199:A)<<1)>>1],f[t+18|0]=(0|O(A,d[t+18|0]))/512,f[t+19|0]=(0|O(A,d[t+19|0]))/512,f[t+20|0]=(0|O(A,d[t+20|0]))/512,f[t+21|0]=(0|O(A,d[t+21|0]))/512,f[t+22|0]=(0|O(A,d[t+22|0]))/512,f[t+23|0]=(0|O(A,d[t+23|0]))/512,f[t+24|0]=(0|O(A,d[t+24|0]))/512,f[t+25|0]=(0|O(A,d[t+25|0]))/512),X(t,J,ve,Xe,_,ze,he,h);break r}if(X(t,J,ve,Xe,_,ze,he,h),e[e[32972]+132>>2]||!(A=d[t+17|0]))break r;A=k[102896+(((0|(A=(Pe<<7>>>0)/(A>>>0)|0))>=199?199:A)<<1)>>1],f[t+18|0]=(0|O(A,d[t+18|0]))/512,f[t+19|0]=(0|O(A,d[t+19|0]))/512,f[t+20|0]=(0|O(A,d[t+20|0]))/512,f[t+21|0]=(0|O(A,d[t+21|0]))/512,f[t+22|0]=(0|O(A,d[t+22|0]))/512,f[t+23|0]=(0|O(A,d[t+23|0]))/512,f[t+24|0]=(0|O(A,d[t+24|0]))/512,f[t+25|0]=(0|O(A,d[t+25|0]))/512}else if(s=e[s+132>>2],8&h){if(s||!(s=d[t+17|0]))break r;A=((16320&O(A,48))>>>0)/(s>>>0)|0,A=k[102896+((A>>>0>=199?199:A)<<1)>>1],f[t+18|0]=(0|O(A,d[t+18|0]))/512,f[t+19|0]=(0|O(A,d[t+19|0]))/512,f[t+20|0]=(0|O(A,d[t+20|0]))/512,f[t+21|0]=(0|O(A,d[t+21|0]))/512,f[t+22|0]=(0|O(A,d[t+22|0]))/512,f[t+23|0]=(0|O(A,d[t+23|0]))/512,f[t+24|0]=(0|O(A,d[t+24|0]))/512,f[t+25|0]=(0|O(A,d[t+25|0]))/512}else s||(A=d[t+17|0])&&(A=k[102896+(((A=1792/(A>>>0)|0)>>>0>=199?199:A)<<1)>>1],f[t+18|0]=(0|O(A,d[t+18|0]))/512,f[t+19|0]=(0|O(A,d[t+19|0]))/512,f[t+20|0]=(0|O(A,d[t+20|0]))/512,f[t+21|0]=(0|O(A,d[t+21|0]))/512,f[t+22|0]=(0|O(A,d[t+22|0]))/512,f[t+23|0]=(0|O(A,d[t+23|0]))/512,f[t+24|0]=(0|O(A,d[t+24|0]))/512,f[t+25|0]=(0|O(A,d[t+25|0]))/512);if(!(8&h))break t;A=2816,(0|(s=k[t+4>>1]))<300||(A=2560,s>>>0<400||(A=s>>>0<500?2304:2048)),e[36436]=A}4&h&&(k[t>>1]=32|B[t>>1]),2&h&&(k[t>>1]=16|B[t>>1])}64&h&&QA(20,0),t=w&h<<27>>31}else t=0;g=t+e[36422]|0,e[36422]=g,A=e[V+12>>2]}if((0|(s=A-1|0))<=0)u=0;else{if(t=0,w=0,u=0,A-2>>>0>=3)for(he=-4&s,_=0;u=(((k[(h=w<<3)+v>>1]+u|0)+k[v+(8|h)>>1]|0)+k[v+(16|h)>>1]|0)+k[v+(24|h)>>1]|0,w=w+4|0,(0|he)!=(0|(_=_+4|0)););if(h=3&s)for(;u=k[v+(w<<3)>>1]+u|0,w=w+1|0,(0|h)!=(0|(t=t+1|0)););}if(t=A,(h=e[r+20>>2])&&(t=s,w=h+e[34460]|0,(_=d[w+2|0])&&(re=B[w+4>>1],k[v+(s<<3)>>1]=d[w+20|0],h=1,t=A,(0|_)!=1))){if(he=w+4|0,re&=1,ze=1&(w=_-1|0),(0|_)!=2)for(Xe=-2&w,_=0;ve=he+(h<<6)|0,Pe=he+O(h,44)|0,Se=d[(J=re?ve:Pe)+16|0],e[(w=v+(t<<3)|0)+4>>2]=J,k[w>>1]=Se,k[w+2>>1]=B[J>>1],ve=d[(J=re?ve- -64|0:Pe+44|0)+16|0],e[w+12>>2]=J,k[w+8>>1]=ve,k[w+10>>1]=B[J>>1],h=h+2|0,t=t+2|0,(0|Xe)!=(0|(_=_+2|0)););ze&&(h=he+(re?h<<6:O(h,44))|0,_=d[h+16|0],e[(w=v+(t<<3)|0)+4>>2]=h,k[w>>1]=_,k[w+2>>1]=B[h>>1],t=t+1|0)}e:if(!((0|u)<=0)){t:{r:switch(gt-1|0){case 1:if(h=(0|(h=(e[r+44>>2]+g|0)-45|0))<=10?10:h,8&d[0|b]&&(h=h+(d[e[36128]+14|0]<<1)|0),(0|s)<=0)break e;if(b=(h<<8)/(0|u)|0,w=0,(0|A)!=2)for(A=-2&s,h=0;k[(u=(g=w<<3)+v|0)>>1]=(0|O(b,k[u>>1]))/256,k[(g=v+(8|g)|0)>>1]=(0|O(b,k[g>>1]))/256,w=w+2|0,(0|A)!=(0|(h=h+2|0)););if(!(1&s))break e;k[(A=v+(w<<3)|0)>>1]=(0|O(b,k[A>>1]))/256;break e;case 0:if(e[r>>2]!=1||(0|(h=e[r+44>>2]))>129)break t;k[v>>1]=(0|O(h,k[v>>1]))/130;break t;default:break r}(0|(h=e[r+44>>2]))<=0||(g=(h-u|0)+g|0,e[36422]=g)}if(!(!g|(0|s)<=0)){if(b=(u+g<<8)/(0|u)|0,w=0,(0|A)!=2)for(A=-2&s,h=0;k[(u=(g=w<<3)+v|0)>>1]=(0|O(b,k[u>>1]))/256,k[(g=v+(8|g)|0)>>1]=(0|O(b,k[g>>1]))/256,w=w+2|0,(0|A)!=(0|(h=h+2|0)););1&s&&(k[(A=v+(w<<3)|0)>>1]=(0|O(b,k[A>>1]))/256)}}if(e[l+108>>2]=t,Y=V+16|0,v){if((0|(t=e[r+16>>2]))!=e[36438]&&(e[36438]=t,A=216192+(e[50758]<<4)|0,e[A>>2]=14,e[A+4>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),w=(t=e[e[32972]+132>>2])?1:3,A=e[v+4>>2],e[r+28>>2]|!d[145748]||(f[145748]=0,w=t?2:4),(s=e[36426])&&(!((2&(t=B[s>>1]))>>>1|d[s+16|0]<2)|16&t||(g=216192+(e[36439]<<4)|0,e[g+12>>2]=A,8&t&&(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=(h=t<<6)+177888|0)&&(b=B[A+4>>1]|B[A+6>>1]<<16,u=B[A>>1]|B[A+2>>1]<<16,k[t>>1]=u,k[t+2>>1]=u>>>16,k[t+4>>1]=b,k[t+6>>1]=b>>>16,b=B[A+60>>1]|B[A+62>>1]<<16,u=B[A+56>>1]|B[A+58>>1]<<16,k[t+56>>1]=u,k[t+58>>1]=u>>>16,k[t+60>>1]=b,k[t+62>>1]=b>>>16,b=B[A+52>>1]|B[A+54>>1]<<16,u=B[A+48>>1]|B[A+50>>1]<<16,k[t+48>>1]=u,k[t+50>>1]=u>>>16,k[t+52>>1]=b,k[t+54>>1]=b>>>16,b=B[A+44>>1]|B[A+46>>1]<<16,u=B[A+40>>1]|B[A+42>>1]<<16,k[t+40>>1]=u,k[t+42>>1]=u>>>16,k[t+44>>1]=b,k[t+46>>1]=b>>>16,b=B[A+36>>1]|B[A+38>>1]<<16,u=B[A+32>>1]|B[A+34>>1]<<16,k[t+32>>1]=u,k[t+34>>1]=u>>>16,k[t+36>>1]=b,k[t+38>>1]=b>>>16,b=B[A+28>>1]|B[A+30>>1]<<16,u=B[A+24>>1]|B[A+26>>1]<<16,k[t+24>>1]=u,k[t+26>>1]=u>>>16,k[t+28>>1]=b,k[t+30>>1]=b>>>16,b=B[A+20>>1]|B[A+22>>1]<<16,u=B[A+16>>1]|B[A+18>>1]<<16,k[t+16>>1]=u,k[t+18>>1]=u>>>16,k[t+20>>1]=b,k[t+22>>1]=b>>>16,b=B[A+12>>1]|B[A+14>>1]<<16,u=B[A+8>>1]|B[A+10>>1]<<16,k[t+8>>1]=u,k[t+10>>1]=u>>>16,k[t+12>>1]=b,k[t+14>>1]=b>>>16,f[h+177904|0]=0,k[t>>1]=32768|B[t>>1]),k[(h=h+177888|0)+8>>1]=B[s+8>>1],f[h+21|0]=d[s+21|0],k[h+10>>1]=B[s+10>>1],f[h+22|0]=d[s+22|0],k[h+12>>1]=B[s+12>>1],f[h+23|0]=d[s+23|0],k[h+14>>1]=B[s+14>>1],f[h+24|0]=d[s+24|0],f[h+25|0]=d[s+25|0],e[g+12>>2]=t))),(0|gt)!=2|d[ie+11|0]!=2||(Ps(),e[36427]=e[50758]),!((0|(ie=e[l+108>>2]))<2)){for(t=e[36433],b=(O(256-t|0,H)+(t<<8)|0)/256|0,t=e[36432],g=(O(256-t|0,H)+(t<<8)|0)/256|0,u=e[50754],t=0,s=1;h=B[(V=(v+(s<<3)|0)-8|0)+2>>1],h=(0|O((0|O(u,k[V>>1]))/1e3|0,4&h?g:16384&h?b:H))/256|0,e[(s<<2)+l>>2]=h,t=t+h|0,(0|ie)!=(0|(s=s+1|0)););if(!((0|t)<=0|(0|t)>=(0|ct)|(0|ie)<2)){if(s=1,b=1&(h=ie-1|0),(0|ie)!=2)for(g=-2&h,H=0;e[(h=(s<<2)+l|0)>>2]=(0|O(e[h>>2],ct))/(0|t),e[h+4>>2]=(0|O(e[h+4>>2],ct))/(0|t),s=s+2|0,(0|g)!=(0|(H=H+2|0)););b&&(e[(s=(s<<2)+l|0)>>2]=(0|O(e[s>>2],ct))/(0|t))}if(H=0,!((0|ie)<2))for(ie=gt+256|0,s=1;t=e[4+(v+(s<<3)|0)>>2],!(h=e[r+28>>2])|128&d[0|A]||(e[36422]=0,vs(h,ie,0,u=e[r>>2],0,b=(b=e[r+32>>2])?(b<<5)/100|0:32),f[145748]=1,e[r+28>>2]=0),(0|o)<0||(o=64&d[0|A]?6:o,(e[l+108>>2]-1|0)==(0|s)&&(o=(h=o)|(3840&(o=e[36436])?o:0))),h=e[(s<<2)+l>>2],e[36440]=h+e[36440],e[36441]=h+e[36441],h?(b=e[50758],e[36439]=b,(0|o)>=0&&(e[(b=216192+(b<<4)|0)>>2]=w,e[b+12>>2]=t,e[b+8>>2]=A,e[b+4>>2]=h+(o<<16),A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),e[36426]=t,H=h+H|0):e[36426]=0,A=t,(0|(s=s+1|0))<e[l+108>>2];);}!e[36438]|(0|gt)==1||(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}}Y=l+112|0}function Dt(t,A,r,s){var o,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0;Y=o=Y-1856|0,e[o+164>>2]=0,r?T=e[r>>2]:Je(r=o- -64|0,0,96),e[33264]=0,e[o+1824>>2]=0,e[o+1828>>2]=0,e[o+1832>>2]=0,e[o+1836>>2]=0,f[o+1616|0]=0,f[o+992|0]=0,f[o+1200|0]=0,f[o+784|0]=0;e:if(e[t+688>>2]){for(e[o+1840>>2]=A,d[0|(l=A)]==32&&(l=A+1|0,e[o+1840>>2]=l),_=o+416|1,Se=o+1844|1,Xe=o+1848|1,ct=o+1852|1,e[o+1820>>2]=l,Wt(o+168|0,l),l=e[o+1820>>2];(32|d[0|l])!=32;)l=Wt(o+164|0,l)+e[o+1820>>2]|0,e[o+1820>>2]=l,J=J+1|0;qt(o+256|0,A,ze=(0|(g=l-A|0))>=159?159:g),!(ve=4194304&T)|(0|J)!=1?(ie=((0|(l=e[47202]))==36)<<2,(0|J)==1|(0|l)!=36||(l=e[o+1840>>2]-1|0,e[o+1840>>2]=l,f[0|l]=95,ie=0,u=!!(0|LA(t,o+1840|0,o+1616|0,o+1832|0,0,r)),l=e[47202])):(u=1,Wt(o+172|0,l+1|0),BA(e[o+172>>2])&&(0|VA(e[o+164>>2]))==(0|VA(e[o+172>>2]))&&(u=0),ie=(0|(l=e[47202]))==36?4:u,u=0);t:{r:{a:{n:{o:if(16&l)V=15&l,ie=0;else{if(re=1,u||(re=!!(0|LA(t,o+1840|0,o+1616|0,o+1832|0,2,r))),50331648&(l=e[o+1832>>2])&&(g=e[o+1820>>2],d[g+1|0]==46&&(f[g+1|0]=32,l=e[o+1832>>2])),536870912&l){if(!s)break e;Gt(s,e[o+1840>>2]);break e}if(8192&l|!(128&l)|re)s=e[33264];else if(l=e[o+1840>>2],e[o+1820>>2]=l,!((0|(s=e[33264]))<=0))for(u=0;d[0|l]==32&&(f[0|l]=45,u=u+1|0,l=e[o+1820>>2],s=e[33264]),l=l+1|0,e[o+1820>>2]=l,(0|s)>(0|u););c:if(!(s|(0|J)!=1)&&(g=Wt(o+576|0,v=e[o+1840>>2]),d[g+v|0]==32)){u=o+1408|0,s=v;u:{l:{i:{for(;;){p:if(BA(e[o+576>>2])){C:{if(d[(h=s+g|0)+1|0]==46){V=0;m:switch(d[(l=g+2|0)+s|0]-32|0){case 0:break C;case 7:break m;default:break p}if(V=1,g=l,d[h+3|0]==115)break C;break p}if(V=1,(0|b)<=0)break i}if(!((0|g)<=0)){if(H=3&g,w=0,g>>>0<4)l=0;else for(he=-4&g,l=0,h=0;f[0|u]=d[s+l|0],f[u+1|0]=d[(1|l)+s|0],f[u+2|0]=d[(2|l)+s|0],f[u+3|0]=d[(3|l)+s|0],l=l+4|0,u=u+4|0,(0|he)!=(0|(h=h+4|0)););if(H)for(;f[0|u]=d[s+l|0],l=l+1|0,u=u+1|0,(0|H)!=(0|(w=w+1|0)););}if(b=b+1|0,V)s=s+g|0;else if(g=Wt(o+576|0,s=3+(s+g|0)|0),d[s+g|0]==32)continue}break}if(!((0|b)<2)){(g=(g=u-(l=o+1408|0)|0)+(l=qt(v,l,g))|0)>>>0<s>>>0&&Je(g,32,(o+1408|0)+s-(l+u)|0),e[33264]=(b<<1)-2,e[o+1836>>2]=0;break l}}if(!b)break c;if(e[o+1832>>2]=0,e[o+1836>>2]=0,!e[33264])break u}e[o+1832>>2]=128}ie=1}if(d[o+1616|0]==21){Gt(189088,o+1616|0),l=0;break e}if(gt=d[o+1833|0],u=1,!re){if(e[o+168>>2]-48>>>0<10){if(St(t,84174,189088),l=0,d[189088]==21)break e;if(!(!(128&d[t+109|0])|32&d[r+2|0])){f[189088]=21,f[189089]=0;break e}u=!!(0|Ls(t,e[o+1840>>2],o+1616|0,o+1832|0,r,0))}else u=0;if(!(u|(3&T)==2)&&(16777216&(s=e[t+104>>2])||(u=0,!(!(33554432&s)|!(1&T))))&&(16&T||(u=0,!(1&f[r+13|0])))){he=e[o+1840>>2],l=0,b=0,h=0,Y=H=Y-224|0,f[0|(w=o+1616|0)]=0,e[H+216>>2]=0,e[H+220>>2]=0;c:if(!(f[he-2|0]-48>>>0<10|(1&f[0|r]?0:2&d[t+107|0])||(s=d[0|(g=he+1|0)],(!(2561&B[t+106>>1])|!(1&f[r+2|0]))&(0|s)==32))){if((0|(b=d[0|he]))!=32){for(V=32767,s=0;;){if(!(l=Qa(101868,b<<24>>24,8))){b=0;break c}if(v=0,(0|(l=e[(l<<2)-305584>>2]))==(0|s)&&!((0|(v=h+1|0))<=2)){b=0;break c}u:{l:{i:{p:{if(!((0|s)<2)){if((0|s)==10|(0|s)==100)break p;if(!((0|s)>(0|l))){b=0;break c}}if(!s)break l;if((0|s)<(0|l))break i;break l}if((0|s)>=(0|l))break l}if(b=0,(0|Pe)%10|(0|O(s,10))<(0|l))break c;l=l-s|0,V=s;break u}if((0|l)>=(0|V)){b=0;break c}Pe=s+Pe|0}if(b=d[0|g],g=u=g+1|0,s=l,h=v,(0|b)==32)break}s=d[0|u]}else u=g;if((s<<24>>24)-48>>>0<10)b=0;else if((0|(s=l+Pe|0))<e[t+120>>2])b=0;else if((0|s)>e[t+116>>2])b=0;else if(St(t,85600,H+176|0),l=w,4&d[t+107|0]||(l=Gt(w,l=H+176|0)+kt(l)|0),e[H+4>>2]=e[t+140>>2],e[H>>2]=s,lt(H+16|0,85839,H),b=0,d[0|u]!=46){fr(t,he,u,r,1)&&(e[r>>2]=32768|e[r>>2]),g=0;u:if(8&d[t+107|0]){if(h=e[r>>2],e[t+212>>2]==26741){if(32768&h)break u;if(!(16384&h))break c;g=1,h=0;l:{i:switch(d[0|u]-97|0){case 0:case 4:break i;default:break l}i:{p:{C:{m:switch((V=d[u+1|0])-116|0){case 6:break l;case 1:case 2:case 3:case 4:case 5:break p;case 0:break m;default:break C}if(d[u+2|0]!=116)break i;break l}if((0|V)==32)break l}if(!((0|s)%1e3|0)&&(0|V)==108)break l}h=1}if(h)break u;break c}e[r>>2]=32768|h}e[(s=t+8232|0)>>2]=0,e[s+4>>2]=0,Ls(t,H+16|2,l,H+216|0,r,g),b=1,4&d[t+107|0]&&ts(w,H+176|0)}}Y=H+224|0,b?(e[o+1832>>2]=8192|e[o+1832>>2],u=1):u=0}}if(V=re?ie:32&gt?1:ie,ie=0,!(!(1&T)|(0|J)<2)&&_t(e[o+168>>2])){c:{if(1&f[188785]){if(!(!(s=8192&(l=e[o+1832>>2]))|u))break c;ie=s>>>2^2048;break o}if(u)break n;l=e[o+1832>>2]}if(!(128&l|J>>>0>3)&&!((0|(l=e[t+8220>>2]))<4)&&(s=1,(0|l)>=e[t+8216>>2]))break t}}if(w=0,(0|V)<=0)break a;s=V;break t}if((0|(s=V))>0)break t;w=0,v=0,h=0,b=0;break r}if(u)v=0,h=0,b=0;else{s=e[o+1840>>2],e[o+1820>>2]=s,l=999,b=0,v=0,_=0;a:{n:{o:{for(;;){c:{u:{l:{if(l-1>>>0>=2){if((0|J)<2||(Wt(o+1408|0,s),(0|(l=e[o+1408>>2]))<577&e[t+600>>2]>0)||(l=VA(l),(e[l+4>>2]!=e[t+600>>2]?l:0)|e[t+40>>2]==1))break l;l=d[0|s],e[o+1408>>2]=l<<24>>24;i:switch(l-32|0){default:if(!l)break l;break;case 0:case 7:break l;case 1:case 2:case 3:case 4:case 5:case 6:break i}w=Wt(o+1408|0,s),re=9;i:{p:{C:{m:if(-33&(l=e[o+1408>>2])){for(u=0,h=0;;){b:{h:{if((0|l)==39){if((0|v)>0|(0|u)>1)break m;if(h=u?h:39,e[t+40>>2]!=3)break h;break b}h=u?h:l}u=u+1|0}if(!tn(t,l)){if((0|(l=e[o+1408>>2]))!=39&&!_t(l))break l;if(w=Wt(o+1408|0,s+w|0)+w|0,-33&(l=e[o+1408>>2]))continue;break m}break}if((0|u)<=2)break C;re=u}else h=0;if((0|(l=e[t+40>>2]))!=2)break p;Y=l=Y-208|0,f[0|l]=0,u=d[0|(g=s-1|0)],f[0|g]=32,s=Qr(t,s,l,200,0,-2147483648,0),f[0|g]=u,Y=l+208|0,s=!s|(32768&s)>>>15;break i}l=e[t+40>>2],re=u}s=(f[t+168|0]+1|0)<(re-((0|l)==(0|h))|0)}if(!s)break l;s=e[o+1820>>2]}if(d[0|s]!=39)break u;b=67108864,ie=0}if(w=0,tr(t,o+992|0,0,v),s=e[o+1820>>2],(0|(l=d[0|s]))!=32)break c;v=0,h=0;break r}if(ie=0,s=Us(t,s,o+992|0,1&(_|=(0|v)>0))+e[o+1820>>2]|0,e[o+1820>>2]=s,d[o+992|0]==21)break o;for(v=v+1|0,u=0;u=(l=u)+1|0,d[s+l|0]!=32;);b=67108864;continue}break}if(!d[o+992|0]|(0|l)==39||(f[s-1|0]=32,s=e[o+1820>>2]),g=Qr(t,s,o+1616|0,200,o+784|0,T,o+1832|0),(0|(s=d[o+1616|0]))==21){Gt(189088,o+1616|0),l=0;break e}if(!(s|d[o+784|0])&&(Wt(o+1408|0,e[o+1820>>2]),(0|J)==1&&(BA(e[o+1408>>2])||qn(e[o+1408>>2])))){en(t,e[o+1820>>2],o+1616|0,V)&&Gt(189088,o+1616|0),l=0;break e}e[o+172>>2]=f[e[o+1820>>2]-1|0];c:if(1024&g)for(he=o+176|1,V=0,l=1,_=0,v=0;;){if((re=131072&g)|!(1&l)||(f[o+1408|0]=0,!(s=Qr(t,e[o+1820>>2],o+1408|0,200,o+576|0,805306368|T,o+1832|0)))){2048&g&&(e[t+8184>>2]=1),f[e[o+1820>>2]-1|0]=e[o+172>>2];u:{l:{i:{p:if(re){if(f[o+176|0]=0,l=e[o+1820>>2],s=1,h=63&g){if(H=1&g,v=h-1|0,u=0,(0|h)!=1)for(Pe=h-H|0,h=0;w=l,e[o+1820>>2]=l+1,f[0|(ve=(o+176|0)+s|0)]=(0|u)!=(0|v)?d[0|l]:0,l=l+2|0,e[o+1820>>2]=l,f[ve+1|0]=(0|v)!=(1|u)?d[w+1|0]:0,u=u+2|0,s=s+2|0,(0|Pe)!=(0|(h=h+2|0)););H&&(h=l+1|0,e[o+1820>>2]=h,f[(o+176|0)+s|0]=(0|u)!=(0|v)?d[0|l]:0,s=s+1|0,l=h)}f[(o+176|0)+s|0]=0}else{if(l=e[o+1820>>2],!(h=15&g))break i;if(s=0,u=h,w=3&g)for(;l=l+1|0,e[o+1820>>2]=l,(192&d[0|l])==128||(u=u-1|0,(0|w)!=(0|(s=s+1|0))););if(h>>>0<4)break p;for(;;)if(l=l+1|0,e[o+1820>>2]=l,(192&d[0|l])!=128){for(;l=l+1|0,e[o+1820>>2]=l,(192&d[0|l])==128;);for(;l=l+1|0,e[o+1820>>2]=l,(192&d[0|l])==128;);for(;l=l+1|0,e[o+1820>>2]=l,(192&d[0|l])==128;);if(s=(0|u)>4,u=u-4|0,!s)break}}if(s=l-1|0,e[o+172>>2]=f[0|s],f[0|s]=32,s=T|=8388608,!re)break l;if(FA(o+576|0,o+784|0,12),e[o+1852>>2]=he,s=Gt(o+1200|0,l=o+1616|0),LA(t,o+1852|0,l,o+1832|0,0,r)&&Gt(s,o+1616|0),!(32&d[o+1833|0]))break u;f[0|s]=0,en(t,e[o+1852>>2],s,1);break u}s=l-1|0,e[o+172>>2]=f[0|s],f[0|s]=32,s=8388608|T}T=s,ts(o+1200|0,o+784|0)}if(f[o+784|0]=0,h=1,s=LA(t,o+1820|0,o+1616|0,o+1824|0,1024,r),e[o+1832>>2]||(l=e[o+1828>>2],e[o+1832>>2]=e[o+1824>>2],e[o+1836>>2]=l,h=_),s){w=0,v=g;break a}if(w=Qr(t,e[o+1820>>2],o+1616|0,200,o+784|0,8404992&T,o+1832|0),l=1,v=g,_=h,d[o+1616|0]==21){f[e[o+1820>>2]-1|0]=e[o+172>>2],Gt(189088,o+1616|0),l=0;break e}}else l=o+416|0,ce(t,e[o+1820>>2],s,l),w=Qr(t,e[o+1820>>2],o+1616|0,200,o+784|0,268435456|T,o+1832|0),qt(e[o+1820>>2],l,kt(l)),1024&w||(Gt(o+1616|0,o+1408|0),l=Gt(o+784|0,o+576|0),8&d[188788]&&(Or(h=l,l=o+576|0),g=e[47195],e[o+48>>2]=l,ar(g,85205,o+48|0)),w=s),l=0;if(s=(u=1024&w)>>>10|0,V>>>0>48)break c;if(V=V+1|0,g=w,!u)break}else w=g,v=0,_=0,s=0;if(s|!w)break n;for(g=Gt(o+1408|0,o+1616|0),u=ce(t,e[o+1820>>2],w,o+416|0),h=_,l=w;;){c:{if(f[o+1616|0]=0,d[o+1200|0]){if(f[e[o+1820>>2]-1|0]=e[o+172>>2],s=LA(t,o+1840|0,o+1616|0,o+1824|0,u,r),f[e[o+1820>>2]-1|0]=32,d[o+1616|0]==21){t=o+416|0,qt(e[o+1820>>2],t,kt(t)),Gt(189088,o+1616|0),l=0;break e}if(e[o+1832>>2]||(_=e[o+1828>>2],e[o+1832>>2]=e[o+1824>>2],e[o+1836>>2]=_),s){f[o+1200|0]=0;break c}h=e[o+1824>>2]?1:h}if(s=LA(t,o+1820|0,o+1616|0,o+1824|0,u,r),d[o+1616|0]==21){t=o+416|0,qt(e[o+1820>>2],t,kt(t)),Gt(189088,o+1616|0),l=0;break e}if(e[o+1832>>2]||(_=e[o+1828>>2],e[o+1832>>2]=e[o+1824>>2],e[o+1836>>2]=_),!s)if(16384&l)Gt(o+1616|0,g);else{T|=u<<11&8192|l<<9&134217728;u:if(524288&l){if(_=Gt(o+576|0,s=o+784|0),l=Qr(t,e[o+1820>>2],o+1616|0,200,s,T,o+1832|0),ts(s,_),s=0,!l){l=0;break u}if(1024&l)break u;s=1,u=ce(t,e[o+1820>>2],l,0)}else l=0,Qr(t,e[o+1820>>2],o+1616|0,200,0,T,o+1832|0),s=0;if(d[o+1616|0]==21){Gt(189088,o+1616|0),t=o+416|0,qt(e[o+1820>>2],t,kt(t)),f[e[o+1820>>2]-1|0]=e[o+172>>2],l=0;break e}if(s)continue}}break}65536&w||(Vn(t,o+1616|0,200,o+784|0),f[o+784|0]=0),s=o+416|0,qt(e[o+1820>>2],s,kt(s));break a}Gt(189088,t=o+992|0),l=!Zr(1|t,84744,3)<<12;break e}w=0,h=_}f[e[o+1820>>2]-1|0]=e[o+172>>2]}}if(s=e[o+164>>2],e[o+1852>>2]=8026656,e[o+1848>>2]=8022304,e[o+1844>>2]=7566112,4&T){r:{if((l=255&s)&&((0|l)==102||(Se=Xe,qo(s<<24>>24))))break r;Se=ct}Qr(t,Se,189088,200,0,0,0)}for(s=0,l=o+1200|0,_=d[o+784|0];;){r:{a:{n:switch(0|(g=d[0|l])){case 0:break r;case 6:case 7:break n;default:break a}s=g}l=l+1|0;continue}break}r:if(s|h){if(e[t+32>>2]|65536&v){for(u=0,KA(t,o+1616|0,o+1832|0,3,0),l=o+1200|0;;){a:switch(d[0|l]){case 6:u&&(f[0|l]=5),u=1;default:l=l+1|0;continue;case 0:break a}break}e[o+24>>2]=o+1616,e[o+20>>2]=o+1200,e[o+16>>2]=o+992,Ts(189088,200,85233,o+16|0),f[189287]=0,KA(t,189088,o+1832|0,-1,0);break r}e[o+8>>2]=o+1616,e[o+4>>2]=o+1200,e[o>>2]=o+992,Ts(189088,200,85233,o),f[189287]=0,KA(t,189088,o+1832|0,-1,0)}else KA(t,s=o+1616|0,o+1832|0,-1,!!(0|_)<<1),e[o+40>>2]=s,e[o+36>>2]=o+1200,e[o+32>>2]=o+992,Ts(189088,200,85233,o+32|0),f[189287]=0;d[o+784|0]&&(s=kt(189088),f[983+(o-s|0)|0]=0,Gt(s+189088|0,o+784|0)),16&(s=T|ie)&&(e[o+1832>>2]=-268435457&e[o+1832>>2]);r:if(!(128&s)|!(16&d[t+14|0]))if(3072&s){if(ka(t,6),!(2048&s))break r;e[o+1832>>2]=268435456|e[o+1832>>2]}else 16&d[O(e[33264],12)+r|0]&&(1536&(r=e[o+1832>>2])?ka(t,4):2048&r&&ka(t,3));else ka(t,3);8192&w&&(e[t+8192>>2]=2,e[t+8184>>2]=2);r:{if(8&(r=e[o+1836>>2]))e[t+8184>>2]=0,e[t+8188>>2]=3,s=t+8196|0;else if(1&r)e[t+8192>>2]=0,e[t+8184>>2]=2,s=t+8196|0;else if(2&r)e[t+8192>>2]=2,e[t+8184>>2]=0,e[t+8188>>2]=0,s=t+8196|0;else{if(!(4&r))break r;e[t+8184>>2]=0,e[t+8192>>2]=0,e[t+8196>>2]=2,s=t+8188|0}e[s>>2]=0}!d[e[o+1820>>2]]|256&r||((0|(r=e[t+8184>>2]))>0&&(e[t+8184>>2]=r-1),(0|(r=e[t+8192>>2]))>0&&(e[t+8192>>2]=r-1),(0|(r=e[t+8196>>2]))>0&&(e[t+8196>>2]=r-1),(0|(r=e[t+8188>>2]))<=0||(e[t+8188>>2]=r-1)),(0|J)!=1|e[t+212>>2]!=25966||!_t(e[o+168>>2])|e[o+168>>2]==105||(e[o+1832>>2]=16777216|e[o+1832>>2]);r:if(2&d[t+68|0]&&98304&(s=e[o+1832>>2])&&!((0|(r=kt(189088)-1|0))<=0))for(l=0;;){if(t=l+1|0,d[l+189088|0]==6){r=f[0|(t=t+189088|0)];a:{if(65536&s){if((0|q(69))==(0|r)?(J=q(101),f[0|t]=J):J=d[0|t],u=111,(0|q(79))==J<<24>>24)break a;break r}if((0|q(101))==(0|r)?(J=q(69),f[0|t]=J):J=d[0|t],u=79,(0|q(111))!=J<<24>>24)break r}f[0|t]=q(u);break r}if((0|r)==(0|(l=t)))break}t=e[o+1832>>2],qt(A,o+256|0,ze),l=t|b;break e}if(l=0,f[o+1616|0]=0,en(t,e[o+1840>>2],o+1616|0,s)){if(g=Gt(189088,o+1616|0),!ve){if(s=e[o+164>>2],e[o+1408>>2]=8026656,e[o+576>>2]=8022304,e[o+416>>2]=7566112,4&T){A=o+576|1,r=o+1408|1;t:{if((l=255&s)&&((0|l)==102||(_=A,qo(s<<24>>24))))break t;_=r}Qr(t,_,g,200,0,0,0)}l=128&e[o+1832>>2]}}else l=((0|J)>1)<<12}else f[189088]=0;return Y=o+1856|0,l}function Tt(t,A,r,s,o,l,u,g){var h,w,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0,qA=0,or=0,Ir=0,pr=0,zr=0,Ur=0,qr=0,is=0,gs=0,ps=0,fa=0,ga=0,Aa=0,Qn=0,Ai=0,Na=0,ri=0,si=0;Y=h=Y-384|0,w=e[A>>2];e:{t:{r:{a:{if(o){if(d[0|o]!=7)break a;e[A>>2]=(s||1)+w;break r}e[l>>2]=0,e[A>>2]=w+1;break e}bA=86135,Ur=268435456&u,qr=134217728&u,is=8388608&u,gs=16384&u,ps=8192&u,qA=r-1|0,or=s-r|0,fa=2&u,ga=128&u,Aa=u>>>31|0,Qn=-2147483648&u,Ir=h+96|1;a:for(;;)for(e[h+268>>2]=0,J=(T=e[A>>2])+s|0,Xe=-2,Se=-6,r=o,ct=Qn,zt=0,vA=0,ze=1,b=0,gt=0,$t=0;;){_=T,re=b;n:{o:{c:{u:{l:{i:{p:{C:{m:{b:{h:{x:{I:{y:{z:{L:{for(;he=r,r=r+1|0,!((v=d[0|he])>>>0>9);){V=r;U:switch(0|v){case 0:if(!(r=pr)){pr=0,r=86135;break z}for(;;){v=1;B:{M:switch(0|(b=d[0|r])){case 0:case 3:break L;case 5:break M;default:break B}v=2}r=(r+v|0)+(((0|b)==9)<<1)|0}case 1:if($t=1,!Aa)continue;break l;case 2:$t=2;continue;case 4:pr=r;continue;case 5:r=he+2|0,b=e[t+320>>2];B:{if((T=d[he+1|0])>>>0>=32){if(!(b>>>T-32&1))break B;break l}if(!(b>>>T&1))break l}ze=ze+1|0;continue;case 9:r=he+3|0;continue;case 8:$t=1,vA=1,ct=0;break;case 3:break y;default:break U}}V=0,b=re,T=_;U:switch(0|$t){case 0:B:{M:{if((0|(b=d[0|J]))!=(0|v)){if((0|b)!=69)break l;if((0|v)==101)break M;break l}if(V=0,(192&v)==128)break B}V=21}J=J+1|0,zt=zt+1|0;break n;case 1:break I;case 2:break U;default:break b}if(e[h+264>>2]=e[h+268>>2],!d[J-1|0])break l;Se=(0|(b=Se+6|0))>=19?19:b,Pe=J+1|0,ve=Wt(h+268|0,J),ie=d[0|J],V=20,b=re;U:{B:switch(v-11|0){case 6:r=he+2|0,b=e[h+268>>2],T=f[he+1|0];M:if(v=e[604+(((T=((0|T)<65?191:-65)+T|0)<<2)+t|0)>>2])b=!!(0|Hr(v,b));else{if((0|T)>7)break l;Q:{if((0|(v=e[t+600>>2]))>0){if((b=b-v|0)-1>>>0<255)break Q;break l}if((v=b-192|0)>>>0<=413){b=d[344+(d[v+94240|0]+t|0)|0]&1<<T;break M}if(b>>>0>255)break l}b=d[344+(t+b|0)|0]&1<<T}if(!b)break l;J=J+ve|0,V=((0|T)==2?19:20)-Se|0;break n;case 7:if(r=he+2|0,b=f[he+1|0],!(b=e[4788+((((0|b)<65?191:-65)+b<<2)+t|0)>>2]))break l;M:for(;;){if((0|(V=d[0|b]))==7)break l;if((0|V)==126){V=20-Se|0;break n}Q:if(ie){if(H=J,v=b,(0|V)==(0|ie))for(;;){if((0|(V=d[0|(v=v+1|0)]))!=(0|(b=d[0|(H=H+1|0)])))break Q;if(!b)break}}else v=b,H=J;if(V){for(;;)if(T=d[0|v],v=b=v+1|0,!T)continue M}break}if((0|(b=H-J|0))<0)break l;J=b+J|0,V=20-Se|0;break n;case 14:v=e[h+268>>2];M:{Q:if(b=e[t+604>>2])b=!!(0|Hr(b,v));else{S:{if((0|(b=e[t+600>>2]))>0){if((H=v-b|0)-1>>>0<255)break S;break M}if((b=v-192|0)>>>0<=413){b=1&f[344+(d[b+94240|0]+t|0)|0];break Q}if(H=v,v>>>0>255)break o}b=1&f[344+(t+H|0)|0]}if(b)break l;v=e[h+268>>2]}if(!qr)break o;if((0|v)==32)break l;break o;case 4:if((b=e[h+268>>2])-48>>>0<10|b-2406>>>0<10)break o;if(!d[t+170|0])break l;V=20-Se|0;break n;case 5:if(Di(e[h+268>>2]))break l;break c;case 0:if(e[h+268>>2]==e[h+264>>2])break c;break l;case 17:r=he+2|0,b=32768,V=0;M:{Q:switch((v=d[he+1|0])-1|0){case 0:break b;case 1:break Q;default:break M}if(V=1,b=re,!is)break b;break l}if((0|(b=240&v))==16){if(V=23,b=re,g>>>(15&v)&16384)break b;break l}if((0|v)!=3&(0|b)!=32||(qt(b=h+96|0,qA,T=1+(e[A>>2]+(zt+or|0)|0)|0),f[0|(b=b+T|0)]=32,f[b+1|0]=0,e[33265]=0,e[33266]=0,e[h+16>>2]=Ir,LA(t,h+16|0,h+272|0,133060,0,0),V=23,!((0|v)!=3|(0|(H=e[33265]))>=0|16384&e[33266])))break n;if(b=re,T=_,H>>>(15&v)&16384)break b;break l;case 34:M:{if(b=ie-32|0){if((0|b)==13)break M;break l}if(!gs)break l}H=22-Se|0;break u;case 10:if(b=1,d[0|r]==21)break U;break i;case 18:if((0|(H=e[h+268>>2]))!=32)for(v=J+ve|0;;){M:{Q:if(b=e[t+632>>2])b=!!(0|Hr(b,H));else{S:{if((0|(b=e[t+600>>2]))>0){if((H=H-b|0)-1>>>0<255)break S;break M}if((b=H-192|0)>>>0<=413){b=128&d[344+(d[b+94240|0]+t|0)|0];break Q}if(H>>>0>255)break M}b=128&d[344+(t+H|0)|0]}if(b)break l}if(v=Wt(h+268|0,v)+v|0,(0|(H=e[h+268>>2]))==32)break}H=19-Se|0;break u;case 49:break p;case 2:break C;case 3:break m;case 1:break b;case 13:break h;case 12:break B;default:break x}Wt(h+272|0,r),ve=-1;B:if((0|(b=e[h+272>>2]))!=(0|(v=e[h+268>>2])))if(-33&v)for(;;){ie=J,ve=-1;M:if((0|b)==18&&(b=f[he+2|0],V=e[4788+((((0|b)<65?191:-65)+b<<2)+t|0)>>2])){for(;;){if((0|(T=d[0|V]))==7)break M;if((0|T)==126){ve=0;break M}Q:if((0|(J=d[0|ie]))==(0|T)){if(b=ie,v=V,J)for(;;){if((0|(T=d[0|(v=v+1|0)]))!=(0|(V=d[0|(b=b+1|0)])))break Q;if(!V)break}}else v=V,b=ie;if(!T){b=b-ie|0;break}for(;b=d[0|v],v=V=v+1|0,b;);}ve=b}if(T=Wt(h+268|0,ie),(0|(b=e[h+272>>2]))==(0|(v=e[h+268>>2]))|!(-33&v))break B;if(J=T+ie|0,(0|ve)!=-1)break}else ie=J;else ie=J;J=(0|b)==(0|v)||(0|ve)>=0?ie:Pe,V=0;break n}for(;b=b+1|0,d[0|(r=r+1|0)]==21;);break i}r=r+1|0}V=he}if(!(d[_-1|0]!=32&vA|ct||((0|(v=vA?ze+4|0:ze))>=(0|OA)&&(Ai=gt,Na=re,OA=v,ri=zt,bA=r),!(8&e[47197])|Ur|(0|v)<=0))){for(Or(r,he=h+272|0),Pe=e[47195],T=h+16|0,r=0,ie=0,ct=0,gt=0,Y=J=Y-496|0,f[J+80|0]=0,(0|s)>0?(qt(J+288|0,w,s),re=s):re=0,f[re+(b=J+288|0)|0]=0,_=kt(b)+b|0,ve=(0|u)<0;;){if(H=d[0|o],re=o,o=o+1|0,H>>>0>9)for(;;){y:{z:{L:{U:{B:{M:switch((b=255&H)-14|0){case 4:break L;case 3:break U;case 0:break B;case 14:break M;default:break z}if(re=re+2|0,H=32,!ve&(0|(o=d[0|o]))==1)break y;f[0|_]=36,Gt(b=_+1|0,o=G(128960,o)),_=kt(o)+b|0;break y}b=d[re+2|0],H=d[0|o],e[J+36>>2]=127&d[re+3|0],e[J+32>>2]=4&b?80:83,lt(J+48|0,85131,J+32|0),1&b&&(o=kt(o=J+48|0)+o|0,f[0|o]=101,f[o+1|0]=0),2&(o=127&b)&&(b=kt(b=J+48|0)+b|0,f[0|b]=105,f[b+1|0]=0),4&o&&(b=kt(b=J+48|0)+b|0,f[0|b]=112,f[b+1|0]=0),8&o&&(b=kt(b=J+48|0)+b|0,f[0|b]=118,f[b+1|0]=0),16&o&&(b=kt(b=J+48|0)+b|0,f[0|b]=100,f[b+1|0]=0),32&o&&(b=kt(b=J+48|0)+b|0,f[0|b]=102,f[b+1|0]=0),o>>>0>=64&&(o=kt(o=J+48|0)+o|0,f[0|o]=113,f[o+1|0]=0),1&H&&(o=kt(o=J+48|0)+o|0,f[0|o]=116,f[o+1|0]=0),re=re+4|0,_=Gt(_,o=J+48|0)+kt(o)|0,H=32;break y}re=re+2|0,H=d[f[0|o]+93871|0];break y}o=f[0|o],f[0|_]=76,b=((o=o+((0|o)<65?191:-65)|0)>>>0)/10|0,f[_+1|0]=b+48,H=o-O(b,10)|48,(0|gt)==1&&(f[0|_]=H,H=76),re=re+2|0,_=_+2|0;break y}H=b>>>0<=31?d[b+93904|0]:(0|b)==32?95:H,re=o}if(f[0|_]=H,o=re+1|0,_=_+1|0,!((H=d[0|re])>>>0>=10))break}b=1;y:switch(0|H){case 1:b=r;case 8:f[0|_]=0,_=J+80|0,r=b,gt=1;continue;case 2:f[0|_]=0,re=kt(b=J+288|0)+b|0,_=d[84899]|d[84900]<<8,f[0|re]=_,f[re+1|0]=_>>>8,gt=2,f[re+2|0]=d[84901],_=kt(b)+b|0;continue;case 5:ie=f[0|o],o=re+2|0;continue;case 9:ct=(d[0|o]+O(d[re+2|0],255)|0)-256|0,o=re+3|0;continue;case 0:case 3:break y;default:continue}break}if(f[0|_]=0,_=T,(0|ct)>0&&(e[J+16>>2]=ct,lt(T,85581,J+16|0),_=T+7|0),(0|ie)>0&&(e[J>>2]=ie,lt(_,85694,J),_=kt(_)+_|0),1&((0|(o=kt(J+80|0)))>0|r)){1&r&&(f[0|_]=95,_=_+1|0);y:if(!((0|(re=o-1|0))<0|_>>>0>=T>>>0))for(;;){if(f[0|_]=d[(J+80|0)+re|0],_=_+1|0,(0|re)<=0)break y;if(re=re-1|0,!(_>>>0<T>>>0))break}f[0|_]=41,f[_+1|0]=32,_=_+2|0}f[0|_]=0,f[(r=J+288|0)+((T+3|0)-_|0)|0]=0,ts(_,r),(0|(r=kt(T)))<=7&&(Je(r+T|0,32,8-r|0),r=8),f[r+T|0]=0,Y=J+496|0,e[h+4>>2]=T,e[h>>2]=(0|s)>1?v+35|0:v,e[h+8>>2]=he,ar(Pe,89088,h)}r=V;break l}if(!d[0|_])break l;Xe=(0|(b=Xe+2|0))>=19?19:b,Wt(h+264|0,_),b=Pr(h+268|0,T=_-1|0),ie=d[0|T],Pe=T;I:{y:{z:{L:{U:{B:switch(v-10|0){case 13:if(b=(0|(Rt=d[0|r]))==(0|(v=d[0|_])),ve=-1,(0|v)==32|(0|v)==(0|Rt))break L;if(v)break U;break z;case 7:r=he+2|0,V=e[h+268>>2],_=f[he+1|0];M:if(v=e[604+(((_=((0|_)<65?191:-65)+_|0)<<2)+t|0)>>2])v=!!(0|Hr(v,V));else{if((0|_)>7)break l;Q:{if((0|(v=e[t+600>>2]))>0){if((V=V-v|0)-1>>>0<255)break Q;break l}if((v=V-192|0)>>>0<=413){v=d[344+(d[v+94240|0]+t|0)|0]&1<<_;break M}if(V>>>0>255)break l}v=d[344+(t+V|0)|0]&1<<_}if(!v)break l;T=1+(T-b|0)|0,V=((0|_)==2?19:20)-Xe|0;break I;case 8:if(r=he+2|0,b=f[he+1|0],!(b=e[4788+((((0|b)<65?191:-65)+b<<2)+t|0)>>2]))break l;M:{for(;;){if((0|(ie=d[0|b]))==7)break l;if((0|ie)==126){ve=0;break M}v=T;Q:{S:{if((0|(he=(ve=kt(b))-1|0))>0)for(v=_-ve|0,V=0,H=T;;){if(!d[0|(H=H-1|0)])break S;if((0|he)==(0|(V=V+1|0)))break}te:if(!((0|(V=d[0|v]))!=(0|ie)|!V))for(;;){if((0|(ie=d[0|(b=b+1|0)]))!=(0|(V=d[0|(v=v+1|0)])))break te;if(!V)break}if(!ie)break Q}for(v=b;V=d[0|v],v=b=v+1|0,V;);continue}break}if((0|ve)<0)break l}V=20-Se|0,T=1+(T-ve|0)|0;break I;case 15:v=e[h+268>>2];M:{Q:if(_=e[t+604>>2])_=!!(0|Hr(_,v));else{S:{if((0|(_=e[t+600>>2]))>0){if((v=v-_|0)-1>>>0<255)break S;break M}if((_=v-192|0)>>>0<=413){_=1&f[344+(d[_+94240|0]+t|0)|0];break Q}if(v>>>0>255)break M}_=1&f[344+(t+v|0)|0]}if(_)break l}V=20-Xe|0,T=1+(T-b|0)|0;break I;case 1:if(e[h+268>>2]!=e[h+264>>2])break l;V=21-Xe|0,T=1+(T-b|0)|0;break I;case 5:if(!((_=e[h+268>>2])-48>>>0<10|_-2406>>>0<10))break l;V=21-Xe|0,T=1+(T-b|0)|0;break I;case 6:if(Di(e[h+268>>2]))break l;V=21-Se|0,T=1+(T-b|0)|0;break I;case 18:if(r=he+2|0,!((0|(v=d[he+1|0]))==3|(240&v)==32)||(qt(b=h+96|0,qA,T=1+(e[A>>2]+(zt+or|0)|0)|0),f[0|(b=b+T|0)]=32,f[b+1|0]=0,e[33265]=0,e[33266]=0,e[h+16>>2]=Ir,LA(t,h+16|0,h+272|0,133060,0,0),V=23,!((0|v)!=3|(0|(H=e[33265]))>=0|16384&e[33266])))break n;if(b=re,T=_,H>>>(15&v)&16384)break b;break l;case 11:if(v=1,d[0|r]==21)for(;v=v+1|0,d[0|(r=r+1|0)]==21;);if(e[t+8208>>2]<(0|v))break l;V=18+(v-Xe|0)|0;break I;case 0:if(V=19,b=re,T=_,e[t+8212>>2]>0)break b;break l;case 19:if(V=3,(0|(H=e[h+268>>2]))==32)break I;for(v=1+(T-b|0)|0;;){M:{Q:if(b=e[t+632>>2])b=!!(0|Hr(b,H));else{S:{if((0|(b=e[t+600>>2]))>0){if((H=H-b|0)-1>>>0<255)break S;break M}if((b=H-192|0)>>>0<=413){b=128&d[344+(d[b+94240|0]+t|0)|0];break Q}if(H>>>0>255)break M}b=128&d[344+(t+H|0)|0]}if(b)break l}if(v=v-Pr(h+268|0,v-1|0)|0,(0|(H=e[h+268>>2]))==32)break}break I;case 16:if(V=1,b=re,T=_,e[t+8184>>2])break b;break l;case 9:if(V=1,b=re,T=_,fa)break b;break l;case 36:for(;;){if(V=50,b=re,!(_=(255&ie)-32|0))break l;if((0|_)==14)break b;ie=d[0|(Pe=Pe-1|0)]}case 35:break B;default:break y}B:{if(b=ie-32|0){if((0|b)==13)break B;break l}if(!ga)break l}V=22-Se|0;break I}U:{for(;;){ve=-1,H=_,_=_-1|0;B:if((0|Rt)==18&&(b=f[he+2|0],V=e[4788+((((0|b)<65?191:-65)+b<<2)+t|0)>>2]))for(si=H+1|0;;){if((0|(Pe=d[0|V]))==7){ve=-1;break B}if((0|Pe)==126){ve=0;break B}v=H;M:{if((0|(zr=(ve=kt(V))-1|0))>0)for(v=si-ve|0,ie=0,b=H;;){if(!d[0|(b=b-1|0)])break M;if((0|zr)==(0|(ie=ie+1|0)))break}Q:if(!((0|(b=d[0|v]))!=(0|Pe)|!b))for(;;){if((0|(Pe=d[0|(V=V+1|0)]))!=(0|(b=d[0|(v=v+1|0)])))break Q;if(!b)break}if(!Pe)break B}for(v=V;b=d[0|v],v=V=v+1|0,b;);}if(b=(0|(v=d[0|_]))==(0|Rt),(0|v)==32|(0|v)==(0|Rt))break U;if(!v){_=H;break z}if((0|ve)!=-1)break}_=H;break z}_=H}T=b?_:T}V=0,T=(0|ve)<0?T:_+1|0;break I}if((0|v)!=(0|ie))break l;V=4,(0|v)!=32&&(V=(192&v)!=128?21-Xe|0:0)}b=re;break b}if((0|v)!=(0|ie))break l;H=(192&v)!=128?21-Se|0:0;break u}if(V=1,ps)break l}ze=V+ze|0;continue}if(b=f[he+1|0],re=d[he+3|0],T=d[he+2|0],1&!(e[t+8208>>2]|4&T)&f[t+84|0])break l;r=he+4|0,H=0,re=127&re|(127&T)<<8|b<<16;break u}C:if(!(Pe>>>0<=(v=e[A>>2]+s|0)>>>0)){for(;;){if(d[0|v]!=101){if(b=v>>>0<J>>>0,v=v+1|0,b)continue;break C}break}H=0,gt=v;break u}H=0;break u}V=-20;break n}if(ie=0,(0|(v=e[h+268>>2]))!=32)for(H=J+ve|0,V=0;;){if(!V){i:{p:if(T=e[t+632>>2])v=!!(0|Hr(T,v));else{C:{if((0|(T=e[t+600>>2]))>0){if((v=v-T|0)-1>>>0<255)break C;break i}if((T=v-192|0)>>>0<=413){v=128&d[344+(d[T+94240|0]+t|0)|0];break p}if(v>>>0>255)break i}v=128&d[344+(t+v|0)|0]}v&&(ie=ie+1|0)}v=e[h+268>>2]}i:if(T=e[t+632>>2])V=!!(0|Hr(T,v));else{p:{if((0|(T=e[t+600>>2]))>0){if(V=0,(v=v-T|0)-1>>>0<255)break p;break i}if((T=v-192|0)>>>0<=413){V=128&d[344+(d[T+94240|0]+t|0)|0];break i}if(V=0,v>>>0>255)break i}V=128&d[344+(t+v|0)|0]}if(H=Wt(h+268|0,H)+H|0,(0|(v=e[h+268>>2]))==32)break}if(!((0|b)>(0|ie))){H=18+(b-Se|0)|0;break u}}for(;b=d[0|r],r=o=r+1|0,b;);if(d[0|o]!=7)continue a;if(t=s+ri|0,e[A>>2]=e[A>>2]+(t||1),OA)break t;break r}b=re,J=Pe,T=_,ze=H+ze|0;continue}J=J+ve|0,V=21-Se|0;break n}J=J+ve|0,V=20-Se|0}b=re,T=_,ze=V+ze|0}}bA=86135}e[l+12>>2]=Ai,e[l+8>>2]=Na,e[l+4>>2]=bA,e[l>>2]=OA}Y=h+384|0}function aA(t,A){var r,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0;Y=r=Y-1168|0,e[r+928>>2]=0,e[r+932>>2]=0,e[r+920>>2]=0,e[r+924>>2]=0,e[r+912>>2]=0,e[r+916>>2]=0,e[r+904>>2]=0,e[r+908>>2]=0,e[r+896>>2]=0,e[r+900>>2]=0;e:{t:{if(t){if(d[0|t]|8&A)break t;break e}if(!(8&A))break e}if(FA(r+1088|0,t,40),16&A){if((0|Vs(Gt(r+704|0,t)))<=0)break e;H=8&A}else(H=8&A)|d[r+1088|0]||(k[r+1088>>1]=d[85055]|d[85056]<<8,f[r+1090|0]=d[85057]),e[r+496>>2]=137584,e[r+500>>2]=47,e[r+504>>2]=47,lt(s=r+512|0,85286,r+496|0),e[r+484>>2]=r+1088,e[r+480>>2]=s,lt(s=r+704|0,85425,r+480|0),(0|Vs(s))>0||(e[r+468>>2]=47,e[r+472>>2]=47,e[r+464>>2]=137584,lt(s=r+512|0,85648,r+464|0),e[r+452>>2]=r+1088,e[r+448>>2]=s,lt(r+704|0,85425,r+448|0));if(o=H?86012:85055,!(J=Is(r+704|0,85712))){if(s=0,3&A)break e;o=(0|qs(s=r+1088|0))<0?o:s}if((V=2&A)||(s=e[47192])&&(io(s),e[47192]=0),he=Gt(r+992|0,o),ie=Gt(r+944|0,o),V?((s=ta(200992,43))&&(f[0|s]=0),e[r+432>>2]=t+3,lt(t=r+704|0,86030,r+432|0),ts(200992,t)):(e[32972]=199592,FA(200992,t,40),f[201088]=0,f[201040]=0,e[50299]=200992,e[50298]=201088,e[50297]=201040),yt(V),J){for(Pe=e[30450],Se=r+548|0,ze=r+544|0,Xe=r+540|0,ct=r+536|0,gt=r+532|0,zt=r+528|0,Rt=12|(t=r+512|0),$t=8|t,bA=4|t;cA(r+704|0,190,J);){t=r+704|0;t:{if(d[r+704|0]!=35){r:if(!((0|(t=kt(r+704|0)-1|0))<=0))for(;;){if(!((0|(o=f[0|(s=(r+704|0)+t|0)]))==32|o-9>>>0<5))break r;if(f[0|s]=0,!((0|(t=t-1|0))>0))break}if(!(t=Ot(r+704|0)))break t}f[0|t]=0}t=r+704|0;t:if(s=d[r+704|0])for(;;){if((0|(s=s<<24>>24))==32|s-9>>>0<5)break t;if(!(s=d[0|(t=t+1|0)]))break}if(f[0|t]=0,d[r+704|0])if(t=t+1|0,s=ss(129744,r+704|0)){l=0,Y=o=Y-416|0;t:if(u=e[47192]){r:switch(s-19|0){case 16:if(e[o+32>>2]=o+412,(0|jt(t,84249,o+32|0))!=1)break t;e[u+324>>2]=e[o+412>>2];break t;case 8:ki(t,u+320|0,27);break t;case 2:if(e[o+48>>2]=188784,jt(t,84249,o+48|0),!(t=d[188784]))break t;e[u+152>>2]=t;break t;case 11:if(d[0|t]){for(g=e[30450];;)if(s=t,t=t+1|0,!((0|(l=f[0|s]))==32|l-9>>>0<5)){for(l=la(s),e[o+412>>2]=l,(0|l)>0&&(l>>>0<=31?e[u+104>>2]=e[u+104>>2]|1<<l:l>>>0<=63?e[u+108>>2]=e[u+108>>2]|1<<l-32:(e[o+64>>2]=l,ar(g,84700,o- -64|0)),s=t);s=(t=s)+1|0,(l=f[0|t])-48>>>0<10|(32|l)-97>>>0<26;);if(!l)break}}8&(t=e[u+104>>2])&&(e[u+124>>2]=46,e[u+128>>2]=44),4&t&&(e[u+124>>2]=0);break t;default:if((65280&s)!=256)break t;e[o+16>>2]=24+(u+((255&s)<<2)|0),jt(t,84249,o+16|0);break t;case 1:e[o+144>>2]=u,e[o+148>>2]=u+4,jt(t,85642,o+144|0);break t;case 3:if(s=0,Je(l=o+160|0,0,240),e[o+132>>2]=o+360,e[o+128>>2]=o+320,e[o+124>>2]=o+280,e[o+120>>2]=o+240,e[o+116>>2]=o+200,e[o+112>>2]=l,l=jt(t,85037,o+112|0),e[o+412>>2]=l,e[u+152>>2]=0,(0|l)<=0)break t;for(b=e[30450];;){a:if(sr(g=(o+160|0)+O(s,40)|0,85301)){n:{if((0|(w=e[34454]))>0)for(_=e[34455],t=0;;){if(!sr(g,_+O(t,68)|0))break n;if((0|w)==(0|(t=t+1|0)))break}e[o+96>>2]=g,ar(b,85562,o+96|0),l=e[o+412>>2];break a}f[156+(s+u|0)|0]=t}if(!((0|l)>(0|(s=s+1|0))))break}break t;case 9:e[o+88>>2]=u+20,e[o+84>>2]=u+16,e[o+80>>2]=u+8,jt(t,84778,o+80|0);break t;case 10:ki(t,u+12|0,29);break t;case 5:if((0|(b=Cn(t,o+160|0)))<=0)break t;if(s=0,t=0,b>>>0>=4)for(_=-4&b,g=u+304|0;w=o+160|0,k[g+(t<<1)>>1]=e[w+(t<<2)>>2],k[g+((h=1|t)<<1)>>1]=e[w+(h<<2)>>2],k[g+((h=2|t)<<1)>>1]=e[w+(h<<2)>>2],k[g+((h=3|t)<<1)>>1]=e[w+(h<<2)>>2],t=t+4|0,(0|_)!=(0|(l=l+4|0)););if(!(l=3&b))break t;for(;k[304+(u+(t<<1)|0)>>1]=e[(o+160|0)+(t<<2)>>2],t=t+1|0,(0|l)!=(0|(s=s+1|0)););break t;case 6:if((0|(b=Cn(t,o+160|0)))<=0)break t;if(s=0,t=0,b>>>0>=4)for(_=-4&b,g=u+296|0;w=o+160|0,f[t+g|0]=e[w+(t<<2)>>2],f[(h=1|t)+g|0]=e[w+(h<<2)>>2],f[(h=2|t)+g|0]=e[w+(h<<2)>>2],f[(h=3|t)+g|0]=e[w+(h<<2)>>2],t=t+4|0,(0|_)!=(0|(l=l+4|0)););if(!(l=3&b))break t;for(;f[296+(t+u|0)|0]=e[(o+160|0)+(t<<2)>>2],t=t+1|0,(0|l)!=(0|(s=s+1|0)););break t;case 7:if((0|(b=Cn(t,o+160|0)))<=0)break t;if(s=0,t=0,b>>>0>=4)for(_=-4&b,g=u+304|0;h=w=g+(t<<1)|0,v=B[w>>1],w=o+160|0,k[h>>1]=v+B[w+(t<<2)>>1],k[(v=g+((h=1|t)<<1)|0)>>1]=B[v>>1]+B[w+(h<<2)>>1],k[(v=g+((h=2|t)<<1)|0)>>1]=B[v>>1]+B[w+(h<<2)>>1],k[(v=g+((h=3|t)<<1)|0)>>1]=B[v>>1]+B[w+(h<<2)>>1],t=t+4|0,(0|_)!=(0|(l=l+4|0)););if(!(l=3&b))break t;for(;k[(g=u+(t<<1)|0)+304>>1]=B[g+304>>1]+B[(o+160|0)+(t<<2)>>1],t=t+1|0,(0|l)!=(0|(s=s+1|0)););break t;case 4:f[u+169|0]=1;break t;case 0:break r}f[u+208|0]=1}else e[o>>2]=G(129568,s),ar(e[30450],89101,o);Y=o+416|0}else{t:switch(ss(131904,r+704|0)-1|0){case 1:if(V||(f[r+1040|0]=0,e[r+512>>2]=5,e[r+32>>2]=r+1040,e[r+36>>2]=r+512,jt(t,86237,r+32|0),e[r+1040>>2]==1769103734&e[r+1044>>2]==7630433))continue;if((t=kt(r+1040|0)+2|0)>>>0<99-re>>>0&&(f[0|(s=re+201088|0)]=e[r+512>>2],Gt(s+1|0,r+1040|0),re=t+re|0),!vA){if(t=0,(s=g=r+1040|0)||(s=e[57150])){if(t=86875,e[(o=Y-32|0)+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+8>>2]=0,e[o+12>>2]=0,e[o>>2]=0,e[o+4>>2]=0,u=0,l=d[86875])if(d[86876]){for(;e[(u=o+(l>>>3&28)|0)>>2]=e[u>>2]|1<<l,l=d[t+1|0],t=t+1|0,l;);r:if(l=d[0|(t=s)])for(;;){if(!(e[o+(l>>>3&28)>>2]>>>l&1))break r;if(l=d[t+1|0],t=t+1|0,!l)break}u=t-s|0}else{for(t=s;o=t,t=t+1|0,d[0|o]==(0|l););u=o-s|0}if(d[0|(t=u+s|0)]){s=86875,Y=l=Y-32|0,o=f[86875];r:if(d[86876]&&o){if(Je(l,0,32),o=d[86875])for(;e[(u=l+(o>>>3&28)|0)>>2]=e[u>>2]|1<<o,o=d[s+1|0],s=s+1|0,o;);if(s=t,o=d[0|t])for(;;){if(e[l+(o>>>3&28)>>2]>>>o&1)break r;if(o=d[s+1|0],s=s+1|0,!o)break}}else s=Wn(t,o);Y=l+32|0,d[0|(s=(s-t|0)+t|0)]?(e[57150]=s+1,f[0|s]=0):e[57150]=0}else e[57150]=0,t=0}s=Gt(he,t),Gt(ie,t),qs(Gt(r+896|0,t)),e[47192]=Lt(s),FA(e[32972]+40|0,g,20)}vA=1;continue;case 0:if(V)continue;for(;s=t,t=t+1|0,(0|(o=f[0|s]))==32|o-9>>>0<5;);FA(201040,s,40);continue;case 2:e[r+1152>>2]=0,s=r+512|0,e[r+48>>2]=s,e[r+52>>2]=r+1152,jt(t,86237,r+48|0),f[201200]=ss(132112,s),f[201201]=e[r+1152>>2];continue;case 4:e[r+64>>2]=ie,jt(t,86939,r- -64|0);continue;case 3:e[r+80>>2]=r+896,jt(t,86939,r+80|0);continue;case 8:if(e[r+1152>>2]=100,e[r+1164>>2]=100,e[r+1148>>2]=100,e[r+112>>2]=r+1144,e[r+1144>>2]=0,e[r+96>>2]=r+512,e[r+100>>2]=r+1152,e[r+104>>2]=r+1164,e[r+108>>2]=r+1148,(0|jt(t,91156,r+96|0))<2||(t=e[r+512>>2])>>>0>8||((0|(s=e[r+1152>>2]))>=0&&(o=e[32972]+(t<<1)|0,s=ee(T=2.56001*+(0|s))<2147483648?~~T:-2147483648,k[o+236>>1]=s,k[o+164>>1]=s),(0|(s=e[r+1164>>2]))>=0&&(o=e[32972]+(t<<1)|0,s=ee(T=2.56001*+(0|s))<2147483648?~~T:-2147483648,k[o+254>>1]=s,k[o+182>>1]=s),(0|(o=e[r+1148>>2]))<0?s=e[32972]:(g=(s=e[32972])+(t<<1)|0,o=ee(T=2.56001*+(0|o))<2147483648?~~T:-2147483648,k[g+200>>1]=o),k[218+((t<<1)+s|0)>>1]=e[r+1144>>2],t))continue;k[s+200>>1]=(0|O(k[s+200>>1],105))/100;continue;case 9:if(e[r+132>>2]=r+696,e[r+128>>2]=r+700,(0|jt(t,87106,r+128|0))!=2)continue;if(t=e[32972],s=e[r+700>>2],e[t+64>>2]=(s<<12)-36864,e[t+68>>2]=O(e[r+696>>2]-s|0,108),ee(T=256*(+(s-82|0)/82*.25+1))<2147483648){e[t+116>>2]=~~T;continue}e[t+116>>2]=-2147483648;continue;case 35:OA||qs(r+896|0),e[r+1164>>2]=0,f[r+1156|0]=d[91267],e[r+1152>>2]=d[91263]|d[91264]<<8|d[91265]<<16|d[91266]<<24,e[r+144>>2]=r+1164,e[r+148>>2]=r+512,e[r+152>>2]=r+1152,(0|jt(t,91302,r+144|0))<2|e[49848]>59||(t=Xn(r+512|0))&&(f[O(e[49848],3)+199408|0]=t,t=Xn(r+1152|0),s=e[49848],o=O(s,3)+199408|0,f[o+1|0]=t,e[49848]=s+1,f[o+2|0]=e[r+1164>>2]),OA=1;continue;case 10:e[r+1140>>2]=0,s=e[32972],e[s+100>>2]=0,e[r+164>>2]=s+100,e[r+160>>2]=s+96,jt(t,87106,r+160|0);continue;case 11:if(e[r+176>>2]=r+1140,(0|jt(t,87268,r+176|0))!=1)continue;e[e[32972]+88>>2]=e[r+1140>>2]<<5;continue;case 12:if(e[r+192>>2]=r+1140,(0|jt(t,87268,r+192|0))!=1)continue;e[e[32972]+92>>2]=e[r+1140>>2];continue;case 13:if(e[r+208>>2]=r+1140,(0|jt(t,87268,r+208|0))!=1)continue;s=e[32972],(0|(t=e[r+1140>>2]))>=5&&(e[s+108>>2]=1,e[r+1140>>2]=4,t=4),e[s+104>>2]=t+1;continue;case 14:for(e[r+552>>2]=-1,e[r+556>>2]=-1,e[r+544>>2]=-1,e[r+548>>2]=-1,e[r+536>>2]=-1,e[r+540>>2]=-1,e[r+528>>2]=-1,e[r+532>>2]=-1,e[r+240>>2]=zt,e[r+244>>2]=gt,e[r+248>>2]=ct,e[r+252>>2]=Xe,e[r+256>>2]=ze,e[r+260>>2]=Se,e[r+520>>2]=-1,e[r+524>>2]=-1,e[r+512>>2]=-1,e[r+516>>2]=-1,e[r+228>>2]=bA,e[r+232>>2]=$t,e[r+236>>2]=Rt,e[r+224>>2]=r+512,jt(t,84222,r+224|0),_=e[32972],t=0,l=e[r+516>>2],o=0;;){if(s=o,u=l,g=t,(0|(o=e[(l=(t<<=2)+(r+512|0)|0)>>2]))==-1&&(o=8e3,e[l>>2]=8e3,g&&(e[(r+512|0)+(4|t)>>2]=e[508+(t+r|0)>>2])),l=e[(r+512|0)+(4|t)>>2],!((0|s)>=(0|(o=(0|o)/8|0))||(0|(w=o-s|0))<=0||(b=s+1|0,t=s,1&w&&(f[344+(s+_|0)|0]=(0|u)>=255?255:u,t=b),(0|o)==(0|b))))for(b=l-u|0;v=_+344|0,h=u+((0|O(b,t-s|0))/(0|w)|0)|0,f[v+t|0]=(0|h)>=255?255:h,h=u+((0|O(b,(ve=t+1|0)-s|0))/(0|w)|0)|0,f[v+ve|0]=(0|h)>=255?255:h,(0|o)!=(0|(t=t+2|0)););if(t=g+2|0,!(g>>>0<10))break}continue;case 15:if(e[r+272>>2]=r+1140,(0|jt(t,87268,r+272|0))!=1)continue;e[e[32972]+112>>2]=(e[r+1140>>2]<<6)/100;continue;case 16:s=e[32972],e[(o=s+300|0)>>2]=0,e[o+4>>2]=0,e[(l=s+292|0)>>2]=0,e[l+4>>2]=0,e[(u=s+284|0)>>2]=0,e[u+4>>2]=0,e[(g=s+276|0)>>2]=0,e[g+4>>2]=0,e[r+316>>2]=s+304,e[r+312>>2]=o,e[r+308>>2]=s+296,e[r+304>>2]=l,e[r+300>>2]=s+288,e[r+296>>2]=u,e[r+292>>2]=s+280,e[r+288>>2]=g,s=jt(t,84553,r+288|0),t=e[32972],e[t+272>>2]=s,e[t+276>>2]=0-e[t+276>>2],e[t+284>>2]=0-e[t+284>>2],e[t+292>>2]=0-e[t+292>>2],e[t+300>>2]=0-e[t+300>>2];continue;case 17:s=e[32972],e[(o=s+336|0)>>2]=0,e[o+4>>2]=0,e[(l=s+328|0)>>2]=0,e[l+4>>2]=0,e[(u=s+320|0)>>2]=0,e[u+4>>2]=0,e[(g=s+312|0)>>2]=0,e[g+4>>2]=0,e[r+348>>2]=s+340,e[r+344>>2]=o,e[r+340>>2]=s+332,e[r+336>>2]=l,e[r+332>>2]=s+324,e[r+328>>2]=u,e[r+324>>2]=s+316,e[r+320>>2]=g,t=jt(t,84553,r+320|0),e[e[32972]+308>>2]=t;continue;case 36:s=e[32972],e[r+352>>2]=s+120,e[r+356>>2]=s+124,e[r+1140>>2]=jt(t,87106,r+352|0);continue;case 33:e[r+368>>2]=e[32972]+84,jt(t,87268,r+368|0),cs(3);continue;case 31:s=e[32972],e[(o=s+156|0)>>2]=0,e[o+4>>2]=0,e[(l=s+148|0)>>2]=0,e[l+4>>2]=0,e[(u=s+140|0)>>2]=0,e[u+4>>2]=0,e[(g=s+132|0)>>2]=0,e[g+4>>2]=0,e[r+412>>2]=s+160,e[r+408>>2]=o,e[r+404>>2]=s+152,e[r+400>>2]=l,e[r+396>>2]=s+144,e[r+392>>2]=u,e[r+388>>2]=s+136,e[r+384>>2]=g,jt(t,84553,r+384|0),t=e[32972],e[t+152>>2]=e[t+152>>2]-40;continue;case 32:e[r+416>>2]=145740,jt(t,87268,r+416|0),cs(3);continue;case 6:case 7:continue;default:break t}e[r+16>>2]=r+704,ar(Pe,87359,r+16|0)}}Er(J)}t:{if((t=e[47192])|V){if(V)break t}else t=Lt(he),e[47192]=t;r:{if(!H){if((0|(t=qs(r+896|0)))<0&&(e[r>>2]=r+896,ar(e[30450],87567,r),t=0),e[e[32972]+60>>2]=t,s=e[47192],e[s+292>>2]=t,gA(s,ie,4&A),d[132848])break r;io(e[47192]),s=0;break e}e[e[32972]+60>>2]=0,e[t+292>>2]=0}f[re+201088|0]=0}s=e[32972]}return Y=r+1168|0,s}function jt(t,A,r){var s,o,l,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0;Y=l=Y-16|0,e[l+12>>2]=r,Y=u=Y-144|0,s=Je(u,0,144),e[s+76>>2]=-1,e[s+44>>2]=t,e[s+32>>2]=18,e[s+84>>2]=t,u=A,Se=r,t=0,Y=o=Y-304|0;e:{t:{r:if(e[s+4>>2]||(En(s),e[s+4>>2])){if(!(A=d[0|u]))break e;a:{n:{o:{c:{for(;;){u:{l:if((0|(A&=255))==32|A-9>>>0<5){for(;A=u,u=u+1|0,(0|(r=d[A+1|0]))==32|r-9>>>0<5;);for(Gs(s,0,0);(0|(r=e[s+4>>2]))==e[s+104>>2]?r=Ie(s):(e[s+4>>2]=r+1,r=d[0|r]),(0|r)==32|r-9>>>0<5;);u=e[s+4>>2],(0|(r=e[s+116>>2]))>0|(0|r)>=0&&(u=u-1|0,e[s+4>>2]=u),u=r=u-e[s+44>>2]|0,b=re+e[s+124>>2]|0,b=(g=r>>31)+((r=V+e[s+120>>2]|0)>>>0<V>>>0?b+1|0:b)|0,re=(V=r+u|0)>>>0<r>>>0?b+1|0:b}else{i:{p:{C:{if(d[0|u]==37){if((0|(A=d[u+1|0]))==42)break C;if((0|A)!=37)break p}if(Gs(s,0,0),d[0|u]!=37)(0|(A=e[s+4>>2]))==e[s+104>>2]?A=Ie(s):(e[s+4>>2]=A+1,A=d[0|A]);else{for(;(0|(A=e[s+4>>2]))==e[s+104>>2]?A=Ie(s):(e[s+4>>2]=A+1,A=d[0|A]),(0|A)==32|A-9>>>0<5;);u=u+1|0}if(d[0|u]!=(0|A)){if((0|(r=e[s+116>>2]))>0|(0|r)>=0&&(e[s+4>>2]=e[s+4>>2]-1),(0|A)>=0||(h=0,ze))break e;break r}w=(g=A=e[s+4>>2]-e[s+44>>2]|0)>>31,A=re+e[s+124>>2]|0,h=((r=V+e[s+120>>2]|0)>>>0<V>>>0?A+1|0:A)+w|0,re=(V=r+g|0)>>>0<r>>>0?h+1|0:h,A=u;break l}v=0,A=u+2|0;break i}d[u+2|0]!=36|A-48>>>0>=10?(v=e[Se>>2],Se=Se+4|0,A=u+1|0):(A=d[u+1|0]-48|0,e[(r=Y-16|0)+12>>2]=Se,A=(A>>>0>1?(A<<2)-4|0:0)+Se|0,e[r+8>>2]=A+4,v=e[A>>2],A=u+3|0)}if(T=0,u=0,d[0|A]-48>>>0<10)for(;u=(d[0|A]+O(u,10)|0)-48|0,r=d[A+1|0],A=A+1|0,r-48>>>0<10;);(0|(H=d[0|A]))==109&&(_=0,T=!!(0|v),H=d[A+1|0],t=0,A=A+1|0),A=(r=A)+1|0,g=3,h=T;i:{p:switch(H-65|0){case 39:g=r+2|0,A=(r=d[r+1|0]==104)?g:A,g=r?-2:-1;break i;case 43:g=r+2|0,A=(r=d[r+1|0]==108)?g:A,g=r?3:1;break i;case 51:case 57:g=1;break i;case 11:g=2;break i;case 41:break i;case 0:case 2:case 4:case 5:case 6:case 18:case 23:case 26:case 32:case 34:case 35:case 36:case 37:case 38:case 40:case 45:case 46:case 47:case 50:case 52:case 55:break p;default:break a}g=0,A=r}h=g,ve=(g=(47&(r=d[0|A]))==3)?1:h;i:if((0|(he=g?32|r:r))!=91){p:{if((0|he)!=110){if((0|he)!=99)break p;u=(0|u)<=1?1:u;break i}$n(v,ve,V,re);break l}for(Gs(s,0,0);(0|(r=e[s+4>>2]))==e[s+104>>2]?r=Ie(s):(e[s+4>>2]=r+1,r=d[0|r]),(0|r)==32|r-9>>>0<5;);r=e[s+4>>2],(0|(g=e[s+116>>2]))>0|(0|g)>=0&&(r=r-1|0,e[s+4>>2]=r),g=r=r-e[s+44>>2]|0,b=re+e[s+124>>2]|0,re=(h=r>>31)+((r=V+e[s+120>>2]|0)>>>0<V>>>0?b+1|0:b)|0,re=(V=r+g|0)>>>0<r>>>0?re+1|0:re}if(J=u,Gs(s,u,ie=u>>31),(0|(r=e[s+4>>2]))==e[s+104>>2]){if((0|Ie(s))<0)break n}else e[s+4>>2]=r+1;(0|(r=e[s+116>>2]))>0|(0|r)>=0&&(e[s+4>>2]=e[s+4>>2]-1),r=16;i:{p:{C:{m:{b:switch(he-88|0){default:if((r=he-65|0)>>>0>6|!(1<<r&113))break i;case 9:case 13:case 14:case 15:if(Ft(o+8|0,s,ve,0),r=e[s+4>>2]-e[s+44>>2]|0,e[s+120>>2]!=(0-r|0)|e[s+124>>2]!=(0-((r>>31)+!!(0|r)|0)|0))break C;break o;case 3:case 11:case 27:if((16|he)==115){if(Je(o+32|0,-1,257),f[o+32|0]=0,(0|he)!=115)break p;f[o+65|0]=0,f[o+46|0]=0,k[o+42>>1]=0,k[o+44>>1]=0;break p}Je(o+32|0,w=(0|(g=d[A+1|0]))==94,257),f[o+32|0]=0,r=w?A+2|0:A+1|0;h:{x:{I:{if((0|(A=d[(w?2:1)+A|0]))!=45){if((0|A)==93)break I;g=(0|g)!=94,A=r;break h}g=(0|g)!=94,f[o+78|0]=g;break x}g=(0|g)!=94,f[o+126|0]=g}A=r+1|0}for(;;){if((0|(r=d[0|A]))==45){if(r=45,!(!(w=d[A+1|0])|(0|w)==93)){if(h=A+1|0,w>>>0<=(A=d[A-1|0])>>>0)r=w;else for(;f[(A=A+1|0)+(o+32|0)|0]=g,(r=d[0|h])>>>0>A>>>0;);A=h}}else{if(!r)break n;if((0|r)==93)break p}f[33+(r+o|0)|0]=g,A=A+1|0}case 23:r=8;break m;case 12:case 29:r=10;break m;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 22:case 25:case 26:case 28:case 30:case 31:break i;case 0:case 24:case 32:break m;case 17:break b}r=0}w=0,b=0,g=0,h=0,H=0,Y=Pe=Y-16|0;m:if((0|r)!=1&r>>>0<=36){for(;(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),(0|u)==32|u-9>>>0<5;);b:{h:switch(u-43|0){case 0:case 2:break h;default:break b}H=(0|u)==45?-1:0,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u])}b:{h:{x:{I:{if(!(!!(0|r)&(0|r)!=16|(0|u)!=48)){if((0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),(-33&u)==88){if(r=16,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),d[u+121329|0]<16)break x;(0|(r=e[s+116>>2]))>0|(0|r)>=0&&(e[s+4>>2]=e[s+4>>2]-1),Gs(s,0,0);break m}if(r)break I;r=8;break x}if(!((r=r||10)>>>0>d[u+121329|0])){(0|(r=e[s+116>>2]))>0|(0|r)>=0&&(e[s+4>>2]=e[s+4>>2]-1),Gs(s,0,0),e[56798]=28;break m}}if((0|r)==10){if((g=u-48|0)>>>0<=9){for(r=0;h=(r=O(r,10)+g|0)>>>0<429496729,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),h&(g=u-48|0)>>>0<=9;);w=r}I:if(!(g>>>0>9)){for(r=eA(w,0,10,0),h=fe;;){if(b=h,h=(0|(b=(w=r+g|0)>>>0<g>>>0?b+1|0:b))==429496729&w>>>0>=2576980378|b>>>0>429496729,(0|(r=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=r+1,u=d[0|r]),h|(g=u-48|0)>>>0>9)break I;if(r=eA(w,b,10,0),!((0|(h=fe))==-1&~g>>>0>=r>>>0|(0|h)!=-1))break}r=10;break h}if(r=10,g>>>0<=9)break h;break b}}if(r-1&r){if((h=d[u+121329|0])>>>0<r>>>0){for(;w=(g=O(r,g)+h|0)>>>0<119304647,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),w&(h=d[u+121329|0])>>>0<r>>>0;);w=g}if(r>>>0<=h>>>0)break h;for(;;){if(g=eA(w,b,r,0),(0|(J=fe))==-1&~(h&=255)>>>0<g>>>0||(b=J,b=(w=g+h|0)>>>0<h>>>0?b+1|0:b,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),r>>>0<=(h=d[u+121329|0])>>>0))break h;if(_r(Pe,r,0,0,0,w,b,0,0),e[Pe+8>>2]|e[Pe+12>>2])break}}else{if(J=f[84400+(O(r,23)>>>5&7)|0],(g=d[u+121329|0])>>>0<r>>>0){for(;w=(h=h<<J|g)>>>0<134217728,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),w&(g=d[u+121329|0])>>>0<r>>>0;);w=h}if(!(r>>>0<=g>>>0||(ie=31&J,(63&J)>>>0>=32?(h=0,ie=-1>>>ie|0):ie=(h=-1>>>ie|0)|(1<<ie)-1<<32-ie,!h&w>>>0>ie>>>0)))for(;;){if(Xe=255&g,g=w,u=31&J,(63&J)>>>0>=32?(b=g<<u,u=0):(b=(1<<u)-1&g>>>32-u|b<<u,u=g<<u),w=Xe|u,(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),r>>>0<=(g=d[u+121329|0])>>>0)break h;if(!((0|h)==(0|b)&w>>>0<=ie>>>0|h>>>0>b>>>0))break}}}if(!(d[u+121329|0]>=r>>>0)){for(;(0|(u=e[s+4>>2]))==e[s+104>>2]?u=Ie(s):(e[s+4>>2]=u+1,u=d[0|u]),d[u+121329|0]<r>>>0;);e[56798]=68,H=0,w=-1,b=-1}}(0|(r=e[s+116>>2]))>0|(0|r)>=0&&(e[s+4>>2]=e[s+4>>2]-1),w=(r=w^H)-H|0,b=((u=H>>31)^b)-((r>>>0<H>>>0)+u|0)|0}else e[56798]=28;if(Y=Pe+16|0,r=e[s+4>>2]-e[s+44>>2]|0,e[s+120>>2]==(0-r|0)&e[s+124>>2]==(0-((r>>31)+!!(0|r)|0)|0))break o;if(!(!v|(0|he)!=112)){e[v>>2]=w;break i}$n(v,ve,w,b);break i}if(!v)break i;u=e[o+16>>2],r=e[o+20>>2],g=e[o+8>>2],T=e[o+12>>2];C:switch(0|ve){case 0:Y=b=Y-32|0;m:if(0|(h=(w=2147483647&r)-1065418752|0)>>>0<(J=w-1082064896|0)>>>0){if(w=(33554431&r)<<7|u>>>25,J=h=0,!(!h&(0|(u&=33554431))==16777216?!(g|T):!h&u>>>0<16777216)){h=w+1073741825|0;break m}if(h=w+1073741824|0,16777216^u|g|T|J)break m;h=(1&w)+h|0}else(!u&(0|w)==2147418112?!(g|T):w>>>0<2147418112)?(h=2139095040,w>>>0>1082064895||(h=0,(w=w>>>16|0)>>>0<16145||(wA(b+16|0,g,T,u,h=65535&r|65536,w-16129|0),dr(b,g,T,u,h,16257-w|0),u=e[b+8>>2],h=(33554431&e[b+12>>2])<<7|u>>>25,w=e[b>>2]|!!(e[b+16>>2]|e[b+24>>2]|e[b+20>>2]|e[b+28>>2]),T=e[b+4>>2],(!(g=0)&(0|(u&=33554431))==16777216?!(w|T):!g&u>>>0<16777216)?16777216^u|w|g|T||(h=(1&h)+h|0):h=h+1|0))):h=4194303&((33554431&r)<<7|u>>>25)|2143289344;Y=b+32|0,e[v>>2]=-2147483648&r|h;break i;case 1:P[v>>3]=ut(g,T,u,r);break i;case 2:break C;default:break i}e[v>>2]=g,e[v+4>>2]=T,e[v+8>>2]=u,e[v+12>>2]=r;break i}g=(Pe=(0|he)!=99)?31:u+1|0;p:if((0|ve)!=1){if(T){if(u=0,!(r=Nt(g)))break c;for(;;){for(t=r;;){if((0|(r=e[s+4>>2]))==e[s+104>>2]?r=Ie(s):(e[s+4>>2]=r+1,r=d[0|r]),!d[33+(r+o|0)|0]){g=0,_=t;break p}if(f[t+u|0]=r,(0|g)==(0|(u=u+1|0)))break}if(h=1,!(r=DA(t,g=g<<1|1)))break}_=t,t=0;break a}if(u=0,v)for(;;){if((0|(t=e[s+4>>2]))==e[s+104>>2]?t=Ie(s):(e[s+4>>2]=t+1,t=d[0|t]),!d[33+(t+o|0)|0]){g=0,_=t=v;break p}f[u+v|0]=t,u=u+1|0}for(;(0|(t=e[s+4>>2]))==e[s+104>>2]?t=Ie(s):(e[s+4>>2]=t+1,t=d[0|t]),d[33+(t+o|0)|0];);t=0,_=0,g=0}else{if(r=v,T&&!(r=Nt(g<<2)))break c;for(e[o+296>>2]=0,e[o+300>>2]=0,u=0;;){t=r;C:{for(;;){if((0|(r=e[s+4>>2]))==e[s+104>>2]?r=Ie(s):(e[s+4>>2]=r+1,r=d[0|r]),!d[33+(r+o|0)|0])break C;f[o+27|0]=r,w=o+28|0,r=e[(h=(r=o+296|0)||228604)>>2];m:{b:{h:{x:{if(!(_=o+27|0)){if(r)break x;r=0;break m}if(!r){if((0|(b=(r=d[0|_])<<24>>24))>=0){w&&(e[w>>2]=r),r=!!(0|b);break m}if(!e[e[56841]>>2]){if(r=1,!w)break h;e[w>>2]=57343&b,r=1;break m}if((r=r-194|0)>>>0>50)break x;r=e[124752+(r<<2)>>2];break b}if(H=1,!(((ve=(b=d[0|_])>>>3|0)-16|(r>>26)+ve)>>>0>7))for(;;){if(H=H-1|0,(0|(r=b-128|r<<6))>=0){e[h>>2]=0,w&&(e[w>>2]=r),r=1-H|0;break m}if(!H)break b;if((192&(b=d[0|(_=_+1|0)]))!=128)break}}e[h>>2]=0,e[56798]=25,r=-1}break m}e[h>>2]=r,r=-2}if((0|r)!=-2){if(_=0,(0|r)==-1)break n;if(t&&(e[(u<<2)+t>>2]=e[o+28>>2],u=u+1|0),!(!T|(0|u)!=(0|g)))break}}if(h=1,r=DA(t,(g=g<<1|1)<<2))continue;break a}break}if(_=0,g=t,o+296|0&&e[o+296>>2])break n}if(r=e[s+4>>2],(0|(w=e[s+116>>2]))>0|(0|w)>=0&&(r=r-1|0,e[s+4>>2]=r),r=(w=r-e[s+44>>2]|0)+e[s+120>>2]|0,b=e[s+124>>2]+(w>>31)|0,!((b=r>>>0<w>>>0?b+1|0:b)|r)|!(Pe|(0|r)==(0|J)&(0|b)==(0|ie)))break u;T&&(e[v>>2]=t),(0|he)!=99&&(g&&(e[(u<<2)+g>>2]=0),_?f[u+_|0]=0:_=0),t=g}u=r=e[s+4>>2]-e[s+44>>2]|0,h=re+e[s+124>>2]|0,re=(g=r>>31)+((r=V+e[s+120>>2]|0)>>>0<V>>>0?h+1|0:h)|0,re=(V=r+u|0)>>>0<r>>>0?re+1|0:re,ze=!!(0|v)+ze|0}if(u=A+1|0,A=d[A+1|0])continue;break e}break}t=g;break o}h=1,_=0,t=0;break a}h=T;break t}h=T}if(ze)break t}ze=-1}h&&(Me(_),Me(t))}return Y=o+304|0,Y=s+144|0,Y=l+16|0,ze}function Nt(t){var A,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;Y=A=Y-16|0;e:{t:{r:{a:{n:{o:{c:{u:{l:{if((t|=0)>>>0<=244){if(3&(r=(g=e[57152])>>>(s=(h=t>>>0<11?16:t+11&-8)>>>3|0)|0)){r=(t=(s=s+(1&~r)|0)<<3)+228648|0,o=e[t+228656>>2],(0|r)!=(0|(t=e[o+8>>2]))?(e[t+12>>2]=r,e[r+8>>2]=t):e[57152]=as(-2,s)&g,t=o+8|0,r=s<<3,e[o+4>>2]=3|r,e[(r=r+o|0)+4>>2]=1|e[r+4>>2];break e}if((v=e[57154])>>>0>=h>>>0)break l;if(r){r=(t=(o=Qi(0-(t=(0-(t=2<<s)|t)&r<<s)&t))<<3)+228648|0,l=e[t+228656>>2],(0|r)!=(0|(t=e[l+8>>2]))?(e[t+12>>2]=r,e[r+8>>2]=t):(g=as(-2,o)&g,e[57152]=g),e[l+4>>2]=3|h,o=(t=o<<3)-h|0,e[(s=l+h|0)+4>>2]=1|o,e[t+l>>2]=o,v&&(r=228648+(-8&v)|0,u=e[57157],(t=1<<(v>>>3))&g?t=e[r+8>>2]:(e[57152]=t|g,t=r),e[r+8>>2]=u,e[t+12>>2]=u,e[u+12>>2]=r,e[u+8>>2]=t),t=l+8|0,e[57157]=s,e[57154]=o;break e}if(!(b=e[57153]))break l;for(s=e[228912+(Qi(0-b&b)<<2)>>2],u=(-8&e[s+4>>2])-h|0,r=s;(t=e[r+16>>2])||(t=e[r+20>>2]);)u=(o=(r=(-8&e[t+4>>2])-h|0)>>>0<u>>>0)?r:u,s=o?t:s,r=t;if(w=e[s+24>>2],(0|(o=e[s+12>>2]))!=(0|s)){t=e[s+8>>2],e[t+12>>2]=o,e[o+8>>2]=t;break t}if(!(t=e[(r=s+20|0)>>2])){if(!(t=e[s+16>>2]))break u;r=s+16|0}for(;l=r,o=t,(t=e[(r=t+20|0)>>2])||(r=o+16|0,t=e[o+16>>2]););e[l>>2]=0;break t}if(h=-1,!(t>>>0>4294967231)&&(h=-8&(t=t+11|0),b=e[57153])){u=0-h|0,g=0,h>>>0<256||(g=31,h>>>0>16777215||(g=62+((h>>>38-(t=Ce(t>>>8|0))&1)-(t<<1)|0)|0));i:{p:{if(r=e[228912+(g<<2)>>2])for(t=0,s=h<<((0|g)!=31?25-(g>>>1|0):0);;){if(!((l=(-8&e[r+4>>2])-h|0)>>>0>=u>>>0||(o=r,u=l,l))){u=0,t=r;break p}if(l=e[r+20>>2],r=e[16+((s>>>29&4)+r|0)>>2],t=l?(0|l)==(0|r)?t:l:t,s<<=1,!r)break}else t=0;if(!(t|o)){if(o=0,!(t=(0-(t=2<<g)|t)&b))break l;t=e[228912+(Qi(t&0-t)<<2)>>2]}if(!t)break i}for(;u=(s=(r=(-8&e[t+4>>2])-h|0)>>>0<u>>>0)?r:u,o=s?t:o,t=(r=e[t+16>>2])||e[t+20>>2];);}if(!(!o|e[57154]-h>>>0<=u>>>0)){if(g=e[o+24>>2],(0|o)!=(0|(s=e[o+12>>2]))){t=e[o+8>>2],e[t+12>>2]=s,e[s+8>>2]=t;break r}if(!(t=e[(r=o+20|0)>>2])){if(!(t=e[o+16>>2]))break c;r=o+16|0}for(;l=r,s=t,(t=e[(r=t+20|0)>>2])||(r=s+16|0,t=e[s+16>>2]););e[l>>2]=0;break r}}}if((t=e[57154])>>>0>=h>>>0){o=e[57157],(r=t-h|0)>>>0>=16?(e[(s=o+h|0)+4>>2]=1|r,e[t+o>>2]=r,e[o+4>>2]=3|h):(e[o+4>>2]=3|t,e[(t=t+o|0)+4>>2]=1|e[t+4>>2],s=0,r=0),e[57154]=r,e[57157]=s,t=o+8|0;break e}if((w=e[57155])>>>0>h>>>0){r=w-h|0,e[57155]=r,t=(s=e[57158])+h|0,e[57158]=t,e[t+4>>2]=1|r,e[s+4>>2]=3|h,t=s+8|0;break e}if(t=0,b=h+47|0,e[57270]?s=e[57272]:(e[57273]=-1,e[57274]=-1,e[57271]=4096,e[57272]=4096,e[57270]=A+12&-16^1431655768,e[57275]=0,e[57263]=0,s=4096),(r=(l=b+s|0)&(u=0-s|0))>>>0<=h>>>0||(o=e[57262])&&o>>>0<(g=(s=e[57260])+r|0)>>>0|s>>>0>=g>>>0)break e;l:{if(!(4&d[229052])){i:{p:{C:{m:{if(o=e[57158])for(t=229056;;){if((s=e[t>>2])>>>0<=o>>>0&o>>>0<s+e[t+4>>2]>>>0)break m;if(!(t=e[t+8>>2]))break}if((0|(s=se(0)))==-1||(g=r,(t=(o=e[57271])-1|0)&s&&(g=(r-s|0)+(t+s&0-o)|0),g>>>0<=h>>>0)||(o=e[57262])&&o>>>0<(u=(t=e[57260])+g|0)>>>0|t>>>0>=u>>>0)break i;if((0|s)!=(0|(t=se(g))))break C;break l}if((0|(s=se(g=u&l-w)))==(e[t>>2]+e[t+4>>2]|0))break p;t=s}if((0|t)==-1)break i;if(h+48>>>0<=g>>>0){s=t;break l}if((0|se(s=(s=e[57272])+(b-g|0)&0-s))==-1)break i;g=s+g|0,s=t;break l}if((0|s)!=-1)break l}e[57263]=4|e[57263]}if((0|(s=se(r)))==-1|(0|(t=se(0)))==-1|t>>>0<=s>>>0||(g=t-s|0)>>>0<=h+40>>>0)break a}t=e[57260]+g|0,e[57260]=t,t>>>0>Ae[57261]&&(e[57261]=t);l:{if(l=e[57158]){for(t=229056;;){if(((o=e[t>>2])+(r=e[t+4>>2])|0)==(0|s))break l;if(!(t=e[t+8>>2]))break}break o}for((t=e[57156])>>>0<=s>>>0&&t||(e[57156]=s),t=0,e[57265]=g,e[57264]=s,e[57160]=-1,e[57161]=e[57270],e[57267]=0;r=(o=t<<3)+228648|0,e[o+228656>>2]=r,e[o+228660>>2]=r,(0|(t=t+1|0))!=32;);r=(o=g-40|0)-(t=s+8&7?-8-s&7:0)|0,e[57155]=r,t=t+s|0,e[57158]=t,e[t+4>>2]=1|r,e[4+(s+o|0)>>2]=40,e[57159]=e[57274];break n}if(8&d[t+12|0]|o>>>0>l>>>0|s>>>0<=l>>>0)break o;e[t+4>>2]=r+g,s=(t=l+8&7?-8-l&7:0)+l|0,e[57158]=s,t=(r=e[57155]+g|0)-t|0,e[57155]=t,e[s+4>>2]=1|t,e[4+(r+l|0)>>2]=40,e[57159]=e[57274];break n}o=0;break t}s=0;break r}Ae[57156]>s>>>0&&(e[57156]=s),r=s+g|0,t=229056;o:{c:{u:{l:{i:{p:{for(;;){if((0|r)!=e[t>>2]){if(t=e[t+8>>2])continue;break p}break}if(!(8&d[t+12|0]))break i}for(t=229056;;){if((r=e[t>>2])>>>0<=l>>>0&&(u=r+e[t+4>>2]|0)>>>0>l>>>0)break l;t=e[t+8>>2]}}if(e[t>>2]=s,e[t+4>>2]=e[t+4>>2]+g,e[(b=(s+8&7?-8-s&7:0)+s|0)+4>>2]=3|h,t=(g=r+(r+8&7?-8-r&7:0)|0)-(w=h+b|0)|0,(0|l)==(0|g)){e[57158]=w,t=e[57155]+t|0,e[57155]=t,e[w+4>>2]=1|t;break c}if(e[57157]==(0|g)){e[57157]=w,t=e[57154]+t|0,e[57154]=t,e[w+4>>2]=1|t,e[t+w>>2]=t;break c}if((3&(u=e[g+4>>2]))==1){l=-8&u;i:if(u>>>0<=255){if(o=e[g+8>>2],r=u>>>3|0,(0|(s=e[g+12>>2]))==(0|o)){e[57152]=e[57152]&as(-2,r);break i}e[o+12>>2]=s,e[s+8>>2]=o}else{if(h=e[g+24>>2],(0|g)==(0|(s=e[g+12>>2])))if((r=e[(u=g+20|0)>>2])||(r=e[(u=g+16|0)>>2])){for(;o=u,(r=e[(u=(s=r)+20|0)>>2])||(u=s+16|0,r=e[s+16>>2]););e[o>>2]=0}else s=0;else r=e[g+8>>2],e[r+12>>2]=s,e[s+8>>2]=r;if(h){o=e[g+28>>2];p:{if(e[(r=228912+(o<<2)|0)>>2]==(0|g)){if(e[r>>2]=s,s)break p;e[57153]=e[57153]&as(-2,o);break i}if(e[h+(e[h+16>>2]==(0|g)?16:20)>>2]=s,!s)break i}e[s+24>>2]=h,(r=e[g+16>>2])&&(e[s+16>>2]=r,e[r+24>>2]=s),(r=e[g+20>>2])&&(e[s+20>>2]=r,e[r+24>>2]=s)}}u=e[(g=l+g|0)+4>>2],t=t+l|0}if(e[g+4>>2]=-2&u,e[w+4>>2]=1|t,e[t+w>>2]=t,t>>>0<=255){r=228648+(-8&t)|0,(s=e[57152])&(t=1<<(t>>>3))?t=e[r+8>>2]:(e[57152]=t|s,t=r),e[r+8>>2]=w,e[t+12>>2]=w,e[w+12>>2]=r,e[w+8>>2]=t;break c}if(u=31,t>>>0<=16777215&&(u=62+((t>>>38-(r=Ce(t>>>8|0))&1)-(r<<1)|0)|0),e[w+28>>2]=u,e[w+16>>2]=0,e[w+20>>2]=0,r=228912+(u<<2)|0,(o=e[57153])&(s=1<<u)){for(u=t<<((0|u)!=31?25-(u>>>1|0):0),s=e[r>>2];;){if(r=s,(-8&e[s+4>>2])==(0|t))break u;if(s=u>>>29|0,u<<=1,!(s=e[(o=(4&s)+r|0)+16>>2]))break}e[o+16>>2]=w}else e[57153]=s|o,e[r>>2]=w;e[w+24>>2]=r,e[w+12>>2]=w,e[w+8>>2]=w;break c}for(r=(o=g-40|0)-(t=s+8&7?-8-s&7:0)|0,e[57155]=r,t=t+s|0,e[57158]=t,e[t+4>>2]=1|r,e[4+(s+o|0)>>2]=40,e[57159]=e[57274],e[(o=(t=(u+(u-39&7?39-u&7:0)|0)-47|0)>>>0<l+16>>>0?l:t)+4>>2]=27,t=e[57267],e[o+16>>2]=e[57266],e[o+20>>2]=t,t=e[57265],e[o+8>>2]=e[57264],e[o+12>>2]=t,e[57266]=o+8,e[57265]=g,e[57264]=s,e[57267]=0,t=o+24|0;e[t+4>>2]=7,r=t+8|0,t=t+4|0,r>>>0<u>>>0;);if((0|o)==(0|l))break n;if(e[o+4>>2]=-2&e[o+4>>2],u=o-l|0,e[l+4>>2]=1|u,e[o>>2]=u,u>>>0<=255){r=228648+(-8&u)|0,(s=e[57152])&(t=1<<(u>>>3))?t=e[r+8>>2]:(e[57152]=t|s,t=r),e[r+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=r,e[l+8>>2]=t;break n}if(t=31,u>>>0<=16777215&&(t=62+((u>>>38-(t=Ce(u>>>8|0))&1)-(t<<1)|0)|0),e[l+28>>2]=t,e[l+16>>2]=0,e[l+20>>2]=0,r=228912+(t<<2)|0,(o=e[57153])&(s=1<<t)){for(t=u<<((0|t)!=31?25-(t>>>1|0):0),o=e[r>>2];;){if((0|u)==(-8&e[(r=o)+4>>2]))break o;if(s=t>>>29|0,t<<=1,!(o=e[(s=(4&s)+r|0)+16>>2]))break}e[s+16>>2]=l}else e[57153]=s|o,e[r>>2]=l;e[l+24>>2]=r,e[l+12>>2]=l,e[l+8>>2]=l;break n}t=e[r+8>>2],e[t+12>>2]=w,e[r+8>>2]=w,e[w+24>>2]=0,e[w+12>>2]=r,e[w+8>>2]=t}t=b+8|0;break e}t=e[r+8>>2],e[t+12>>2]=l,e[r+8>>2]=l,e[l+24>>2]=0,e[l+12>>2]=r,e[l+8>>2]=t}if(!((t=e[57155])>>>0<=h>>>0)){r=t-h|0,e[57155]=r,t=(s=e[57158])+h|0,e[57158]=t,e[t+4>>2]=1|r,e[s+4>>2]=3|h,t=s+8|0;break e}}e[56798]=48,t=0;break e}r:if(g){r=e[o+28>>2];a:{if(e[(t=228912+(r<<2)|0)>>2]==(0|o)){if(e[t>>2]=s,s)break a;b=as(-2,r)&b,e[57153]=b;break r}if(e[g+(e[g+16>>2]==(0|o)?16:20)>>2]=s,!s)break r}e[s+24>>2]=g,(t=e[o+16>>2])&&(e[s+16>>2]=t,e[t+24>>2]=s),(t=e[o+20>>2])&&(e[s+20>>2]=t,e[t+24>>2]=s)}r:if(u>>>0<=15)t=u+h|0,e[o+4>>2]=3|t,e[(t=t+o|0)+4>>2]=1|e[t+4>>2];else if(e[o+4>>2]=3|h,e[(l=o+h|0)+4>>2]=1|u,e[l+u>>2]=u,u>>>0<=255)r=228648+(-8&u)|0,(s=e[57152])&(t=1<<(u>>>3))?t=e[r+8>>2]:(e[57152]=t|s,t=r),e[r+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=r,e[l+8>>2]=t;else{t=31,u>>>0<=16777215&&(t=62+((u>>>38-(t=Ce(u>>>8|0))&1)-(t<<1)|0)|0),e[l+28>>2]=t,e[l+16>>2]=0,e[l+20>>2]=0,r=228912+(t<<2)|0;a:{if((s=1<<t)&b){for(t=u<<((0|t)!=31?25-(t>>>1|0):0),h=e[r>>2];;){if((-8&e[(r=h)+4>>2])==(0|u))break a;if(s=t>>>29|0,t<<=1,!(h=e[(s=(4&s)+r|0)+16>>2]))break}e[s+16>>2]=l}else e[57153]=s|b,e[r>>2]=l;e[l+24>>2]=r,e[l+12>>2]=l,e[l+8>>2]=l;break r}t=e[r+8>>2],e[t+12>>2]=l,e[r+8>>2]=l,e[l+24>>2]=0,e[l+12>>2]=r,e[l+8>>2]=t}t=o+8|0;break e}t:if(w){r=e[s+28>>2];r:{if(e[(t=228912+(r<<2)|0)>>2]==(0|s)){if(e[t>>2]=o,o)break r;e[57153]=as(-2,r)&b;break t}if(e[w+(e[w+16>>2]==(0|s)?16:20)>>2]=o,!o)break t}e[o+24>>2]=w,(t=e[s+16>>2])&&(e[o+16>>2]=t,e[t+24>>2]=o),(t=e[s+20>>2])&&(e[o+20>>2]=t,e[t+24>>2]=o)}u>>>0<=15?(t=u+h|0,e[s+4>>2]=3|t,e[(t=t+s|0)+4>>2]=1|e[t+4>>2]):(e[s+4>>2]=3|h,e[(o=s+h|0)+4>>2]=1|u,e[o+u>>2]=u,v&&(r=228648+(-8&v)|0,l=e[57157],(t=1<<(v>>>3))&g?t=e[r+8>>2]:(e[57152]=t|g,t=r),e[r+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=r,e[l+8>>2]=t),e[57157]=o,e[57154]=u),t=s+8|0}return Y=A+16|0,0|t}function KA(t,A,r,s,o){var l,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0;Y=l=Y-544|0,Je(l+320|0,0,100),Je(l+208|0,0,100),w=r?e[r>>2]:w,V=e[t+12>>2],b=e[36115];e:{t:{r:{a:{for(;;){if(u=(0|(u=d[A+g|0]))>=(0|b)?13:u,f[l+g|0]=u,!u){u=g;break a}if(h=(0|b)<=(0|(h=d[(u=1|g)+A|0]))?13:h,f[u+l|0]=h,!h)break a;if((0|(g=g+2|0))==200)break}g=198,J=d[l+199|0];break r}if(!u)break t;J=d[l+(g=u-1|0)|0],(0|u)!=1&&(g=u-2|0)}if(ve=8&w,e[l+536>>2]=(ve>>>3|0?3:7)&w,w=d[l+g|0],b=1,T=(0|(v=Ms(t,l,l+432|0,l+540|0,l+536|0,1)))>=0?v:0,ie=d[0|l])for(g=l,u=ie;u=e[144464+((255&u)<<2)>>2],d[u+11|0]==2&&(1048576&(u=e[u+4>>2])||(h=(2097152&u)>>>21|0,h|=u=d[e[144464+(d[0|(_=g+1|0)]<<2)>>2]+10|0]==12,f[(l+208|0)+b|0]=h,H=e[144464+(d[(u?2:1)+g|0]<<2)>>2],h=d[H+11|0]-10>>>0<4294967289|!(32&d[H+6|0])&d[e[144464+(d[(u?3:2)+g|0]<<2)>>2]+11|0]==2?h:h?2:1,g=u?_:g,f[(l+320|0)+b|0]=h,b=b+1|0)),u=d[0|(g=g+1|0)];);g=r=r?T:v;r:{a:{n:{o:{c:{u:{l:{i:{p:{C:{m:{b:switch(e[t+8>>2]-1|0){case 11:if((0|(r=e[l+540>>2]))<2)break p;if(g=1,T=1&(u=r-1|0),(0|r)!=2)break m;b=0;break C;case 8:if((0|(u=e[l+540>>2]))<2)break a;if(b=3&(h=u-1|0),g=1,u-2>>>0>=3)for(T=-4&h,h=0;w=f[0|(u=(l+432|0)+g|0)],f[0|u]=(0|w)<0?4:w,w=f[u+1|0],f[u+1|0]=(0|w)<0?4:w,w=f[u+2|0],f[u+2|0]=(0|w)<0?4:w,w=u,u=f[u+3|0],f[w+3|0]=(0|u)<0?4:u,g=g+4|0,(0|T)!=(0|(h=h+4|0)););if(!b)break a;for(u=0;h=f[0|(w=(l+432|0)+g|0)],f[0|w]=(0|h)<0?4:h,g=g+1|0,(0|b)!=(0|(u=u+1|0)););break a;case 7:if(!d[l+322|0]|f[l+321|0]>0)break a;case 0:if(e[l+536>>2]|e[l+540>>2]<3)break a;if(e[l+536>>2]=2,g=4,r)break r;f[l+434|0]=4;break r;case 1:if(e[l+536>>2])break r;h:{x:{if((0|(b=e[l+540>>2]))>=3){r=b-2|0,e[l+536>>2]=r,g=r;I:if(512&V&&(u=e[144464+(J<<2)>>2],(0|(h=d[u+11|0]))!=2)){g=e[u>>2],u=l;y:{z:{if((0|(T=e[t+212>>2]))!=26977){if((0|T)!=24942)break z;L:switch(g-110|0){case 0:case 5:if(g=r,d[e[144464+(w<<2)>>2]+11|0]==2)break I;break;default:break L}g=b-1|0;break y}if((0|g)==115&&(g=r,d[e[144464+(w<<2)>>2]+11|0]==2))break I;g=b-1|0;break y}z:{L:{if((0|g)==115){if(g=r,(0|(h=d[e[144464+(w<<2)>>2]+11|0]))!=8)break L;break I}if((0|h)!=8)break z;h=d[e[144464+(w<<2)>>2]+11|0]}if(g=r,(255&h)==2)break I}g=b-1|0}e[u+536>>2]=g}if(524288&V&&(f[(u=b-1|0)+(b=l+208|0)|0]<=f[r+b|0]||(e[l+536>>2]=u,g=u)),d[(l+432|0)+g|0]>1){u=g;break h}if(u=2,r=g-1|0,g>>>0>=2)break x;e[l+536>>2]=g+1;break h}r=1}u=r,e[l+536>>2]=u}if(g=4,f[0|(r=(l+432|0)+u|0)]>=0||f[(u=(l+432|0)+u|0)-1|0]>=4&f[u+1|0]>3)break r;f[0|r]=4;break r;case 2:if(e[l+536>>2])break r;for(r=(g=e[l+540>>2])-1|0,r&=r>>31;;){if((0|(g=g-1|0))<=0)break n;if(!(f[0|(u=(l+432|0)+g|0)]>=0))break}e[l+536>>2]=g,g=4,f[0|u]=4;break r;case 3:if(e[l+536>>2])break a;if(u=(0|(g=e[l+540>>2]-3|0))<=1?1:g,e[l+536>>2]=u,g=4,r)break r;f[u+(l+432|0)|0]=4;break r;case 4:if(e[l+536>>2])break r;if(u=(r=e[l+540>>2])-3|0,e[l+536>>2]=u,(0|r)<=15){h:{x:switch(d[e[144464+(J<<2)>>2]+11|0]-2|0){case 0:u=f[r+94176|0];break h;case 2:u=f[r+94192|0];break h;default:break x}u=f[r+94160|0]}e[l+536>>2]=u}g=4,f[(l+432|0)+u|0]=4;break r;case 5:if(e[l+536>>2])break r;if(b=-1,h=0,!((0|(r=(u=e[l+540>>2])-1|0))<2)){if(g=1,_=1&u,(0|u)!=3)for(H=(-2&u)-4|0,u=0;f[(l+432|0)+g|0]<0&&(h=(w=(0|(T=f[(l+320|0)+g|0]))<(0|b))?h:g,b=w?b:T),f[(w=g+1|0)+(l+432|0)|0]<0&&(h=(T=(0|(he=f[w+(l+320|0)|0]))<(0|b))?h:w,b=T?b:he),g=g+2|0,w=(0|u)!=(0|H),u=u+2|0,w;);!_|f[(l+432|0)+g|0]>=0||(b=(u=(0|(w=f[(l+320|0)+g|0]))<(0|b))?b:w,h=u?h:g)}e[l+536>>2]=h,d[r+(l+320|0)|0]!=2|(0|b)>1?(0|b)>0||(h=1,e[l+536>>2]=1):(e[l+536>>2]=r,h=r),g=4,f[(l+432|0)+h|0]=4;break r;case 14:break o;case 12:break c;case 6:break b;default:break r}if(e[l+536>>2])break r;b=(r=e[l+540>>2])-1|0,e[l+536>>2]=b;b:if(!((0|r)<2))for(g=1;;){if(d[(l+432|0)+g|0]==1){b=g-1|0,e[l+536>>2]=b;break b}if((0|r)==(0|(g=g+1|0)))break}g=4,f[(l+432|0)+b|0]=4;break r}for(_=-2&u,b=0,h=0;u=d[0|(H=(w=l+432|0)+g|0)],re=H,he=f[(H=l+208|0)+g|0]>0,f[0|re]=he||(0|u)==4?3:u,Pe=(0|(w=d[0|(re=(u=g+1|0)+w|0)]))==4?3:w,w=f[u+H|0]>0,f[0|re]=w?3:Pe,b=w?u:he?g:b,g=g+2|0,(0|_)!=(0|(h=h+2|0)););}if(T&&(w=(0|(u=d[0|(h=(l+432|0)+g|0)]))==4?3:u,u=f[(l+208|0)+g|0]>0,f[0|h]=u?3:w,b=u?g:b),u=e[l+536>>2])break u;if((0|b)>0){e[l+536>>2]=b,u=b;break u}if((0|r)<6)break i;u=r-3|0;break l}if(u=e[l+536>>2])break u}u=r-1|0}e[l+536>>2]=u}g=4,f[(l+432|0)+u|0]=4;break r}if(e[l+536>>2])break r;u=1,e[l+536>>2]=1,d[l+209|0]|e[l+540>>2]<3|f[l+210|0]<=0||(u=2,e[l+536>>2]=2),g=4,f[l+432|u]=4;break r}if(e[l+536>>2]||(0|(u=e[l+540>>2]))<3)break a;if(Je(l+432|1,0,u-1|0),e[l+536>>2]=2,r||(f[l+434|0]=4),g=4,u>>>0<4)break r;f[431+(u+l|0)|0]=3;break r}e[l+536>>2]=r,g=4;break r}g=r}!(256&V)|2&o||(0|(r=e[l+540>>2]))<3|(0|v)>2||d[0|(u=(r=r+(l+432|0)|0)-1|0)]!=4|d[e[144464+(J<<2)>>2]+11|0]!=2||(f[0|u]=1,f[r-2|0]=4);r:{a:{if(ve)v=e[l+540>>2];else{if(r=f[l+433|0],!(!(4096&V)|(0|(v=e[l+540>>2]))!=3)){if((0|r)==4){f[l+434|0]=3;break a}if(d[l+434|0]==4){f[l+433|0]=3;break a}}if(!(!(8192&V)|(0|r)>=0|(0|v)<4|f[l+434|0]<4)){f[l+433|0]=3;break a}}if(h=0,(0|v)<2)break r}for(b=(0|g)<4?4:3,H=128&V,he=64&V,re=32&V,T=v-1|0,Pe=16&V,Se=!(32768&V),J=0,w=0,g=1;;){a:{n:if((0|(u=f[0|(_=(l+432|0)+g|0)]))>=0)h=b;else{h=3;o:{c:if(!(!(!Pe|(0|b)>3)&(0|g)==(0|T))){if(!(1&(J|Se)))break o;if(!(f[431+(l+g|0)|0]>1)){if((0|(u=f[(r=g+1|0)+(l+432|0)|0]))>=2){if((0|b)!=4||(h=4,u>>>0>=3))break c}else if(!(!re|(0|b)!=3)){b=3;break a}if(!he|g>>>0<2||(h=d[(l+320|0)+g|0]))break o;if((0|T)>(0|(u=g))){for(;;){if(f[(l+320|0)+u|0]>0)break a;if((0|T)==(0|(u=u+1|0)))break}if(h)break o}if(f[r+(l+320|0)|0]<=0)break o;break a}h=b}u=d[0|_];break n}f[0|_]=b,J=1,h=3,u=b}n:{if(u<<24>>24>=4){if(r=w||g,!w|!H)break n;f[0|_]=3}b=h;break a}b=h,w=r}if(h=1,(0|v)==(0|(g=g+1|0)))break}}if(s=!ve|(0|s)>=0?s:e[((0|v)<3?16:20)+t>>2],b=0,u=0,h){if(J=3&(r=v-1|0),h=0,v-2>>>0<3)g=1;else for(ve=-4&r,g=1,w=0;u=(r=(0|(u=(_=(0|(u=(T=(0|(u=(v=(0|(T=f[(r=l+432|0)+g|0]))<(0|u))?u:T))>(0|(_=f[(H=g+1|0)+r|0])))?u:_))>(0|(re=f[(he=g+2|0)+r|0])))?u:re))>(0|(Pe=f[(re=g+3|0)+r|0])))?u:Pe,b=r?_?T?v?b:g:H:he:re,g=g+4|0,(0|ve)!=(0|(w=w+4|0)););if(J)for(;u=(r=(0|(w=f[(l+432|0)+g|0]))<(0|u))?u:w,b=r?b:g,g=g+1|0,(0|J)!=(0|(h=h+1|0)););}if((0|s)<0?s=u:(0|s)<=(0|u)&(0|u)>4||(f[(l+432|0)+b|0]=s),J=A+197|0,v=1,!(1&o)&&(r=e[144464+(ie<<2)>>2])){if(u=l,!((0|(h=d[r+11|0]))!=1&(0|ie)!=15))for(;r=d[0|(u=u+1|0)],(0|(h=d[e[144464+(r<<2)>>2]+11|0]))==1|(0|r)==15;);!(48&(r=e[t+4>>2]))|(0|h)!=2||(f[0|A]=(32&r)>>>5|0&&f[l+433|0]>3?11:23,A=A+1|0)}r:if(!(A>>>0>=J>>>0))for(T=65536&V,_=2&V,ve=4&V,g=l;;){if(!(u=d[0|g]))break r;if(o=g,g=g+1|0,r=e[144464+(u<<2)>>2]){a:{n:{o:switch(d[r+11|0]){case 0:e[t+8200>>2]=0;break a;case 2:if(!(16&d[r+6|0]))break n;break;default:break o}if(d[0|g]!=20)break a}if((0|(ie=e[l+540>>2]))<(0|v))break e;w=f[0|(V=(l+432|0)+v|0)],e[t+8200>>2]=w;n:{o:{if(!((0|(r=w))>1)){if(h=ie-1|0,!(!ve|(0|v)<2|(0|s)<2)&&(r=0,(0|h)==(0|v)))break o;if(r=1,!((0|v)==1|_|(ie-2|0)==(0|v)&f[h+(l+432|0)|0]<2|(0|h)==(0|v)||f[431+(l+v|0)|0]>=0&&(r=w,T))){r=0,f[0|V]=0;break o}}if(r&&(0|r)<2)break n}f[0|A]=d[r+94151|0],A=A+1|0,w=f[0|V]}h=(0|s)>(0|w),d[0|g]==12&&1&(ie=e[t+28>>2])&&(g=(16&ie?(0|b)!=(0|v):(0|r)<4)?o+2|0:g),s=h?s:w,v=v+1|0}if((0|u)!=1&&(f[0|A]=u,A=A+1|0),!(A>>>0<J>>>0))break}}f[0|A]=0}return void(Y=l+544|0)}pe(86136,86634,1353,94208),L()}function Es(t,A,r,s,o,l,u,g,h){var w,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0,qA=0,or=0,Ir=0,pr=0,zr=0,Ur=0,qr=0;Y=w=Y-336|0,_=g,H=65535&h,V=s,T=65535&o,ve=-2147483648&(o^h);e:{if(!((ie=h>>>16&32767)-32767>>>0>4294934529&(J=o>>>16&32767)-32767>>>0>=4294934530)){if(!(!s&(0|(b=2147483647&o))==2147418112?!(A|r):b>>>0<2147418112)){re=s,ve=32768|o;break e}if(!(!g&(0|(o=2147483647&h))==2147418112?!(l|u):o>>>0<2147418112)){re=g,ve=32768|h,A=l,r=u;break e}if(!(A|s|2147418112^b|r)){if(!(l|g|2147418112^o|u)){A=0,r=0,ve=2147450880;break e}ve|=2147418112,A=0,r=0;break e}if(!(l|g|2147418112^o|u)){A=0,r=0;break e}if(!(A|s|r|b)){re=(A=!(l|g|o|u))?0:re,ve=A?2147450880:ve,A=0,r=0;break e}if(!(l|g|o|u)){ve|=2147418112,A=0,r=0;break e}(0|b)==65535|b>>>0<65535&&(h=s=!(T|V),b=s?A:V,g=s<<=6,wA(w+320|0,A,r,V,T,(s=s+((0|(h=Ce(h?r:T)))==32?Ce(b)+32|0:h)|0)-15|0),Pe=16-s|0,V=e[w+328>>2],T=e[w+332>>2],r=e[w+324>>2],A=e[w+320>>2]),o>>>0>65535||(g=s=!(_|H),h=s?l:_,o=s<<=6,wA(w+304|0,l,u,_,H,(s=s+((0|(g=Ce(g?u:H)))==32?Ce(h)+32|0:g)|0)-15|0),Pe=(s+Pe|0)-16|0,_=e[w+312>>2],H=e[w+316>>2],l=e[w+304>>2],u=e[w+308>>2])}if(gt=o=65536|H,zt=_,b=o<<15|(s=_)>>>17,_r(w+288|0,s=o=s<<15|u>>>17,g=b,0,0,h=0-s|0,b=1963258675-(b+!!(0|s)|0)|0,0,0),_r(w+272|0,0-(s=e[w+296>>2])|0,0-(e[w+300>>2]+!!(0|s)|0)|0,0,0,h,b,0,0),_r(w+256|0,h=(s=e[w+280>>2])<<1|e[w+276>>2]>>>31,s=e[w+284>>2]<<1|s>>>31,0,0,o,g,0,0),_r(w+240|0,h,s,0,0,0-(b=e[w+264>>2])|0,0-(e[w+268>>2]+!!(0|b)|0)|0,0,0),_r(w+224|0,b=(h=e[w+248>>2])<<1|e[w+244>>2]>>>31,s=e[w+252>>2]<<1|h>>>31,0,0,o,g,0,0),_r(w+208|0,b,s,0,0,0-(h=e[w+232>>2])|0,0-(e[w+236>>2]+!!(0|h)|0)|0,0,0),_r(w+192|0,h=(s=e[w+216>>2])<<1|e[w+212>>2]>>>31,s=e[w+220>>2]<<1|s>>>31,0,0,o,g,0,0),_r(w+176|0,h,s,0,0,0-(b=e[w+200>>2])|0,0-(e[w+204>>2]+!!(0|b)|0)|0,0,0),_r(w+160|0,h=o,s=g,0,0,g=(_=(o=e[w+184>>2])<<1|e[w+180>>2]>>>31)-1|0,o=(e[w+188>>2]<<1|o>>>31)-!_|0,0,0),_r(w+144|0,l<<15,u<<15|l>>>17,0,0,s=g,o,0,0),he=w+112|0,Xe=e[w+168>>2],g=e[w+172>>2],v=(_=e[w+160>>2])+(h=e[w+152>>2])|0,b=(H=e[w+164>>2])+e[w+156>>2]|0,h=b=h>>>0>v>>>0?b+1|0:b,b=(b=(0|H)==(0|b)&v>>>0<_>>>0|b>>>0<H>>>0)>>>0>(H=b+Xe|0)>>>0?g+1|0:g,_r(he,s,o,0,0,0-(g=(_=!h&v>>>0>1|!!(0|h))+H|0)|0,0-(!!(0|g)+(b=_>>>0>g>>>0?b+1|0:b)|0)|0,0,0),_r(w+128|0,1-v|0,0-((v>>>0>1)+h|0)|0,0,0,s,o,0,0),qA=(J-ie|0)+Pe|0,he=o=e[w+116>>2],_=(s=e[w+112>>2])<<1,J=b=o<<1|s>>>31,s=b,ct=g=e[w+140>>2],s=s+(b=g<<1|(o=e[w+136>>2])>>>31)|0,o=s=(g=(h=o<<1|e[w+132>>2]>>>31)+_|0)>>>0<h>>>0?s+1|0:s,ze=s=s-(g>>>0<13927)|0,Xe=s,or=b=65536|T,Ir=V,zr=(s=V)<<1,Ur=b=b<<1|s>>>31,$t=b,bA=s=eA(ze,v=0,b,0),Se=b=fe,Pe=A<<1,ie=s=r<<1|A>>>31,H=b=0,ze=(0|o)==(0|ze)&(h=g-13927|0)>>>0<g>>>0|o>>>0>ze>>>0,o=(0|o)==(0|J)&g>>>0<_>>>0|o>>>0<J>>>0,s=e[w+120>>2],b=g=e[w+124>>2]<<1|s>>>31,b=(s=(v=ct>>>31|0)+(s=s<<1|he>>>31)|0)>>>0<v>>>0?b+1|0:b,v=(g=s)>>>0>(s=s+o|0)>>>0?b+1|0:b,v=(o=s)>>>0>(s=s+ze|0)>>>0?v+1|0:v,o=s-1|0,b=eA(ie,H,ze=v-!s|0,J=0),g=fe+Se|0,he=(0|Se)==(0|(g=(s=b+bA|0)>>>0<b>>>0?g+1|0:g))&s>>>0<bA>>>0|g>>>0<Se>>>0,ct=o,o=eA(o,b=0,Rt=(pr=r>>>31|0)|V<<1,Se=0),b=fe+g|0,v=0,_=b=o>>>0>(V=o+s|0)>>>0?b+1|0:b,v=(o=s=(0|b)==(0|g)&s>>>0>V>>>0|g>>>0>b>>>0)>>>0>(s=s+he|0)>>>0?1:v,o=eA($t,H,ze,J),b=fe+v|0,he=s=o+s|0,s=s>>>0<o>>>0?b+1|0:b,o=eA($t,H,ct,Se),T=fe,g=o,o=eA(Rt,Se,ze,J),b=fe+T|0,o=b=o>>>0>(v=g+o|0)>>>0?b+1|0:b,s=s+(b=(0|T)==(0|b)&g>>>0>v>>>0|b>>>0<T>>>0)|0,he=T=he+o|0,T=s=T>>>0<o>>>0?s+1|0:s,b=v+_|0,o=b=(s=(o=0)+V|0)>>>0<o>>>0?b+1|0:b,g=(0|b)==(0|_)&s>>>0<V>>>0|b>>>0<_>>>0,b=T,v=g,vA=g=g+he|0,v=b=v>>>0>g>>>0?b+1|0:b,he=s,T=s,V=o,bA=h,s=eA(h,0,Rt,Se),g=fe,o=s,h=eA(Xe,re,ie,re),b=fe+g|0,h=(0|g)==(0|(b=(s=s+h|0)>>>0<h>>>0?b+1|0:b))&s>>>0<o>>>0|g>>>0>b>>>0,g=b,o=eA(ct,Se,OA=-2&Pe,0),b=fe+b|0,o=b=o>>>0>(_=o+s|0)>>>0?b+1|0:b,s=(0|b)==(0|g)&s>>>0>_>>>0|g>>>0>b>>>0,g=0,s=((h=s+h|0)>>>0<s>>>0?1:g)+V|0,b=v,h=s=(T=h+T|0)>>>0<h>>>0?s+1|0:s,g=s=(0|s)==(0|V)&T>>>0<he>>>0|s>>>0<V>>>0,qr=s=s+vA|0,he=b=g>>>0>s>>>0?b+1|0:b,s=eA($t,H,bA,re),vA=fe,$t=s,g=eA(ze,J,OA,re),b=fe+vA|0,V=s=s+g|0,v=s+(H=eA(Xe,re,Rt,Se))|0,s=(g=s>>>0<g>>>0?b+1|0:b)+fe|0,s=v>>>0<H>>>0?s+1|0:s,J=v,H=v+(b=eA(ie,re,ct,Se))|0,v=fe+s|0,Rt=(0|s)==(0|(v=b>>>0>H>>>0?v+1|0:v))&H>>>0<J>>>0|s>>>0>v>>>0,b=((s=(s=(s=(0|s)==(0|g)&V>>>0>J>>>0|s>>>0<g>>>0)+(b=(0|g)==(0|vA)&V>>>0<$t>>>0|g>>>0<vA>>>0)|0)+Rt|0)|(ct=0))+h|0,V=b=(g=v)>>>0>(J=g+T|0)>>>0?b+1|0:b,s=(0|h)==(0|b)&T>>>0>J>>>0|h>>>0>b>>>0,b=he,g=s,ct=s=s+qr|0,h=b=g>>>0>s>>>0?b+1|0:b,s=eA(Xe,re,OA,re),Xe=fe,T=s,g=eA(ie,re,bA,re),b=fe+Xe|0,g=(0|(b=(s=s+g|0)>>>0<g>>>0?b+1|0:b))==(0|Xe)&s>>>0<T>>>0|b>>>0<Xe>>>0,T=b,s=b+_|0,b=(g|(he=0))+o|0,T=(0|o)==(0|(b=s>>>0<T>>>0?b+1|0:b))&s>>>0<_>>>0|o>>>0>b>>>0,v=(g=b)+(b=H)|0,b=0,b=((o=s=(0|g)==(0|(v=(_=(H=0)+s|0)>>>0<H>>>0?v+1|0:v))&s>>>0>_>>>0|g>>>0>v>>>0)>>>0>(s=s+T|0)>>>0?1:b)+V|0,v=h,o=b=(o=s)>>>0>(s=s+J|0)>>>0?b+1|0:b,h=v=(h=g=(0|V)==(0|b)&s>>>0<J>>>0|b>>>0<V>>>0)>>>0>(g=g+ct|0)>>>0?v+1|0:v,(0|v)==131071|v>>>0<131071?(Ir=zr|pr,or=Se|Ur,_r(w+80|0,s,o,g,h,l,u,zt,gt),H=v=e[w+84>>2],b=A<<17,V=(r=(_=0)-(T=e[w+88>>2])|0)-(v=!!(v|(A=e[w+80>>2])))|0,T=(b-(e[w+92>>2]+(T>>>0>_>>>0)|0)|0)-(r>>>0<v>>>0)|0,_=0-A|0,H=0-(!!(0|A)+H|0)|0,A=qA+16382|0):(_r(w+96|0,s=(1&o)<<31|s>>>1,o=g<<31|o>>>1,g=(1&h)<<31|g>>>1,h=h>>>1|0,l,u,zt,gt),ie=V=e[w+100>>2],V=(_=0-(Pe=e[w+104>>2])|0)-(T=!!(V|(v=e[w+96>>2])))|0,T=((A<<16)-(e[w+108>>2]+(H>>>0<Pe>>>0)|0)|0)-(T>>>0>_>>>0)|0,_=0-v|0,H=0-(!!(0|v)+ie|0)|0,Pe=A,ie=r,A=qA+16383|0),(0|A)>=32767)ve|=2147418112,A=0,r=0;else{if((0|A)>0)v=T<<1|V>>>31,V=V<<1|H>>>31,T=v,Pe=g,ie=65535&h|A<<16,v=H<<1|_>>>31,h=_<<1;else{if((0|A)<=-113){A=0,r=0;break e}dr(w- -64|0,s,o,g,h,1-A|0),wA(w+48|0,Pe,ie,Ir,or,A+112|0),_r(w+32|0,l,u,zt,gt,s=e[w+64>>2],o=e[w+68>>2],Pe=e[w+72>>2],ie=e[w+76>>2]),A=e[w+40>>2],_=(r=e[w+56>>2])-(V=A<<1|(v=e[w+36>>2])>>>31)|0,T=e[w+60>>2]-((e[w+44>>2]<<1|A>>>31)+(r>>>0<V>>>0)|0)|0,b=(A=e[w+32>>2])<<1,V=_-(A=(0|(g=v<<1|A>>>31))==(0|(h=e[w+52>>2]))&b>>>0>(r=e[w+48>>2])>>>0|g>>>0>h>>>0)|0,T=T-(A>>>0>_>>>0)|0,v=h-((r>>>0<b>>>0)+g|0)|0,h=r-b|0}A=h,_r(w+16|0,l,u,zt,gt,3,0,0,0),_r(w,l,u,zt,gt,5,0,0,0),g=v+(r=0)|0,g=h>>>0>(A=A+(b=1&s)|0)>>>0?g+1|0:g,h=A,u=(0|u)==(0|g)&A>>>0>l>>>0|u>>>0<g>>>0,v=T,A=(0|r)==(0|g)&A>>>0<b>>>0|r>>>0>g>>>0,b=o,r=b=(r=A=(A=(0|(v=A>>>0>(l=A+V|0)>>>0?v+1|0:v))==(0|gt))&(0|l)==(0|zt)?u:A&l>>>0>zt>>>0|v>>>0>gt>>>0)>>>0>(A=A+s|0)>>>0?b+1|0:b,s=(0|o)==(0|b)&A>>>0<s>>>0|o>>>0>b>>>0,b=ie,b=(o=s)>>>0>(s=s+Pe|0)>>>0?b+1|0:b,u=s,T=(0|(o=e[w+20>>2]))==(0|g)&Ae[w+16>>2]<h>>>0|o>>>0<g>>>0,o=e[w+28>>2],o=b>>>0<2147418112&((0|(s=e[w+24>>2]))==(0|l)&(0|o)==(0|v)?T:(0|o)==(0|v)&s>>>0<l>>>0|o>>>0<v>>>0),s=r,b=(r=A=(0|r)==(0|(s=(T=o)>>>0>(o=A+o|0)>>>0?s+1|0:s))&A>>>0>o>>>0|r>>>0>s>>>0)>>>0>(A=A+u|0)>>>0?b+1|0:b,u=A,g=(0|(r=e[w+4>>2]))==(0|g)&Ae[w>>2]<h>>>0|r>>>0<g>>>0,r=e[w+12>>2],r=v=(r=A=b>>>0<2147418112&((0|(A=e[w+8>>2]))==(0|l)&(0|r)==(0|v)?g:(0|r)==(0|v)&A>>>0<l>>>0|r>>>0<v>>>0))>>>0>(A=A+o|0)>>>0?s+1|0:s,o=(0|s)==(0|v)&A>>>0<o>>>0|s>>>0>v>>>0,s=b,l=o,re|=o=o+u|0,ve|=s=l>>>0>o>>>0?s+1|0:s}}e[t>>2]=A,e[t+4>>2]=r,e[t+8>>2]=re,e[t+12>>2]=ve,Y=w+336|0}function WA(t,A,r,s,o){var l,u,g,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0;if(Y=u=Y-80|0,g=e[r+8>>2],!o|!B[r+4>>1]||(e[o+8>>2]=0),l=Je(s,0,152),e[l+44>>2]=d[g+14|0],e[l+40>>2]=d[g+15|0],s=B[g+8>>1]){for(s=e[34459]+(s<<1)|0,re=256&A,ie=r+32|0,Pe=r-32|0,Se=r- -64|0,ze=r+96|0,Xe=r+-64|0,ct=r-28|0,gt=1&A,zt=r-24|0,he=e[30450];;){h=15&(T=(A=B[s>>1])>>>8|0);e:{t:{r:{a:{n:{o:{c:{u:{l:{i:{p:{C:switch(0|(b=A>>>12|0)){case 10:break c;case 9:break u;case 6:break l;case 2:case 3:break i;case 1:break p;case 0:break C;case 11:case 12:case 13:case 14:case 15:break o;default:break n}w=255&A;C:{m:{b:switch(0|h){case 13:if(w)break m;h=s,A=0;break C;case 0:h=s;h:switch(w-1|0){case 1:break e;case 0:break t;default:break h}e[u+20>>2]=Zo(u+75|0,e[g>>2]),e[u+16>>2]=A,ar(he,85851,u+16|0);break e;case 5:if(d[e[144464+(d[r+34|0]<<2)>>2]+11|0]!=2)break e;e[l+20>>2]=w;break e;case 12:break b;default:break a}e[l+44>>2]=e[l+44>>2]+(A<<24>>31&-256|w);break e}f[l+132|0]=d[s+3|0],h=s+2|0,f[l+133|0]=d[0|h],A=2,w>>>0<3||(f[l+134|0]=d[s+5|0],h=s+4|0,f[l+135|0]=d[0|h],A=4,w>>>0<5||(f[l+136|0]=d[s+7|0],h=s+6|0,f[l+137|0]=d[0|h],A=6,w>>>0<7||(f[l+138|0]=d[s+9|0],h=s+8|0,f[l+139|0]=d[0|h],A=8,w>>>0<9||(f[l+140|0]=d[s+11|0],h=s+10|0,f[l+141|0]=d[0|h],A=10,w>>>0<11||(f[l+142|0]=d[s+13|0],h=s+12|0,f[l+143|0]=d[0|h],A=12,w>>>0<13||(f[l+144|0]=d[s+15|0],h=s+14|0,f[l+145|0]=d[0|h],A=14,w>>>0<15||(f[l+146|0]=d[s+17|0],h=s+16|0,f[l+147|0]=d[0|h],A=16)))))))}f[132+(A+l|0)|0]=0,w=V;break t}if(!t|h>>>0>7||(b=r,d[e[144464+(d[r+2|0]<<2)>>2]+11|0]!=2&&(b=ie,d[e[144464+(d[r+34|0]<<2)>>2]+11|0]!=2))||!(1&(h=e[t+56>>2]))&&16&d[0|r])break e;w=15&d[b+3|0],w=2&h&&d[b+6|0]<=w>>>0?4:w;p:{C:{m:{b:switch((h=7&T)-3|0){case 1:break C;case 0:break b;default:break m}if(w>>>0>3)break p;break e}if(e[102832+(h<<2)>>2]>(0|w))break p;break e}if(d[b+6|0]>w>>>0)break e}e[l+8>>2]=255&A,w=1;break r}if((57344&A)==8192){for(Rt=e[32972],T=1,ve=0;;){v=255&A,h=(_=4095&A)>>>8|0;i:if(_>>>0<=3583){(0|(w=(h>>>0)%7|0))==6&&(w=B[s+2>>1]),J=0,h=r;p:{C:{m:switch(0|w){case 6:if(b=0,B[r+36>>1]|B[r+68>>1])break i;case 3:h=Se;break C;case 9:if(b=0,B[r+36>>1]|B[r+68>>1])break i;if(h=ze,!B[r+100>>1])break p;break i;case 7:if(b=0,B[r+36>>1])break i;for(w=1;;){if(d[e[144464+(d[(h=(w<<5)+r|0)+2|0]<<2)>>2]+11|0]==2)break C;if(B[4+(((w=w+1|0)<<5)+r|0)>>1])break}break i;case 5:if(b=0,B[r+4>>1])break i;case 0:J=1,h=Pe;break C;case 4:if(b=0,B[r+36>>1])break i;case 2:h=ie;break C;case 8:if(b=0,!o)break i;if(J=1,e[(h=o)+8>>2])break p;break i;case 10:break m;default:break C}if(b=0,B[r+4>>1]|B[ct>>1])break i;J=1,h=Xe;break p}C:switch(0|w){case 0:case 5:break C;default:break p}h=(d[h+2|0]==1?-32:0)+h|0}if(re?(w=e[144464+(d[h+2|0]<<2)>>2],e[h+8>>2]=w):w=e[h+8>>2],_>>>0<=1791){if(b=1,e[e[144464+(v<<2)>>2]>>2]==e[w>>2])break i;if(!(!J|d[w+11|0]!=2)){b=(0|v)==d[w+13|0];break i}b=(0|v)==d[w+12|0];break i}v=31&_,b=0;p:switch(_>>>5&7){case 0:b=(0|v)==d[w+11|0];break i;case 1:b=(0|v)==(15&B[w+6>>1]);break i;case 2:b=e[w+4>>2]>>>v&1;break i;case 4:break p;default:break i}p:switch(0|v){case 0:case 1:case 2:case 3:case 4:if(d[e[144464+(d[h+2|0]<<2)>>2]+11|0]!=2){if(d[e[144464+(d[h+34|0]<<2)>>2]+11|0]!=2)break i;h=h+32|0}w=15&d[h+3|0],w=!t|!(2&d[t+56|0])?w:d[h+6|0]<=w>>>0?4:w;C:{m:switch(v-3|0){case 1:b=d[h+6|0]<=w>>>0;break i;case 0:if(b=1,w>>>0<=3)break C;break i;default:break m}if(b=1,e[102832+(v<<2)>>2]>(0|w))break i}b=0;break i;case 17:if(!d[w+11|0]){b=1;break i}b=(32&d[r+1|0])>>>5|0;break i;case 18:b=B[h+4>>1]!=0;break i;case 19:if(b=1,B[h+36>>1])break i;b=!d[e[h+40>>2]+11|0];break i;case 9:if(B[h+4>>1])break i;for(;;){if(b=!!(0|(w=12&d[h-29|0])),w)break i;if(B[(h=h-32|0)+4>>1])break}break i;case 10:b=d[w+11|0]!=2;break i;case 11:for(;;){if(b=!!(0|(w=B[h+36>>1])),w)break i;if(w=h,h=h+32|0,d[e[w+40>>2]+11|0]==2)break}break i;case 12:if(b=1,(254&d[w+11|0])==2)break i;b=(16&d[w+4|0])>>>4|0;break i;case 13:for(;b=(d[e[h+8>>2]+11|0]==2)+b|0,w=B[h+4>>1],h=h-32|0,!w;);b=(0|b)==1;break i;case 14:for(;b=(d[e[h+8>>2]+11|0]==2)+b|0,w=B[h+4>>1],h=h-32|0,!w;);b=(0|b)==2;break i;case 16:break p;default:break i}b=(16&d[0|h])>>>4|0}else if(b=0,(0|h)==15){p:switch(v-1|0){case 0:b=gt;break i;case 1:break p;default:break i}b=e[Rt+132>>2]!=0}i:if(1970>>>(h=(w=65535&A)>>>12|0)&1)h=f[h+102848|0];else{p:switch(0|h){case 0:if(h=1,(3840&w)!=3328)break i;h=1+(1+(255&w)>>>1|0)|0;break i;case 6:h=(w>>>9&7)-5>>>0<2?12:1;break i;case 2:case 3:h=(0|(h=3840&w))==3328||(0|h)==1536?2:1;break i;default:break p}h=4,(w=B[s+4>>1])>>>0>61439||(h=(0|w)==2?3:2)}if(s=((h=B[(s=(h<<1)+s|0)>>1]==3)<<1)+s|0,h^=b,T=ve?h|T:h&T,ve=4096&A,(57344&(A=B[s>>1]))!=8192)break}if(!(1&T))if((63488&A)!=26624){i:if(1970>>>(h=A>>>12|0)&1)h=f[h+102848|0];else{p:switch(0|h){case 0:if(h=1,(3840&A)!=3328)break i;h=1+(1+(255&A)>>>1|0)|0;break i;case 6:h=(A>>>9&7)-5>>>0<2?12:1;break i;case 2:case 3:h=(0|(A&=3840))==3328||(0|A)==1536?2:1;break i;default:break p}h=4,(A=B[s+4>>1])>>>0>61439||(h=(0|A)==2?3:2)}s=(((65024&B[(A=(h<<1)+s|0)>>1])==24576)<<1)+A|0}else s=((255&A)<<1)+s|0}h=s-2|0,w=V;break t}l:switch(h>>>1|0){case 0:s=(((255&A)<<1)+s|0)-2|0;break e;case 5:e[l>>2]=2|e[l>>2],((A=d[e[r+40>>2]+12|0])-28&255)>>>0<=5&&(h=B[(A=((A<<2)+s|0)-112|0)+4>>1],A=B[A+2>>1],e[l+96>>2]=A>>>4<<24>>24,e[l+76>>2]=(15&A)<<18|h<<2),s=s+24|0;break e;case 6:break l;default:break e}((A=d[e[zt>>2]+13|0])-28&255)>>>0<=5&&(h=B[(A=((A<<2)+s|0)-112|0)+4>>1],A=B[A+2>>1],e[l+100>>2]=A>>>4<<24>>24,e[l+80>>2]=(15&A)<<18|h<<2),s=s+24|0;break e}A=B[(s=s+2|0)>>1]|A<<16&983040;u:switch(h-1|0){case 0:if((0|H)>9)break e;e[(u+32|0)+(H<<2)>>2]=s,s=(e[34459]+(A<<1)|0)-2|0,H=H+1|0;break e;case 1:e[l+124>>2]=A;break e;case 2:break u;default:break e}e[l+128>>2]=A;break e}e[(h=(((0|h)!=1)<<3)+l|0)+108>>2]=B[s+2>>1]|(255&A)<<16,A=B[s+4>>1]<<16,s=s+6|0,e[h+112>>2]=A|B[s>>1];break e}if(w=B[(h=s+2|0)>>1],_=A>>>4|0,e[(T=((v=b-11|0)<<2)+l|0)+88>>2]=255&_,e[T+68>>2]=A<<18&3932160|w<<2,(0|(s=B[s+4>>1]))==2){s=h;break e}if(w=A>>>0<=53247?s>>>0>61439?2:1:V-((0|v)==4)|0,b-13>>>0>1)break t;e[T+88>>2]=_<<24>>24;break t}e[u+4>>2]=Zo(u+75|0,e[g>>2]),e[u>>2]=A,ar(he,85851,u);break e}e[4+((h<<2)+l|0)>>2]=w,w=re&&(0|h)==1?1:V}h=s}(0|w)!=1|(0|H)<=0?(s=h,V=w):(s=e[(u+32|0)+((H=H-1|0)<<2)>>2],V=0)}if(s=s+2|0,(0|V)==1)break}!o|d[r+17|0]!=2||(t=e[r+4>>2],e[o>>2]=e[r>>2],e[o+4>>2]=t,t=e[r+28>>2],e[o+24>>2]=e[r+24>>2],e[o+28>>2]=t,t=e[r+20>>2],e[o+16>>2]=e[r+16>>2],e[o+20>>2]=t,t=e[r+12>>2],e[o+8>>2]=e[r+8>>2],e[o+12>>2]=t),f[r+23|0]=e[l+44>>2],(t=e[l+68>>2])?(e[r+24>>2]=t,t=l+88|0):(e[r+24>>2]=e[l+72>>2],t=l+92|0),e[r+28>>2]=e[t>>2]}Y=u+80|0}function Ls(t,A,r,s,o,l){var u,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0;Y=u=Y-848|0;e:if(!(!e[t+104>>2]|8&d[o+2|0]|e[47202]==193)){for(e[s>>2]=0,e[33272]=0,e[33274]=l,f[u+192|0]=0,e[33273]=u+192;b=(l=b)+1|0,f[0|(ie=A+l|0)]-48>>>0<10;);e[56798]=0,Se=u+188|0,T=-2147483648,Y=re=Y-16|0;t:if(g=d[0|A]){v=A;r:{for(;;){if(!((0|(g=g<<24>>24))==32|g-9>>>0<5))break r;if(g=d[v+1|0],v=v+1|0,!g)break}break t}r:switch((g=d[0|v])-43|0){case 0:case 2:break r;default:break t}H=(0|g)==45?-1:0,v=v+1|0}else v=A;for(;g=-48,(((_=f[0|v])-48&255)>>>0<10||(g=-87,(_-97&255)>>>0<26||(g=-55,!((_-65&255)>>>0>25))))&&!((0|(_=g+_|0))>=10);)_r(re,10,0,0,0,V,J,0,0),g=1,e[re+8>>2]|e[re+12>>2]||(ve=eA(V,J,10,0),(0|(Pe=fe))==-1&~_>>>0<ve>>>0||(g=Pe,J=(V=_+ve|0)>>>0<_>>>0?g+1|0:g,he=1,g=w)),v=v+1|0,w=g;Se&&(e[Se>>2]=he?v:A);t:{r:{if(w)e[56798]=68,V=-2147483648,J=0;else if(!J&V>>>0<2147483648)break r;if(!H){e[56798]=68,T=2147483647;break t}if(!(!J&V>>>0<=2147483648)){e[56798]=68;break t}}T=(H^V)-H|0}if(Y=re+16|0,H=T,!(e[56798]|e[u+188>>2]==(0|A))){t:{r:{a:{if(!(!((0|(_=64&d[t+109|0]?4:3))!=(0|l)|e[t+124>>2]!=f[A-2|0])&f[A-3|0]-48>>>0<10)){n:{if(e[t+124>>2]!=32){if(!(16&d[t+105|0]))break a;if((0|l)==3)break n;break a}if((0|l)!=3)break a}if(4&d[o+2|0]|f[A-2|0]-48>>>0>=10)break a}f[133104]=0,f[u+288|0]=0,ze=1;break r}if(f[133104]=0,e[33275]=0,f[u+288|0]=0,Xe=1,he=0,d[0|A]==48)break t}he=fr(t,A,ie,o,0)}d[0|ie]!=46|f[A+b|0]-48>>>0<10|1&f[o+13|0]|f[ie+2|0]-48>>>0<10||(f[0|ie]=0);t:if(!he||(ve=1,e[t+212>>2]==26741)){if(T=u+256|0,e[u+844>>2]=T,h=b,64&d[o+1|0]&&(f[u+256|0]=45,T=u+256|1,e[u+844>>2]=T,h=l+2|0),v=d[A+h|0]){for(;!((255&v)==32|(0|h)>28)&&(g=e[u+844>>2],e[u+844>>2]=g+1,f[0|g]=v,v=d[(h=h+1|0)+A|0]););T=e[u+844>>2]}if(f[0|T]=0,ve=1,g=f[u+256|0]){if(!(w=e[t+136>>2])||sr(u+256|0,w)){if(g-48>>>0<10||(e[u+176>>2]=u+256,lt(g=u+800|0,88653,u+176|0),!St(t,g,133104)))break t;e[s>>2]=128|e[s>>2],e[u+160>>2]=u+256,lt(g=u+800|0,88773,u+160|0),St(t,g,133116),ve=0}he=2}}Se=e[o>>2],f[u+352|0]=0,f[u+624|0]=0;t:{r:{a:if(!(!Xe|d[0|A]!=48||(0|(g=f[A+1|0]))==32|(0|g)==e[t+128>>2])){n:{if((0|l)==2){if(d[A+3|0]!=58|f[A+5|0]-48>>>0>=10||!((0|(g=f[A+7|0]))==32|g-9>>>0<5))break n;break a}if((0|l)>3)break r}if(d[0|A]==48&&!((0|(g=l-1|0))<=0))for(h=0;;){if(St(t,88875,kt(w=u+288|0)+w|0),d[(h=h+1|0)+A|0]!=48)break a;if(!((0|g)>(0|h)))break}}a:{n:{if(!((0|(g=f[0|ie]))==32&&16&d[t+105|0])){if(Pe=2,V=l+2|0,(0|g)==e[t+124>>2])break n;J=1,T=0,g=0;break a}Pe=1,V=l+2|0}if(4&d[o+14|0])T=1,g=0,J=1;else for(g=0,v=1,h=l,J=1;;){w=g,g=v,v=(re=h+Pe|0)+A|0,h=0;n:{for(;;){if(T=1,!(f[h+v|0]-48>>>0>=10)){if((0|_)!=(0|(h=h+1|0)))continue;break n}break}g=w;break a}if(f[v+_|0]-48>>>0<10){g=w;break a}if(h=0,f[v-1|0]-48>>>0<10){g=w;break a}n:{for(;;){if(d[(h+re|0)+A|0]==48){if((0|_)!=(0|(h=h+1|0)))continue;break n}break}J=0}if((0|(w=f[(h=_+re|0)+A|0]))!=e[t+124>>2]&(!(16&d[t+105|0])|(0|w)!=32))break a;if(V=h+2|0,4&d[2+(O(v=g+1|0,12)+o|0)|0])break}}h=!H;a:if(!(!J|!(64&d[1+(O(g,12)+o|0)|0])|e[t+212>>2]!=26741)){n:switch(d[0|(w=A+V|0)]-97|0){case 0:case 4:break n;default:break a}n:{o:{c:{u:switch((v=d[w+1|0])-116|0){case 6:break a;case 1:case 2:case 3:case 4:case 5:break o;case 0:break u;default:break c}if(d[w+2|0]!=116)break n;break a}if((0|v)==32)break a}if(!(!!((0|H)%1e3|0)&(0|g)!=1)&&(0|v)==108)break a}e[33274]=1|e[33274]}V=32768&Se,h&=ze;a:if(e[t+128>>2]!=f[0|ie]|f[A+b|0]-48>>>0>=10){n:{if(!h){if(h=0,w=1,!((0|g)>0&T))break n;H=(b=Ee(t,H,g,J,u+624|0))?0:H,h=!!(0|b),v=0;break a}h=1,H=0,e[33275]==1&&(e[u+144>>2]=g+1,lt(b=u+800|0,89026,u+144|0),St(t,b,u+688|0)||(e[u+128>>2]=g,lt(b=u+800|0,89026,u+128|0),St(t,b,u+624|0)))}w=1,v=0}else St(t,88882,u+624|0),w=0,v=256;T=V?2:he;a:{if(g|d[u+624|0]|d[0|ie]!=46){if(g)break a}else St(t,89192,u+624|0);if(e[u+844>>2]=A,f[A+1|0]-48>>>0<10)for(;b=e[u+844>>2],e[u+844>>2]=b+1,f[b+2|0]-48>>>0<10;);if(f[e[u+844>>2]-1|0]-48>>>0>=10||(e[u+416>>2]=e[u+844>>2]-1,LA(t,u+416|0,u+192|0,s,4,o)&&(e[33272]=2)),d[u+192|0]|d[e[u+844>>2]]==48||LA(t,u+844|0,u+192|0,s,4,o)&&(e[33272]=1),Xe){if(!T&w&&(e[u+112>>2]=H,lt(o=u+800|0,89214,u+112|0),St(t,o,r)))break t;if(1&f[t+110|0]){for(b=A;(32|d[0|b])!=32;)b=b+1|0;e[u+416>>2]=b,d[b+1|0]==37&&(St(t,89328,r),o=kt(r),f[e[u+416>>2]+1|0]=32,r=r+o|0)}}}Ht(t,H,u+416|0,h,g,T|v|ze),!(2&d[t+109|0])|(0|g)<=0?(e[u+60>>2]=15,e[u- -64>>2]=u+624,e[u+56>>2]=u+416,e[u+52>>2]=u+352,e[u+48>>2]=u+288,lt(r,89415,u+48|0)):(e[u+88>>2]=15,e[u+96>>2]=u+416,e[u+92>>2]=u+352,e[u+84>>2]=u+624,e[u+80>>2]=u+288,lt(r,89346,u+80|0));a:if(!w)for(;;){for(l=l+1|0,w=0;w=(b=w)+1|0,f[(g=l+b|0)+A|0]-48>>>0<10;);o=2;n:{o:{c:{u:{l:{i:switch((w=57344&e[t+104>>2])+-8192>>>13|0){case 6:break o;case 2:break c;case 0:case 4:case 5:break u;case 1:break l;case 3:break i;default:break n}o=5}if((0|(w=d[0|(h=A+l|0)]))==48)for(;St(t,88875,g=u+688|0),ts(r,g),b=b-1|0,(0|(w=d[0|(h=(l=l+1|0)+A|0)]))==48;);if((0|o)<(0|b)|(w<<24>>24)-48>>>0>=10)break n;o=u+688|0,Ht(t,la(h),o,0,0,0),ts(r,o),l=l+b|0;break n}if(Ht(t,la(o=A+l|0),u+416|0,0,0,0),!((0|w)==8192&d[0|o]!=48)){if(e[u+16>>2]=b,lt(o=u+800|0,89508,u+16|0),!St(t,o,u+688|0))break n;ts((0|w)==49152?r:u+416|0,u+688|0)}ts(r,u+416|0),l=g;break n}if((0|b)>4||d[0|(o=A+l|0)]==48)break n;Ht(t,l=la(o),o=u+688|0,0,0,0),ts(r,o),l=g;break n}if(!((0|b)<=1))for(;;){if(e[u+32>>2]=f[A+l|0],lt(o=u+800|0,89575,u+32|0),!St(t,o,u+688|0))break n;if(ts(r,u+688|0),l=l+1|0,!((0|(b=b-1|0))>1))break}}n:if(!((w=d[0|(b=A+l|0)])-48>>>0>=10||kt(r)>>>0>=190))for(;;){if(o=u+688|0,oA(t,f[0|b]-48|0,0,2,o),g=kt(r),e[u>>2]=15,e[u+4>>2]=o,lt(r+g|0,89594,u),(w=d[0|(b=(l=l+1|0)+A|0)])-48>>>0>=10)break n;if(!(kt(r)>>>0<=189))break}if(St(t,89678,u+688|0)&&ts(r,u+688|0),e[t+128>>2]!=(0|w)|f[1+(A+l|0)|0]-48>>>0>=10)break a;St(t,88882,o=u+688|0),ts(r,o)}if(!(o=d[0|r])|(0|o)==21||(o=Wt(u+184|0,A=1+(A+l|0)|0),l=e[u+184>>2],!(2&d[t+106|0])|(0|l)!=32||(Wt(u+184|0,A+o|0),l=e[u+184>>2]),_t(l)|J||(t=kt(r)+r|0,f[0|t]=11,f[t+1|0]=0)),e[s>>2]=-2147483648|e[s>>2],e[33275]=e[33275]-1,h=1,ve)break e;e[33264]=1;break e}e[s>>2]=-129&e[s>>2],h=0;break e}h=1}}return Y=u+848|0,h}function XA(t,A,r,s){var o,l,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0;if(Y=o=Y-416|0,he=B[r+8>>1],V=d[r+10|0],64&(l=e[r>>2])){for(e[r>>2]=-65&l,f[199388]=1,h=e[47202],T=e[49846],b=e[47352],v=e[47351],w=e[47350];;){u=(g=e[198304+(v<<2)>>2])>>8;e:{t:switch((31&g)-9|0){case 0:h=u;break e;case 4:T=u;break e;case 3:break t;default:break e}b=g>>>0>=256?u+b|0:0}if(!(!(128&g)&(0|w)>(0|(v=v+1|0))))break}e[47352]=b,e[47351]=v,e[49846]=T,e[47202]=h}T=0;e:if(!((0|(u=e[49572]))>997)){if(1048576&l||!d[0|A])d[199388]&&(e[49572]=u+1,f[199388]=0,e[(t=190288+(u<<3)|0)>>2]=983042,e[t+4>>2]=0),f[189088]=0;else if(!((0|u)>990)){(0|(u=e[t+8224>>2]))>0&&(e[t+8224>>2]=u-1),h=512&l?s:s+4|0,b=(240&e[47202])==16,(re=2&l)&&((0|(g=e[47200]))<3||(0|(u=e[47350]))>243||(d[199388]&&(e[(v=198300+(u<<2)|0)>>2]=-129&e[v>>2]),e[47350]=u+1,f[199388]=1,ve=(0|g)==3?20:g,e[198304+(u<<2)>>2]=ve<<8|193)),w=b?h:s;t:{r:{if(!(8&l)){for(;s=d[(u=_)+A|0],f[u+(o+240|0)|0]=s,223&s&&(_=u+1|0,u>>>0<160););if(f[o+66|0]=0,_=o- -64|2,T=Fe(e[47192],A,r,_),e[o+412>>2]=T,!(4096&T))break r;qt(A,o+240|0,u);break e}a:if(Zr(A,87276,3))Ws(A,189088,o+240|0);else{if(v=0,223&(u=d[0|(_=A+3|0)]))for(;f[(o+240|0)+v|0]=Ss(u<<24>>24),v=v+1|0,223&(u=d[0|(_=_+1|0)]););f[(s=o+240|0)+v|0]=0,u=0;n:if(!((0|(r=e[34461]))<=0)){for(;;){if(!sr(s,O(u,44)+137856|0)){e[34457]=u;break n}if((0|r)==(0|(u=u+1|0)))break}u=r}if((0|(r=(0|r)==(0|u)?-1:u))<=0)break a;ns(r),f[189090]=0,f[189089]=r,f[189088]=21}T=-2147483648,e[o+412>>2]=-2147483648,s=-1;break t}if(!(!(8388608&T)|8&d[r+12|0])){for(Y=b=Y-208|0,v=e[t+60>>2],g=A;s=g,g=g+1|0,d[0|s]!=32;);Wt(b+204|0,g);r:if(_t(e[b+204>>2])){h=Gt(b,189088),g=(!(256&v)|(J=Dt(t,g,r+12|0,0))>>>15)&!(67108864&J)&d[189088]!=21;a:{n:{if(512&v){if(!(g&!(16&d[r+12|0])))break n;break a}if(g)break a}Gt(189088,h);break r}if(f[0|s]=45,e[r>>2]=-2&e[r>>2],T=0,g=189088,H=Dt(e[47192],A,r,0),e[o+412>>2]=H,!((0|v)<=0)&&(h=d[189088])){for(;T=(d[e[144464+(h<<2)>>2]+11|0]==2)+T|0,h=d[0|(g=g+1|0)];);if(!((31&v)>=(0|T))){f[0|s]=32,e[o+412>>2]=Dt(e[47192],A,r,0);break r}}e[o+412>>2]=128|(H||J),e[33264]=1}Y=b+208|0}if(s=-1,d[189088]==21){if(v=Gt(o+16|0,132848),b=e[o+412>>2],g=qt(A,o+240|0,u),h=o- -64|1,(0|(s=In(d[189089]?189089:87315,188772,189296)))<0||(e[r>>2]=4194304|e[r>>2],d[o+66|0]?(k[o+64>>1]=8192,b=Dt(e[47193],h,r,0)):b=Fe(e[47193],g,r,_)),d[189088]==21&&(u=qt(g,o+240|0,u),(0|(s=In(d[189089]?189089:87315,188772,189296)))<0||(e[r>>2]=4194304|e[r>>2],d[o+66|0]?(k[o+64>>1]=8192,b=Dt(e[47193],h,r,0)):b=Fe(e[47193],u,r,_)),T=4096,d[189088]==21))break e;e[o+412>>2]=b,(0|s)>=0||(f[189090]=0,k[94544]=3341,(0|s)==-1&&(Gt(132848,v),ns(e[e[32972]+60>>2]),s=e[e[32972]+60>>2]))}T=e[o+412>>2],128&l||(w=268435456&T&&(0|w)<=1?1:w,!(256&T)|528&l|e[t+8224>>2]|2&d[r-11|0]||(e[t+8224>>2]=3,w=(0|w)<=4?4:w)),w=(0|w)<=0&&e[49846]>2?1:w}if(r=d[199388],!((0|w)<=0|(0|(_=e[49572]))>990)){e[49572]=_+1,g=1&r,r=0,k[(u=190288+(_<<3)|0)>>1]=g?2:0,f[u+7|0]=0,f[u+3|0]=0,g=w>>>0>1,f[u+2|0]=g?9:11,k[u+4>>1]=0,e[t+8236>>2]=0;t:if(!(!(u=g?w-2|0:0)|(0|(_=e[49572]))>990))for(h=t+8236|0;;){if(e[49572]=_+1,k[(g=190288+(_<<3)|0)>>1]=0,f[g+7|0]=0,f[g+3|0]=0,b=u>>>0>1,f[g+2|0]=b?9:11,k[g+4>>1]=0,e[h>>2]=0,_=e[49572],(0|(u=b?u-2|0:0))<=0)break t;if(!((0|_)<991))break}e[t+8228>>2]=0,e[t+8232>>2]=0}f[199388]=1&r,!re|e[47200]!=1||(e[49572]=_+2,f[199388]=0,k[(u=190288+(_<<3)|0)>>1]=1&r?2:0,f[u+7|0]=0,k[u+2>>1]=10,k[u+4>>1]=0,k[u+12>>1]=0,e[u+8>>2]=1179648,f[u+15|0]=0,1&l&&BA(f[A+1|0])&&(r=d[199388],f[199388]=0,A=e[49572],e[49572]=A+2,k[(A=190288+(A<<3)|0)>>1]=r?2:0,f[A+7|0]=0,k[A+2>>1]=10,k[A+4>>1]=0,k[A+12>>1]=0,e[A+8>>2]=1179648,f[A+15|0]=0)),u=V>>>0<31;t:if(!((0|s)<0))if(A=e[49572],r=d[190290+((w=A-1|0)<<3)|0],d[189088]!=9|d[189089]!=21)(0|r)!=21&&(g=d[199388],f[199388]=0,f[(r=190288+(A<<3)|0)+7|0]=0,k[r+2>>1]=21,k[r+4>>1]=0,k[r>>1]=g?2:0,w=A),e[49572]=w+1,f[190295+(w<<3)|0]=s;else{if((0|r)!=21)break t;e[49572]=w}A=2047&he,r=(u?V:31)<<11,b=(Pe=128&l)?d[e[144464+(d[189088]<<2)>>2]+11|0]?189088:189089:189088,(w=d[0|b])|!(1&f[199388])||(w=23,f[0|b]=23,f[b+1|0]=0),Se=A|r,h=e[49572];t:if(w)if((0|h)>994)A=0;else for(ct=((-1610612736&T)==-2147483648)<<4,he=Se+1|0,gt=t+8233|0,A=0,g=1,J=0,ze=1,V=-1,re=-1,u=0;;){v=b+1|0;r:{if((0|(H=255&w))!=255){if(r=e[144464+(H<<2)>>2])break r;e[o>>2]=H,Y=r=Y-16|0,e[r+12>>2]=o,Si(132552,87474,o),Y=r+16|0,h=e[49572]}if(!(w=d[0|v]))break t;if(b=v,(0|h)<995)continue;break t}r:if((0|(ie=255&w))!=21)if((0|(b=d[r+11|0]))!=1){r=he;a:switch(ie-12|0){case 8:f[(r=190288+((V=h-1|0)<<3)|0)+3|0]=g,k[r>>1]=4|B[r>>1],r=u;break r;case 0:k[(r=190280+(h<<3)|0)>>1]=8|B[r>>1],r=u;break r;case 10:T|=16384,e[o+412>>2]=T,r=u;break r;case 3:break r;default:break a}H=d[199388],f[199388]=0,f[(r=(ie=h<<3)+190288|0)+7|0]=0,f[r+2|0]=w,k[r+4>>1]=u,u=(H?2:0)|ct,k[r>>1]=u,(0|b)==2?((0|g)>=4&&(f[189076]=1),(0|V)<0||(0|(A=h-1|0))!=(0|V)&&(f[190291+(A<<3)|0]=g),k[r>>1]=4|u,Xe=(A=(0|g)>(0|re))?h:Xe,re=A?g:re,u=1,J&&(f[r+7|0]=J),V=h,J=0,A=g):(!ze|!(64&d[0|gt])||(k[r>>1]=8|u),u=g),h=h+1|0,e[49572]=h,f[ie+190291|0]=A,r=0,ze=0,g=u}else{if(!B[r+8>>1]){g=d[r+14|0],r=u;break r}if((0|V)<0){r=u,J=H;break r}f[190295+(V<<3)|0]=w,r=u}else e[(r=190288+(h<<3)|0)>>2]=1376256,k[r+4>>1]=0,f[r+7|0]=d[b+1|0],e[49572]=h+1,ns(d[b+1|0]),v=b+2|0,h=e[49572],r=u;if(!(w=d[0|v]))break t;if(b=v,u=r,!((0|h)<995))break}else A=0;131072&l&&(r=h+1|0,e[49572]=r,g=d[199388],f[199388]=0,f[(u=190288+(h<<3)|0)+7|0]=0,k[u+2>>1]=27,k[u+4>>1]=0,k[u>>1]=g?2:0,h=r),Pe||(k[190292+(_<<3)>>1]=Se),e[t+8228>>2]=0,d[e[144464+(d[190282+(h<<3)|0]<<2)>>2]+11|0]!=2|(0|A)<4||(e[t+8228>>2]=1),(0|s)>=0&&(Gt(132848,o+16|0),ns(e[e[32972]+60>>2]),r=d[199388],f[199388]=0,s=e[49572],k[(A=190288+(s<<3)|0)>>1]=r?2:0,k[A+2>>1]=21,k[A+4>>1]=0,f[A+7|0]=e[e[32972]+60>>2],h=s+1|0,e[49572]=h),(0|ve)>0&&(f[199388]=0,e[49572]=h+1,e[(A=190288+(h<<3)|0)>>2]=655362,r=e[47350],e[47350]=r+1,f[A+7|0]=0,k[A+4>>1]=0,e[198304+(r<<2)>>2]=ve<<8|225),1024&T&&(k[(A=190288+(Xe<<3)|0)>>1]=64|B[A>>1]),e[t+8232>>2]=T}}return Y=o+416|0,T}function Xr(t,A,r,s,o){var l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0;e:if(A){if(re=o<<4,u=(A=e[33268])+r|0,!((0|A)<=0||(l=d[0|(h=re+129360|0)],v=d[h+1|0]-l<<8,v=(0|A)!=1?(0|v)/(0|A)|0:v,(0|r)>=(0|u))))for(T=v>>>0>255,H=v>>>8|0,l<<=8,h=0-v>>>8|0,ve=(0|v)<=0,A=r;ve?(w=(b=(b=(0|(g=(0|(g=e[101024+(f[O(A,6)+t|0]<<2)>>2]))<(0|h)?h:g))>=18?18:g)+(g=(0|(g=(0|(l=l+v|0))/256|0))>0?g:0)|0)>>>0>=254?254:b,g=g>>>0>=254?254:g):(g=O(A,6)+t|0,f[g+2|0]=T|d[g+2|0],g=(b=(0|(g=(0|l)/256|0))>0?g:0)>>>0>=254?254:b,w=(b=b+H|0)>>>0>=254?254:b,l=l+v|0),b=O(A,6)+t|0,f[b+5|0]=g,f[b+4|0]=w,(0|u)!=(0|(A=A+1|0)););if(2&d[188785]?(h=e[33271],e[33270]=h):h=e[33270],H=(T=d[(l=(A=o<<4)+129360|0)+3|0])-(g=d[l+2|0])<<8,ve=e[l+4>>2],(0|r)>0?(Se=101056,ie=5,b=(0|H)/(d[A+129368|0]-1|0)|0):(Se=e[(A=A+129360|0)+12>>2],ie=d[A+10|0],b=0),(0|u)<(0|h)){for(v=(0|r)<=0,J=((A=H>>31)^H)-A|0,_=129360+(o<<4)|0,g<<=8,Pe=T<<8,T=0;;){t:{if(w=O(u,6)+t|0,!(!(1&v)&(0|(l=f[0|w]))<4)){r=0,A=u;r:if(1&((0|l)==5|v)){for(;(0|(b=f[O(A,6)+t|0]))<=6&&(r=((0|b)>3)+r|0,(0|h)!=(0|(A=A+1|0))););if(V=0,(0|(he=(0|(A=d[_+8|0]))>(0|r)?r:A))<2){b=0,T=g;break r}b=(0|H)/(he-1|0)|0,T=g}else(0|he)>0?T=b+T|0:(T=Pe+(O(J,f[V+Se|0])>>6)|0,(0|ie)>(0|(V=V+1|0))||(Se=e[_+12>>2],V=0));if(he=he-1|0,!((0|l)<4)){f[0|w]=6,r=(A=(0|(A=(0|T)/256|0))>0?A:0)+(((r=(l=e[ve+(l<<2)>>2])>>31)^l)-r|0)|0;break t}}(0|l)!=3?(A=(0|T)/256|0,(63&d[w-6|0])>>>0>=3?(r=(l=e[ve+(l<<2)>>2])>>31,r=(A=(0|(A=A-f[_+9|0]|0))>0?A:0)+((r^l)-r|0)|0):r=(A=(0|A)>0?A:0)+(((r=(l=e[ve+(l<<2)>>2])>>31)^l)-r|0)|0):r=(A=(0|(A=(0|T)/256|0))>0?A:0)+(((r=(l=e[ve+12>>2])>>31)^l)-r|0)|0}if(f[w+5|0]=A>>>0>=254?254:A,v=0,A=(0|r)>0?r:0,f[w+4|0]=A>>>0>=254?254:A,f[w+2|0]=d[w+2|0]|l>>>31,(0|h)==(0|(u=u+1|0)))break}u=h}if(!(d[133068]||((268435455&o)==3&&(A=O(u,6)+t|0,f[A+2|0]=2|d[A+2|0]),e[33269]?(A=d[(l=100768+(o<<4)|0)+5|0],g=l+3|0,r=d[l+4|0]-A|0):(A=d[(r=100768+(o<<4)|0)+2|0],g=re+100768|0,r=d[r+1|0]-A|0),l=O(u,6)+t|0,f[l+5|0]=A>>>0>=254?254:A,f[l+2|0]=d[l+2|0]|r>>>31,A=(b=A)+(((A=r>>31)^r)-A|0)|0,f[l+4|0]=A>>>0>=254?254:A,r=O(h,6)+t|0,f[r+1|0]=d[0|g],A=u+1|0,d[0|r]==4&&(f[0|r]=6),(0|(r=s-A|0))<=0||(o=d[(u=100768+(o<<4)|0)+12|0],u=d[u+13|0]-o<<8,u=(0|r)!=1?(0|u)/(0|r)|0:u,(0|A)>=(0|s)))))for(b=u>>>0>255,v=u>>>8|0,r=o<<8,o=0-u>>>8|0,T=(0|u)<=0;T?(g=(h=(g=(0|(l=(0|o)>(0|(l=e[101024+(f[O(A,6)+t|0]<<2)>>2]))?o:l))>=18?18:l)+(l=(0|(l=(0|(r=r+u|0))/256|0))>0?l:0)|0)>>>0>=254?254:h,h=l>>>0>=254?254:l):(l=O(A,6)+t|0,f[l+2|0]=b|d[l+2|0],h=(l=(0|(l=(0|r)/256|0))>0?l:0)>>>0>=254?254:l,g=(l=l+v|0)>>>0>=254?254:l,r=r+u|0),l=O(A,6)+t|0,f[l+5|0]=h,f[l+4|0]=g,(0|s)!=(0|(A=A+1|0)););}else{if(A=(ie=e[34455])+O(o,68)|0,u=d[A+24|0],h=d[A+25|0],l=(A=e[33268])+r|0,!((0|A)<=0||(w=h-u<<8,w=(0|A)!=1?(0|w)/(0|A)|0:w,(0|r)>=(0|l))))for(b=w>>>0>255,v=w>>>8|0,A=u<<8,h=0-w>>>8|0,T=(0|w)<=0;T?(u=(u=(H=(0|(u=(0|(u=e[101024+(f[O(r,6)+t|0]<<2)>>2]))<(0|h)?h:u))>=18?18:u)+(g=(0|(u=(0|(A=A+w|0))/256|0))>0?u:0)|0)>>>0>=254?254:u,g=g>>>0>=254?254:g):(u=O(r,6)+t|0,f[u+2|0]=b|d[u+2|0],g=(u=(0|(u=(0|A)/256|0))>0?u:0)>>>0>=254?254:u,u=(u=u+v|0)>>>0>=254?254:u,A=A+w|0),H=O(r,6)+t|0,f[H+5|0]=g,f[H+4|0]=u,(0|l)!=(0|(r=r+1|0)););2&d[188785]?(r=e[33271],e[33270]=r):r=e[33270],h=r,A=ie+O(o,68)|0;t:if((0|(v=d[A+33|0]))!=255)for(;;){if((0|(h=h-1|0))<(0|l)){h=r;break t}if(!(f[O(h,6)+t|0]<4))break}if((0|r)>(0|l)){for(gt=((u=(Xe=(T=d[A+32|0])-(w=d[0|(g=A+31|0)])<<8)>>31)^Xe)-u|0,Pe=(0|(A=d[0|(b=A+30|0)]))==255,H=v<<8,ve=w<<8,zt=T<<8,re=ie+O(o,68)|0,Rt=(0|A)!=255,T=0,v=0,A=1,w=0;;){t:{if(_=O(l,6)+t|0,!(!(1&A)&(0|(J=f[0|_]))<4)){r:if(1&((0|J)==5|A)){a:if(Rt){if(ze=1,A=0,u=b,!((0|h)<=(0|(w=l+1|0)))){for(;;){if(u=b,(0|(v=f[O(w,6)+t|0]))>6)break a;if(A=((0|v)>3)+A|0,(0|h)==(0|(w=w+1|0)))break}u=b}}else{if(A=0,w=l,u=g,(0|h)<=(0|l))break a;for(;;){if(u=g,(0|(v=f[O(w,6)+t|0]))>6)break a;if(A=((0|v)>3)+A|0,(0|h)==(0|(w=w+1|0)))break}u=g}if(v=d[0|u]<<8,ct=0,(0|(w=(0|A)<(0|(u=d[re+34|0]))?A:u))<2){Se=0;break r}Se=(0|Xe)/(w-1|0)|0}else(0|l)!=(0|h)?ze?(Pe=1,w=w+1|0,ze=0,v=ve):(0|w)>0?(v=v+Se|0,ze=0):(ze=0,v=(O(f[16+(re+ct|0)|0],gt)>>6)+zt|0,ct=(0|(A=ct+1|0))<d[re+35|0]?A:0):(Pe=2,v=H);if(w=w-1|0,!((0|J)<4)){A=u=l+1|0;r:if(!((0|r)<=(0|l)))for(;;){if(f[O(A,6)+t|0]>1)break r;if(!((0|r)>=(0|(A=A+1|0))))break}f[0|_]=6,f[_+1|0]=d[re+26|0],T=0,V=d[re+27|0],l=(0|(l=(0|v)/256|0))>0?l:0,f[_+5|0]=l>>>0>=254?254:l,l=l+V|0,f[_+4|0]=l>>>0>=254?254:l,he=A-u|0;break t}}if((0|J)>=2){A=u=l+1|0;r:if(!((0|r)<=(0|l)))for(;;){if(f[O(A,6)+t|0]>1)break r;if(!((0|r)>=(0|(A=A+1|0))))break}T=0,l=(0|(l=(0|v)/256|0))>0?l:0,f[_+5|0]=l>>>0>=254?254:l,V=e[100976+(J<<2)>>2],f[_+2|0]=d[_+2|0]|V>>>31,l=(0|(l=(J=l)+(((l=V>>31)^V)-l|0)|0))>0?l:0,f[_+4|0]=l>>>0>=254?254:l,he=A-u|0}else(0|he)<=1?(V=f[36+(re+Pe|0)|0],A=0):(V=f[(A=re+Pe|0)+36|0],A=(f[A+39|0]-V|0)/(he-1|0)|0),u=e[100976+(J<<2)>>2],f[_+2|0]=d[_+2|0]|u>>>31,A=(0|(A=(((0|v)/256|0)+V|0)+O(A,T)|0))>0?A:0,f[_+5|0]=A>>>0>=254?254:A,A=(0|(A=A+(((J=u)^(u>>=31))-u|0)|0))>0?A:0,f[_+4|0]=A>>>0>=254?254:A,T=T+1|0,u=l+1|0}if(A=0,(0|r)==(0|(l=u)))break}l=r}if(d[133068]||(u=O(l,6)+t|0,e[33269]?(g=ie+O(o,68)|0,A=d[g+47|0],h=d[g+46|0]-A|0,g=g+45|0):(g=ie+O(o,68)|0,A=d[g+44|0],h=d[g+43|0]-A|0,g=g+42|0),g=d[0|g],b=(((b=h>>31)^h)-b|0)+A|0,f[u+4|0]=b>>>0>=254?254:b,f[u+5|0]=A>>>0>=254?254:A,A=O(l,6)+t|0,f[A+2|0]=d[A+2|0]|h>>>31,r=O(r,6)+t|0,f[r+1|0]=g,A=l+1|0,d[0|r]==4&&(f[0|r]=6),(0|(r=s-A|0))<=0)||(u=ie+O(o,68)|0,o=d[u+48|0],u=d[u+49|0]-o<<8,u=(0|r)!=1?(0|u)/(0|r)|0:u,(0|A)>=(0|s)))break e;for(b=u>>>0>255,v=u>>>8|0,r=o<<8,o=0-u>>>8|0,T=(0|u)<=0;T?(g=(h=(g=(0|(l=(0|o)>(0|(l=e[101024+(f[O(A,6)+t|0]<<2)>>2]))?o:l))>=18?18:l)+(l=(0|(l=(0|(r=r+u|0))/256|0))>0?l:0)|0)>>>0>=254?254:h,h=l>>>0>=254?254:l):(l=O(A,6)+t|0,f[l+2|0]=b|d[l+2|0],h=(l=(0|(l=(0|r)/256|0))>0?l:0)>>>0>=254?254:l,g=(l=l+v|0)>>>0>=254?254:l,r=r+u|0),l=O(A,6)+t|0,f[l+5|0]=h,f[l+4|0]=g,(0|s)!=(0|(A=A+1|0)););}}function Ps(){var t,A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0;if((0|(t=e[36455]))!=(0|(h=e[36454]))){e:if(!((0|(_=e[36427]))<0|(0|h)==(0|_))){r=v=e[8+(216192+((w=_)<<4)|0)>>2];t:{for(;;){if((s=e[(u=216192+((w=(0|(s=w-1|0))<0?169:s)<<4)|0)>>2])-5>>>0<2)break t;r:{if((0|s)<=4){if(e[u+12>>2]!=(0|r))break t;if(s=B[u+4>>1],e[u+12>>2]=v,r=e[u+8>>2],16&(A=B[r>>1]))break r;for(H=32&A?(O(s,12)>>>0)/10|0:s,o=0,s=r,g=0;;){A=B[r>>1];a:if(!(g>>>0<3&&8&A)){if(A=A<<16>>16,(0|(V=(b=k[2+((T=g<<1)+r|0)>>1])-(l=k[(T=v+T|0)+2>>1])|0))>(0|(b=(0|O(H,(0|O(e[200944+(g<<2)>>2],(0|V)>0?b+(l<<1)|0:(b<<1)+l|0))/3e3|0))/256|0)))o||((0|A)<0?s=r:(s=0,A=(0|(A=e[44469]+1|0))<=169?A:0,e[44469]=A,(A=(o=A<<6)+177888|0)&&(s=B[r+4>>1]|B[r+6>>1]<<16,l=B[r>>1]|B[r+2>>1]<<16,k[A>>1]=l,k[A+2>>1]=l>>>16,k[A+4>>1]=s,k[A+6>>1]=s>>>16,s=B[r+60>>1]|B[r+62>>1]<<16,l=B[r+56>>1]|B[r+58>>1]<<16,k[A+56>>1]=l,k[A+58>>1]=l>>>16,k[A+60>>1]=s,k[A+62>>1]=s>>>16,s=B[r+52>>1]|B[r+54>>1]<<16,l=B[r+48>>1]|B[r+50>>1]<<16,k[A+48>>1]=l,k[A+50>>1]=l>>>16,k[A+52>>1]=s,k[A+54>>1]=s>>>16,s=B[r+44>>1]|B[r+46>>1]<<16,l=B[r+40>>1]|B[r+42>>1]<<16,k[A+40>>1]=l,k[A+42>>1]=l>>>16,k[A+44>>1]=s,k[A+46>>1]=s>>>16,s=B[r+36>>1]|B[r+38>>1]<<16,l=B[r+32>>1]|B[r+34>>1]<<16,k[A+32>>1]=l,k[A+34>>1]=l>>>16,k[A+36>>1]=s,k[A+38>>1]=s>>>16,s=B[r+28>>1]|B[r+30>>1]<<16,l=B[r+24>>1]|B[r+26>>1]<<16,k[A+24>>1]=l,k[A+26>>1]=l>>>16,k[A+28>>1]=s,k[A+30>>1]=s>>>16,s=B[r+20>>1]|B[r+22>>1]<<16,l=B[r+16>>1]|B[r+18>>1]<<16,k[A+16>>1]=l,k[A+18>>1]=l>>>16,k[A+20>>1]=s,k[A+22>>1]=s>>>16,s=B[r+12>>1]|B[r+14>>1]<<16,l=B[r+8>>1]|B[r+10>>1]<<16,k[A+8>>1]=l,k[A+10>>1]=l>>>16,k[A+12>>1]=s,k[A+14>>1]=s>>>16,f[o+177904|0]=0,k[A>>1]=32768|B[A>>1],s=A))),A=b+B[T+2>>1]|0;else{if((0-b|0)<=(0|V))break a;o||((0|A)<0?s=r:(s=0,A=(0|(A=e[44469]+1|0))<=169?A:0,e[44469]=A,(A=(o=A<<6)+177888|0)&&(s=B[r+4>>1]|B[r+6>>1]<<16,l=B[r>>1]|B[r+2>>1]<<16,k[A>>1]=l,k[A+2>>1]=l>>>16,k[A+4>>1]=s,k[A+6>>1]=s>>>16,s=B[r+60>>1]|B[r+62>>1]<<16,l=B[r+56>>1]|B[r+58>>1]<<16,k[A+56>>1]=l,k[A+58>>1]=l>>>16,k[A+60>>1]=s,k[A+62>>1]=s>>>16,s=B[r+52>>1]|B[r+54>>1]<<16,l=B[r+48>>1]|B[r+50>>1]<<16,k[A+48>>1]=l,k[A+50>>1]=l>>>16,k[A+52>>1]=s,k[A+54>>1]=s>>>16,s=B[r+44>>1]|B[r+46>>1]<<16,l=B[r+40>>1]|B[r+42>>1]<<16,k[A+40>>1]=l,k[A+42>>1]=l>>>16,k[A+44>>1]=s,k[A+46>>1]=s>>>16,s=B[r+36>>1]|B[r+38>>1]<<16,l=B[r+32>>1]|B[r+34>>1]<<16,k[A+32>>1]=l,k[A+34>>1]=l>>>16,k[A+36>>1]=s,k[A+38>>1]=s>>>16,s=B[r+28>>1]|B[r+30>>1]<<16,l=B[r+24>>1]|B[r+26>>1]<<16,k[A+24>>1]=l,k[A+26>>1]=l>>>16,k[A+28>>1]=s,k[A+30>>1]=s>>>16,s=B[r+20>>1]|B[r+22>>1]<<16,l=B[r+16>>1]|B[r+18>>1]<<16,k[A+16>>1]=l,k[A+18>>1]=l>>>16,k[A+20>>1]=s,k[A+22>>1]=s>>>16,s=B[r+12>>1]|B[r+14>>1]<<16,l=B[r+8>>1]|B[r+10>>1]<<16,k[A+8>>1]=l,k[A+10>>1]=l>>>16,k[A+12>>1]=s,k[A+14>>1]=s>>>16,f[o+177904|0]=0,k[A>>1]=32768|B[A>>1],s=A))),A=B[T+2>>1]-b|0}o=1,k[2+((g<<1)+s|0)>>1]=A,e[u+8>>2]=s}if((0|(g=g+1|0))==6)break}v=s}if((0|h)!=(0|w))continue;break t}break}v=r}for(s=0;;){if((r=e[(w=216192+(_<<4)|0)>>2])-5>>>0<2)break e;if((0|r)<=4){if(r=e[w+8>>2],A=B[w+4>>1],s){if((0|r)!=(0|s))break e;e[w+8>>2]=v}else v=r;if(16&(s=B[v>>1]))break e;for(T=32&s?(O(A,6)>>>0)/5|0:A,o=0,r=s=e[w+12>>2],g=0;;){t:{r:if((0|(h=(u=k[2+((A=g<<1)+s|0)>>1])-(A=k[(b=A+v|0)+2>>1])|0))>(0|(u=(0|O(T,(0|O(e[200944+(g<<2)>>2],(0|h)>0?u+(A<<1)|0:(u<<1)+A|0))/3e3|0))/256|0))){if(!o){if(k[s>>1]<0){r=s,A=A+u|0;break r}r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,o=B[s+20>>1]|B[s+22>>1]<<16,A=(r=177888+(r<<6)|0)+16|0,h=B[s+16>>1]|B[s+18>>1]<<16,k[A>>1]=h,k[A+2>>1]=h>>>16,k[A+4>>1]=o,k[A+6>>1]=o>>>16,A=B[s+4>>1]|B[s+6>>1]<<16,o=B[s>>1]|B[s+2>>1]<<16,k[r>>1]=o,k[r+2>>1]=o>>>16,k[r+4>>1]=A,k[r+6>>1]=A>>>16,A=B[s+12>>1]|B[s+14>>1]<<16,o=B[s+8>>1]|B[s+10>>1]<<16,k[r+8>>1]=o,k[r+10>>1]=o>>>16,k[r+12>>1]=A,k[r+14>>1]=A>>>16,A=B[s+28>>1]|B[s+30>>1]<<16,o=B[s+24>>1]|B[s+26>>1]<<16,k[r+24>>1]=o,k[r+26>>1]=o>>>16,k[r+28>>1]=A,k[r+30>>1]=A>>>16,A=B[s+36>>1]|B[s+38>>1]<<16,o=B[s+32>>1]|B[s+34>>1]<<16,k[r+32>>1]=o,k[r+34>>1]=o>>>16,k[r+36>>1]=A,k[r+38>>1]=A>>>16,A=B[s+44>>1]|B[s+46>>1]<<16,o=B[s+40>>1]|B[s+42>>1]<<16,k[r+40>>1]=o,k[r+42>>1]=o>>>16,k[r+44>>1]=A,k[r+46>>1]=A>>>16,A=B[s+52>>1]|B[s+54>>1]<<16,o=B[s+48>>1]|B[s+50>>1]<<16,k[r+48>>1]=o,k[r+50>>1]=o>>>16,k[r+52>>1]=A,k[r+54>>1]=A>>>16,A=B[s+60>>1]|B[s+62>>1]<<16,o=B[s+56>>1]|B[s+58>>1]<<16,k[r+56>>1]=o,k[r+58>>1]=o>>>16,k[r+60>>1]=A,k[r+62>>1]=A>>>16,f[r+16|0]=0,k[r>>1]=32768|B[r>>1],A=B[b+2>>1]}A=A+u|0}else{if((0|h)>=(0-u|0))break t;o||(k[s>>1]<0?r=s:(r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,o=B[s+20>>1]|B[s+22>>1]<<16,A=(r=177888+(r<<6)|0)+16|0,h=B[s+16>>1]|B[s+18>>1]<<16,k[A>>1]=h,k[A+2>>1]=h>>>16,k[A+4>>1]=o,k[A+6>>1]=o>>>16,A=B[s+4>>1]|B[s+6>>1]<<16,o=B[s>>1]|B[s+2>>1]<<16,k[r>>1]=o,k[r+2>>1]=o>>>16,k[r+4>>1]=A,k[r+6>>1]=A>>>16,A=B[s+12>>1]|B[s+14>>1]<<16,o=B[s+8>>1]|B[s+10>>1]<<16,k[r+8>>1]=o,k[r+10>>1]=o>>>16,k[r+12>>1]=A,k[r+14>>1]=A>>>16,A=B[s+28>>1]|B[s+30>>1]<<16,o=B[s+24>>1]|B[s+26>>1]<<16,k[r+24>>1]=o,k[r+26>>1]=o>>>16,k[r+28>>1]=A,k[r+30>>1]=A>>>16,A=B[s+36>>1]|B[s+38>>1]<<16,o=B[s+32>>1]|B[s+34>>1]<<16,k[r+32>>1]=o,k[r+34>>1]=o>>>16,k[r+36>>1]=A,k[r+38>>1]=A>>>16,A=B[s+44>>1]|B[s+46>>1]<<16,o=B[s+40>>1]|B[s+42>>1]<<16,k[r+40>>1]=o,k[r+42>>1]=o>>>16,k[r+44>>1]=A,k[r+46>>1]=A>>>16,A=B[s+52>>1]|B[s+54>>1]<<16,o=B[s+48>>1]|B[s+50>>1]<<16,k[r+48>>1]=o,k[r+50>>1]=o>>>16,k[r+52>>1]=A,k[r+54>>1]=A>>>16,A=B[s+60>>1]|B[s+62>>1]<<16,o=B[s+56>>1]|B[s+58>>1]<<16,k[r+56>>1]=o,k[r+58>>1]=o>>>16,k[r+60>>1]=A,k[r+62>>1]=A>>>16,f[r+16|0]=0,k[r>>1]=32768|B[r>>1],A=B[b+2>>1])),A=A-u|0}o=1,k[2+((g<<1)+r|0)>>1]=A,e[w+12>>2]=r}if((0|(g=g+1|0))==6)break}v=r}if((0|t)==(0|(_=(0|(r=_+1|0))<=169?r:0)))break}}e[36454]=t}}function Ta(t,A){var r,s,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0;Y=r=Y-48|0,F(+t),l=0|y(1),o=0|y(0),s=l;e:{t:{r:{if((h=2147483647&l)>>>0<=1074752122){if((1048575&l)==598523)break r;if(h>>>0<=1073928572){if((0|s)>0|(0|s)>=0){g=(t+=-1.5707963267341256)+-6077100506506192e-26,P[A>>3]=g,P[A+8>>3]=t-g-6077100506506192e-26,l=1;break e}g=(t+=1.5707963267341256)+6077100506506192e-26,P[A>>3]=g,P[A+8>>3]=t-g+6077100506506192e-26,l=-1;break e}if((0|s)>0|(0|s)>=0){g=(t+=-3.1415926534682512)+-12154201013012384e-26,P[A>>3]=g,P[A+8>>3]=t-g-12154201013012384e-26,l=2;break e}g=(t+=3.1415926534682512)+12154201013012384e-26,P[A>>3]=g,P[A+8>>3]=t-g+12154201013012384e-26,l=-2;break e}if(h>>>0<=1075594811){if(h>>>0<=1075183036){if((0|h)==1074977148)break r;if((0|s)>0|(0|s)>=0){g=(t+=-4.712388980202377)+-18231301519518578e-26,P[A>>3]=g,P[A+8>>3]=t-g-18231301519518578e-26,l=3;break e}g=(t+=4.712388980202377)+18231301519518578e-26,P[A>>3]=g,P[A+8>>3]=t-g+18231301519518578e-26,l=-3;break e}if((0|h)==1075388923)break r;if((0|s)>0|(0|s)>=0){g=(t+=-6.2831853069365025)+-2430840202602477e-25,P[A>>3]=g,P[A+8>>3]=t-g-2430840202602477e-25,l=4;break e}g=(t+=6.2831853069365025)+2430840202602477e-25,P[A>>3]=g,P[A+8>>3]=t-g+2430840202602477e-25,l=-4;break e}if(h>>>0>1094263290)break t}o=(ve=(g=t+-1.5707963267341256*(v=.6366197723675814*t+6755399441055744-6755399441055744))-(_=6077100506506192e-26*v))<-.7853981633974483,l=ee(v)<2147483648?~~v:-2147483648,o?(l=l-1|0,_=6077100506506192e-26*(v+=-1),g=t+-1.5707963267341256*v):ve>.7853981633974483&&(l=l+1|0,_=6077100506506192e-26*(v+=1),g=t+-1.5707963267341256*v),t=g-_,P[A>>3]=t,F(+t),o=0|y(1),y(0),((u=h>>>20|0)-(o>>>20&2047)|0)<17||(_=g,t=(g-=t=6077100506303966e-26*v)-(_=20222662487959506e-37*v-(_-g-t)),P[A>>3]=t,F(+t),o=0|y(1),y(0),(u-(o>>>20&2047)|0)<50||(_=g,t=(g-=t=20222662487111665e-37*v)-(_=84784276603689e-45*v-(_-g-t)),P[A>>3]=t)),P[A+8>>3]=g-t-_;break e}if(h>>>0>=2146435072)t-=t,P[A>>3]=t,P[A+8>>3]=t,l=0;else{for(M(0,0|o),M(1,1048575&s|1096810496),t=+S(),l=0,o=1;u=(r+16|0)+(l<<3)|0,g=+(0|(l=ee(t)<2147483648?~~t:-2147483648)),P[u>>3]=g,t=16777216*(t-g),l=1,u=o,o=0,u;);for(P[r+32>>3]=t,l=2;l=(o=l)-1|0,P[(r+16|0)+(o<<3)>>3]==0;);if(Pe=r+16|0,u=0,Y=w=Y-560|0,h=O(he=(0|(h=((l=(h>>>20|0)-1046|0)-3|0)/24|0))>0?h:0,-24)+l|0,((V=e[28105])+(b=(re=o+1|0)-1|0)|0)>=0)for(l=V+re|0,o=he-b|0;P[(w+320|0)+(u<<3)>>3]=(0|o)<0?0:+e[112432+(o<<2)>>2],o=o+1|0,(0|l)!=(0|(u=u+1|0)););for(J=h-24|0,l=0,u=(0|V)>0?V:0,H=(0|re)<=0;;){if(H)t=0;else for(T=l+b|0,o=0,t=0;t=P[(o<<3)+Pe>>3]*P[(w+320|0)+(T-o<<3)>>3]+t,(0|re)!=(0|(o=o+1|0)););if(P[(l<<3)+w>>3]=t,o=(0|l)==(0|u),l=l+1|0,o)break}ct=47-h|0,Se=48-h|0,gt=h-25|0,l=V;t:{for(;;){if(t=P[(l<<3)+w>>3],o=0,u=l,!(T=(0|l)<=0))for(;H=(w+480|0)+(o<<2)|0,b=ee(g=5960464477539063e-23*t)<2147483648?~~g:-2147483648,b=ee(t=-16777216*(g=+(0|b))+t)<2147483648?~~t:-2147483648,e[H>>2]=b,t=P[((u=u-1|0)<<3)+w>>3]+g,(0|l)!=(0|(o=o+1|0)););t=oa(t,J),t+=-8*xe(.125*t),t-=+(0|(H=ee(t)<2147483648?~~t:-2147483648));r:{a:{n:{if(ze=(0|J)<=0){if(J)break n;b=e[476+((l<<2)+w|0)>>2]>>23}else ie=u=(l<<2)+w|0,u=(b=e[u+476>>2])-((o=b>>Se)<<Se)|0,e[ie+476>>2]=u,H=o+H|0,b=u>>ct;if((0|b)<=0)break r;break a}if(b=2,!(t>=.5)){b=0;break r}}if(o=0,u=0,!T)for(;Xe=e[(ie=(w+480|0)+(o<<2)|0)>>2],T=16777215,u||(T=16777216,Xe)?(e[ie>>2]=T-Xe,u=1):u=0,(0|l)!=(0|(o=o+1|0)););a:if(!ze){o=8388607;n:switch(0|gt){case 1:o=4194303;break;case 0:break n;default:break a}e[(T=(l<<2)+w|0)+476>>2]=e[T+476>>2]&o}H=H+1|0,(0|b)==2&&(t=1-t,b=2,u&&(t-=oa(1,J)))}if(t!=0)break;if(u=0,!((0|V)>=(0|(o=l)))){for(;u=e[(w+480|0)+((o=o-1|0)<<2)>>2]|u,(0|o)>(0|V););if(u){for(h=J;h=h-24|0,!e[(w+480|0)+((l=l-1|0)<<2)>>2];);break t}}for(o=1;u=o,o=o+1|0,!e[(w+480|0)+(V-u<<2)>>2];);for(u=l+u|0;;){if(b=l+re|0,l=l+1|0,P[(w+320|0)+(b<<3)>>3]=e[112432+(he+l<<2)>>2],o=0,t=0,(0|re)>0)for(;t=P[(o<<3)+Pe>>3]*P[(w+320|0)+(b-o<<3)>>3]+t,(0|re)!=(0|(o=o+1|0)););if(P[(l<<3)+w>>3]=t,!((0|l)<(0|u)))break}l=u}(t=oa(t,24-h|0))>=16777216?(J=(w+480|0)+(l<<2)|0,o=ee(g=5960464477539063e-23*t)<2147483648?~~g:-2147483648,u=ee(t=-16777216*+(0|o)+t)<2147483648?~~t:-2147483648,e[J>>2]=u,l=l+1|0):(o=ee(t)<2147483648?~~t:-2147483648,h=J),e[(w+480|0)+(l<<2)>>2]=o}if(t=oa(1,h),!((0|l)<0)){for(o=l;u=o,P[(o<<3)+w>>3]=t*+e[(w+480|0)+(o<<2)>>2],o=o-1|0,t*=5960464477539063e-23,u;);if(T=0,!((0|l)<0))for(h=(0|V)>0?V:0,u=l;;){for(J=h>>>0<T>>>0?h:T,V=l-u|0,o=0,t=0;t=P[115200+(o<<3)>>3]*P[(o+u<<3)+w>>3]+t,re=(0|o)!=(0|J),o=o+1|0,re;);if(P[(w+160|0)+(V<<3)>>3]=t,u=u-1|0,o=(0|l)!=(0|T),T=T+1|0,!o)break}}if(t=0,(0|l)>=0)for(o=l;u=o,o=o-1|0,t+=P[(w+160|0)+(u<<3)>>3],u;);if(P[r>>3]=b?-t:t,t=P[w+160>>3]-t,o=1,(0|l)>0)for(;t+=P[(w+160|0)+(o<<3)>>3],u=(0|o)!=(0|l),o=o+1|0,u;);P[r+8>>3]=b?-t:t,Y=w+560|0,l=7&H,t=P[r>>3],(0|s)<0?(P[A>>3]=-t,P[A+8>>3]=-P[r+8>>3],l=0-l|0):(P[A>>3]=t,P[A+8>>3]=P[r+8>>3])}}return Y=r+48|0,l}function Ca(){var t=0,A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0,qA=0,or=0,Ir=0,pr=0,zr=0,Ur=0,qr=0,is=0,gs=0,ps=0,fa=0,ga=0,Aa=0;e[55925]=0,t=e[56772],e[56772]=t+1,r=e[55961],T=e[55922],V=pn(39.89822670059037*(A=+(0|t))),w=pn(22.30530784048753*A),A=+(0|T)/50*(+(0|r)/100)*(pn(14.765485471872028*A)+(V+w))*10,t=ee(A)<2147483648?~~A:-2147483648,e[56607]=t+e[56607];e:if(!(e[55923]<=0)){for(;;){for(r=eA(e[33209],0,1103515245,0),t=fe,t=Gi(r=r+12345|0,t=r>>>0<12345?t+1|0:t),e[33209]=t,t=8191+((t>>>0)%16383|0)|0,e[55929]=t,$t=+(0|t),A=.75*P[28387]+$t,P[28387]=A,bA=(0|(t=e[55924]))>(0|(Se=e[55928]))?.5*A:A,or=(o=.033*+e[56652])>0?1-o:1,r=e[56650]<<2,ct=(0|(Xe=e[55921]))==1&&(0|r)>263?263:r,Ir=111136+((vA=e[56651])<<1)|0,pr=111136+((gt=e[56658])<<1)|0,zr=(0|gt)>0,OA=e[55918],Ur=O(OA,40),qr=e[55925],is=P[27967],qA=e[56607],A=P[27979],J=P[27969],g=P[27970],zt=e[56780],he=e[56654],v=P[27976],_=P[27972],re=P[28388],ie=P[28389],T=e[55927],s=P[28383],b=e[55926],ve=e[55956],gs=P[27975],w=P[28131],l=P[28130],u=P[28123],H=P[28121],h=P[28122],ze=P[28120],Pe=P[28119],ps=P[28129],fa=P[28128],ga=P[28127],Aa=ds(0*P[27968]),Rt=0;;){V=l;t:{r:switch(Xe-1|0){case 0:re=0,l=H*u,u=h,h=s=l+(Pe*(re=(0|t)<=2?P[111312+(t<<3)>>3]:re)+ze*u);break t;case 1:if(s=0,(0|t)>=(0|T)){ie=0;break t}l=P[27965]-P[27966],P[27965]=l,s=.028*(ie=l+ie);break t;case 2:if(!b){ve=100,s=0;break t}ve=100,r=ee(l=+(0|t)/+(0|b)*100)<2147483648?~~l:-2147483648,s=+k[110928+((0|r)%100<<1)>>1],s=A*((+k[110928+((r+1|0)%100<<1)>>1]-s)*(l-+(0|r))+s);break t;case 3:break r;default:break t}b?(ve=256,r=ee(l=+(0|t)/+(0|b)*256)<2147483648?~~l:-2147483648,s=+k[111344+((0|r)%256<<1)>>1],s=A*((+k[111344+((r+1|0)%256<<1)>>1]-s)*(l-+(0|r))+s)):(ve=256,s=0)}if((0|t)>=(0|b)&&((0|qA)>0?(t=(0|Ur)/(0|qA)|0,v=0,_=0,_=gt>>>0<=87?.001*+k[pr>>1]:_,v=vA>>>0<=87?.001*+k[Ir>>1]*.1:v,Se=t>>zr,T=(0|(r=(b=(t-1|0)<=(0|ct))?t-2|0:ct))<=40?40:r,l=+k[111776+((T=b||(0|r)<40?T:ct)<<1)>>1],P[27966]=l,H=l,l=+(0|T),P[27965]=H*l*.333,he=(0|(r=t-T|0))>(0|he)?he:r,zt=0-(r=(0|zt)<0?0-he|0:he)|0,Pe=(l*=.00833)*l,Pe*=1-(ze=(H=(l=Dr(is*+((0|OA)/(0|T)|0)))*Aa)+H)-(H=l*-l),t=(0|(b=t+r|0))!=4):(e[55930]=0,e[55931]=0,e[55932]=0,e[55933]=0,Se=4,v=0,_=0,b=4,t=0),g=(t|=!qr)?o:g,J=t?or:J,t=0),t=t+1|0,l=s=ps*w+(ga*s+fa*V),w=V,(0|(Rt=Rt+1|0))==4)break}if(e[55926]=b,e[55956]=ve,e[55924]=t,P[28383]=s,e[55927]=T,P[28389]=ie,P[28388]=re,P[27972]=_,P[27976]=v,e[55928]=Se,e[56654]=he,e[56780]=zt,P[27970]=g,P[27969]=J,P[28122]=h,P[28120]=ze,P[28119]=Pe,P[28123]=u,P[28121]=H,P[28131]=w,P[28130]=s,(0|Xe)==5&&(s=6e3*((A=+(0|t)/+(0|b))+A+-1),P[28383]=s),A=s*J+P[28384]*g,P[28383]=A,P[28384]=A,(0|t)<(0|T)&&(A=v*$t+A,P[28383]=A),g=bA*P[27974],V=A*P[27973]+g,w=0,e[55916]!=2&&(w=P[27987],h=P[27986],P[27987]=h,A=g+A*_,P[27986]=A,g=P[28059],u=P[28058],P[28059]=u,A=g*P[28057]+(P[28055]*(w*P[27985]+(P[27983]*A+h*P[27984]))+u*P[28056]),P[28058]=A,w=P[28049],g=P[28051],h=P[28048],u=P[28047],o=P[28050],P[28051]=o,A=w*g+(u*A+h*o),P[28050]=A,w=P[28043],g=P[28041],h=P[28040],u=P[28039],o=P[28042],P[28043]=o,A=g*w+(u*A+h*o),P[28042]=A,w=P[28035],g=P[28033],h=P[28032],u=P[28031],o=P[28034],P[28035]=o,A=g*w+(u*A+h*o),P[28034]=A,w=P[28027],g=P[28025],h=P[28024],u=P[28023],o=P[28026],P[28027]=o,A=g*w+(u*A+h*o),P[28026]=A,w=P[28019],g=P[28017],h=P[28016],u=P[28015],o=P[28018],P[28019]=o,A=g*w+(u*A+h*o),P[28018]=A,w=P[28011],g=P[28009],h=P[28008],u=P[28007],o=P[28010],P[28011]=o,A=g*w+(u*A+h*o),P[28010]=A,w=P[28003],g=P[28001],h=P[28e3],u=P[27999],o=P[28002],P[28003]=o,A=g*w+(u*A+h*o),P[28002]=A,w=P[27995],g=P[27993],h=P[27992],u=P[27991],o=P[27994],P[27995]=o,w=g*w+(u*A+h*o),P[27994]=w),A=P[28385],P[28385]=V,g=P[28075],h=P[28074],P[28075]=h,u=P[28067],o=P[28066],P[28067]=o,g=g*P[28073]+(P[28071]*V+h*P[28072]),P[28074]=g,h=u*P[28065]+(P[28063]*V+o*P[28064]),P[28066]=h,u=P[28081],o=P[28083],l=P[28079],s=P[28080],v=P[28082],P[28083]=v,V=u*o+(l*(A=gs*bA+V-A)+s*v),P[28082]=V,u=P[28091],o=P[28089],l=P[28087],s=P[28088],v=P[28090],P[28091]=v,u=o*u+(l*A+s*v),P[28090]=u,o=P[28099],l=P[28097],s=P[28095],v=P[28096],_=P[28098],P[28099]=_,o=l*o+(s*A+v*_),P[28098]=o,l=P[28107],s=P[28105],v=P[28103],_=P[28104],J=P[28106],P[28107]=J,l=s*l+(v*A+_*J),P[28106]=l,s=P[28115],v=P[28113],_=P[28111],J=P[28112],re=P[28114],P[28115]=re,s=v*s+(_*A+J*re),P[28114]=s,v=P[28139],_=P[28137],J=P[28136],re=P[28135],ie=P[27971],H=P[28138],P[28139]=H,A=_*v+(re*(A*ie-(s-(l-(o-(u-(V-(w+g+h)))))))+J*H),P[28138]=A,A=P[27977]*(A*+e[50779]),s=+(0|(t=ee(A)<2147483648?~~A:-2147483648)),(0|(t=e[50776]))<e[50773]&&(b=t+1|0,r=e[50772],(T=e[50774])?(e[50776]=b,t=O(T,f[t+r|0])):(T=d[t+r|0],r=f[r+b|0],e[50776]=t+2,t=T|r<<8),s+=+((0|O(e[50775],(0|O(t,e[50780]))/1024|0))/40|0)),(0|(t=e[55962]))<=63&&(e[55962]=t+1,s=s*+(0|t)*.015625),(0|(t=e[55963]))<=0||(t=t-1|0,e[55963]=t,s=s*+(0|t)*.015625,t||(e[55962]=0)),r=(t=e[51293])+1|0,e[51293]=r,b=O(k[205184+(t<<1)>>1],e[50755])>>8,t=ee(s)<2147483648?~~s:-2147483648,(0|r)>=5500&&(e[51293]=0),r=e[51290],e[51290]=r+1,t=(0|(t=(0|(t=t+b|0))<=-32768?-32768:t))>=32767?32767:t,f[0|r]=t,r=e[51290],e[51290]=r+1,f[0|r]=t>>>8,b=(r=e[51292])+1|0,e[51292]=b,k[205184+(r<<1)>>1]=t,(0|b)>=5500&&(e[51292]=0),b=1,e[56606]=e[56606]+1,Ae[54046]<e[51290]+2>>>0)break e;if(t=e[55925]+1|0,e[55925]=t,!((0|t)<e[55923]))break}b=0}return b}function ba(t,A,r,s,o,l,u){var g,h,w,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0;Y=g=Y-80|0,e[g+76>>2]=A,w=g+55|0,h=g+56|0;e:{t:{r:{a:{n:for(;;){if(T=A,(2147483647^re)<(0|b))break a;re=b+re|0;o:{c:{u:{if(v=d[0|(b=T)])for(;;){l:{i:if(A=255&v){if((0|A)!=37)break l;for(v=b;;){if(d[v+1|0]!=37){A=v;break i}if(b=b+1|0,V=d[v+2|0],v=A=v+2|0,(0|V)!=37)break}}else A=b;if((0|(b=b-T|0))>(0|(Xe=2147483647^re)))break a;if(t&&Jr(t,T,b),b)continue n;e[g+76>>2]=A,b=A+1|0,ie=-1,d[A+2|0]!=36|f[A+1|0]-48>>>0>=10||(ie=f[A+1|0]-48|0,Pe=1,b=A+3|0),e[g+76>>2]=b,H=0;i:if((A=(v=f[0|b])-32|0)>>>0>31)J=b;else if(J=b,75913&(A=1<<A))for(;;){if(J=b+1|0,e[g+76>>2]=J,H|=A,(A=(v=f[b+1|0])-32|0)>>>0>=32)break i;if(b=J,!(75913&(A=1<<A)))break}i:if((0|v)!=42){if((0|(he=rn(g+76|0)))<0)break a;v=e[g+76>>2]}else{if(d[J+2|0]!=36|f[J+1|0]-48>>>0>=10){if(Pe)break u;if(v=J+1|0,!t){e[g+76>>2]=v,Pe=0,he=0;break i}A=e[r>>2],e[r>>2]=A+4,Pe=0,A=e[A>>2]}else e[((f[J+1|0]<<2)+o|0)-192>>2]=10,v=J+3|0,Pe=1,A=e[((f[J+1|0]<<3)+s|0)-384>>2];if(e[g+76>>2]=v,he=A,(0|A)>=0)break i;he=0-he|0,H|=8192}if(b=0,_=-1,d[0|v]==46)if(d[v+1|0]!=42)e[g+76>>2]=v+1,_=rn(g+76|0),A=e[g+76>>2],ze=1;else{if(d[v+3|0]!=36|f[v+2|0]-48>>>0>=10){if(Pe)break u;A=v+2|0,_=0,t&&(v=e[r>>2],e[r>>2]=v+4,_=e[v>>2])}else e[((f[v+2|0]<<2)+o|0)-192>>2]=10,A=v+4|0,_=e[((f[v+2|0]<<3)+s|0)-384>>2];e[g+76>>2]=A,ze=~_>>>31|0}else A=v,ze=0;for(;;){if(ve=b,J=28,V=A,(b=f[0|A])-123>>>0<4294967238)break r;if(A=V+1|0,!((b=d[123983+(b+O(ve,58)|0)|0])-1>>>0<8))break}e[g+76>>2]=A;i:{p:{if((0|b)!=27){if(!b)break r;if((0|ie)>=0){e[(ie<<2)+o>>2]=b,b=e[(v=(ie<<3)+s|0)+4>>2],e[g+64>>2]=e[v>>2],e[g+68>>2]=b;break p}if(!t)break o;je(g- -64|0,b,r,u);break i}if((0|ie)>=0)break r}if(b=0,!t)continue n}v=-65537&H,H=8192&H?v:H,ie=0,Se=84065,J=h;i:{p:{C:{m:{b:{h:{x:{I:{y:{z:{L:{U:{B:{M:{Q:{S:switch(b=f[0|V],(b=ve&&(15&b)==3?-33&b:b)-88|0){case 11:break i;case 9:case 13:case 14:case 15:break p;case 27:break x;case 12:case 17:break z;case 23:break L;case 0:case 32:break U;case 24:break B;case 22:break M;case 29:break Q;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 25:case 26:case 28:case 30:case 31:break c;default:break S}S:switch(b-65|0){case 0:case 4:case 5:case 6:break p;case 2:break b;case 1:case 3:break c;default:break S}if((0|b)==83)break h;break c}v=e[g+64>>2],V=e[g+68>>2],Se=84065;break y}b=0;M:switch(255&ve){case 0:case 1:case 6:e[e[g+64>>2]>>2]=re;continue n;case 2:T=e[g+64>>2],e[T>>2]=re,e[T+4>>2]=re>>31;continue n;case 3:k[e[g+64>>2]>>1]=re;continue n;case 4:f[e[g+64>>2]]=re;continue n;case 7:break M;default:continue n}T=e[g+64>>2],e[T>>2]=re,e[T+4>>2]=re>>31;continue n}_=_>>>0<=8?8:_,H|=8,b=120}if(T=h,ct=32&b,(v=e[g+64>>2])|(V=e[g+68>>2]))for(;f[0|(T=T-1|0)]=ct|d[124512+(15&v)|0],gt=!V&v>>>0>15|!!(0|V),ve=V,V=V>>>4|0,v=(15&ve)<<28|v>>>4,gt;);if(!(e[g+64>>2]|e[g+68>>2])|!(8&H))break I;Se=84065+(b>>>4|0)|0,ie=2;break I}if(b=h,V=T=e[g+68>>2],T|(v=e[g+64>>2]))for(;f[0|(b=b-1|0)]=7&v|48,ve=!V&v>>>0>7|!!(0|V),V=(T=V)>>>3|0,v=(7&T)<<29|v>>>3,ve;);if(T=b,!(8&H))break I;_=(0|(b=h-T|0))<(0|_)?_:b+1|0;break I}v=e[g+64>>2],V=b=e[g+68>>2],(0|b)<0?(V=T=0-(V+!!(0|v)|0)|0,v=0-v|0,e[g+64>>2]=v,e[g+68>>2]=T,ie=1,Se=84065):2048&H?(ie=1,Se=84066):Se=(ie=1&H)?84067:84065}T=$s(v,V,h)}if((0|_)<0&&ze)break a;if(H=ze?-65537&H:H,!(_|!!((b=e[g+64>>2])|(v=e[g+68>>2])))){T=h,_=0;break c}_=(0|(b=!(b|v)+(h-T|0)|0))<(0|_)?_:b;break c}if(J=(b=(b=Qa(T=(b=e[g+64>>2])||84639,0,V=_>>>0>=2147483647?2147483647:_))?b-T|0:V)+T|0,(0|_)>=0){H=v,_=b;break c}if(H=v,_=b,d[0|J])break a;break c}if(_){v=e[g+64>>2];break m}b=0,Nr(t,32,he,0,H);break C}e[g+12>>2]=0,e[g+8>>2]=e[g+64>>2],v=g+8|0,e[g+64>>2]=v,_=-1}b=0;m:{for(;;){if(!(T=e[v>>2]))break m;if(!((T=(0|(V=Ea(g+4|0,T)))<0)|V>>>0>_-b>>>0)){if(v=v+4|0,_>>>0>(b=b+V|0)>>>0)continue;break m}break}if(T)break t}if(J=61,(0|b)<0)break r;if(Nr(t,32,he,b,H),b)for(J=0,v=e[g+64>>2];;){if(!(T=e[v>>2])||(J=(T=Ea(g+4|0,T))+J|0)>>>0>b>>>0)break C;if(Jr(t,g+4|0,T),v=v+4|0,!(b>>>0>J>>>0))break}else b=0}Nr(t,32,he,b,8192^H),b=(0|b)<(0|he)?he:b;continue n}if((0|_)<0&&ze)break a;if(J=61,(0|(b=0|Zt[0|l](t,P[g+64>>3],he,_,H,b)))>=0)continue n;break r}f[g+55|0]=e[g+64>>2],_=1,T=w,H=v;break c}v=d[b+1|0],b=b+1|0}if(t)break e;if(!Pe)break o;for(b=1;;){if(t=e[(b<<2)+o>>2]){if(je((b<<3)+s|0,t,r,u),re=1,(0|(b=b+1|0))!=10)continue;break e}break}if(re=1,b>>>0>=10)break e;for(;;){if(e[(b<<2)+o>>2])break u;if((0|(b=b+1|0))==10)break}break e}J=28;break r}if((0|(v=(0|_)>(0|(V=J-T|0))?_:V))>(2147483647^ie))break a;if(J=61,(0|Xe)<(0|(b=(0|(_=v+ie|0))<(0|he)?he:_)))break r;Nr(t,32,b,_,H),Jr(t,Se,ie),Nr(t,48,b,_,65536^H),Nr(t,48,v,V,0),Jr(t,T,V),Nr(t,32,b,_,8192^H);continue}break}re=0;break e}J=61}e[56798]=J}re=-1}return Y=g+80|0,re}function wt(t,A,r,s,o,l,u,g,h){var w,b,v,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0,bA=0,vA=0,OA=0,qA=0,or=0,Ir=0,pr=0,zr=0,Ur=0,qr=0,is=0,gs=0,ps=0;Y=w=Y-96|0,Se=65535&h,J=-2147483648&(o^h),zt=ie=65535&o;e:{if(!((b=h>>>16&32767)-32767>>>0>4294934529&(v=o>>>16&32767)-32767>>>0>=4294934530)){if(T=s,!(!s&(0|(he=ve=2147483647&o))==2147418112?!(A|r):he>>>0<2147418112)){V=s,J=32768|o;break e}if(!(!(o=g)&(0|(re=ve=2147483647&h))==2147418112?!(l|u):re>>>0<2147418112)){V=g,J=32768|h,A=l,r=u;break e}if(!(A|T|2147418112^he|r)){if(!(o|l|u|re)){J=2147450880,A=0,r=0;break e}J|=2147418112,A=0,r=0;break e}if(!(o|l|2147418112^re|u)){if(o=A|T,s=r|he,A=0,r=0,!(s|o)){J=2147450880;break e}J|=2147418112;break e}if(!(A|T|r|he)){A=0,r=0;break e}if(!(o|l|u|re)){A=0,r=0;break e}(0|he)==65535|he>>>0<65535&&(ve=(T=!(s|ie))<<6,o=Ce(h=T?A:s)+32|0,wA(w+80|0,A,r,s,ie,(h=ve+((0|(h=Ce(T?r:ie)))==32?o:h)|0)-15|0),Pe=16-h|0,s=e[w+88>>2],zt=e[w+92>>2],r=e[w+84>>2],A=e[w+80>>2]),re>>>0>65535||(ie=(h=!(g|Se))<<6,T=Ce(o=h?l:g)+32|0,wA(w- -64|0,l,u,g,Se,(o=ie+((0|(o=Ce(h?u:Se)))==32?T:o)|0)-15|0),Pe=16+(Pe-o|0)|0,g=e[w+72>>2],Se=e[w+76>>2],l=e[w+64>>2],u=e[w+68>>2])}if(o=l,l=u<<15|l>>>17,zr=r,ve=eA(ze=-32768&(h=o<<15),o=0,r,0),gt=o=fe,Ur=l,he=A,A=eA(l,0,A,0),l=fe+o|0,r=A>>>0>(h=A+ve|0)>>>0?l+1|0:l,T=0,A=eA(he,_,ze,_),o=(l=h)+fe|0,ie=o=A>>>0>(re=T+A|0)>>>0?o+1|0:o,qr=(0|l)==(0|o)&T>>>0>re>>>0|o>>>0<l>>>0,is=s,Xe=eA(ze,_,s,0),gs=fe,A=eA(zr,_,Ur,_),T=fe+gs|0,T=A>>>0>(ct=A+Xe|0)>>>0?T+1|0:T,A=Se<<15|g>>>17,s=eA(Rt=g<<15|u>>>17,0,he,_),l=fe+T|0,bA=l=s>>>0>($t=s+ct|0)>>>0?l+1|0:l,l=(s=(0|r)==(0|gt)&h>>>0<ve>>>0|r>>>0<gt>>>0)+l|0,Se=l=r>>>0>(vA=r+$t|0)>>>0?l+1|0:l,u=vA,r=l,zt=eA(ze,_,OA=65536|zt,H),ps=fe,s=eA(is,V,Ur,_),o=fe+ps|0,h=o=s>>>0>(qA=s+zt|0)>>>0?o+1|0:o,A=eA(or=-2147483648|A,0,he,_),l=fe+o|0,l=A>>>0>(Ir=A+qA|0)>>>0?l+1|0:l,A=eA(Rt,V,zr,_),pr=l,l=l+fe|0,ve=A>>>0>(gt=A+Ir|0)>>>0?l+1|0:l,o=r+gt|0,l=ze=(A=0)>>>0>(he=A+u|0)>>>0?o+1|0:o,r=(A=he+qr|0)>>>0<he>>>0?l+1|0:l,Pe=((v+b|0)+Pe|0)-16383|0,s=eA(or,V,zr,_),g=fe,o=eA(OA,V,Ur,_),l=fe+g|0,H=(0|g)==(0|(l=o>>>0>(u=o+s|0)>>>0?l+1|0:l))&s>>>0>u>>>0|l>>>0<g>>>0,g=l,o=eA(Rt,V,is,V),l=fe+l|0,o=l=(s=o+u|0)>>>0<o>>>0?l+1|0:l,u=(0|l)==(0|g)&s>>>0<u>>>0|l>>>0<g>>>0,l=0,l=(g=u)>>>0>(u=u+H|0)>>>0?1:l,g=u,u=eA(or,V,OA,V),l=fe+l|0,qr=g=g+u|0,u=u>>>0>g>>>0?l+1|0:l,g=s,_=o,o=(0|T)==(0|gs)&Xe>>>0>ct>>>0|T>>>0<gs>>>0,l=0,o=((H=T=(0|T)==(0|bA)&ct>>>0>$t>>>0|T>>>0>bA>>>0)>>>0>(T=o+T|0)>>>0?1:l)+_|0,l=u,H=o=(s=s+T|0)>>>0<T>>>0?o+1|0:o,Xe=s,o=s=(0|o)==(0|_)&s>>>0<g>>>0|o>>>0<_>>>0,T=s=s+qr|0,u=l=o>>>0>s>>>0?l+1|0:l,o=eA(Rt,V,OA,V),_=fe,s=eA(or,V,is,V),l=fe+_|0,s=l=s>>>0>(g=s+o|0)>>>0?l+1|0:l,o=(l=(0|_)==(0|l)&o>>>0>g>>>0|l>>>0<_>>>0)+u|0,u=o=s>>>0>(ct=s+T|0)>>>0?o+1|0:o,l=g+H|0,o=l=(s=(o=0)+Xe|0)>>>0<o>>>0?l+1|0:l,g=(0|H)==(0|l)&s>>>0<Xe>>>0|l>>>0<H>>>0,l=u,l=(u=g+(_=ct)|0)>>>0<g>>>0?l+1|0:l,Xe=u,g=s,T=o,o=(s=(s=(s=(0|h)==(0|ps)&zt>>>0>qA>>>0|h>>>0<ps>>>0)+(h=(0|h)==(0|pr)&qA>>>0>Ir>>>0|h>>>0>pr>>>0)|0)+(o=(0|ve)==(0|pr)&gt>>>0<Ir>>>0|ve>>>0<pr>>>0)|0)+T|0,l=u=l,T=u=(g=(0|(o=(s=h=(H=ve)+g|0)>>>0<H>>>0?o+1|0:o))==(0|T)&g>>>0>s>>>0|o>>>0<T>>>0)+Xe|0,u=l=g>>>0>u>>>0?l+1|0:l,g=s,l=0,h=o,o=o+((_=H=(0|Se)==(0|ze)&he>>>0<vA>>>0|Se>>>0>ze>>>0)>>>0>(H=H+((0|Se)==(0|bA)&$t>>>0>vA>>>0|Se>>>0<bA>>>0)|0)>>>0?1:l)|0,l=u,h=l=(u=g=(0|(o=(s=s+H|0)>>>0<H>>>0?o+1|0:o))==(0|h)&s>>>0<g>>>0|o>>>0<h>>>0)>>>0>(g=g+T|0)>>>0?l+1|0:l,65536&l?Pe=Pe+1|0:(T=ie>>>31|0,l=h<<1|g>>>31,g=g<<1|o>>>31,h=l,l=o<<1|s>>>31,s=s<<1|r>>>31,o=l,l=ie<<1|re>>>31,re<<=1,ie=l,l=r<<1|A>>>31,A=A<<1|T,r=l|(u=0)),(0|Pe)>=32767)J|=2147418112,A=0,r=0;else{t:{if((0|Pe)<=0){if((u=1-Pe|0)>>>0<=127){wA(w+48|0,re,ie,A,r,l=Pe+127|0),wA(w+32|0,s,o,g,h,l),dr(w+16|0,re,ie,A,r,u),dr(w,s,o,g,h,u),re=e[w+32>>2]|e[w+16>>2]|!!(e[w+48>>2]|e[w+56>>2]|e[w+52>>2]|e[w+60>>2]),ie=e[w+36>>2]|e[w+20>>2],A=e[w+40>>2]|e[w+24>>2],r=e[w+44>>2]|e[w+28>>2],s=e[w>>2],o=e[w+4>>2],u=e[w+8>>2],l=e[w+12>>2];break t}A=0,r=0;break e}u=g,l=65535&h|Pe<<16}V|=u,J|=l,(!A&(0|r)==-2147483648?!(re|ie):(0|r)>0|(0|r)>=0)?A|re|-2147483648^r|ie?(A=s,r=o):(T=J,J=(s=(0|(l=o))==(0|(r=(r=A=1&s)>>>0>(A=A+s|0)>>>0?l+1|0:l))&A>>>0<s>>>0|r>>>0<l>>>0)>>>0>(V=s+V|0)>>>0?T+1|0:T):(s=(0|o)==(0|(r=(A=s+1|0)?o:o+1|0))&A>>>0<s>>>0|r>>>0<o>>>0,o=J,J=(V=s+V|0)>>>0<s>>>0?o+1|0:o)}}e[t>>2]=A,e[t+4>>2]=r,e[t+8>>2]=V,e[t+12>>2]=J,Y=w+96|0}function Qr(t,A,r,s,o,l,u){var g,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0;Y=g=Y-480|0,e[g+476>>2]=0,e[g+456>>2]=0,e[g+460>>2]=0,e[g+448>>2]=0,e[g+452>>2]=0,e[g+440>>2]=0,e[g+444>>2]=0,e[g+432>>2]=0,e[g+436>>2]=0,h=0;e:if(e[t+684>>2]){for(V=u?e[u>>2]:V;b=d[A+h|0],f[(g+112|0)+h|0]=b,w=h+1|0,b&&(b=h>>>0<158,h=w,b););if(f[w+(g+112|0)|0]=0,!((re=268435456&l)|!(8&e[47197]))){w=0;t:if(223&(b=d[0|A]))for(h=0;;){if(f[(g+272|0)+h|0]=b,!(223&(b=d[(w=h+1|0)+A|0])))break t;if(v=h>>>0<118,h=w,!v)break}f[(h=g+272|0)+w|0]=0,e[g+48>>2]=h,ar(e[47195],(0|l)>=0?87019:86877,g+48|0)}e[g+464>>2]=A,e[t+8208>>2]=0,e[t+8212>>2]=0,o&&(f[0|o]=0);t:{r:if(223&(h=d[0|A]))for(ie=536870912&l,he=4096&l,ve=g+105|0,w=A,b=0;;){v=Wt(g+476|0,w),J=!!(0|BA(e[g+476>>2]))+J|0,_=d[(h=(T=255&h)+t|0)+7668|0];a:if(!((H=e[g+476>>2])-48>>>0<10|H-2406>>>0<10)|(J?d[t+170|0]:0)){n:if((b=e[g+476>>2]-e[t+600>>2]|0)>>>0>127||!(b=e[6192+((b<<2)+t|0)>>2])){if(_){for(H=5168+((T<<2)+t|0)|0,_=_+(h=d[h+7924|0])|0,Pe=T|d[w+1|0]<<8,b=0;e[(w=(h<<2)+t|0)+7184>>2]==(0|Pe)&&(e[g+472>>2]=e[g+464>>2],Tt(t,g+472|0,A,2,e[w+6704>>2],g+432|0,l,V),(0|(w=e[g+432>>2]))>0&&(w=w+35|0,e[g+432>>2]=w),b=1,Tt(t,g+464|0,A,1,e[H>>2],g+448|0,l,V),e[g+448>>2]>(0|w)||(w=e[g+444>>2],e[g+456>>2]=e[g+440>>2],e[g+460>>2]=w,w=e[g+436>>2],e[g+448>>2]=e[g+432>>2],e[g+452>>2]=w,e[g+464>>2]=e[g+472>>2])),_>>>0>(h=h+1|0)>>>0;);if(b)break n}o:{c:{if(!(h=e[5168+((T<<2)+t|0)>>2])){if(Tt(t,g+464|0,A,0,e[t+5168>>2],g+448|0,l,V),e[g+448>>2])break o;if(16&d[188808])break c;if(b=Wt(g+468|0,T=(w=e[g+464>>2])-1|0),h=e[g+468>>2],!(e[t+600>>2]<=0|(0|h)>577)){if(Di(h)){e[g+32>>2]=21,lt(r,87049,g+32|0);break t}h=e[g+468>>2]}if((0|h)==57384&&((0|(_=e[t+92>>2]))<=e[47352]||(e[47352]=_)),Pn(h)&&((0|(h=e[t+72>>2]))<=e[47352]||(e[47352]=h)),!((_=(h=e[g+468>>2])-192|0)>>>0>413)&&(_=d[_+94240|0])&&(b=b-1|0,!(d[w-2|0]==32&d[b+w|0]==32))){for(e[g+472>>2]=T,f[0|T]=_;v=d[(h=w)+b|0],f[0|h]=v,w=h+1|0,(0|v)!=32;);if((0|b)>0&&Je(h,32,b),e[t+24>>2]&&!((0|xi(94222,e[g+468>>2]))<=0)){e[g+464>>2]=T,b=0;break a}b=0,f[0|r]=0,e[g+464>>2]=A,e[t+8208>>2]=0,e[t+8212>>2]=0;break a}if(!(h=VA(h))||(0|(w=e[h+4>>2]))==e[t+600>>2])break c;if((0|w)==e[t+188>>2]){e[g+4>>2]=Te(g- -64|0,e[t+192>>2]),e[g>>2]=21,lt(r,87218,g);break t}if(!(4&d[h+16|0]))break c;e[g+20>>2]=Te(g- -64|0,e[h+12>>2]),e[g+16>>2]=21,lt(r,87218,g+16|0);break t}if(Tt(t,g+464|0,A,1,h,g+448|0,l,V),e[g+448>>2])break o}c:if(!((h=e[g+476>>2])-768>>>0<112)){if(BA(h)){if(f[(v+e[g+464>>2]|0)-1|0]<33&(0|J)<=1)break c;if(f[0|r]=0,!u)break r;e[u>>2]=4096|e[u>>2];break r}Mt(t,e[g+476>>2],-1,g+272|0,0),d[g+272|0]&&(e[g+448>>2]=1,e[g+452>>2]=g+272)}e[g+464>>2]=(v+e[g+464>>2]|0)-1;break n}e[t+288>>2]=0}else Tt(t,g+464|0,A,v,b,g+448|0,l,V);if(w=(h=e[g+452>>2])||86135,e[g+452>>2]=w,b=0,!(e[g+448>>2]<=0)){if(h=1|e[g+456>>2],(0|l)<0)break e;if(!(d[0|w]!=21|he)){Gt(r,w);break t}if(!(!(8&e[47197])|re))n:if(h=e[47195],(0|(v=e[h+76>>2]))>=0&(!v|e[56823]!=(-1073741825&v)))T=e[(v=h+76|0)>>2],e[v>>2]=T||1073741823,e[h+80>>2]==10||(0|(T=e[h+20>>2]))==e[h+16>>2]?da(h):(e[h+20>>2]=T+1,f[0|T]=10),e[v>>2]=0;else{if(e[h+80>>2]!=10&&(0|(v=e[h+20>>2]))!=e[h+16>>2]){e[h+20>>2]=v+1,f[0|v]=10;break n}da(h)}if(v=-32769&(h=e[g+456>>2]),e[g+456>>2]=v,!(!o|!v|(1024&h?ie:0))){t=e[g+464>>2],Gt(o,w),h=v|(Se=(r=t)-qt(A,t=g+112|0,kt(t))|0,(1151&h)==1024?Se:0);break e}(h=e[g+460>>2])&&(f[0|h]=69),Vn(t,r,s,w)}}else f[g+104|0]=95,qt(ve,w,v),h=1,f[105+(g+v|0)|0]=0,St(t,g+104|0,g- -64|0),b-1>>>0<=4294967293&&(h=kt(h=g- -64|0)+h|0,f[0|h]=11,f[h+1|0]=0,h=0),Vn(t,r,s,g- -64|0),e[g+464>>2]=w+v,b=h;if(w=e[g+464>>2],!(223&(h=d[0|w])))break}qt(A,t=g+112|0,kt(t))}h=0}return Y=g+480|0,h}function ZA(t,A){var r,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0;Y=r=Y-2976|0,e[A>>2]=1,s=e[t+20>>2],e[(g=r+2960|0)>>2]=e[t+16>>2],e[g+4>>2]=s,s=e[t+12>>2],e[(g=r+2952|0)>>2]=e[t+8>>2],e[g+4>>2]=s,s=e[t+4>>2],e[r+2944>>2]=e[t>>2],e[r+2948>>2]=s,e[50303]||bt();e:if(t=e[r+2948>>2],d[0|t]&&t||((t=e[r+2944>>2])||(t=(t=e[r+2952>>2])||85055,e[r+2944>>2]=t),FA(s=r+80|0,t,60),gn(s,0),!(l=xs(201216,s))||(e[r+2948>>2]=e[l+4>>2]+1,d[r+2958|0]|d[r+2956|0]|d[r+2957|0]))){J=r+1536|0,Y=V=Y-336|0;t:if(!(!(t=e[(H=r+2944|0)+4>>2])|!d[0|t])){if((0|(re=kt(t)))>=0){for(s=re>>>0>=79?79:re,b=1;t=Ss(f[e[H+4>>2]+o|0]),f[(V+256|0)+o|0]=t,b=((255&t)==45)+b|0,t=(0|s)!=(0|o),o=o+1|0,t;);if((0|b)!=1)break t}b=1}if((0|(v=e[50303]))<=0)e[J>>2]=0,t=0;else{for(g=(0|b)>=0;;){w=e[201216+(ve<<2)>>2];t:if(Zr(e[w+8>>2],88032,3)){if((t=e[H+4>>2])&&Zr(t,91687,3)){if(g){t=100;r:if(b){if(s=0,o=e[w+4>>2],!(ie=d[0|o])){if(!Zr(V+256|0,90013,9))break r;break t}for(;;){for(Pe=1,h=o+1|0,he=1,Se=0,o=0;(0|o)<(0|re)&&(0|(t=f[(V+256|0)+o|0]))!=45||(t=0),Se=((T=(0|(_=d[o+h|0]))==45)&!!(0|(he=(T?0:_)<<24>>24==(0|t)?he:0)))+Se|0,o=o+1|0,Pe=T+Pe|0,_;);if(o=o+h|0,(T=he+Se|0)&&(s=(0|(t=O((h=(0|(t=b-T|0))<=0?5:5-t|0)-((0|(t=Pe-T|0))>0?t:0)|0,100)-(ie<<24>>24<<1)|0))>(0|s)?t:s),!(ie=d[0|o]))break}if(!(t=s))break t}(s=e[H>>2])&&(t=sr(s,e[w>>2])?sr(s,e[w+8>>2])?t:t+400|0:t+500|0),((o=d[H+12|0])-1&255)>>>0>1||((s=d[w+12|0])-1&255)>>>0>1||(t=(0|s)!=(0|o)?t-50|0:t+50|0),o=d[H+13|0],t=d[w+12|0]!=2|o>>>0>12?t:d[w+13|0]>12?t+5|0:t,(s=d[w+13|0])&&((s=((o?O(o,100):3e3)>>>0)/(s>>>0)|0)>>>0<=99&&(s=1e4/(s>>>0)|0),t=(h=t)+((t=5-(((s-100&65535)>>>0)/10|0)|0)>>31&t)|0,t=o?t+10|0:t),t=(0|t)<=1?1:t}else{if(Zr(e[w+8>>2],V+256|0,re))break t;t=100}e[J+(u<<2)>>2]=w,e[w+16>>2]=t}else e[J+(u<<2)>>2]=w;u=u+1|0}if((0|v)==(0|(ve=ve+1|0)))break}e[J+(u<<2)>>2]=0,t=0,u&&(us(J,u,8),t=u)}if(Y=V+336|0,b=t,t||(e[A>>2]=0,t=xs(201216,85055),e[r+1536>>2]=t,b=!!(0|t)),A=d[r+2957|0],g=2,(0|(t=d[r+2956|0]))!=2&&(g=2,(A-1&255)>>>0<12||(Xe=(0|t)!=1,g=(0|t)==1)),v=(u=e[132136+(g<<2)>>2])+(_=A>>>0<60)|0,t=0,(0|b)>0)for(s=0;;){l=e[(r+1536|0)+(ze<<2)>>2];t:{r:{a:{if(Xe){if(_||(A=0,s))break r}else{if(A=d[l+12|0],s|_)break a;A=(0|A)!=(0|g)}if(o=0,A|d[l+13|0]<60)break t;break r}if((0|A)!=(0|g)){o=s;break t}}e[(r+80|0)+(s<<2)>>2]=l,o=s+1|0}t:if(d[l+15|0]){if(T=0,A=t,s=o,!((0|t)>11))for(;;){if((o=d[0|v])||(v=u,o=d[0|u]),t=e[l+12>>2],h=O(A,24)+202624|0,e[h+8>>2]=e[l+8>>2],e[h+12>>2]=t,t=e[l+4>>2],e[h>>2]=e[l>>2],e[h+4>>2]=t,t=e[l+20>>2],e[h+16>>2]=e[l+16>>2],e[h+20>>2]=t,f[h+14|0]=o,e[(r+80|0)+(s<<2)>>2]=h,v=v+1|0,s=s+1|0,t=A+1|0,(T=T+1|0)>>>0>=d[l+15|0])break t;if(o=(0|A)<11,A=t,!o)break}}else s=o;if((0|(ze=ze+1|0))==(0|b))break}else{if(!l)break e;s=0}t:if(!(!(o=d[0|v])|(0|t)>=12))for(;;){if(A=e[l+12>>2],u=O(t,24)+202624|0,e[u+8>>2]=e[l+8>>2],e[u+12>>2]=A,A=e[l+4>>2],e[u>>2]=e[l>>2],e[u+4>>2]=A,A=e[l+20>>2],e[u+16>>2]=e[l+16>>2],e[u+20>>2]=A,f[u+14|0]=o,e[(r+80|0)+(s<<2)>>2]=u,s=s+1|0,!(o=d[0|(v=v+1|0)]))break t;if(A=(0|t)<11,t=t+1|0,!A)break}s?(t=e[(r+80|0)+(d[r+2958|0]%(0|s)<<2)>>2],(A=d[t+14|0])?(f[202976]=0,e[r+48>>2]=47,lt(r+2971|0,91351,r+48|0),f[r+2971|0]=0,A>>>0<=9?(e[r+20>>2]=A,e[r+16>>2]=r+2971,lt(202976,91378,r+16|0)):(e[r+36>>2]=A-10,e[r+32>>2]=r+2971,lt(202976,91503,r+32|0)),t=e[t+8>>2],e[r+4>>2]=202976,e[r>>2]=t,t=202912,lt(202912,87760,r)):t=e[t+8>>2]):t=0}else{if(t=e[l+8>>2],!d[202976])break e;e[r+64>>2]=t,e[r+68>>2]=202976,t=202912,lt(202912,87760,r- -64|0)}return Y=r+2976|0,t}function oA(t,A,r,s,o){var l,u,g=0,h=0,w=0,b=0,v=0,T=0,_=0;Y=l=Y-464|0,f[l+432|0]=0,f[l+368|0]=0,f[l+304|0]=0,f[l+292|0]=0,v=(0|A)/10|0,g=e[33273];e:{if(!(u=2&s)|e[33272]!=2){_=32&s?113:111,b=1&s,T=A-O(v,10)|0;t:{r:{a:{n:{o:{c:{u:{l:if(d[0|g])g=0;else{i:{if(8&s){if(e[l+288>>2]=A,lt(h=l+452|0,91198,l+288|0),g=St(t,h,l+304|0)){h=0;break l}e[l+272>>2]=A,lt(h=l+452|0,91314,l+272|0),g=St(t,h,l+304|0),h=0}else{if(!b)break i;if(w=Gt(l+432|0,133104),4&s){if(e[l+260>>2]=_,e[l+256>>2]=A,lt(h=l+452|0,91324,l+256|0),g=St(t,h,l+304|0),d[133116]&&g)break u;if(h=g,g)break l}e[l+244>>2]=_,e[l+240>>2]=A,lt(h=l+452|0,91384,l+240|0),h=g=St(t,h,l+304|0)}if(g)break l}i:{if(u){if(!(1&f[133096]))break i;e[l+208>>2]=A,lt(g=l+452|0,91498,l+208|0),g=St(t,g,l+304|0)}else w=e[t+108>>2],e[l+224>>2]=A,lt(g=l+452|0,(0|r)>=2?91700:(262144&w)>>>18|0?91534:91700,l+224|0),g=St(t,g,l+304|0);if(g)break l}!b|!(32&d[t+109|0])?(e[l+192>>2]=A,lt(g=l+452|0,91766,l+192|0),g=St(t,g,l+304|0)):g=0}if(!(16&s)|(0|A)>9)break o;g=h;break c}if(Gt(w,133116),!(16&s)|(0|A)>9)break n}St(t,88875,l+368|0);break r}if(!g)break a;g=h}f[l+368|0]=0;break r}a:if(b&&(e[l+180>>2]=_,e[l+176>>2]=v,lt(g=l+452|0,91846,l+176|0),St(t,g,l+368|0))){if(h=1,!T|!(16&d[t+109|0]))break a;ts(l+368|0,133104)}else h||(e[l+160>>2]=v,lt(h=l+452|0,512&s?91936:92016,l+160|0),St(t,h,l+368|0),h=0);if(g=T,d[l+368|0]||(g=T,16&d[t+106|0]&&(e[l+144>>2]=254&v,lt(g=l+452|0,92016,l+144|0),St(t,g,l+368|0),g=(0|A)%20|0)),f[l+304|0]=0,v=g,(0|g)<=0)g=h;else{if(u&&(g=e[33273],d[0|g])){Gt(l+304|0,g),f[l+432|0]=0,w=b;break t}if(w=0,8&s&&(e[l+128>>2]=v,lt(s=l+452|0,91314,l+128|0),w=St(t,s,l+304|0)),!b|16&d[t+104|0]||(e[l+116>>2]=_,e[l+112>>2]=v,lt(s=l+452|0,91384,l+112|0),h=(w=St(t,s,l+304|0))?1:h),g=h,!w){a:{if(!u|!(1&e[33274])){if(!(16&d[t+104|0])&&u)break a;h=e[t+108>>2],e[l+96>>2]=v,lt(s=l+452|0,(0|r)>=2?91700:(262144&h)>>>18|0?91534:91700,l+96|0),r=St(t,s,l+304|0)}else e[l+80>>2]=v,lt(r=l+452|0,91498,l+80|0),r=St(t,r,l+304|0);if(r)break r}e[l+64>>2]=v,lt(r=l+452|0,91766,l- -64|0),St(t,r,l+304|0)}}}w=b,d[l+432|0]|g|!b||((0|A)<20|(16&d[t+104|0]?0:T)||(St(t,92162,l+432|0),w=1,!d[l+432|0]))&&(St(t,92205,l+432|0),w=1)}if(!(!(r=f[l+304|0])|!(48&(A=e[t+104>>2]))|!d[l+368|0])){if(St(t,90824,l+292|0),!w|!(8&d[t+109|0])||(f[l+292|0]=0),16&d[t+104|0]){e[l+28>>2]=l+432,e[l+24>>2]=l+368,e[l+20>>2]=l+292,e[l+16>>2]=l+304,lt(o,91059,l+16|0),s=1;break e}e[l+12>>2]=l+432,e[l+8>>2]=l+304,e[l+4>>2]=l+292,e[l>>2]=l+368,lt(o,91059,l),s=1;break e}512&A&&(!r|(0|(A=kt(l+368|0)-1|0))<0||(g=d[e[144464+(f[0|(A=A+(l+368|0)|0)]<<2)>>2]+11|0]!=2,(0|(s=d[e[144464+(r<<2)>>2]+11|0]))==1&&(s=d[e[144464+(f[l+305|0]<<2)>>2]+11|0]),g|(255&s)!=2||(f[0|A]=0))),!(8&d[t+110|0])|!d[l+432|0]?(e[l+56>>2]=l+432,e[l+52>>2]=l+304,e[l+48>>2]=l+368,lt(o,92282,l+48|0)):(e[l+36>>2]=l+304,e[l+32>>2]=l+368,(0|(A=lt(o,90368,l+32|0)))>0&&(A=d[e[144464+(d[(r=A-1|0)+o|0]<<2)>>2]+11|0]==2?r:A),Gt(A+o|0,l+432|0))}else Gt(o,g);s=0}e:if(268435456&(t=e[t+104>>2])){if((0|kt(o))<=0)break e;for(A=0,t=0;d[0|(r=t+o|0)]==6&&(A&&(f[0|r]=5),A=1),t=t+1|0,(0|kt(o))>(0|t););}else if(256&t&&(A=0,!((0|(t=(b=kt(o))-1|0))<0))){if(t)for(T=-2&b,g=0;d[0|(h=t+o|0)]==6?(r=1,A&&(f[0|h]=5)):r=A,d[0|(h=h-1|0)]==6?(A=1,r&&(f[0|h]=5)):A=r,t=t-2|0,(0|T)!=(0|(g=g+2|0)););1&b&&(!A|d[0|(t=t+o|0)]!=6||(f[0|t]=5))}return Y=l+464|0,s}function Us(t,A,r,s){var o,l,u=0,g=0,h=0,w=0,b=0,v=0,T=0;if(Y=o=Y-352|0,f[o+304|0]=0,f[o+224|0]=0,f[o+64|0]=0,h=e[e[47192]+292>>2],T=Wt(o+348|0,A),(1048320&(u=e[o+348>>2]))==57344&&(u&=255,e[o+348>>2]=u),2&s&&Os(u)&&St(t,85437,o+304|0),u=Dn(e[o+348>>2],t),e[o+348>>2]=u,v=1&s,Mt(t,u,f[0|(l=A+T|0)],o+224|0,v),!(A=d[o+224|0])){e:if((A=qn(e[o+348>>2]))&&(e[o+348>>2]=16383&A,4&s)){t:switch(1073741823&(A>>=14)){case 0:case 3:break e;default:break t}St(t,A=e[131232+(A<<2)>>2],o+304|0),d[o+304|0]||(f[o+306|0]=ti(84744),b=A,A=o+304|3,St(e[47194],b,A),d[o+307|0]&&(k[o+304>>1]=5385,A=kt(A)+(o+304|0)|0,f[A+5|0]=0,f[A+4|0]=h,f[A+3|0]=21))}Mt(t,e[o+348>>2],f[0|l],o+224|0,v),A=d[o+224|0]}e:{t:{if(A&=255){if((0|A)!=21)break t;Gt(r,o+224|0),T=0;break e}if(A=1632,!((0|(u=e[o+348>>2]))<1632)){for(w=103360;;){if((0|u)>=(A+10|0)){if(!(A=e[(w=w+4|0)>>2]))break t;if((0|A)<=(0|u))continue;break t}break}(0|(A=48+(u-A|0)|0))<=0||Mt(t,A,0,o+224|0,v)}}t:{r:{a:{n:{if(A=VA(e[o+348>>2])){if(u=e[A+4>>2],!A|1&(w=e[A+16>>2])||(g=e[47192],e[g+600>>2]==(0|u)|e[g+188>>2]==(0|u)|e[g+184>>2]==(0|u)||(f[o+144|0]=0,St(g,e[A>>2],o- -64|0)?(0|(g=e[47192]))!=(0|t)&&(h=e[t+292>>2],Gt(o+144|0,o- -64|0),f[o+66|0]=e[g+292>>2]):(f[o+66|0]=ti(84744),St(e[47194],e[A>>2],o+144|0)),d[o+144|0]&&(k[o+64>>1]=5385,Gt(3|(g=o- -64|0),b=o+144|0),g=kt(b)+g|0,f[g+5|0]=0,f[g+4|0]=h,f[g+3|0]=21))),d[o+224|0])break t;if(!u||(h=e[47192],e[h+188>>2]!=(0|u)))break n;A=e[h+192>>2];break r}if(d[o+224|0])break t;w=0,u=0;break a}if((A=e[A+12>>2])&&!(2&w))break r}A=25966}if((e[t+212>>2]==(0|A)&(0|A)!=27503||(f[o+226|0]=ti(Te(o+47|0,A)),(A=e[47194])&&((0|(h=e[o+348>>2]))>55215||(0|(g=h-44032|0))<0?Mt(A,h,f[0|l],o+224|3,v):(f[o+52|0]=32,A=b=o+53|0,h-50500>>>0>=588&&(A=br(4352+((g>>>0)/588|0)|0,b)+b|0),br(4449+(((h=(g>>>0)/28|0)>>>0)%21|0)|0,A),br(4519+(g-O(h,28)|0)|0,A+3|0),f[A+6|0]=32,f[A+7|0]=0,f[o+227|0]=0,A=o+224|3,Qr(e[47194],b,A,77,0,0,0),KA(e[47194],A,0,-1,0)),A=o+224|3,d[o+227|0]==21&&(f[o+226|0]=ti(o+224|4),Mt(e[47194],e[o+348>>2],f[0|l],A,v)),ns(e[e[32972]+60>>2]),d[o+227|0]&&(k[o+224>>1]=5385,A=kt(A)+(o+224|0)|0,f[A+3|0]=21,v=e[t+292>>2],f[A+5|0]=0,f[A+4|0]=v)),!d[o+224|0]))&&(16&w||(_t(e[o+348>>2])&&St(e[47192],85683,o+224|0),d[o+224|0]||(gr(e[o+348>>2])||St(e[47192],85778,o+224|0),d[o+224|0]||Ws(85992,o+224|0,0))),!(8&w)||4&s)){if(A=e[o+348>>2],(0|u)!=10240?(e[o+32>>2]=A,lt(o+52|0,86013,o+32|0)):(u=o+52|0,1&A&&(f[o+52|0]=49,u=o+53|0),2&A&&(f[0|u]=50,u=u+1|0),4&A&&(f[0|u]=51,u=u+1|0,A=e[o+348>>2]),8&A&&(f[0|u]=52,u=u+1|0,A=e[o+348>>2]),16&A&&(f[0|u]=53,u=u+1|0,A=e[o+348>>2]),32&A&&(f[0|u]=54,u=u+1|0,A=e[o+348>>2]),64&A&&(f[0|u]=55,u=u+1|0,A=e[o+348>>2]),128&A&&(f[0|u]=56,u=u+1|0),f[0|u]=0),A=o+224|0,w=d[o+52|0])for(u=o+52|0;A=kt(A)+A|0,f[0|A]=23,A=A+1|0,Mt(e[47192],w<<24>>24,0,A,1),(s=d[0|A])&&(0|s)!=21||(0|(s=f[0|u]))<97||Ws(e[130860+((255&s)<<2)>>2],A,0),w=d[0|(u=u+1|0)];);A=kt(A)+A|0,f[0|A]=9,f[A+1|0]=0}}A=kt(r),2&d[t+144|0]?(e[o+16>>2]=255,e[o+28>>2]=o+304,e[o+24>>2]=o+224,e[o+20>>2]=o- -64,lt(o+144|0,86210,o+16|0)):(e[o>>2]=255,e[o+12>>2]=o+224,e[o+8>>2]=o+304,e[o+4>>2]=o- -64,lt(o+144|0,86210,o)),kt(o+144|0)+A>>>0>199||Gt(A+r|0,o+144|0)}return Y=o+352|0,T}function U(t,A,r,s,o,l,u){var g,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0,ct=0,gt=0,zt=0,Rt=0,$t=0;Y=g=Y-528|0,re=u?e[u>>2]:0,ze=e[o+4>>2];e:{t:{if(e[t+220>>2]>0){FA(w=g+352|0,A,160),Y=_=Y-176|0,H=1-(V=e[t+220>>2])|0,J=e[t+224>>2],ie=e[t+216>>2],v=w;r:{a:{for(;;){if(he=Wt(_+172|0,v),h=e[_+172>>2]){if((0|h)<(0|V)|(0|h)>(0|ie))break a;if(J){if((0|(h=f[J+(h-V|0)|0]))<=0)break a}else h=h+H|0;if(v=v+he|0,f[T+_|0]=h,h=160,(0|(T=T+1|0))!=160)continue}else h=T;break}if(J=0,f[h+_|0]=0,H=f[0|_],e[_+172>>2]=H,H){for(Xe=2+(ie-V|0)|0,V=h=_;;){ie=h+1|0;n:{if((he=e[t+8180>>2])&&(T=0,!((0|(v=k[he>>1]))>(0|(Pe=(f[0|ie]<<8)+H|0)))))for(;;){if((0|v)==(0|Pe)){H=T+Xe|0,e[_+172>>2]=H,h=h+2|0;break n}if(!((0|Pe)>=(0|(v=k[he+((T=T+1|0)<<1)>>1]))))break}h=ie}if(ve=63&H|ve<<6,(0|(T=J+6|0))<8?J=T:(J=J-2|0,f[0|V]=ve>>J,V=V+1|0),H=f[0|h],e[_+172>>2]=H,!H)break}(0|J)<=0||(f[0|V]=ve<<8-J,V=V+1|0)}else V=_;f[0|V]=0,qt(w,_,h=V-_|0),V=64|h;break r}V=kt(w)}Y=_+176|0,_=w}else V=kt(A),_=A;if(w=d[0|_]){for(h=0,T=_;b=1023&(b=(b<<3)+w|0)^b>>>8,h=h+1|0,w=d[0|(T=T+1|0)];);h=h+b&1023}else h=0;if(b=e[692+((h<<2)+t|0)>>2]){if(h=d[0|b])break t;h=0;break e}if(h=0,!o)break e;e[o>>2]=0;break e}for(he=1073741824&ze,Pe=2048&l,ze=512&re,Xe=65536&re,ct=1&re,gt=2&re,re=8&l,zt=1024&l,ie=4&l,Rt=63&V,$t=t+8233|0;;){l=(255&h)+b|0;t:{r:if((127&(h=d[b+1|0]))==(0|V)&&!Zr(_,b+2|0,Rt)){b=2+((63&h)+b|0)|0;a:{if(h<<24>>24<0)J=0,f[0|s]=0;else{if((0|(J=kt(b)))>=160)break a;Gt(s,b),b=1+(b+J|0)|0}if(w=0,l>>>0<=b>>>0)h=r,v=0;else{T=0,v=0;n:{for(;;){b=(h=b)+1|0;o:if((h=d[0|h])>>>0>=100){if(H=e[t+320>>2],h>>>0>=132){T|=H>>>h-132&1;break o}T|=!(H>>>h-100&1)}else{if(h>>>0>=81){H=h-80|0,ve=l-b|0;c:if(u)for(h=0;;){if(Se=O(h,12)+u|0,!d[Se+10|0])break c;if(T=!!(12&d[Se+1|0])|T,Se=(0|h)!=(0|H),h=h+1|0,!Se)break}if(Jn(r,b,ve)|1&T)break r;e[33264]=H,h=r+ve|0,v|=128,b=l;break n}h>>>0>=65?(v=15&h|-16&v,v=12&~h?v:512|v):h>>>0>=32?w|=1<<h-32:v|=1<<h}if(!(l>>>0>b>>>0))break}if(h=r,1&T)break t}if(65536&w&&!ie||zt&&49152&w)break t}if(ie&&(16384&w||!re&&32768&w)||(gt?0:512&w)|(ct?0:1024&w)|(Xe?0:33554432&v)||!(!(131072&w)|Ae[e[47192]+8204>>2]<=h>>>0|he)|(ze?0:262144&w)|(8&d[e[47192]+8242|0]?0:8192&w)||16&w&&(!e[t+8184>>2]&(!re|!e[t+8192>>2])||!(!re|e[t+212>>2]!=25966)&&2097152&e[t+8232>>2])||(e[t+8188>>2]?0:64&w)|(!e[t+8196>>2]|Pe?32&w:0)||!(!(65536&v)|e[t+212>>2]!=26741|128&d[0|$t])|(e[47192]!=(0|t)?524288&w:0))break t;n:{o:{c:{if(!o){if(!J)break c;break n}if(e[o+4>>2]=w,e[o>>2]=1073741824|v,J)break o}if(h=0,!(8&d[188788]))break e;Un(o,t=g+272|0),e[g>>2]=A,e[g+4>>2]=t,ar(e[47195],89330,g);break e}e[o>>2]=-1073741824|v}if(8&d[188788]&&(Or(s,g- -64|0),d[e[47192]+172|0]==(v>>>29&1)&&(!u|!(128&v)?(e[g+48>>2]=A,ar(e[47195],89426,g+48|0)):(qt(t=g+352|0,s=r,r=h-r|0),f[351+(r+g|0)|0]=0,e[g+32>>2]=A,e[g+36>>2]=t,ar(e[47195],89397,g+32|0)),Un(o,t=g+272|0),A=e[47195],e[g+16>>2]=g- -64,e[g+20>>2]=t,ar(A,89534,g+16|0))),d[Wt(g- -64|0,_)+_|0]|!o||BA(e[g+64>>2]))break e;e[o>>2]=134217728|e[o>>2];break e}pe(89236,86634,2467,94846),L()}b=l}if(!(h=d[0|b]))break}h=0}return Y=g+528|0,h}function Ee(t,A,r,s,o){var l,u=0,g=0;Y=l=Y-304|0,f[l+278|0]=0;e:{if((0|A)>0&&(1&s&&(2&s&&(e[l+164>>2]=r,e[l+160>>2]=A,lt(u=l+290|0,89701,l+160|0),u=St(t,u,l+224|0))||1&f[133096]&&(e[l+148>>2]=r,e[l+144>>2]=A,lt(u=l+290|0,89757,l+144|0),u=St(t,u,l+224|0))||(e[l+132>>2]=r,e[l+128>>2]=A,lt(u=l+290|0,89894,l+128|0),u=St(t,u,l+224|0)))||(e[l+116>>2]=r,e[l+112>>2]=A,lt(u=l+290|0,89974,l+112|0),u=St(t,u,l+224|0))))break e;if((0|(g=(0|A)%100|0))>=20&&St(t,90022,l+278|0),1&s){if(2&s){u=g-11|0;t:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(u>>>0<9)break r;if(s=90418,(0|(u=(0|A)%10|0))==1)break t;if(u-2>>>0>=3)break r;s=90453;break t;case 1:if(A-2>>>0>=3)break r;s=90453;break t;case 2:if(u>>>0<9|((0|A)%10|0)-2>>>0>=3)break r;s=90453;break t;case 3:if(s=90508,u>>>0<9)break t;s=(s=(0|A)%10|0)?(0|s)==1?90453:90586:90508;break t;case 4:break a;default:break r}if(!(u>>>0<9)){if(s=90537,(0|(u=(0|A)%10|0))==1)break t;if(!(u-2>>>0>=3)){s=90453;break t}}}s=90586}if(e[l+100>>2]=r,e[l+96>>2]=s,lt(s=l+290|0,90058,l+96|0),u=0,St(t,s,l+224|0))break e}if(s=g-11|0,1&f[133096]){t:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(s>>>0<9)break r;if(u=90418,(0|(g=(0|A)%10|0))==1)break t;if(g-2>>>0>=3)break r;u=90453;break t;case 1:if(A-2>>>0>=3)break r;u=90453;break t;case 2:if(s>>>0<9|((0|A)%10|0)-2>>>0>=3)break r;u=90453;break t;case 3:if(u=90508,s>>>0<9)break t;u=(u=(0|A)%10|0)?(0|u)==1?90453:90586:90508;break t;case 4:break a;default:break r}if(!(s>>>0<9)){if(u=90537,(0|(g=(0|A)%10|0))==1)break t;if(!(g-2>>>0>=3)){u=90453;break t}}}u=90586}if(e[l+84>>2]=r,e[l+80>>2]=u,lt(g=l+290|0,90110,l+80|0),u=0,St(t,g,l+224|0))break e}t:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(s>>>0<9)break r;if(u=90418,(0|(g=(0|A)%10|0))==1)break t;if(g-2>>>0>=3)break r;u=90453;break t;case 1:if(A-2>>>0>=3)break r;u=90453;break t;case 2:if(s>>>0<9|((0|A)%10|0)-2>>>0>=3)break r;u=90453;break t;case 3:if(u=90508,s>>>0<9)break t;u=(u=(0|A)%10|0)?(0|u)==1?90453:90586:90508;break t;case 4:break a;default:break r}if(!(s>>>0<9)){if(u=90537,(0|(g=(0|A)%10|0))==1)break t;if(!(g-2>>>0>=3)){u=90453;break t}}}u=90586}if(e[l+68>>2]=r,e[l+64>>2]=u,lt(g=l+290|0,90139,l- -64|0),u=0,St(t,g,l+224|0))break e}else s=g-11|0;t:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(s>>>0<9)break r;if(u=90418,(0|(s=(0|A)%10|0))==1)break t;if(s-2>>>0>=3)break r;u=90453;break t;case 1:if(A-2>>>0>=3)break r;u=90453;break t;case 2:if(s>>>0<9|((0|A)%10|0)-2>>>0>=3)break r;u=90453;break t;case 3:if(u=90508,s>>>0<9)break t;u=(s=(0|A)%10|0)?(0|s)==1?90453:90586:90508;break t;case 4:break a;default:break r}if(!(s>>>0<9)){if(u=90537,(0|(s=(0|A)%10|0))==1)break t;if(!(s-2>>>0>=3)){u=90453;break t}}}u=90586}e[l+52>>2]=r,e[l+48>>2]=u,lt(s=l+290|0,90218,l+48|0),u=0,St(t,s,l+224|0)||((0|r)<4||(e[l+32>>2]=r-1,lt(s=l+290|0,89026,l+32|0),St(t,s,l+176|0)||(St(t,90273,l+224|0),e[33275]=3)),d[l+224|0]||(e[l+16>>2]=A,lt(s=l+290|0,90303,l+16|0),(u=St(t,s,l+224|0))||St(t,90347,l+224|0),e[33275]=2))}return e[l+4>>2]=l+224,e[l>>2]=l+278,lt(o,90368,l),Y=l+304|0,!((0|A)!=1|(0|r)!=1)&&(A=1,32&d[t+106|0])||(A=u),A}function ce(t,A,r,s){var o,l=0,u=0,g=0,h=0,w=0,b=0,v=0;Y=o=Y+-64|0,k[o+48>>1]=0,e[o+40>>2]=0,e[o+44>>2]=0,e[o+32>>2]=0,e[o+36>>2]=0,e[o+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+8>>2]=0,e[o+12>>2]=0,e[o>>2]=0,e[o+4>>2]=0,l=A;e:{for(;;){t:{r:{if((0|(u=d[0|l]))!=69){if((0|u)!=32)break r;if(s&&(f[qt(u=s,A,s=(0|(s=l-A|0))>=159?159:s)+s|0]=0),s=63&r)break t;break e}f[0|l]=101}l=l+1|0;continue}break}if(1&r){t:if((l=l-1|0)>>>0<A>>>0)u=s;else for(u=s;;){if((192&d[0|l])!=128)break t;if(u=u+1|0,!((l=l-1|0)>>>0>=A>>>0))break}g=s-1|0}else g=s,u=s;if((0|s)!=1)for(;;){s=g;t:if(!((l=l-1|0)>>>0<A>>>0))for(;;){if((192&d[0|l])!=128)break t;if(u=u+1|0,!((l=l-1|0)>>>0>=A>>>0))break}t:if(!((l=l-1|0)>>>0<A>>>0))for(;;){if((192&d[0|l])!=128)break t;if(u=u+1|0,!((l=l-1|0)>>>0>=A>>>0))break}if(g=s-2|0,!((0|s)>2))break}if((0|u)<=0)g=0;else{if(h=3&(g=(s=(A=u-1|0)>>>0>=48?48:A)+1|0),A=0,u=0,s>>>0>=3)for(v=-4&g,s=0;w=l+u|0,f[u+o|0]=d[0|w],f[0|w]=32,w=(b=1|u)+l|0,f[o+b|0]=d[0|w],f[0|w]=32,w=(b=2|u)+l|0,f[o+b|0]=d[0|w],f[0|w]=32,w=(b=3|u)+l|0,f[o+b|0]=d[0|w],f[0|w]=32,u=u+4|0,(0|v)!=(0|(s=s+4|0)););if(h)for(;s=l+u|0,f[u+o|0]=d[0|s],f[0|s]=32,u=u+1|0,(0|h)!=(0|(A=A+1|0)););}}if(f[o+g|0]=0,h=65520&r,!(512&r)|d[0|(s=l-1|0)]!=105||(f[0|s]=121),u=4|h,256&r){e:{t:{r:{if((0|(A=e[t+212>>2]))!=25966){if((0|A)!=28268)break r;if(f[0|s]<0||128&(A=f[0|(g=l-2|0)]))break e;if(h=e[t+632>>2])A=!!(0|Hr(h,A));else{if((0|(h=e[t+600>>2]))>0&&(A=A-h|0)-1>>>0>254)break e;A=128&d[344+(t+A|0)|0]}if(!A)break e;if(A=f[0|s],h=e[t+612>>2])A=!!(0|Hr(h,A));else{a:{if((0|(h=e[t+600>>2]))>0){if((A=A-h|0)-1>>>0<255)break a;break e}if((0|A)<0)break e}A=4&d[344+(t+A|0)|0]}if(!A)break e;A=f[l-3|0];a:{if(h=e[t+632>>2])A=!!(0|Hr(h,A));else{n:{if((0|(h=e[t+600>>2]))>0){if((A=A-h|0)-1>>>0<255)break n;break a}if((0|A)<0)break a}A=128&d[344+(t+A|0)|0]}if(A)break e}f[0|l]=d[0|s],f[0|s]=d[0|g],f[l+1|0]=32;break e}if(g=f[l-2|0],A=e[t+632>>2])A=!!(0|Hr(A,g));else{a:{if((0|(A=e[t+600>>2]))>0){if((g=g-A|0)-1>>>0<255)break a;break t}if((0|g)<0)break t}A=128&d[344+(t+g|0)|0]}if(!A)break t;if(g=f[0|s],A=e[t+608>>2])A=!!(0|Hr(A,g));else{if((0|(A=e[t+600>>2]))>0){if((g=g-A|0)-1>>>0>=255)break t}else if((0|g)<0)break t;A=2&d[344+(t+g|0)|0]}if(!A)break t;u=Zr(87771,l-3|0,3)?20|h:u;break e}u=e[t+204>>2]?20|h:u;break e}(d[0|s]==99||(g=d[(A=l-2|0)+1|0]<<8,(d[0|A]|g)==29554|(g|d[0|A])==29289||(d[0|(A=l-2|0)]|d[A+1|0]<<8)==29301||!Zr(88115,l-3|0,3)||(d[0|(A=l-2|0)]|d[A+1|0]<<8)==29550|d[0|s]==117||!Zr(88384,l-5|0,5)||(d[0|(A=l-4|0)]|d[A+1|0]<<8|d[A+2|0]<<16|d[A+3|0]<<24)==1735287154||(d[0|A]|d[A+1|0]<<8|d[A+2|0]<<16|d[A+3|0]<<24)==1735549292))&&(u=20|h)}16&u&&(br(e[t+204>>2],l),8&d[188788]&&Ti(88683,6,e[47195]))}return e[t+8184>>2]|!(2048&r)||(e[t+8184>>2]=1),B[o>>1]!=115&&Zr(o,88850,3)||(u|=8),Y=o- -64|0,d[0|o]==39?65531&u:u}function ke(t,A,r,s,o,l,u,g,h){var w,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0;Y=w=Y-112|0,b=2147483647&h;e:{if(T=!(A|r),(s|(v=2147483647&o)?v-2147418112>>>0<2147549184:T)||!(!g&(0|(V=b-2147418112|0))==-2147418112?l|u:(0|V)==-2147418112&!!(0|g)|V>>>0>2147549184)){if(!(!s&(0|v)==2147418112?T:v>>>0<2147418112)){g=s,h=32768|o,l=A,u=r;break e}if(!(!g&(0|b)==2147418112?!(l|u):b>>>0<2147418112)){h|=32768;break e}if(!(A|s|2147418112^v|r)){_=s,g=(s=!(A^l|s^g|r^u|o^h^-2147483648))?0:_,h=s?2147450880:o,l=s?0:A,u=s?0:r;break e}if(!(l|g|2147418112^b|u))break e;if(!(A|s|r|v)){if(l|g|u|b)break e;l&=A,u&=r,g&=s,h&=o;break e}if(!(l|g|u|b)){l=A,u=r,g=s,h=o;break e}}v=(T=re=(_=(0|b)==(0|v))&(0|s)==(0|g)?(0|r)==(0|u)&A>>>0<l>>>0|r>>>0<u>>>0:_&s>>>0<g>>>0|b>>>0>v>>>0)?l:A,V=T?u:r,ie=_=T?h:o,T=T?g:s,J=65535&_,s=re?s:g,he=o=re?o:h,_=o>>>16&32767,(H=ie>>>16&32767)||(h=o=!(T|J),b=o?v:T,g=o<<=6,wA(w+96|0,v,V,T,J,(o=o+((0|(h=Ce(h?V:J)))==32?Ce(b)+32|0:h)|0)-15|0),T=e[w+104>>2],J=e[w+108>>2],V=e[w+100>>2],H=16-o|0,v=e[w+96>>2]),l=re?A:l,u=re?r:u,g=s,h=65535&he,_||(o=A=!(g|h),b=A?l:g,r=A<<=6,wA(w+80|0,l,u,g,h,(A=A+((0|(o=Ce(o?u:h)))==32?Ce(b)+32|0:o)|0)-15|0),_=16-A|0,g=e[w+88>>2],h=e[w+92>>2],u=e[w+84>>2],l=e[w+80>>2]),r=h<<3|g>>>29,A=g<<3|u>>>29,r|=524288,g=T<<3|V>>>29,h=J<<3|T>>>29,re=ie^he,o=u<<3|l>>>29,s=l<<3,(0|_)!=(0|H)&&((l=H-_|0)>>>0>127?(A=0,r=0,o=0,s=1):(wA(w- -64|0,s,o,A,r,128-l|0),dr(w+48|0,s,o,A,r,l),A=e[w+56>>2],r=e[w+60>>2],o=e[w+52>>2],s=e[w+48>>2]|!!(e[w+64>>2]|e[w+72>>2]|e[w+68>>2]|e[w+76>>2]))),T=s,b=o,_=g,J=524288|h,o=V<<3|v>>>29,V=v<<3,v=o;t:if((0|re)<0){if(l=0,u=0,g=0,h=0,!(T^V|A^_|b^v|r^J))break e;if(s=V-T|0,o=v-((T>>>0>V>>>0)+b|0)|0,g=(l=_-A|0)-(u=(0|b)==(0|v)&T>>>0>V>>>0|b>>>0>v>>>0)|0,h=A=(J-((A>>>0>_>>>0)+r|0)|0)-(l>>>0<u>>>0)|0,A>>>0>524287)break t;l=A=!(g|h),u=A?s:g,r=A<<=6,wA(w+32|0,s,o,g,h,A=(A=A+((0|(l=Ce(l?o:h)))==32?Ce(u)+32|0:l)|0)-12|0),H=H-A|0,g=e[w+40>>2],h=e[w+44>>2],s=e[w+32>>2],o=e[w+36>>2]}else o=b+v|0,l=(0|b)==(0|(o=(s=T+V|0)>>>0<V>>>0?o+1|0:o))&s>>>0<T>>>0|o>>>0<b>>>0,b=r+J|0,b=(A=A+_|0)>>>0<_>>>0?b+1|0:b,1048576&(h=(g=A+l|0)>>>0<A>>>0?b+1|0:b)&&(s=1&T|(1&o)<<31|s>>>1,o=g<<31|o>>>1,H=H+1|0,g=(1&h)<<31|g>>>1,h=h>>>1|0);if(r=0,v=-2147483648&ie,(0|H)>=32767)g=r,h=2147418112|v,l=0,u=0;else if(_=0,(0|H)>0?_=H:(wA(w+16|0,s,o,g,h,H+127|0),dr(w,s,o,g,h,1-H|0),s=e[w>>2]|!!(e[w+16>>2]|e[w+24>>2]|e[w+20>>2]|e[w+28>>2]),o=e[w+4>>2],g=e[w+8>>2],h=e[w+12>>2]),V=7&s,s=(0|(A=g<<29|o>>>3))==(0|(u=(s=(7&o)<<29|s>>>3)>>>0>(l=(V>>>0>4)+s|0)>>>0?A+1|0:A))&s>>>0>l>>>0|A>>>0>u>>>0,A=r|(7&h)<<29|g>>>3,h=v|h>>>3&65535|_<<16,h=A>>>0>(g=s+A|0)>>>0?h+1|0:h,(0|V)!=4){if(!V)break e}else b=u+(A=0)|0,h=(A=(0|A)==(0|(u=(s=l)>>>0>(l=l+(r=1&l)|0)>>>0?b+1|0:b))&r>>>0>l>>>0|A>>>0>u>>>0)>>>0>(g=A+g|0)>>>0?h+1|0:h}e[t>>2]=l,e[t+4>>2]=u,e[t+8>>2]=g,e[t+12>>2]=h,Y=w+112|0}function Me(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0;e:if(t|=0){l=(s=t-8|0)+(t=-8&(A=e[t-4>>2]))|0;t:if(!(1&A)){if(!(3&A)||(s=s-(A=e[s>>2])|0)>>>0<Ae[57156])break e;if(t=t+A|0,e[57157]==(0|s)){if(!(3&~(A=e[l+4>>2])))return e[57154]=t,e[l+4>>2]=-2&A,e[s+4>>2]=1|t,void(e[t+s>>2]=t)}else{if(A>>>0<=255){if(o=e[s+8>>2],A=A>>>3|0,(0|(r=e[s+12>>2]))==(0|o)){e[57152]=e[57152]&as(-2,A);break t}e[o+12>>2]=r,e[r+8>>2]=o;break t}if(g=e[s+24>>2],(0|s)==(0|(A=e[s+12>>2])))if((r=e[(o=s+20|0)>>2])||(r=e[(o=s+16|0)>>2])){for(;u=o,(r=e[(o=(A=r)+20|0)>>2])||(o=A+16|0,r=e[A+16>>2]););e[u>>2]=0}else A=0;else r=e[s+8>>2],e[r+12>>2]=A,e[A+8>>2]=r;if(!g)break t;o=e[s+28>>2];r:{if(e[(r=228912+(o<<2)|0)>>2]==(0|s)){if(e[r>>2]=A,A)break r;e[57153]=e[57153]&as(-2,o);break t}if(e[g+(e[g+16>>2]==(0|s)?16:20)>>2]=A,!A)break t}if(e[A+24>>2]=g,(r=e[s+16>>2])&&(e[A+16>>2]=r,e[r+24>>2]=A),!(r=e[s+20>>2]))break t;e[A+20>>2]=r,e[r+24>>2]=A}}if(!(s>>>0>=l>>>0)&&1&(A=e[l+4>>2])){t:{if(!(2&A)){if(e[57158]==(0|l)){if(e[57158]=s,t=e[57155]+t|0,e[57155]=t,e[s+4>>2]=1|t,e[57157]!=(0|s))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|l))return e[57157]=s,t=e[57154]+t|0,e[57154]=t,e[s+4>>2]=1|t,void(e[t+s>>2]=t);t=(-8&A)+t|0;r:if(A>>>0<=255){if(o=e[l+8>>2],A=A>>>3|0,(0|(r=e[l+12>>2]))==(0|o)){e[57152]=e[57152]&as(-2,A);break r}e[o+12>>2]=r,e[r+8>>2]=o}else{if(g=e[l+24>>2],(0|l)==(0|(A=e[l+12>>2])))if((r=e[(o=l+20|0)>>2])||(r=e[(o=l+16|0)>>2])){for(;u=o,(r=e[(o=(A=r)+20|0)>>2])||(o=A+16|0,r=e[A+16>>2]););e[u>>2]=0}else A=0;else r=e[l+8>>2],e[r+12>>2]=A,e[A+8>>2]=r;if(g){o=e[l+28>>2];a:{if(e[(r=228912+(o<<2)|0)>>2]==(0|l)){if(e[r>>2]=A,A)break a;e[57153]=e[57153]&as(-2,o);break r}if(e[g+(e[g+16>>2]==(0|l)?16:20)>>2]=A,!A)break r}e[A+24>>2]=g,(r=e[l+16>>2])&&(e[A+16>>2]=r,e[r+24>>2]=A),(r=e[l+20>>2])&&(e[A+20>>2]=r,e[r+24>>2]=A)}}if(e[s+4>>2]=1|t,e[t+s>>2]=t,e[57157]!=(0|s))break t;return void(e[57154]=t)}e[l+4>>2]=-2&A,e[s+4>>2]=1|t,e[t+s>>2]=t}if(t>>>0<=255)return A=228648+(-8&t)|0,(r=e[57152])&(t=1<<(t>>>3))?t=e[A+8>>2]:(e[57152]=t|r,t=A),e[A+8>>2]=s,e[t+12>>2]=s,e[s+12>>2]=A,void(e[s+8>>2]=t);o=31,t>>>0<=16777215&&(o=62+((t>>>38-(A=Ce(t>>>8|0))&1)-(A<<1)|0)|0),e[s+28>>2]=o,e[s+16>>2]=0,e[s+20>>2]=0,u=228912+(o<<2)|0;t:{r:{if((r=e[57153])&(A=1<<o)){for(o=t<<((0|o)!=31?25-(o>>>1|0):0),A=e[u>>2];;){if(r=A,(-8&e[A+4>>2])==(0|t))break r;if(A=o>>>29|0,o<<=1,!(A=e[(u=r+(4&A)|0)+16>>2]))break}e[u+16>>2]=s,e[s+24>>2]=r}else e[57153]=A|r,e[u>>2]=s,e[s+24>>2]=u;e[s+12>>2]=s,e[s+8>>2]=s;break t}t=e[r+8>>2],e[t+12>>2]=s,e[r+8>>2]=s,e[s+24>>2]=0,e[s+12>>2]=r,e[s+8>>2]=t}t=e[57160]-1|0,e[57160]=t||-1}}}function Le(t,A,r){var s,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0;Y=s=Y-176|0;e:{if(32&A)_=r-((0|r)>1)|0;else{l=yA(t,93302);t:{r:{a:{if((0|A)!=2){if(l)break a;A=0;break e}if(_=r+1|0,v=(V=O(r,76)+133152|0)+56|0,T=yA(t,89360),u=yA(t,93318),g=yA(t,93426),h=yA(t,93499),l)break r;break t}_=r+1|0,v=(V=O(r,76)+133152|0)+56|0,h=0}for(t=0,w=(0|(o=e[l-4>>2]))!=34?(0|o)==39?o:0:o,H=O(r,76)+133208|0;;){if(o=t,!(t=e[l>>2]))break t;r:{if(!w){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break r;break t}if((0|o)!=92&&(0|t)==(0|w))break t}if(l=l+4|0,!((0|(b=br(t,b+H|0)+b|0))<16))break}}w=0,f[b+v|0]=0,b=O(r,76)+133168|0,l=0;t:if(T)for(t=0,v=(0|(o=e[T-4>>2]))!=34?(0|o)==39?o:0:o;;){if(o=t,!(t=e[T>>2]))break t;r:{if(!v){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break r;break t}if((0|o)!=92&&(0|t)==(0|v))break t}if(T=T+4|0,!((0|(l=br(t,l+b|0)+l|0))<36))break}if(f[l+b|0]=0,!(!u|e[u>>2]-48>>>0>=10)){for(;w=(e[u>>2]+O(w,10)|0)-48|0,e[(u=u+4|0)>>2]-48>>>0<10;);(0|w)<=0||(w=w-1|0)}if(o=O(r,76)+133152|0,e[o+4>>2]=w,t=0,l=0,!(!g|e[g>>2]-48>>>0>=10))for(;l=(e[g>>2]+O(l,10)|0)-48|0,e[(g=g+4|0)>>2]-48>>>0<10;);e[o+12>>2]=l,l=O(r,76)+133152|0;t:{r:if(h){for(;r=f[t+93099|0],(o=e[(t<<2)+h>>2])&&(t=t+1|0,(0|r)==(0|o)););a:{n:switch(o-34|0){case 0:case 5:break n;default:break a}if(!r){t=0;break t}}for(t=0;r=f[t+93116|0],(o=e[(t<<2)+h>>2])&&(t=t+1|0,(0|r)==(0|o)););a:{n:switch(o-34|0){case 0:case 5:break n;default:break a}if(!r){t=1;break t}}for(t=0;r=f[t+93197|0],(o=e[(t<<2)+h>>2])&&(t=t+1|0,(0|r)==(0|o)););a:switch(o-34|0){case 0:case 5:break a;default:break r}if(!r){t=2;break t}}t=3}e[l+8>>2]=e[131156+(t<<3)>>2],e[V>>2]=A}if(Gt(137776,133168),r=Gt(s+96|0,133208),f[s+157|0]=e[33291],f[s+156|0]=e[33290],t=e[33289],e[s+152>>2]=0,f[s+158|0]=t,(0|_)>0)for(u=0;;){if(g=1,A=O(u,76)+133152|0,d[0|(t=A+16|0)]&&xs(0,t)&&(Gt(137776,t),g=0,f[0|r]=0,f[s+158|0]=0,k[s+156>>1]=0),d[0|(t=A+56|0)]){h=Gt(r,t),o=e[33679];t:if(d[0|(t=o)])for(;;){if(!sr(t=t+1|0,h)){Gt(h,o+1|0);break t}if(t=1+(kt(t)+t|0)|0,!d[0|t])break}g&&(f[137776]=0)}if((t=e[A+8>>2])&&(f[s+156|0]=t),(t=e[A+12>>2])&&(f[s+157|0]=t),(t=e[A+4>>2])&&(f[s+158|0]=t),(0|_)==(0|(u=u+1|0)))break}e[s+148>>2]=r,e[s+144>>2]=137776,(t=ZA(s+144|0,s+172|0))?ta(t,43)||(A=d[s+156|0],!d[134672]|((0|A)!=d[134724]?A:0)||(e[s>>2]=t,e[s+4>>2]=134672,lt(A=s+16|0,93533,s),t=137776,FA(137776,A,40))):t=92003,A=0,sr(t,134784)&&(Gt(134784,t),A=131072)}return Y=s+176|0,A}function st(t,A){var r,s=0,o=0,l=0,u=0,g=0;r=t+A|0;e:{t:if(!(1&(s=e[t+4>>2]))){if(!(3&s))break e;A=(s=e[t>>2])+A|0;r:{if((0|(t=t-s|0))!=e[57157]){if(s>>>0<=255){if(l=e[t+8>>2],s=s>>>3|0,(0|(o=e[t+12>>2]))!=(0|l))break r;e[57152]=e[57152]&as(-2,s);break t}if(g=e[t+24>>2],(0|(s=e[t+12>>2]))==(0|t))if((o=e[(l=t+20|0)>>2])||(o=e[(l=t+16|0)>>2])){for(;u=l,(o=e[(l=(s=o)+20|0)>>2])||(l=s+16|0,o=e[s+16>>2]););e[u>>2]=0}else s=0;else o=e[t+8>>2],e[o+12>>2]=s,e[s+8>>2]=o;if(!g)break t;l=e[t+28>>2];a:{if(e[(o=228912+(l<<2)|0)>>2]==(0|t)){if(e[o>>2]=s,s)break a;e[57153]=e[57153]&as(-2,l);break t}if(e[g+(e[g+16>>2]==(0|t)?16:20)>>2]=s,!s)break t}if(e[s+24>>2]=g,(o=e[t+16>>2])&&(e[s+16>>2]=o,e[o+24>>2]=s),!(o=e[t+20>>2]))break t;e[s+20>>2]=o,e[o+24>>2]=s;break t}if(3&~(s=e[r+4>>2]))break t;return e[57154]=A,e[r+4>>2]=-2&s,e[t+4>>2]=1|A,void(e[r>>2]=A)}e[l+12>>2]=o,e[o+8>>2]=l}t:{if(!(2&(s=e[r+4>>2]))){if(e[57158]==(0|r)){if(e[57158]=t,A=e[57155]+A|0,e[57155]=A,e[t+4>>2]=1|A,e[57157]!=(0|t))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|r))return e[57157]=t,A=e[57154]+A|0,e[57154]=A,e[t+4>>2]=1|A,void(e[t+A>>2]=A);A=(-8&s)+A|0;r:if(s>>>0<=255){if(l=e[r+8>>2],s=s>>>3|0,(0|(o=e[r+12>>2]))==(0|l)){e[57152]=e[57152]&as(-2,s);break r}e[l+12>>2]=o,e[o+8>>2]=l}else{if(g=e[r+24>>2],(0|r)==(0|(s=e[r+12>>2])))if((l=e[(o=r+20|0)>>2])||(l=e[(o=r+16|0)>>2])){for(;u=o,(l=e[(o=(s=l)+20|0)>>2])||(o=s+16|0,l=e[s+16>>2]););e[u>>2]=0}else s=0;else o=e[r+8>>2],e[o+12>>2]=s,e[s+8>>2]=o;if(g){l=e[r+28>>2];a:{if(e[(o=228912+(l<<2)|0)>>2]==(0|r)){if(e[o>>2]=s,s)break a;e[57153]=e[57153]&as(-2,l);break r}if(e[g+(e[g+16>>2]==(0|r)?16:20)>>2]=s,!s)break r}e[s+24>>2]=g,(o=e[r+16>>2])&&(e[s+16>>2]=o,e[o+24>>2]=s),(o=e[r+20>>2])&&(e[s+20>>2]=o,e[o+24>>2]=s)}}if(e[t+4>>2]=1|A,e[t+A>>2]=A,e[57157]!=(0|t))break t;return void(e[57154]=A)}e[r+4>>2]=-2&s,e[t+4>>2]=1|A,e[t+A>>2]=A}if(A>>>0<=255)return s=228648+(-8&A)|0,(o=e[57152])&(A=1<<(A>>>3))?A=e[s+8>>2]:(e[57152]=A|o,A=s),e[s+8>>2]=t,e[A+12>>2]=t,e[t+12>>2]=s,void(e[t+8>>2]=A);l=31,A>>>0<=16777215&&(l=62+((A>>>38-(s=Ce(A>>>8|0))&1)-(s<<1)|0)|0),e[t+28>>2]=l,e[t+16>>2]=0,e[t+20>>2]=0,u=228912+(l<<2)|0;t:{if((o=e[57153])&(s=1<<l)){for(l=A<<((0|l)!=31?25-(l>>>1|0):0),s=e[u>>2];;){if(o=s,(-8&e[s+4>>2])==(0|A))break t;if(s=l>>>29|0,l<<=1,!(s=e[(u=o+(4&s)|0)+16>>2]))break}e[u+16>>2]=t,e[t+24>>2]=o}else e[57153]=s|o,e[u>>2]=t,e[t+24>>2]=u;return e[t+12>>2]=t,void(e[t+8>>2]=t)}A=e[o+8>>2],e[A+12>>2]=t,e[o+8>>2]=t,e[t+24>>2]=0,e[t+12>>2]=o,e[t+8>>2]=A}}function Ot(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0;if(!(A=f[88105]))return t;if(t=ta(t,A)){if(!d[88106])return t;if(d[t+1|0]){if(!d[88107]){o=!!(0|(r=d[t+1|0]));e:if(r&&(0|(A=r|d[0|t]<<8))!=(0|(g=d[88106]|d[88105]<<8)))for(r=t+1|0;;){if(o=!!(0|(s=d[(t=r)+1|0])),!s)break e;if(r=t+1|0,(0|g)==(0|(A=s|A<<8&65280)))break}return o?t:0}if(d[t+2|0]){if(!d[88108]){r=t+2|0,o=!!(0|(A=d[t+2|0]));e:if(A&&(0|(A=d[t+1|0]<<16|d[0|t]<<24|A<<8))!=(0|(g=d[88106]<<16|d[88105]<<24|d[88107]<<8)))for(;;){if(t=r+1|0,o=!!(0|(s=d[r+1|0])),!s)break e;if(r=t,(0|g)==(0|(A=(A|s)<<8)))break}else t=r;return o?t-2|0:0}if(d[t+3|0]){if(!d[88109]){r=t+3|0,o=!!(0|(A=d[t+3|0]));e:if(A&&(0|(A=A|d[t+1|0]<<16|d[0|t]<<24|d[t+2|0]<<8))!=(0|(g=(t=d[88105]|d[88106]<<8|d[88107]<<16|d[88108]<<24)<<24|(65280&t)<<8|t>>>8&65280|t>>>24)))for(;;){if(t=r+1|0,o=!!(0|(s=d[r+1|0])),!s)break e;if(r=t,(0|g)==(0|(A=s|A<<8)))break}else t=r;return o?t-3|0:0}g=t,Y=h=Y-1056|0,e[(t=h+1048|0)>>2]=0,e[t+4>>2]=0,e[(t=h+1040|0)>>2]=0,e[t+4>>2]=0,e[h+1032>>2]=0,e[h+1036>>2]=0,e[h+1024>>2]=0,e[h+1028>>2]=0;e:{t:{r:{a:{if(A=d[88105]){for(;;){if(!d[l+g|0])break t;if(l=l+1|0,e[((255&A)<<2)+h>>2]=l,e[(t=(h+1024|0)+(A>>>3&28)|0)>>2]=e[t>>2]|1<<A,!(A=d[l+88105|0]))break}if(t=1,w=-1,l>>>0>1)break a}else w=-1,t=1;u=-1,r=1;break r}for(s=1,A=1;;){a:if((0|(u=d[88105+(A+w|0)|0]))!=(0|(o=d[t+88105|0])))o>>>0<u>>>0?(s=t-w|0,r=t,A=1):(w=r,r=r+1|0,s=1,A=1);else{if((0|A)==(0|s)){r=r+s|0,A=1;break a}A=A+1|0}if(!(l>>>0>(t=r+A|0)>>>0))break}if(r=1,u=-1,l>>>0<=1)t=s;else{for(t=0,o=1,A=1;;){a:if((0|(v=d[88105+(A+u|0)|0]))!=(0|(b=d[r+88105|0])))b>>>0>v>>>0?(o=r-u|0,t=r,A=1):(u=t,t=t+1|0,o=1,A=1);else{if((0|A)==(0|o)){t=t+o|0,A=1;break a}A=A+1|0}if(!(l>>>0>(r=t+A|0)>>>0))break}t=s,r=o}}for(A=t,Zr(88105,(s=(t=u+1>>>0>w+1>>>0)?r:A)+88105|0,v=(b=t?u:w)+1|0)?(s=((t=~b+l|0)>>>0<b>>>0?b:t)+1|0,o=0):o=l-s|0,_=l-1|0,T=63|l,u=0,t=g;;){if(!(g-t>>>0>=l>>>0))if(r=Qa(g,0,T)){if(g=r,r-t>>>0<l>>>0)break t}else g=g+T|0;r=d[t+_|0],A=l;r:{if(e[(h+1024|0)+(r>>>3&28)>>2]>>>r&1)if((0|(r=e[(r<<2)+h>>2]))==(0|l)){a:{if(w=d[(r=(A=v)>>>0>u>>>0?A:u)+88105|0])for(;;){if(d[t+r|0]!=(255&w))break a;if(!(w=d[(r=r+1|0)+88105|0]))break}for(;;){if(A>>>0<=u>>>0)break e;if(d[(A=A-1|0)+88105|0]!=d[t+A|0])break}A=s,u=o;break r}A=r-b|0}else A=(r=l-r|0)>>>0>u>>>0?r:u;u=0}t=t+A|0}}t=0}Y=h+1056|0,r=t}}}}return r}function Ht(t,A,r,s,o,l){var u,g,h,w,b=0,v=0,T=0;if(Y=u=Y-560|0,f[u+448|0]=0,f[u+144|0]=0,f[u+120|0]=0,h=34&l,g=A-O(v=(0|A)/100|0,100)|0,1&(w=64&d[t+106|0]?(0|A)>999|l:0)|(0|A)>99){e:{t:{r:{if(!(!h|g)){if(!St(t,90606,u+304|0))break r;break e}if(g)break t}if(St(t,90691,u+304|0))break e}St(t,90725,u+304|0)}b=l,(0|A)<1e3||(b=l,!(8&d[t+105|0])|A-2e3>>>0<4294967196&&(f[u+208|0]=0,Ee(t,b=(v>>>0)/10|0,s=16384&e[t+108>>2]?0:o+1|0,!((A>>>0)%1e3|0)|h,u+272|0)||oA(t,b,o,e[t+212>>2]==28012?520:(0|s)<4?(e[t+108>>2]>>>s&1)<<3:0,u+208|0),2&d[t+109|0]?(e[u+108>>2]=15,e[u+100>>2]=15,e[u+104>>2]=u+208,e[u+96>>2]=u+272,lt(u+144|0,90761,u+96|0)):(e[u+92>>2]=15,e[u+84>>2]=15,e[u+88>>2]=u+272,e[u+80>>2]=u+208,lt(u+144|0,90761,u+80|0)),s=1,1&(!!(0|(v=v-O(b,10)|0))|w)||(f[u+304|0]=0),b=1|l)),f[u+208|0]=0;e:if(!(~w&(0|v)<=0))if(!(4&d[t+106|0])|!(1&b|d[u+144|0])||St(t,90824,u+120|0),!h|(16&d[t+109|0]?0:g)||(e[u+64>>2]=v,lt(s=u+548|0,90875,u- -64|0),T=St(t,s,u+208|0),!(4096&e[t+108>>2])|(0|g)<=0||ts(u+208|0,133104)),s=1,1&(~w|!!(0|v))){t:{r:{a:{n:{if(!(131072&e[t+108>>2])||1&b|(0|v)!=1){if(g|T||(e[u+48>>2]=v,lt(s=u+548|0,90985,u+48|0),T=St(t,s,u+208|0)),T||(e[u+32>>2]=v,lt(s=u+548|0,91027,u+32|0),St(t,s,u+208|0)))break n;if((0|v)!=1)break r;break a}if(!T)break a}f[u+304|0]=0;break t}if(s=1,4&d[t+105|0])break e}oA(t,v,o,0,u+208|0)}s=1}else St(t,88875,u+208|0);e[u+28>>2]=u+304,e[u+24>>2]=u+208,e[u+20>>2]=u+120,e[u+16>>2]=u+144,lt(u+448|0,91059,u+16|0)}else b=l;f[u+132|0]=0;e:{t:{if((0|g)>0)16&d[t+109|0]&&2&b||(!(1&b)|o&&(0|A)<=100||!(64&(s=e[t+104>>2]))&(!(8388608&s)|g>>>0>9)||St(t,90824,u+132|0),!(1&b|d[u+144|0])|!(524288&e[t+104>>2])|v||St(t,90824,u+132|0)),f[u+336|0]=0;else if(f[u+336|0]=0,!g&s)break t;if(o?(l=e[t+108>>2],A=(0|o)<4?(l>>>o&1)<<3:0):(s=h?3:2,A=32&l|((0|A)<100?1&b?s:4|s:s),l=e[t+108>>2]),A=(0|o)==1&&e[t+212>>2]==28012?520|A:A,1048576&l&&(s=16|A,A=(0|v)>0||1&b?s:A),!oA(t,g,o,256&b|A,u+336|0)|!(128&d[t+104|0]))break e;f[u+132|0]=0;break e}d[133104]&&((0|(t=kt(u+448|0)))<=0||d[(t=t+u|0)+447|0]==10&&(f[t+447|0]=0),Gt(u+336|0,133104))}e[u+8>>2]=15,e[u+12>>2]=u+336,e[u+4>>2]=u+132,e[u>>2]=u+448,lt(r,91101,u),Y=u+560|0}function yt(t){var A,r,s,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0;for(o=e[32972],e[o+64>>2]=290816,e[o+68>>2]=4104,e[o+96>>2]=0,e[o+100>>2]=0,e[o+120>>2]=90,e[o+124>>2]=100,e[o+112>>2]=64,e[o+116>>2]=256,e[o+104>>2]=5,e[o+108>>2]=0,e[o+84>>2]=100,e[o+88>>2]=64,l=e[50754],e[o+132>>2]=0,e[o+136>>2]=0,e[o+128>>2]=l,e[o+140>>2]=0,e[o+144>>2]=0,e[o+148>>2]=0,e[o+152>>2]=0,e[o+156>>2]=0,e[o+160>>2]=0,e[36435]=450,e[o+92>>2]=2,e[50870]=0,e[50871]=0,e[50872]=0,e[50873]=0,e[50880]=0,e[50881]=0,e[50882]=0,e[50883]=0,e[50890]=0,e[50891]=0,e[50892]=0,e[50893]=0,u=-3.141592653589793/+e[50754],P[25429]=u,h=-2*u,P[25430]=h,A=(u=Dr(200*u))*-u,P[25434]=A,P[25439]=A,P[25444]=A,u=(h=u*ds(2e3*h))+h,P[25433]=u,P[25438]=u,P[25443]=u,h=1-u-A,P[25432]=h,P[25437]=h,P[25442]=h,e[50902]=0,e[50903]=0,e[50900]=0,e[50901]=0,P[25449]=A,P[25448]=u,e[50912]=0,e[50913]=0,P[25447]=h,e[50910]=0,e[50911]=0,P[25454]=A,P[25453]=u,e[50922]=0,e[50923]=0,P[25452]=h,e[50920]=0,e[50921]=0,P[25459]=A,P[25458]=u,e[50932]=0,e[50933]=0,P[25457]=h,e[50930]=0,e[50931]=0,P[25464]=A,P[25463]=u,P[25462]=h,e[50942]=0,e[50943]=0,e[50940]=0,e[50941]=0,P[25469]=A,P[25468]=u,P[25467]=h,e[50952]=0,e[50953]=0,e[50950]=0,e[50951]=0,P[25474]=A,P[25473]=u,P[25472]=h,r=e[32972],l=0;k[(w=(l<<1)+r|0)+236>>1]=256,k[w+164>>1]=256,o=d[l+105376|0]<<1,k[w+254>>1]=o,k[w+182>>1]=o,k[w+200>>1]=d[l+105385|0]<<1,e[(o=(g=l<<2)+r|0)+308>>2]=e[g+105408>>2],e[o+272>>2]=0,k[w+218>>1]=0,e[g+200944>>2]=(0|O(e[g+105456>>2],22050))/e[50754],(0|(l=l+1|0))!=9;);for(_=e[32961],l=0,s=r+344|0;;){if(o=b,v=_,w=l,(0|(b=e[(l=(g=l<<2)+131840|0)>>2]))==-1&&(b=8e3,e[l>>2]=8e3,w&&(e[131840+(4|g)>>2]=e[g+131836>>2])),_=e[131840+(4|g)>>2],!((0|o)>=(0|(b=(0|b)/8|0))||(0|(T=b-o|0))<=0||(g=o+1|0,l=o,1&T&&(f[344+(o+r|0)|0]=(0|v)>=255?255:v,l=g),(0|g)==(0|b))))for(V=_-v|0;g=((0|O(l-o|0,V))/(0|T)|0)+v|0,f[l+s|0]=(0|g)>=255?255:g,H=((0|O((g=l+1|0)-o|0,V))/(0|T)|0)+v|0,f[g+s|0]=(0|H)>=255?255:H,(0|b)!=(0|(l=l+2|0)););if(l=w+2|0,!(w>>>0<10))break}l=e[32972],e[l+80>>2]=232,e[l+72>>2]=256,e[l+76>>2]=238,t||(e[49848]=0),k[l+200>>1]=(0|O(k[l+200>>1],105))/100}function gA(t,A,r){var s,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;Y=s=Y-288|0,(0|A)!=132848&&ys(132848,A,40),(0|(o=t+228|0))!=(0|A)&&ys(o,A,40),e[s+88>>2]=A,e[s+84>>2]=47,e[s+80>>2]=137584,lt(o=s+96|0,84089,s+80|0),l=Vs(o),(o=e[t+688>>2])&&(Me(o),e[t+688>>2]=0),o=Is(s+96|0,84577);e:if((0|l)>0&&o)if(r=Nt(l),e[t+688>>2]=r,r)if(w=mn(r,l,o),Er(o),w>>>0<=1032)e[s+16>>2]=s+96,ar(e[30450],85164,s+16|0),r=2;else if(o=e[t+688>>2],r=e[o+4>>2],!((0|(l=e[o>>2]))!=1024|(0|r)<=0)&(0|r)<134217729){o=r+o|0,e[t+684>>2]=o,v=Je(t+5168|0,0,1024),Je(t+7664|0,0,260),Je(t+7924|0,255,256),Je(t+4788|0,0,380),Je(t+6192|0,0,512);t:if((0|(r=d[0|o]))!=7)for(;;){if((0|(l=255&r))!=6){if(!l)break t;l=e[t+684>>2],e[s+72>>2]=r<<24>>24,e[s+64>>2]=132848,e[s+68>>2]=o-l,ar(e[30450],88950,s- -64|0);break}r:{a:{n:{o:{c:switch((l=d[0|(r=o+1|0)])-18|0){case 0:break o;case 2:break c;default:break n}for(r=4+(-4&r)|0,e[t+180>>2]=r;r=(o=r)+1|0,!oo(o););for(;l=d[0|o],r=o,o=o+1|0,(0|l)!=7;);break r}if(r=o+3|0,(0|(o=((0|(o=f[o+2|0]))<65?191:-65)+o|0))>94)break a;e[4788+((o<<2)+t|0)>>2]=r;break a}r=1+((g=kt(r))+r|0)|0;n:switch(0|g){case 1:e[5168+((l<<2)+t|0)>>2]=r;break a;case 0:e[v>>2]=r;break a;default:break n}g=d[o+2|0],(0|l)!=1?(o=e[t+7664>>2],d[0|(b=(u=t+l|0)+7924|0)]==255&&(f[0|b]=o),f[0|(u=u+7668|0)]=d[0|u]+1,e[(u=(o<<2)+t|0)+6704>>2]=r,e[t+7664>>2]=o+1,e[u+7184>>2]=l|g<<8):e[6188+((g<<2)+t|0)>>2]=r}if(d[0|r]!=7)for(;r=1+(kt(r)+r|0)|0,d[0|r]!=7;);}r=d[0|(o=r+1|0)]}for(o=e[t+688>>2]+8|0;;){for(e[692+((r=h<<2)+t|0)>>2]=o;l=d[0|o];)o=o+l|0;for(o=o+1|0,e[692+((4|r)+t|0)>>2]=o;r=d[0|o];)o=r+o|0;if(o=o+1|0,(0|(h=h+2|0))==1024)break}r=0,(0|(t=e[t+324>>2]))<=0|t>>>0<=w>>>0||(e[s+48>>2]=A,ar(e[30450],85519,s+48|0))}else e[s+40>>2]=r,e[s+36>>2]=l,e[s+32>>2]=s+96,ar(e[30450],85349,s+32|0),r=2;else Er(o),r=3;else{if(r||(e[s>>2]=s+96,ar(e[30450],84963,s)),r=1,!o)break e;Er(o)}return Y=s+288|0,r}function lA(t){var A,r=0,s=0;for(A=Je(t+344|0,0,256),f[t+364|0]=1,f[t+356|0]=1,f[t+357|0]=1,f[t+358|0]=1,f[t+359|0]=1,f[t+360|0]=1,f[t+361|0]=1,f[t+362|0]=1,f[t+363|0]=1,f[t+348|0]=1,f[t+349|0]=1,f[t+350|0]=1,f[t+351|0]=1,f[t+352|0]=1,f[t+353|0]=1,f[t+354|0]=1,f[t+355|0]=1,f[t+431|0]=3,f[t+429|0]=3,f[t+430|0]=3,f[t+406|0]=3,f[t+407|0]=3,f[t+408|0]=3,f[t+409|0]=3,f[t+410|0]=3,f[t+411|0]=3,f[t+412|0]=3,f[t+413|0]=3,f[t+414|0]=3,f[t+415|0]=3,f[t+416|0]=3,f[t+417|0]=3,f[t+418|0]=3,f[t+419|0]=3,f[t+420|0]=3,f[t+421|0]=3,f[t+440|0]=3,f[t+441|0]=3,f[t+442|0]=3,f[t+443|0]=3,s=21;f[(r=t+s|0)+344|0]=4|d[r+344|0],(0|(r=s+1|0))!=58;)f[0|(r=r+A|0)]=4|d[0|r],f[(r=s+A|0)+2|0]=4|d[r+2|0],f[r+3|0]=4|d[r+3|0],s=s+4|0;f[t+346|0]=4|d[t+346|0],f[t+347|0]=4|d[t+347|0],f[t+432|0]=4|d[t+432|0],f[t+433|0]=4|d[t+433|0],f[t+434|0]=4|d[t+434|0],f[t+435|0]=4|d[t+435|0],f[t+436|0]=4|d[t+436|0],f[t+437|0]=4|d[t+437|0],f[t+438|0]=4|d[t+438|0],f[t+439|0]=4|d[t+439|0],f[t+467|0]=4|d[t+467|0],f[t+468|0]=4|d[t+468|0],f[t+470|0]=4|d[t+470|0],f[t+471|0]=4|d[t+471|0],f[t+348|0]=64|d[t+348|0],f[t+349|0]=64|d[t+349|0],f[t+350|0]=64|d[t+350|0],f[t+351|0]=64|d[t+351|0],f[t+352|0]=64|d[t+352|0],f[t+353|0]=64|d[t+353|0],f[t+354|0]=64|d[t+354|0],f[t+355|0]=64|d[t+355|0],f[t+356|0]=64|d[t+356|0],f[t+357|0]=64|d[t+357|0],f[t+358|0]=64|d[t+358|0],f[t+359|0]=64|d[t+359|0],f[t+360|0]=64|d[t+360|0],f[t+361|0]=64|d[t+361|0],f[t+362|0]=64|d[t+362|0],f[t+363|0]=64|d[t+363|0],f[t+364|0]=64|d[t+364|0],f[t+406|0]=64|d[t+406|0],f[t+407|0]=64|d[t+407|0],f[t+408|0]=64|d[t+408|0],f[t+409|0]=64|d[t+409|0],f[t+410|0]=64|d[t+410|0],f[t+411|0]=64|d[t+411|0],f[t+412|0]=64|d[t+412|0],f[t+413|0]=64|d[t+413|0],f[t+414|0]=64|d[t+414|0],f[t+415|0]=64|d[t+415|0],f[t+416|0]=64|d[t+416|0],f[t+417|0]=64|d[t+417|0],f[t+418|0]=64|d[t+418|0],f[t+419|0]=64|d[t+419|0],f[t+420|0]=64|d[t+420|0],f[t+440|0]=64|d[t+440|0],f[t+441|0]=64|d[t+441|0],f[t+429|0]=64|d[t+429|0],f[t+430|0]=64|d[t+430|0],f[t+431|0]=64|d[t+431|0],f[t+442|0]=64|d[t+442|0],f[t+443|0]=64|d[t+443|0],e[t+40>>2]=1,e[t+204>>2]=e[t+600>>2]+77}function Sr(t,A,r,s,o,l,u,g,h){var w,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0;Y=w=Y-128|0;e:{t:{if(PA(l,u,g,h,0,0,0,0)){v=65535&h;r:a:{if((0|(_=h>>>16&32767))!=32767){if(b=4,_)break a;b=l|g|u|v?3:2;break r}b=!(l|g|u|v)}if((0|(V=32767&(ie=o>>>16|0)))!=32767&&b)break t}wt(w+16|0,A,r,s,o,l,u,g,h),Es(w,A=e[w+16>>2],s=e[w+20>>2],o=e[w+24>>2],r=e[w+28>>2],A,s,o,r),s=e[w+8>>2],o=e[w+12>>2],g=e[w>>2],h=e[w+4>>2];break e}if(_=g,(0|PA(A,r,b=s,H=2147483647&o,l,u,g,T=2147483647&h))<=0){if(PA(A,r,b,H,l,u,_,T)){g=A,h=r;break e}wt(w+112|0,A,r,s,o,0,0,0,0),s=e[w+120>>2],o=e[w+124>>2],g=e[w+112>>2],h=e[w+116>>2]}else{if(J=h>>>16&32767,V?(h=r,g=A):(wt(w+96|0,A,r,b,H,0,0,0,1081540608),b=e[w+104>>2],H=g=e[w+108>>2],V=(g>>>16|0)-120|0,h=e[w+100>>2],g=e[w+96>>2]),J||(wt(w+80|0,l,u,_,T,0,0,0,1081540608),_=e[w+88>>2],T=l=e[w+92>>2],J=(l>>>16|0)-120|0,u=e[w+84>>2],l=e[w+80>>2]),re=_,he=65535&T|65536,H=65535&H|65536,(0|V)>(0|J)){for(;;){if(_=(T=b-re|0)-(v=(0|u)==(0|h)&l>>>0>g>>>0|u>>>0>h>>>0)|0,(0|(v=(H-((b>>>0<re>>>0)+he|0)|0)-(v>>>0>T>>>0)|0))>0|(0|v)>=0){if(b=g,!((g=g-l|0)|_|(h=h-((l>>>0>b>>>0)+u|0)|0)|v)){wt(w+32|0,A,r,s,o,0,0,0,0),s=e[w+40>>2],o=e[w+44>>2],g=e[w+32>>2],h=e[w+36>>2];break e}v=v<<1|_>>>31,b=_<<1|h>>>31}else v=H<<1|b>>>31,b=b<<1|h>>>31;if(H=v,v=h<<1|g>>>31,g<<=1,h=v,!((0|(V=V-1|0))>(0|J)))break}V=J}if(_=(T=b-re|0)-(v=(0|u)==(0|h)&l>>>0>g>>>0|u>>>0>h>>>0)|0,T=v=(H-((b>>>0<re>>>0)+he|0)|0)-(v>>>0>T>>>0)|0,(0|v)<0)_=b,T=H;else if(b=g,!((g=g-l|0)|_|(h=h-((l>>>0>b>>>0)+u|0)|0)|T)){wt(w+48|0,A,r,s,o,0,0,0,0),s=e[w+56>>2],o=e[w+60>>2],g=e[w+48>>2],h=e[w+52>>2];break e}if((0|T)==65535|T>>>0<65535)for(;A=h>>>31|0,V=V-1|0,H=h<<1|g>>>31,g<<=1,h=H,r=A,A=T<<1|_>>>31,_=r|_<<1,T=A,A>>>0<65536;);A=32768&ie,(0|V)<=0?(wt(w- -64|0,g,h,_,65535&T|(A|V+120)<<16,0,0,0,1065811968),s=e[w+72>>2],o=e[w+76>>2],g=e[w+64>>2],h=e[w+68>>2]):(s=_,o=65535&T|(A|V)<<16)}}e[t>>2]=g,e[t+4>>2]=h,e[t+8>>2]=s,e[t+12>>2]=o,Y=w+128|0}function GA(t,A,r){var s,o,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0;if(Y=s=Y-1040|0,(0|(u=vi(t,589824,0)))>=0&&((l=MA(1,2072))?e[l+8>>2]=u:(ye(0|u),l=0)),o=l,l){e:if(l=kn(o))for(_=e[30450],T=(s+96|0)+A|0;;){if((0|(u=e[50303]))>=348){e[s+4>>2]=350,e[s>>2]=u+1,ar(_,91860,s);break e}if(d[l+19|0]!=46)if(e[s+88>>2]=l+19,e[s+84>>2]=47,e[s+80>>2]=t,lt(l=s+96|0,91924,s+80|0),(0|(l=Vs(l)))!=-31){if(!((0|l)<=0)&&(v=Is(s+96|0,85712))){g=0,f[s+832|0]=0,f[s+752|0]=0,e[s+360>>2]=0,e[s+356>>2]=4,w=0;t:for(;;){for(b=299-w|0;cA(s+912|0,120,v);){l=s+912|0;r:{if(d[s+912|0]!=35){a:if(!((0|(l=kt(s+912|0)-1|0))<=0))for(;;){if(!((0|(u=f[0|(h=(s+912|0)+l|0)]))==32|u-9>>>0<5))break a;if(f[0|h]=0,!((0|(l=l-1|0))>0))break}if(!(l=Ot(s+912|0)))break r}f[0|l]=0}l=s+912|0;r:if(u=d[s+912|0])for(;;){if(gr(u<<24>>24))break r;if(!(u=d[0|(l=l+1|0)]))break}if(f[0|l]=0,d[s+912|0]){l=l+1|0;r:switch(ss(131904,s+912|0)-1|0){case 0:for(;u=l,l=l+1|0,(0|(h=f[0|u]))==32|h-9>>>0<5;);FA(s+832|0,u,80);continue;case 1:if(f[s+672|0]=0,e[s+364>>2]=5,u=s+672|0,e[s+16>>2]=u,e[s+20>>2]=s+364,jt(l,86237,s+16|0),(u=kt(u)+2|0)>>>0>=b>>>0)continue;f[0|(l=(s+368|0)+w|0)]=e[s+364>>2],Gt(l+1|0,s+672|0),g=g+1|0,w=u+w|0;continue t;case 2:if(e[s+52>>2]=s+360,e[s+48>>2]=s+752,jt(l,86237,s+48|0),!r)continue;e[s+32>>2]=T,ar(_,92042,s+32|0);continue;case 5:break r;default:continue}e[s+64>>2]=s+356,jt(l,87268,s- -64|0)}}break}f[(s+368|0)+w|0]=0,u=ss(132112,s+752|0),g?(h=kt(T)+w|0,b=qt((g=MA(28+(kt(s+832|0)+h|0)|0,1))+24|0,s+368|0,l=w+1|0),e[g+4>>2]=b,l=Gt(l+b|0,T),e[g>>2]=l,e[g+8>>2]=l,d[s+832|0]&&(e[g>>2]=Gt(2+(h+b|0)|0,s+832|0)),l=e[s+360>>2],f[g+14|0]=0,f[g+12|0]=u,f[g+13|0]=l,f[g+15|0]=e[s+356>>2],Er(v),l=e[50303],e[50303]=l+1,e[201216+(l<<2)>>2]=g):Er(v)}}else GA(s+96|0,A,r);if(!(l=kn(o)))break}lo(e[o+8>>2]),Me(o)}Y=s+1040|0}function kr(t,A){var r,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;Y=r=Y-352|0;e:if(t||(t=e[136284+(A<<4)>>2])){d[0|t]!=47&&(e[r+12>>2]=t,e[r+4>>2]=47,e[r+8>>2]=47,e[r>>2]=137584,lt(t=r+16|0,84114,r)),f[r+240|0]=0;t:{r:{if(s=Is(t,84577)){if((0|Xo(s,20))==-1)break t;if(l=Pi(s),o=Pi(s),g=Pi(s),!((0|l)!=65537|(0|o)!=e[50754])&(0|g)==o<<1)break r;Er(s),k[r+256>>1]=d[84864]|d[84865]<<8,t=d[84852]|d[84853]<<8|d[84854]<<16|d[84855]<<24,e[r+240>>2]=d[84848]|d[84849]<<8|d[84850]<<16|d[84851]<<24,e[r+244>>2]=t,t=d[84860]|d[84861]<<8|d[84862]<<16|d[84863]<<24,e[r+248>>2]=d[84856]|d[84857]<<8|d[84858]<<16|d[84859]<<24,e[r+252>>2]=t,Y=l=Y-16|0;a:{if((s=kt(t=r+240|0))>>>0>=6&&!Zr(g=(t+s|0)-6|0,84274,6)){for(w=100;;){for(h=0,Y=s=Y-16|0,d[227196]||(f[227197]=Qe(),f[227196]=1),v=+te(),ee(u=v/1e3)<9223372036854776e3?(b=ee(u)>=1?~~(u>0?we(xe(23283064365386963e-26*u),4294967295):De(23283064365386963e-26*(u-+(~~u>>>0>>>0))))>>>0:0,o=~~u>>>0):(b=-2147483648,o=0),e[s>>2]=o,e[s+4>>2]=b,u=1e3*(v-(+(eA(o,b,1e3,0)>>>0)+4294967296*+(0|fe)))*1e3,o=ee(u)<2147483648?~~u:-2147483648,e[s+8>>2]=o,o=g+(s>>>4|0)^O(e[s+8>>2],65537);f[g+h|0]=65+(15&o|o<<1&32),o=o>>>5|0,(0|(h=h+1|0))!=6;);if(Y=s+16|0,e[l>>2]=384,(0|(s=vi(t,194,l)))>=0)break a;if(w=w-1|0,e[56798]!=20||!w)break}qt(g,84274,6)}else e[56798]=28;s=-1}Y=l+16|0,(0|s)<0||lo(s)}if(!(s=Is(t,84577))){t=Fs(0,e[56798],t);break e}}if((0|(l=Vs(t)))<0){Er(s),t=Fs(0,0-l|0,t);break e}if((0|Xo(s,0))==-1){A=e[56798],Er(s),t=Fs(0,A,t);break e}if(!(o=DA(e[(g=136280+(A<<4)|0)>>2],l))){Er(s),t=48;break e}if((0|mn(o,l,s))!=(0|l)){A=e[56798],Er(s),d[r+240|0]&&Ko(r+240|0),Me(o),t=Fs(0,A,t);break e}Er(s),d[r+240|0]&&Ko(r+240|0),e[136276+(A<<4)>>2]=(d[o+40|0]|d[o+41|0]<<8|d[o+42|0]<<16|d[o+43|0]<<24)/2,e[g>>2]=o,t=0;break e}A=e[56798],Er(s),t=Fs(0,A,t)}else t=28;return Y=r+352|0,t}function Ms(t,A,r,s,o,l){var u,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0;for(f[0|r]=1,u=1&l,he=1,H=-1,J=-1,b=1,l=A;;){ve=ie-2|0,re=v,_=J;e:{t:{for(;;){if(!(T=d[0|l])){J=_,v=re;break e}if(l=l+1|0,V=e[144464+(T<<2)>>2]){r:{if((0|(g=d[V+11|0]))!=1){if(16&d[V+6|0]|(0|g)!=2)break r;f[0|(v=r+b|0)]=H,g=(0|H)<4|(0|_)>(0|H),!(2&d[V+4|0])|!u|(0|H)>=0||(f[0|v]=1),v=g?re:b,J=g?_:H,H=-1,b=b+1|0;break t}if(!B[V+8>>1]){g=0,w=b;a:if((0|T)!=8)g=d[V+14|0],e[o>>2]&&g>>>0>=4||(_=(0|g)<(0|_)?_:g,H=g);else{for(;;){if(T=g,w=w-1|0,e[o>>2]|(0|w)<=0||(0|(V=f[0|(h=r+w|0)]))>3)break a;if(g=T+1|0,!(V>>>0<2))break}if(f[0|h]=4,re=(0|_)<4?w:re,_=(0|_)<=4?4:_,w>>>0<2)break a;if(V=3&(w=~T+ie|0),g=1,ve-T>>>0>=3)for(T=-4&w,w=0;d[0|(h=r+g|0)]==4&&(f[0|h]=3),d[h+1|0]==4&&(f[h+1|0]=3),d[h+2|0]==4&&(f[h+2|0]=3),d[h+3|0]==4&&(f[h+3|0]=3),g=g+4|0,(0|T)!=(0|(w=w+4|0)););if(h=0,!V)break a;for(;d[0|(T=r+g|0)]==4&&(f[0|T]=3),g=g+1|0,(0|V)!=(0|(h=h+1|0)););}if(he)continue;break e}}break}}J=_,v=re,(0|T)==20&&(f[r+b|0]=u&&(0|H)<0?1:H,b=b+1|0)}if(f[0|A]=T,ie=b-1|0,A=A+1|0,he=(0|b)<99)continue}break}f[r+b|0]=1,f[0|A]=0;e:if((0|(A=e[o>>2]))>0)J=4,(0|A)>=(0|b)&&(e[o>>2]=ie,A=ie),f[A+r|0]=4,v=e[o>>2];else if((0|J)==5&&(J=4,!((0|b)<2))){if(l=1,_=1&(A=b-1|0),(0|b)!=2)for(re=-2&A,w=0;;){h=4;t:{r:{a:switch(d[0|(A=(g=l)+r|0)]-4|0){case 1:break r;case 0:break a;default:break t}h=2&d[t+14|0]?1:3,g=v}f[0|A]=h,v=g}h=4;t:{r:{a:switch(d[0|(A=(g=l+1|0)+r|0)]-4|0){case 1:break r;case 0:break a;default:break t}h=2&d[t+14|0]?1:3,g=v}f[0|A]=h,v=g}if(l=l+2|0,(0|re)==(0|(w=w+2|0)))break}if(_){h=4;t:{r:switch(d[0|(A=r+l|0)]-4|0){case 1:break t;case 0:break r;default:break e}h=2&d[t+14|0]?1:3,l=v}f[0|A]=h,v=l}}return e[o>>2]=v,e[s>>2]=b,J}function DA(t,A){var r,s,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0;if(!t)return Nt(A);if(A>>>0>=4294967232)return e[56798]=48,0;r=A>>>0<11?16:A+11&-8,u=-8&(s=e[(g=t-8|0)+4>>2]);e:if(3&s){h=u+g|0;t:if(u>>>0>=r>>>0){if((l=u-r|0)>>>0<16)break t;e[g+4>>2]=1&s|r|2,e[(o=g+r|0)+4>>2]=3|l,e[h+4>>2]=1|e[h+4>>2],st(o,l)}else if(e[57158]!=(0|h))if(e[57157]!=(0|h)){if(2&(l=e[h+4>>2])||(b=u+(-8&l)|0)>>>0<r>>>0)break e;T=b-r|0;r:if(l>>>0<=255){if(u=e[h+8>>2],o=l>>>3|0,(0|(l=e[h+12>>2]))==(0|u)){e[57152]=e[57152]&as(-2,o);break r}e[u+12>>2]=l,e[l+8>>2]=u}else{if(v=e[h+24>>2],(0|(w=e[h+12>>2]))==(0|h))if((o=e[(u=h+20|0)>>2])||(o=e[(u=h+16|0)>>2])){for(;l=u,w=o,(o=e[(u=o+20|0)>>2])||(u=w+16|0,o=e[w+16>>2]););e[l>>2]=0}else w=0;else o=e[h+8>>2],e[o+12>>2]=w,e[w+8>>2]=o;if(v){l=e[h+28>>2];a:{if(e[(o=228912+(l<<2)|0)>>2]==(0|h)){if(e[o>>2]=w,w)break a;e[57153]=e[57153]&as(-2,l);break r}if(e[(e[v+16>>2]==(0|h)?16:20)+v>>2]=w,!w)break r}e[w+24>>2]=v,(o=e[h+16>>2])&&(e[w+16>>2]=o,e[o+24>>2]=w),(o=e[h+20>>2])&&(e[w+20>>2]=o,e[o+24>>2]=w)}}T>>>0<=15?(e[g+4>>2]=1&s|b|2,e[(o=g+b|0)+4>>2]=1|e[o+4>>2]):(e[g+4>>2]=1&s|r|2,e[(l=g+r|0)+4>>2]=3|T,e[(o=g+b|0)+4>>2]=1|e[o+4>>2],st(l,T))}else{if((l=u+e[57154]|0)>>>0<r>>>0)break e;(o=l-r|0)>>>0>=16?(e[g+4>>2]=1&s|r|2,e[(u=g+r|0)+4>>2]=1|o,e[(l=l+g|0)>>2]=o,e[l+4>>2]=-2&e[l+4>>2]):(e[g+4>>2]=l|1&s|2,e[(o=l+g|0)+4>>2]=1|e[o+4>>2],o=0,u=0),e[57157]=u,e[57154]=o}else{if((u=u+e[57155]|0)>>>0<=r>>>0)break e;e[g+4>>2]=1&s|r|2,o=u-r|0,e[(l=g+r|0)+4>>2]=1|o,e[57155]=o,e[57158]=l}o=g}else{if(r>>>0<256||u>>>0>=r+4>>>0&&(o=g,u-r>>>0<=e[57272]<<1>>>0))break e;o=0}return o?o+8|0:(g=Nt(A))?(qt(g,t,A>>>0>(o=(3&(o=e[t-4>>2])?-4:-8)+(-8&o)|0)>>>0?o:A),Me(t),g):0}function Fr(){var t,A,r=0,s=0;return t=ws(12),e[t>>2]=22050,A=ws(432),e[(s=A)+4>>2]=0,e[s+8>>2]=0,e[s>>2]=132304,e[s+32>>2]=0,e[s+12>>2]=0,e[s+16>>2]=0,e[s+20>>2]=0,e[s+24>>2]=0,Je(s+40|0,0,376),e[s+420>>2]=0,e[s+424>>2]=-1,f[s+416|0]=1,r=Je(ws(408),0,408),e[s+28>>2]=r,f[r+8|0]=1,e[t+4>>2]=s,r=ws(1096),e[r+8>>2]=22050,e[r+4>>2]=22050,e[r>>2]=132352,e[r+64>>2]=22050,e[r+56>>2]=0,e[r+60>>2]=0,e[r+32>>2]=0,e[r+36>>2]=0,e[r+24>>2]=22050,e[r+16>>2]=0,e[r+20>>2]=0,e[r+40>>2]=0,e[r+44>>2]=0,f[r+48|0]=0,e[r+128>>2]=0,e[r+132>>2]=0,k[r+96>>1]=0,e[r+72>>2]=22050,e[r+136>>2]=0,e[r+140>>2]=0,k[r+168>>1]=0,e[r+144>>2]=22050,e[r+200>>2]=0,e[r+204>>2]=0,e[r+208>>2]=0,e[r+212>>2]=0,e[r+216>>2]=22050,k[r+240>>1]=0,e[r+280>>2]=0,e[r+284>>2]=0,e[r+272>>2]=0,e[r+276>>2]=0,e[r+288>>2]=22050,k[r+312>>1]=0,e[r+344>>2]=0,e[r+348>>2]=0,e[r+352>>2]=0,e[r+356>>2]=0,e[r+360>>2]=22050,k[r+384>>1]=0,e[r+416>>2]=0,e[r+420>>2]=0,e[r+424>>2]=0,e[r+428>>2]=0,e[r+432>>2]=22050,k[r+456>>1]=0,e[r+488>>2]=0,e[r+492>>2]=0,e[r+496>>2]=0,e[r+500>>2]=0,e[r+504>>2]=22050,k[r+528>>1]=1,e[r+560>>2]=0,e[r+564>>2]=0,e[r+568>>2]=0,e[r+572>>2]=0,k[r+600>>1]=0,e[r+576>>2]=22050,e[r+640>>2]=0,e[r+644>>2]=0,e[r+632>>2]=0,e[r+636>>2]=0,k[r+680>>1]=0,e[r+656>>2]=22050,e[r+648>>2]=22050,e[r+720>>2]=0,e[r+724>>2]=0,e[r+712>>2]=0,e[r+716>>2]=0,k[r+752>>1]=0,e[r+728>>2]=22050,e[r+792>>2]=0,e[r+796>>2]=0,e[r+784>>2]=0,e[r+788>>2]=0,k[r+824>>1]=0,e[r+800>>2]=22050,e[r+864>>2]=0,e[r+868>>2]=0,e[r+856>>2]=0,e[r+860>>2]=0,e[r+872>>2]=22050,k[r+896>>1]=0,e[r+936>>2]=0,e[r+940>>2]=0,e[r+928>>2]=0,e[r+932>>2]=0,k[r+968>>1]=0,e[r+944>>2]=22050,e[r+1008>>2]=0,e[r+1012>>2]=0,e[r+1e3>>2]=0,e[r+1004>>2]=0,k[r+1040>>1]=0,e[r+1016>>2]=22050,e[r+1088>>2]=0,e[(s=r+1080|0)>>2]=0,e[s+4>>2]=0,e[(s=r+1072|0)>>2]=0,e[s+4>>2]=0,e[t+8>>2]=r,Zt[e[e[r>>2]+4>>2]](r,A),t}function Rs(t,A,r){var s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0;e:if(v=e[50759]){if(s=e[50980],o=O(s,80)+222176|0,(0|(h=(0|(o=(0|(o=(e[o+12>>2]+e[o>>2]|0)/(0|t)|0))<(0|(b=((0|O(e[50754],19))/40<<16)/(0|t)|0))?o:b))>=399?399:o))>=0&&(Je(A,0,4+(h<<2)|0),s=e[50980]),(0|s)>=0)for(T=e[50801];;){if(l=O(u,80)+222176|0,e[l+4>>2]&&(g=e[l>>2])){if(_=g+e[l+12>>2]|0,s=1+((g-e[l+8>>2]|0)/(0|t)|0)|0,(0|g)>(0|(s=O(o=(0|s)<=1?1:s,t))))for(;e[(w=(o<<2)+A|0)>>2]=e[w>>2]+O(e[l+4>>2],d[((g-s|0)/(e[l+8>>2]>>8)|0)+T|0]),o=o+1|0,(0|g)>(0|(s=t+s|0)););if(!((0|s)>=(0|_)))for(;e[(w=(o<<2)+A|0)>>2]=e[w>>2]+O(e[l+4>>2],d[((s-g|0)/(e[l+12>>2]>>8)|0)+T|0]),o=o+1|0,(0|_)>(0|(s=t+s|0)););}if(!((0|(u=u+1|0))<=e[50980]))break}if(o=1,!((0|(l=65536e3/(0|t)|0))<=0||(0|(s=O(e[55565],10)))<=0))for(l=(0|s)/(0|l)|0;e[(g=(o<<2)+A|0)>>2]=e[g>>2]+s,o=o+1|0,(0|(s=s-l|0))>0;);if((0|u)<=8)for(;o=(s=u<<2)+203216|0,l=O(u,80)+222176|0,g=e[l+4>>2]>>14,e[o>>2]=(0|O(O(g,g),5))/2,r?s=e[s+203264>>2]:(g=s+203264|0,s=e[l>>2]/(0|t)|0,e[g>>2]=s),(0|s)>=(0|b)&&(e[o>>2]=0),(0|(u=u+1|0))!=9;);if(o=0,(0|h)>=0)for(s=0;l=e[(u=(s<<2)+A|0)>>2]>>15,l=O(l,l)>>8,e[u>>2]=l,(0|o)<=524287999&&(e[u>>2]=O(l,d[344+((o>>19)+v|0)|0])>>13),o=t+o|0,u=(0|s)!=(0|h),s=s+1|0,u;);if(e[A+4>>2]=(0|O(e[A+4>>2],d[203300]?6:10))/8,1&r)for(t=e[50826],s=1;;){if(e[(r=s<<2)+203312>>2]=e[A+r>>2]-e[t+r>>2]>>3,(0|(r=s+1|0))==30)break e;e[(r<<=2)+203312>>2]=e[A+r>>2]-e[t+r>>2]>>3,s=s+2|0}}else h=1;return h}function xr(t,A,r,s){var o,l=0,u=0;Y=o=Y-176|0,f[0|t]=0,k[o+80>>1]=24320,e[o+104>>2]=0,e[o+108>>2]=0,f[82+(br(r,l=o+80|2)+o|0)|0]=0;e:{t:{if(!s){if(s=o+80|1,e[o+12>>2]=s,LA(A,o+12|0,o+16|0,o+104|0,0,0)||(e[o+12>>2]=l,LA(A,o+12|0,o+16|0,o+104|0,0,0)||(f[o+81|0]=32,Qr(A,l,o+16|0,60,0,0,0))),(r=d[o+16|0])&&(0|r)!=21)break t;r:{if(e[A+212>>2]!=25966){if(In(85719,188772,189296),f[o+81|0]=95,e[o+12>>2]=s,LA(e[47193],o+12|0,o+16|0,o+104|0,0,0)||(e[o+12>>2]=l,LA(e[47193],o+12|0,o+16|0,o+104|0,0,0)),d[o+16|0])break r;ns(e[e[32972]+60>>2]),r=d[o+16|0]}if(255&r)break t;A=d[87124]|d[87125]<<8|d[87126]<<16|d[87127]<<24,r=d[87120]|d[87121]<<8|d[87122]<<16|d[87123]<<24,f[0|t]=r,f[t+1|0]=r>>>8,f[t+2|0]=r>>>16,f[t+3|0]=r>>>24,f[t+4|0]=A,f[t+5|0]=A>>>8,f[t+6|0]=A>>>16,f[t+7|0]=A>>>24,f[t+16|0]=d[87136],A=d[87132]|d[87133]<<8|d[87134]<<16|d[87135]<<24,r=d[87128]|d[87129]<<8|d[87130]<<16|d[87131]<<24,f[t+8|0]=r,f[t+9|0]=r>>>8,f[t+10|0]=r>>>16,f[t+11|0]=r>>>24,f[t+12|0]=A,f[t+13|0]=A>>>8,f[t+14|0]=A>>>16,f[t+15|0]=A>>>24;break e}s=o+16|0,l=o+104|0,Y=r=Y-112|0,(u=e[47193])?(KA(u,s,l,-1,0),Or(l=s,s=r+48|0),A=e[A+212>>2],f[r+43|0]=A>>>24,f[0|(u=(l=r+43|0)+(A>>>0>16777215)|0)]=A>>>16,f[0|(u=u+!!(16711680&A)|0)]=A>>>8,f[0|(u=u+!!(65280&A)|0)]=A,f[u+!!(255&A)|0]=0,e[r+16>>2]=85719,e[r+24>>2]=l,e[r+20>>2]=s,lt(t,85662,r+16|0)):(KA(A,s,l,-1,0),Or(s,A=r+48|0),e[r>>2]=A,lt(t,85451,r)),Y=r+112|0,ns(e[e[32972]+60>>2]);break e}if(e[o+12>>2]=l,LA(A,o+12|0,o+16|0,o+104|0,0,0),!d[o+16|0])break e}KA(r=A,A=o+16|0,o+104|0,-1,0),Or(r=A,A=o+112|0),e[o>>2]=A,lt(t,85451,o)}return Y=o+176|0,t}function bs(t,A){var r,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0;if(Y=r=Y-112|0,e[r+72>>2]=-1,e[(s=r- -64|0)>>2]=-1,e[s+4>>2]=-1,e[r+56>>2]=-1,e[r+60>>2]=-1,e[r+48>>2]=-1,e[r+52>>2]=-1,e[r+40>>2]=-1,e[r+44>>2]=-1,e[r+32>>2]=-1,e[r+36>>2]=-1,e[r+24>>2]=-1,e[r+28>>2]=-1,e[r+16>>2]=-1,e[r+20>>2]=-1,(0|A)>0){for(l=e[r+72>>2],u=e[r+68>>2],g=e[r+64>>2],h=e[r+60>>2],w=e[r+56>>2],b=e[r+52>>2],v=e[r+48>>2],T=e[r+44>>2],_=e[r+40>>2],V=e[r+36>>2],H=e[r+32>>2],J=e[r+28>>2],re=e[r+24>>2],ie=e[r+20>>2],he=e[r+16>>2];o=l,l=(0|(l=e[(s=134912+(ve<<6)|0)+60>>2]))<0?o:l,o=u,u=(0|(u=e[s+56>>2]))<0?o:u,o=g,g=(0|(g=e[s+52>>2]))<0?o:g,o=h,h=(0|(h=e[s+48>>2]))<0?o:h,o=w,w=(0|(w=e[s+44>>2]))<0?o:w,o=b,b=(0|(b=e[s+40>>2]))<0?o:b,o=v,v=(0|(v=e[s+36>>2]))<0?o:v,o=T,T=(0|(T=e[s+32>>2]))<0?o:T,o=_,_=(0|(_=e[s+28>>2]))<0?o:_,o=V,V=(0|(V=e[s+24>>2]))<0?o:V,o=H,H=(0|(H=e[s+20>>2]))<0?o:H,o=J,J=(0|(J=e[s+16>>2]))<0?o:J,o=re,re=(0|(re=e[s+12>>2]))<0?o:re,o=ie,ie=(0|(ie=e[s+8>>2]))<0?o:ie,he=(0|(s=e[s+4>>2]))<0?he:s,(0|(ve=ve+1|0))!=(0|A););e[r+72>>2]=l,e[r+68>>2]=u,e[r+64>>2]=g,e[r+60>>2]=h,e[r+56>>2]=w,e[r+52>>2]=b,e[r+48>>2]=v,e[r+44>>2]=T,e[r+40>>2]=_,e[r+36>>2]=V,e[r+32>>2]=H,e[r+28>>2]=J,e[r+24>>2]=re,e[r+20>>2]=ie,e[r+16>>2]=he}for(A=0;;){if((0|(s=e[(l=A<<2)+(r+16|0)>>2]))!=e[(l=l+134848|0)>>2]){f[r+80|0]=0;e:{t:switch(A-1|0){case 4:e[47201]=s-1;break e;case 5:e[47200]=s;break e;case 0:case 1:case 2:case 3:case 11:break t;default:break e}e[r+4>>2]=s,e[r>>2]=1,e[r+8>>2]=f[A+102812|0],lt(r+80|0,91942,r)}e[l>>2]=s,s=r+80|0,Gt(e[t>>2]+189424|0,s),e[t>>2]=e[t>>2]+kt(s)}if((0|(A=A+1|0))==15)break}Y=r+112|0}function js(t){var A,r,s,o=0,l=0,u=0,g=0;for(o=17,e[t+328>>2]=17,e[t+224>>2]=0,e[t+216>>2]=1105,e[t+220>>2]=1072,e[t+600>>2]=1056,e[t+8180>>2]=105296,u=Je(t+344|0,0,256),f[t+393|0]=1,f[t+365|0]=1,f[t+360|0]=1,f[t+545|0]=1,f[t+529|0]=1,f[t+391|0]=1,f[t+379|0]=1,f[t+374|0]=1,f[t+489|0]=1,f[t+487|0]=1,f[t+398|0]=1,f[t+387|0]=1,f[t+388|0]=2,f[t+389|0]=1,f[t+390|0]=1,f[t+385|0]=2,f[t+383|0]=2,f[t+368|0]=1,f[t+369|0]=2,l=104224;f[0|(o=o+u|0)]=4|d[0|o],o=u+d[l+1|0]|0,f[0|o]=4|d[0|o],o=u+d[l+2|0]|0,f[0|o]=4|d[0|o],o=d[0|(l=l+3|0)],(0|l)!=104251;);f[t+386|0]=8|d[t+386|0],f[t+382|0]=8|d[t+382|0],f[t+384|0]=8|d[t+384|0],f[t+369|0]=16|d[t+369|0],f[t+370|0]=16|d[t+370|0],f[t+371|0]=16|d[t+371|0],l=d[t+361|0],u=d[t+362|0],o=d[t+363|0],g=d[t+364|0],A=d[t+366|0],r=d[t+367|0],f[t+372|0]=16|d[t+372|0],f[t+373|0]=16|d[t+373|0],f[t+375|0]=16|d[t+375|0],f[t+376|0]=16|d[t+376|0],f[t+377|0]=16|d[t+377|0],f[t+378|0]=16|d[t+378|0],f[t+380|0]=16|d[t+380|0],f[t+381|0]=16|d[t+381|0],f[t+383|0]=16|d[t+383|0],f[t+385|0]=16|d[t+385|0],s=d[t+388|0],f[t+367|0]=48|r,f[t+366|0]=40|A,f[t+364|0]=48|g,f[t+363|0]=48|o,f[t+362|0]=48|u,f[t+361|0]=48|l,f[t+388|0]=80|s,l=d[t+390|0],u=d[t+391|0],o=d[t+393|0],f[t+360|0]=128|d[t+360|0],g=d[t+365|0],f[t+393|0]=192|o,f[t+365|0]=128|g,f[t+368|0]=128|d[t+368|0],f[t+374|0]=128|d[t+374|0],f[t+379|0]=128|d[t+379|0],f[t+387|0]=128|d[t+387|0],o=d[t+389|0],f[t+391|0]=192|u,f[t+390|0]=192|l,f[t+389|0]=128|o,f[t+529|0]=128|d[t+529|0],f[t+545|0]=128|d[t+545|0],f[t+489|0]=128|d[t+489|0],f[t+487|0]=128|d[t+487|0],f[t+398|0]=128|d[t+398|0]}function LA(t,A,r,s,o,l){var u,g=0,h=0,w=0,b=0,v=0,T=0;Y=u=Y-192|0,g=v=e[A>>2];e:{t:{for(;h=1,(0|(w=f[0|g]))>=0||(h=2,w>>>0<4294967264||(h=w>>>0<4294967280?3:4)),!(d[0|(w=h+g|0)]!=32|d[w+1|0]!=46);){if(b-160>>>0<4294967135)break t;qt((T=u+32|0)+b|0,g,h),f[(h=h+b|0)+T|0]=46,g=w+3|0,b=h+1|0}if(b){for(h=0;w=h,h=h+1|0,223&d[g+w|0];);if(!((T=w+b|0)+1>>>0>160)&&(qt((h=u+32|0)+b|0,g,w),f[h+T|0]=0,U(t,h,g,r,s,o,l))){e[s>>2]=128|e[s>>2],e[33264]=b,t=1;break e}}}for(g=0;;){if(v=(h=v)+1|0,223&(h=d[0|h]))if(!g|(0|h)!=46|f[31+(g+u|0)|0]-48>>>0>=10){if(f[(u+32|0)+g|0]=h,h=159,(0|(g=g+1|0))!=159)continue}else h=g;else h=g;break}f[(g=u+32|0)+h|0]=0,g=U(t,g,v,r,s,o,l);t:if(8&d[s+3|0]){if(!sr(r,w=t+268|0)){if(w=e[t+288>>2]+1|0,e[t+288>>2]=w,(0|w)<4)break t;f[0|r]=0;break t}FA(w,r,20),e[t+288>>2]=1}else e[t+288>>2]=0;t:{if(!g){if(g=0,8&d[s+5|0]&&(w=Wt(u+28|0,g=u+32|d[u+32|0]==95),Ia(t,e[u+28>>2],r),g=g+w|0),!(h>>>0<2|g)){if(f[0|r]=0,!(16&o&&d[0|(g=31+(h+u|0)|0)]==101)&&(!(4096&o)||d[0|(g=(h=(u+32|0)+h|0)-1|0)]!=d[h-2|0]))break t;f[0|g]=0,g=U(t,u+32|0,v,r,s,o,l)}if(!g)break t}if(b=e[s>>2],d[t+172|0]&&(b^=536870912,e[s>>2]=b),t=1,!(536870912&b))break e;2&o&&(k[66448]=8192,e[u+16>>2]=r,lt(132898,87470,u+16|0),t=e[A>>2],e[A>>2]=132898,8&d[188788]&&(qt(A=u+32|0,s=t,t=g-t|0),f[t+A|0]=0,e[u+4>>2]=132898,t=e[47195],e[u>>2]=A,ar(t,87652,u)))}f[0|r]=0,t=0}return Y=u+192|0,t}function Ks(t,A){var r=0,s=0,o=0;r=31&t;e:{t:{r:{if((0|(t&=96))==96)t=-1;else{if((0|t)!=64)break r;t=1}if(r>>>0>=15)break e;A=e[203136+(r<<2)>>2]+O(t,A)|0;break t}if(r>>>0>=15)break e}t=e[(s=r<<2)+105616>>2],e[s+203136>>2]=(0|A)>=0?(0|t)>(0|A)?A:t:0}e:{t:{r:{a:{n:switch(r-1|0){case 5:if(!(t=e[50759]))break t;e[54728]=e[50982],A=e[50979],r=e[50978],Je(205184,0,11e3),e[51293]=0,A=(r=(o=(0|(s=e[50789]))>0)?130:(0|r)>=5499?5499:r)?o?s:(0|A)>=100?100:A:0,e[50755]=A,r=(0|O(r,e[50754]))/1e3|0,e[51292]=r,e[54729]=(0|A)>20?r<<1:A?r:0,e[33037]=(0|O(500-A|0,(0|O(d[e[50797]+105596|0],(0|O(e[50787],55))/100|0))/16|0))/500;break a;case 0:break n;case 2:case 12:break e;case 4:break r;default:break t}if(!(t=e[50759]))break t}return A=256,(0|(r=(0|(r=e[50785]))>=101?101:r))>=51&&(A=256+(((O(r,25)-1250&65535)>>>0)/50|0)|0),k[t+164>>1]=(0|O(k[t+236>>1],A))/256,k[t+166>>1]=(0|O(k[t+238>>1],A))/256,k[t+168>>1]=(0|O(k[t+240>>1],A))/256,k[t+170>>1]=(0|O(k[t+242>>1],A))/256,k[t+172>>1]=(0|O(k[t+244>>1],A))/256,k[t+174>>1]=(0|O(k[t+246>>1],A))/256,t=e[50790],k[102e3]=(0|O(k[102036],O(t,-3)+256|0))/256,void(k[101999]=(0|O(k[102035],O(t,-6)+256|0))/256)}e[50759]&&(e[54728]=e[50982],t=e[50979],A=e[50978],Je(205184,0,11e3),e[51293]=0,t=(A=(s=(0|(r=e[50789]))>0)?130:(0|A)>=5499?5499:A)?s?r:(0|t)>=100?100:t:0,e[50755]=t,A=(0|O(A,e[50754]))/1e3|0,e[51292]=A,e[54729]=(0|t)>20?A<<1:t?A:0,e[33037]=(0|O(500-t|0,(0|O(d[e[50797]+105596|0],(0|O(e[50787],55))/100|0))/16|0))/500)}return}e[33037]=(0|O(d[e[50797]+105596|0],(0|O(e[50787],55))/100|0))/16}function Ws(t,A,r){var s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0;r&&(e[r>>2]=0);e:{t:if(!((0|(s=f[0|t]))<0)){for(;;){if((0|(l=255&s))==32|l-9>>>0<5){if((0|(s=f[0|(t=t+1|0)]))>=0)continue;break t}break}if(!(255&s))break e}for(;;){if((0|(s=h=255&s))==32|s-9>>>0<5)break e;if((0|h)!=124||(0|(s=d[0|(l=t+1|0)]))==124){t:{if((0|(v=e[36115]))>=2){for(s=1,l=-1,w=0;;){r:if(!(!(b=e[144464+(s<<2)>>2])|d[b+11|0]==15)){g=e[b>>2];a:{n:{if(h>>>0>=33){if(T=0,u=0,(255&g)==(0|h)&&(u=1,(o=d[t+1|0])>>>0<33|(0|o)!=(g>>>8&255)||(u=2,(o=d[t+2|0])>>>0<33|(0|o)!=(g>>>16&255)||(u=(o=(o=d[t+3|0])>>>0>32&(0|o)==(g>>>24|0))?4:3,T=0-o|0))),(0|l)>=(0|u))break r;if(o=4,!(1&T))break n;break a}if(u=0,(0|l)>=0)break r}if(g>>>((o=u)<<3)&255)break r}w=d[b+10|0],l=o}if((0|v)==(0|(s=s+1|0)))break}if(w)break t}return r&&Wt(r,t),void(f[0|A]=0)}f[0|A]=w,t=((0|l)<=1?1:l)+t|0,A=l=A+1|0;t:if((0|w)==21){r:if((0|(o=d[0|t]))==32|o-9>>>0<5)s=l;else if(s=l,o)for(;;){if(f[0|s]=Ss(o),s=s+1|0,(0|(o=d[0|(t=t+1|0)]))==32|o-9>>>0<5)break r;if(!o)break}if(f[0|s]=0,!o){if(A=s,sr(l,85593))break t;return void(f[0|l]=0)}f[0|s]=124,A=s+1|0}s=d[0|t]}else t=l;if(!(255&s))break}}f[0|A]=0}function Cr(t,A){var r=0,s=0,o=0,l=0,u=0;e:{t:{r:{a:{n:switch((0|(r=e[t+4>>2]))==e[t+104>>2]?r=Ie(t):(e[t+4>>2]=r+1,r=d[0|r]),r-43|0){case 0:case 2:break n;default:break a}if(l=(0|r)==45,u=!A,(0|(r=e[t+4>>2]))==e[t+104>>2]?r=Ie(t):(e[t+4>>2]=r+1,r=d[0|r]),u|(A=r-58|0)>>>0>4294967285)break r;if(e[t+116>>2]<0)break t;e[t+4>>2]=e[t+4>>2]-1;break t}A=r-58|0}if(!(A>>>0<4294967286)){if((A=r-48|0)>>>0<10){for(;o=(0|(s=(s=O(s,10)+r|0)-48|0))<214748364,(0|(A=e[t+4>>2]))==e[t+104>>2]?r=Ie(t):(e[t+4>>2]=A+1,r=d[0|A]),o&(A=r-48|0)>>>0<=9;);o=s>>31}r:if(!(A>>>0>=10))for(;;){if(A=(s=eA(s,o,10,0))+r|0,r=fe,r=A>>>0<s>>>0?r+1|0:r,s=A-48|0,o=r-(A>>>0<48)|0,(0|(A=e[t+4>>2]))==e[t+104>>2]?r=Ie(t):(e[t+4>>2]=A+1,r=d[0|A]),(A=r-48|0)>>>0>9)break r;if(!(s>>>0<2061584302&(0|o)<=21474836|(0|o)<21474836))break}if(A>>>0<10)for(;(0|(A=e[t+4>>2]))==e[t+104>>2]?A=Ie(t):(e[t+4>>2]=A+1,A=d[0|A]),A-48>>>0<10;);(0|(A=e[t+116>>2]))>0|(0|A)>=0&&(e[t+4>>2]=e[t+4>>2]-1),t=s,s=l?0-t|0:t,o=l?0-(!!(0|t)+o|0)|0:o;break e}}if(o=-2147483648,!(e[t+116>>2]<0))return e[t+4>>2]=e[t+4>>2]-1,fe=-2147483648,0}return fe=o,s}function cs(t){var A=0,r=0,s=0,o=0;if(e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,A=e[203136+((0|t)==2?32:8)>>2],s=e[32972],(0|(r=e[s+84>>2]))>0&&(A=(0|O(A,r))/100|0),r=(0|A)>=359?359:A,r=(0|(A=(0|A)>=450?450:A))>399?6:(0|A)>379?7:d[((0|r)<=80?80:r)+101856|0],1&t&&(e[32526]=(0|O(r,e[s+72>>2]))/256,e[32527]=(0|O(r,e[s+76>>2]))/256,e[32528]=(0|O(r,e[s+80>>2]))/256,r>>>0>7||(o=r-1|0,e[32528]=o,e[32526]=r,e[32527]=o)),2&t){t=e[s+72>>2];e:{t:{r:{a:{n:{o:{c:{u:{if((0|A)>=351)s=A-350|0,e[36432]=85-(((255&s)>>>0)/3|0)&255,s=60-(s>>>3|0)|0;else{if((0|A)<251)break u;s=A-250|0,e[36432]=110-(s>>>2|0),s=110-(s>>>1|0)|0}if(e[36433]=s,t=(0|O(t,r))/256|0,e[36431]=110+((0|O(t,150))/128|0),A>>>0<=349)break c;if(r=A-350|0,e[36431]=d[r+102224|0],A>>>0<390)break n;if(e[36434]=450+((A+112<<24>>24)/-2<<24>>24),A>>>0<441)break o;e[36434]=860-A,t=12;break t}t=(0|O(t,r))/256|0,e[36431]=(0|A)>=170?110+((0|O(t,150))/128|0)|0:128+((t<<7)/130|0)|0}t=(t<<8)/115|0;break t}if(t=12,A>>>0>430)break t;if(t=13,A>>>0<=400)break a;break t}if(t=(t<<8)/115|0,e[36428]=t,A>>>0<375)break r}t=14;break t}if((0|A)<351)break e;t=d[r+102336|0]}e[36428]=t}e[36429]=(0|t)<=16?16:t}}function yr(t,A,r){var s,o,l,u;s=.000244140625*+e[50767],P[r>>3]=s,P[r+40>>3]=.015625*+e[t+112>>2],P[r+48>>3]=.015625*+e[t+276>>2],P[r+56>>3]=.00390625*+(0|O(k[t+166>>1],k[A+4>>1]))+ +k[t+220>>1],P[r+64>>3]=.00390625*+(0|O(k[t+168>>1],k[A+6>>1]))+ +k[t+222>>1],P[r+72>>3]=.00390625*+(0|O(k[t+170>>1],k[A+8>>1]))+ +k[t+224>>1],P[r+80>>3]=.00390625*+(0|O(k[t+172>>1],k[A+10>>1]))+ +k[t+226>>1],P[r+88>>3]=.00390625*+(0|O(k[t+174>>1],k[A+12>>1]))+ +k[t+228>>1],o=k[t+230>>1],l=k[t+176>>1],u=k[A+14>>1],e[r+112>>2]=0,e[r+116>>2]=1080623104,e[r+104>>2]=0,e[r+108>>2]=1081032704,P[r+96>>3]=.00390625*+(0|O(l,u))+ +(0|o),d[A+40|0]?(e[r+184>>2]=0,e[r+188>>2]=1072693248,P[r+104>>3]=d[A+40|0]<<1):(e[r+184>>2]=0,e[r+188>>2]=0),P[r+120>>3]=.00390625*+k[t+202>>1]*+(d[A+35|0]<<1),P[r+128>>3]=.00390625*+k[t+204>>1]*+(d[A+36|0]<<1),P[r+136>>3]=.00390625*+k[t+206>>1]*+(d[A+37|0]<<1),A=d[A+38|0],t=k[t+208>>1],e[r+176>>2]=0,e[r+180>>2]=1079574528,e[r+160>>2]=0,e[r+164>>2]=1083129856,e[r+152>>2]=0,e[r+156>>2]=1083129856,e[r+352>>2]=0,e[r+356>>2]=1072693248,e[r+168>>2]=0,e[r+172>>2]=1079574528,P[r+144>>3]=.00390625*+(0|t)*+(A<<1),t=e[50779],P[r+368>>3]=s,P[r+360>>3]=+(0|t)/100*3}function Br(t){var A=0;Ue(t,Tr(t));e:{t:{r:{a:{n:{o:{c:{u:{l:{i:{if((0|(t=-1048576&fe))<268435455|(0|t)<=268435455){p:{C:{if((0|t)<33554431|(0|t)<=33554431){if((0|t)<8388607|(0|t)<=8388607){if(A=524328,!0&(0|t)==-2147483648)break e;if(0|(0|t)!=-2143289344)break t;return 557096}if(!0&(0|t)==8388608)break C;if(0|(0|t)!=16777216)break t;return 524358}if((0|t)>71303167)break p;if(!0&(0|t)==33554432)break r;if(0|(0|t)!=67108864)break t}return 266270}if(!0&(0|t)==71303168)break i;if(!0&(0|t)==134217728)break a;if(0|(0|t)!=138412032)break t;return 294942}if((0|t)<542113791|(0|t)<=542113791){if((0|t)<536870911|(0|t)<=536870911){if(!0&(0|t)==268435456)break n;if(0|(0|t)!=272629760)break t;return 299028}if(!0&(0|t)==536870912)break c;if(!0&(0|t)==538968064)break o;if(0|(0|t)!=541065216)break t;return 569389}if((0|t)<1075838975|(0|t)<=1075838975){if(!0&(0|t)==542113792)break i;if(0|(0|t)!=1073741824)break t;return 532520}if(!0&(0|t)==1075838976)break u;if(!0&(0|t)==1077936128)break l;if(0|(0|t)!=1078984704)break t}return 299038}return 565288}return 1581096}return 536621}return 1585197}return 266260}return 262174}return 2396190}A=16384}return A}function vs(t,A,r,s,o,l){var u,g,h=0,w=0,b=0,v=0;if(g=8388607&t,w=e[34456],h=d[0|(t=g+w|0)]|d[t+1|0]<<8){u=!(b=d[t+2|0]),t=e[36434]<<u,(0|r)<=0?r=h:(r=(0|O(e[50754],r))/1e3<<u,t=(0|t)<(0|(v=(0|O(r,t))/(0|h)|0))?v:t),o=(0|o)>0?(0|O(r,o))/256|0:r,r=(0|O(o,e[36431]))/256|0,r=(0|t)<(0|(r=(4&s)>>>2|0&&(0|r)>(0|o)?o:r))?r:t,b||(h=h>>>1|0,r=(0|r)/2|0);e:if(!((0|l)<0)){if(s=g+4|0,256&A)t=e[50758],e[36439]=t,e[(A=216192+(t<<4)|0)>>2]=7,e[A+8>>2]=s+w,e[A+4>>2]=h<<16|r,l=b|l<<8;else{if(t=e[50758],e[36439]=t,e[(t=216192+(t<<4)|0)>>2]=6,l=b|l<<8,e[t+12>>2]=l,e[t+8>>2]=s+w,w=t,t=O(A=h>>>2|0,3),o=(0|r)>(0|h),e[w+4>>2]=o?t:r,w=e[50758]+1|0,e[50758]=(0|w)<=169?w:0,(0|t)<(0|(r=o?r-t|0:0)))for(o=A<<1,b=s+(b?A:o)|0;A=e[50758],e[36439]=A,e[(A=216192+(A<<4)|0)>>2]=6,e[A+4>>2]=o,e[A+12>>2]=l,e[A+8>>2]=b+e[34456],A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,(0|t)<(0|(r=r-o|0)););if((0|r)<=0)break e;t=e[50758],e[36439]=t,e[(A=216192+(t<<4)|0)>>2]=6,e[A+4>>2]=r,e[A+8>>2]=e[34456]+(s+(h-r<<u)|0)}e[12+(216192+(t<<4)|0)>>2]=l,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}}}function qt(t,A,r){var s,o=0,l=0;if(r>>>0>=512)return it(0|t,0|A,0|r),t;s=t+r|0;e:if(3&(t^A))if(s>>>0<4)r=t;else if((o=s-4|0)>>>0<t>>>0)r=t;else for(r=t;f[0|r]=d[0|A],f[r+1|0]=d[A+1|0],f[r+2|0]=d[A+2|0],f[r+3|0]=d[A+3|0],A=A+4|0,o>>>0>=(r=r+4|0)>>>0;);else{t:if(3&t)if(r)for(r=t;;){if(f[0|r]=d[0|A],A=A+1|0,!(3&(r=r+1|0)))break t;if(!(r>>>0<s>>>0))break}else r=t;else r=t;if(!((o=-4&s)>>>0<64||(l=o+-64|0)>>>0<r>>>0))for(;e[r>>2]=e[A>>2],e[r+4>>2]=e[A+4>>2],e[r+8>>2]=e[A+8>>2],e[r+12>>2]=e[A+12>>2],e[r+16>>2]=e[A+16>>2],e[r+20>>2]=e[A+20>>2],e[r+24>>2]=e[A+24>>2],e[r+28>>2]=e[A+28>>2],e[r+32>>2]=e[A+32>>2],e[r+36>>2]=e[A+36>>2],e[r+40>>2]=e[A+40>>2],e[r+44>>2]=e[A+44>>2],e[r+48>>2]=e[A+48>>2],e[r+52>>2]=e[A+52>>2],e[r+56>>2]=e[A+56>>2],e[r+60>>2]=e[A+60>>2],A=A- -64|0,l>>>0>=(r=r- -64|0)>>>0;);if(r>>>0>=o>>>0)break e;for(;e[r>>2]=e[A>>2],A=A+4|0,o>>>0>(r=r+4|0)>>>0;);}if(r>>>0<s>>>0)for(;f[0|r]=d[0|A],A=A+1|0,(0|s)!=(0|(r=r+1|0)););return t}function Dr(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0;F(+t),A=0|y(1),y(0);e:{if((s=(A=A>>>20&2047)-969|0)>>>0<63)h=A;else{if((0|s)<0)return t+1;if(!(A>>>0<1033)){if(F(+t),s=0|y(1),r=0,!(0|y(0))&(0|s)==-1048576)break e;return A>>>0>=2047?t+1:(0|s)<0?(P[(A=Y-16|0)+8>>3]=12882297539194267e-247,12882297539194267e-247*P[A+8>>3]):(P[(A=Y-16|0)+8>>3]=3105036184601418e216,3105036184601418e216*P[A+8>>3])}}if(r=P[14409],l=(r=(t=(r=(o=P[14408]*t+r)-r)*P[14411]+(r*P[14410]+t))*t)*r*(t*P[14415]+P[14414]),r*=t*P[14413]+P[14412],F(+o),y(1),g=0|y(0),t=l+(r+(P[(s=g<<4&2032)+115376>>3]+t)),u=e[(s=s+115384|0)>>2],A=(g<<13)+(A=e[s+4>>2])|0,A=(s=(s=u)+(u=0)|0)>>>0<u>>>0?A+1|0:A,!h)return-2147483648&g?(M(0,0|s),M(1,A+1071644672|0),(t=(o=(r=+S())*t)+r)<1&&(e[(A=Y-16|0)+8>>2]=0,e[A+12>>2]=1048576,P[A+8>>3]=22250738585072014e-324*P[A+8>>3],t=(t=(l=t+1)+(o+(r-t)+(t+(1-l)))+-1)==0?0:t),t*=22250738585072014e-324):(M(0,0|s),M(1,A-1058013184|0),t=5486124068793689e288*((r=+S())*t+r)),t;M(0,0|s),M(1,0|A),r=(r=+S())*t+r}return r}function Is(t,A){var r,s=0,o=0,l=0,u=0;Y=r=Y-16|0;e:{if(ta(84270,f[0|A])){if(o=2,ta(A,43)||(o=d[0|A]!=114),o=ta(A,120)?128|o:o,l=o=ta(A,101)?524288|o:o,u=64|o,l=(0|(o=d[0|A]))==114?l:u,l=(0|o)==119?512|l:l,e[r>>2]=438,e[r+4>>2]=0,(t=0|ne(-100,0|t,32768|((0|o)==97?1024|l:l),0|r))>>>0>=4294963201&&(e[56798]=0-t,t=-1),(0|t)<0)break e;Y=o=Y-32|0;t:{r:{if(ta(84270,f[0|A])){if(s=Nt(1176))break r}else e[56798]=28;A=0;break t}Je(s,0,144),ta(A,43)||(e[s>>2]=d[0|A]==114?8:4),d[0|A]==97?(1024&(A=0|_e(0|t,3,0))||(A|=1024,e[o+16>>2]=A,e[o+20>>2]=A>>31,_e(0|t,4,o+16|0)),A=128|e[s>>2],e[s>>2]=A):A=e[s>>2],e[s+80>>2]=-1,e[s+48>>2]=1024,e[s+60>>2]=t,e[s+44>>2]=s+152,8&A||(e[o>>2]=o+24,e[o+4>>2]=0,0|le(0|t,21523,0|o)||(e[s+80>>2]=10)),e[s+40>>2]=10,e[s+36>>2]=11,e[s+32>>2]=12,e[s+12>>2]=13,d[227205]||(e[s+76>>2]=-1),e[s+56>>2]=e[56816],(A=e[56816])&&(e[A+52>>2]=s),e[56816]=s,A=s}if(Y=o+32|0,s=A)break e;ye(0|t)}else e[56798]=28;s=0}return Y=r+16|0,s}function us(t,A,r){var s,o=0,l=0,u=0,g=0,h=0;if(u=t,Y=s=Y-208|0,e[s+8>>2]=1,e[s+12>>2]=0,g=A<<2){for(e[s+16>>2]=4,e[s+20>>2]=4,A=4,o=4,l=2;t=A,A=(o+4|0)+A|0,e[(s+16|0)+(l<<2)>>2]=A,l=l+1|0,o=t,A>>>0<g>>>0;);if((t=(u+g|0)-4|0)>>>0<=u>>>0)l=0,A=1,t=0;else{for(l=1,A=1;3&~l?(Ae[(s+16|0)+((o=A-1|0)<<2)>>2]>=t-u>>>0?Ar(u,r,s+8|0,A,0,s+16|0):bn(u,r,A,s+16|0),(0|A)!=1?(yi(s+8|0,o),A=1):(yi(s+8|0,1),A=0)):(bn(u,r,A,s+16|0),Bi(s+8|0,2),A=A+2|0),l=1|(o=e[s+8>>2]),e[s+8>>2]=l,t>>>0>(u=u+4|0)>>>0;);l=o>>>0>1,t=e[s+12>>2]!=0}if(Ar(u,r,s+8|0,A,0,s+16|0),l|(0|A)!=1|t)for(;(0|A)<=1?(Bi(o=s+8|0,t=dt(o)),l=e[s+8>>2],t=t+A|0):(yi(o=s+8|0,2),e[s+8>>2]=7^e[s+8>>2],Bi(o,1),Ar((h=u-4|0)-e[(g=s+16|0)+((t=A-2|0)<<2)>>2]|0,r,o,A-1|0,1,g),yi(o,1),l=1|e[s+8>>2],e[s+8>>2]=l,Ar(h,r,o,t,1,g)),A=t,u=u-4|0,e[s+12>>2]|(0|A)!=1|(0|l)!=1;);}Y=s+208|0}function ut(t,A,r,s){var o,l=0,u=0,g=0;Y=o=Y-32|0,g=l=2147483647&s,u=l-1006698496|0;e:if(0|(l=l-1140785152|0)>>>0>u>>>0){if(l=r<<4|A>>>28,r=s<<4|r>>>28,(0|(A&=268435455))==134217728&!!(0|t)|A>>>0>134217728){u=r+1073741824|0,u=(l=l+1|0)?u:u+1|0;break e}if(u=r+1073741824|0,t|(0|A)!=134217728)break e;u=(t=1&l)>>>0>(l=t+l|0)>>>0?u+1|0:u}else(!r&(0|g)==2147418112?!(t|A):g>>>0<2147418112)?(l=0,u=2146435072,g>>>0>1140785151||(u=0,(g=g>>>16|0)>>>0<15249||(wA(o+16|0,t,A,r,l=65535&s|65536,g-15233|0),dr(o,t,A,r,l,15361-g|0),l=(A=e[o+8>>2])<<4,A=e[o+12>>2]<<4|A>>>28,r=e[o>>2],g=u=e[o+4>>2],l|=u>>>28,u=A,(0|(t=268435455&g))==134217728&!!(0|(A=r|!!(e[o+16>>2]|e[o+24>>2]|e[o+20>>2]|e[o+28>>2])))|t>>>0>134217728?u=(l=l+1|0)?u:u+1|0:A|(0|t)!=134217728||(u=(t=l)>>>0>(l=l+(1&l)|0)>>>0?u+1|0:u)))):(l=r<<4|A>>>28,u=524287&(t=s<<4|r>>>28)|2146959360);return Y=o+32|0,M(0,0|l),M(1,-2147483648&s|u),+S()}function ht(t){var A,r=0,s=0,o=0,l=0,u=0;if(F(+t),u=0|y(1),o=0|y(0),(0|(l=u>>>20&2047))==2047)return(t*=1)/t;if(!(s=o<<1)&(0|(r=u<<1|o>>>31))==2145386496|r>>>0<2145386496)return!s&(0|r)==2145386496?0*t:t;if(l)r=1048575&u|1048576;else{if(l=0,s=o<<12,(0|(r=u<<12|o>>>20))>0|(0|r)>=0)for(;l=l-1|0,r=r<<1|s>>>31,s<<=1,(0|r)>0|(0|r)>=0;);s=31&(r=1-l|0),(63&r)>>>0>=32?(r=o<<s,o=0):(r=(1<<s)-1&o>>>32-s|u<<s,o<<=s)}if(s=o,(0|l)>1023){for(;;){if(!((0|(o=r+-1048576|0))<0||(r=o)|s))return 0*t;if(r=r<<1|s>>>31,s<<=1,!((0|(l=l-1|0))>1023))break}l=1023}if(!((0|(o=r+-1048576|0))<0||(r=o)|s))return 0*t;if((0|r)==1048575|r>>>0<1048575)for(;l=l-1|0,o=r>>>0<524288,r=r<<1|s>>>31,s<<=1,o;);return A=-2147483648&u,(0|l)>0?r=r+-1048576|l<<20:(o=1-l|0,u=r,l=s,s=31&o,(63&o)>>>0>=32?(r=0,s=u>>>s|0):(r=u>>>s|0,s=((1<<s)-1&u)<<32-s|l>>>s)),M(0,0|s),M(1,r|A),+S()}function Qt(t,A,r,s,o){var l,u=0,g=0;Y=l=Y-160|0;e:{t:{r:{a:switch((u=d[A+10|0])-15|0){case 6:break r;case 0:break a;default:break t}f[0|t]=0;break e}e[l>>2]=O(d[r+7|0],44)+137856,lt(t,86002,l),t=kt(t)+t|0;break e}if(s){if(f[l+140|0]=0,r?WA(0,0,r,l+8|0,0):_a(u,l+8|0),r=l+140|0,u=d[l+140|0]){if((0|u)==32){f[0|t]=0;break e}224&(u=u<<24>>24)||(o&&(e[o>>2]=u),r=l+141|0)}if(!((0|(o=kt(r)))<=0)){t=Gt(t,r)+o|0,f[0|t]=0;break e}}o=0;t:if(!(!(r=255&(u=e[A>>2]))|(0|r)==47)){if(s){if((0|(g=255&u))==95)break t;r:{a:{if((0|g)==35){if(g=3,d[A+11|0]!=2)break a;break t}if((g=r-32|0)>>>0>95)break r}r=B[93952+(g<<1)>>1]}o=br(r,t)}else f[0|t]=u,o=1;for(;;){if(!(r=255&(u>>=8))|(0|r)==47)break t;if(s){if((0|r)==35&d[A+11|0]==2)break t;if(r-48>>>0<10)continue;(g=r-32|0)>>>0<=95&&(r=B[93952+(g<<1)>>1]),o=br(r,t+o|0)+o|0}else f[t+o|0]=u,o=o+1|0}}f[0|(t=t+o|0)]=0}return Y=l+160|0,t}function VA(t){var A,r=0;A=t,r=131280;e:{t:{if(!((0|t)<=1023||(r=131300,t>>>0<1328||(r=131320,t>>>0<1424||(r=131340,t>>>0<1536||(r=131360,t>>>0<1792||(r=131380,t>>>0<1872||(r=131400,t>>>0<2432||(r=131420,t>>>0<2560||(r=131440,t>>>0<2688||(r=131460,t>>>0<2816||(r=131480,t>>>0<2944||(r=131500,t>>>0<3072||(r=131520,t>>>0<3200||(r=131540,t>>>0<3328||(r=131560,t>>>0<3456||(r=131580,t>>>0<3584||(r=131600,t>>>0<3712||(r=131620,t>>>0<3840||(r=131640,t>>>0<4096||(r=131660,t>>>0<4256||(r=131680,t>>>0<4352||(r=131700,t>>>0<4608||(r=131720,t>>>0<5024||(r=131740,t>>>0<10496||(r=131760,t>>>0<12544||(r=131780,t>>>0<40960))))))))))))))))))))))))))){if(t>>>0>=55296)break t;r=131800}if((0|A)>=B[(t=r)+8>>1])break e}t=0}return t}function Ia(t,A,r){var s,o=0,l=0,u=0,g=0;Y=s=Y-208|0,f[s+80|0]=0;e:{if((o=A-224|0)>>>0<=158)A=101072+(o<<1)|0;else{if((A=A-592|0)>>>0>88)break e;A=101392+(A<<1)|0}if(A=B[A>>1]){if(u=A<<16>>16,g=(o=63&A)>>>0>37?o+59|0:k[101584+(o<<1)>>1],o=A>>>6|0,(0|u)<0)o=59+(63&o)|0,A=A>>>12&7;else{if(!(l=31&o))break e;o=0,A=A>>>11&15}(l=St(t,e[129920+(l<<3)>>2],s+112|0))&&sn(t,g,s+176|0)&&(A&&4096&St(t,e[129920+(A<<3)>>2],s+80|0)&&(r=kt(A=Gt(r,s+80|0)),f[s+80|0]=0,r=A+r|0),o?(sn(A=t,o,t=s+144|0),e[s+68>>2]=s+80,e[s- -64>>2]=t,e[s+60>>2]=6,e[s+52>>2]=23,e[s+56>>2]=s+176,e[s+48>>2]=s+112,lt(r,84101,s+48|0)):(0|u)<0?Gt(r,s+176|0):1&e[t+144>>2]|4096&l?(e[s+36>>2]=23,e[s+40>>2]=6,e[s+44>>2]=s+176,e[s+32>>2]=s+112,lt(r,84430,s+32|0)):(e[s+16>>2]=23,e[s+8>>2]=23,e[s>>2]=4,e[s+12>>2]=s+112,e[s+4>>2]=s+176,lt(r,84802,s)))}}Y=s+208|0}function na(){iA(),e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56244]=0,e[56245]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0}function wa(t,A){var r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;e:{if((0|(l=e[t+4>>2]))==e[t>>2])if((u=e[t+8>>2])>>>0<(r=e[t+12>>2])>>>0)r=(o=(1+(r-u>>2)|0)/2<<2)+u|0,(0|l)!=(0|u)&&(Be(r=r-(s=u-l|0)|0,l,s),l=e[t+8>>2]),e[t+4>>2]=r,e[t+8>>2]=o+l;else{if((s=(0|r)==(0|l)?1:r-l>>1)>>>0>=1073741824)break e;if(b=(h=ws(r=s<<2))+r|0,g=r=(s+3&-4)+h|0,(0|l)!=(0|u)){if(v=-4&(u=u-l|0),o=r,s=l,u=1+((w=u-4|0)>>>2|0)&7)for(g=0;e[o>>2]=e[s>>2],s=s+4|0,o=o+4|0,(0|u)!=(0|(g=g+1|0)););if(g=r+v|0,!(w>>>0<28))for(;e[o>>2]=e[s>>2],e[o+4>>2]=e[s+4>>2],e[o+8>>2]=e[s+8>>2],e[o+12>>2]=e[s+12>>2],e[o+16>>2]=e[s+16>>2],e[o+20>>2]=e[s+20>>2],e[o+24>>2]=e[s+24>>2],e[o+28>>2]=e[s+28>>2],s=s+32|0,(0|g)!=(0|(o=o+32|0)););}e[t+12>>2]=b,e[t+8>>2]=g,e[t+4>>2]=r,e[t>>2]=h,l&&(Me(l),r=e[t+4>>2])}else r=l;return e[r-4>>2]=e[A>>2],void(e[t+4>>2]=e[t+4>>2]-4)}so(),L()}function Xs(t,A,r){var s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;e:{t:{r:{a:{n:{o:{c:{u:{l:{if(A){if(!r)break l;break u}return We=(A=t)-O(t=(t>>>0)/(r>>>0)|0,r)|0,rt=0,fe=0,t}if(!t)break c;break o}if(!((s=r-1|0)&r))break n;l=0-(u=(Ce(r)+33|0)-Ce(A)|0)|0;break r}return We=0,rt=A-O(t=(A>>>0)/0|0,0)|0,fe=0,t}if((s=32-Ce(A)|0)>>>0<31)break a;break t}if(We=t&s,rt=0,(0|r)==1)break e;return r=31&(s=Qi(r)),(63&s)>>>0>=32?t=A>>>r|0:(o=A>>>r|0,t=((1<<r)-1&A)<<32-r|t>>>r),fe=o,t}u=s+1|0,l=63-s|0}if(s=31&(o=63&u),o>>>0>=32?(o=0,g=A>>>s|0):(o=A>>>s|0,g=((1<<s)-1&A)<<32-s|t>>>s),s=31&(l&=63),l>>>0>=32?(A=t<<s,t=0):(A=(1<<s)-1&t>>>32-s|A<<s,t<<=s),u)for(b=(0|(s=r-1|0))==-1?-1:0;h=o<<1|g>>>31,g=(o=g<<1|A>>>31)-(w=r&(l=b-(h+(o>>>0>s>>>0)|0)>>31))|0,o=h-(o>>>0<w>>>0)|0,A=A<<1|t>>>31,t=v|t<<1,v=h=1&l,u=u-1|0;);return We=g,rt=o,fe=A<<1|t>>>31,h|t<<1}We=t,rt=A,t=0,A=0}return fe=A,t}function qa(t,A){var r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0;e:{if((0|(r=e[t+8>>2]))==e[t+12>>2])if((s=e[t+4>>2])>>>0>(u=e[t>>2])>>>0)o=Be((l=(1+(s-u>>2)|0)/-2<<2)+s|0,s,r=r-s|0)+r|0,e[t+8>>2]=o,e[t+4>>2]=l+e[t+4>>2];else{if((l=(0|r)==(0|u)?1:r-u>>1)>>>0>=1073741824)break e;if(b=(g=ws(o=l<<2))+o|0,o=l=(-4&l)+g|0,(0|r)!=(0|s)){if(v=-4&(r=r-s|0),w=1+((h=r-4|0)>>>2|0)&7)for(o=0,r=l;e[r>>2]=e[s>>2],s=s+4|0,r=r+4|0,(0|w)!=(0|(o=o+1|0)););else r=l;if(o=l+v|0,!(h>>>0<28))for(;e[r>>2]=e[s>>2],e[r+4>>2]=e[s+4>>2],e[r+8>>2]=e[s+8>>2],e[r+12>>2]=e[s+12>>2],e[r+16>>2]=e[s+16>>2],e[r+20>>2]=e[s+20>>2],e[r+24>>2]=e[s+24>>2],e[r+28>>2]=e[s+28>>2],s=s+32|0,(0|o)!=(0|(r=r+32|0)););}e[t+12>>2]=b,e[t+8>>2]=o,e[t+4>>2]=l,e[t>>2]=g,u&&(Me(u),o=e[t+8>>2])}else o=r;return e[o>>2]=e[A>>2],void(e[t+8>>2]=e[t+8>>2]+4)}so(),L()}function ka(t,A){var r,s=0,o=0,l=0,u=0,g=0;o=189088,Y=r=Y-320|0,e[r+312>>2]=0,l=Ms(t,u=Gt(r+112|0,189088),r,r+316|0,r+312|0,0),s=e[r+316>>2];e:if((0|A)<=3){if((0|s)<2)break e;if(l=3&(A=s-1|0),t=1,s-2>>>0>=3)for(g=-4&A,A=0;f[0|(s=t+r|0)]>=4&&(f[0|s]=3),f[(s=t+r|0)+1|0]>=4&&(f[s+1|0]=3),f[s+2|0]>=4&&(f[s+2|0]=3),f[s+3|0]>=4&&(f[s+3|0]=3),t=t+4|0,(0|g)!=(0|(A=A+4|0)););if(!l)break e;for(A=0;f[0|(s=t+r|0)]>=4&&(f[0|s]=3),t=t+1|0,(0|l)!=(0|(A=A+1|0)););}else if(t=1,!((0|s)<=1)){for(;;){if((0|l)>f[0|(g=t+r|0)]){if((0|s)!=(0|(t=t+1|0)))continue;break e}break}f[0|g]=A}if(t=d[0|u])for(A=1;s=e[144464+((255&t)<<2)>>2],d[s+11|0]!=2|16&d[s+6|0]||(l=255&(s=f[A+r|0]),(0|s)<2&&l||(f[0|o]=d[l+94151|0],o=o+1|0,t=d[0|u]),A=A+1|0),f[0|o]=t,o=o+1|0,t=d[0|(u=u+1|0)];);f[0|o]=0,Y=r+320|0}function dn(t){var A=0,r=0,s=0,o=0,l=0,u=0;r=A=e[(t|=0)>>2],e[t>>2]=A+1;e:{t:{r:{a:{n:{o:{c:switch(((l=d[0|A])>>>4|0)-8|0){case 0:case 1:case 2:case 3:break t;case 7:break n;case 6:break o;case 4:case 5:break c;default:break e}if((s=A+2|0)>>>0>=(o=e[t+4>>2])>>>0)break a;if(e[t>>2]=s,(192&(r=d[r+1|0]))!=128)break r;return 63&r|l<<6&1984}if((s=A+3|0)>>>0>=(o=e[t+4>>2])>>>0)break a;if(r=A+2|0,e[t>>2]=r,(192&(A=d[A+1|0]))!=128){s=r;break r}if(e[t>>2]=s,(192&(r=d[0|r]))!=128)break r;return 63&r|(63&A|l<<6&960)<<6}if(!((o=e[t+4>>2])>>>0<=(r=A+4|0)>>>0)){if(s=A+2|0,e[t>>2]=s,(192&(o=d[A+1|0]))!=128||(s=A+3|0,e[t>>2]=s,(192&(u=d[A+2|0]))!=128)||(e[t>>2]=r,A=d[0|s],s=r,(192&A)!=128))break r;return 0|((t=63&A|u<<6&4032|(63&o|l<<6&960)<<12)>>>0>=1114112?65533:t)}}e[t>>2]=o;break t}e[t>>2]=s-1}l=65533}return 0|l}function Fe(t,A,r,s){var o,l,u=0,g=0,h=0,w=0,b=0,v=0;if(Y=o=Y-432|0,!(!s|!(536870912&(l=Dt(t,A,r,s))))&&(k[o+48>>1]=8192,s=Gt(o+48|2,s),d[0|s])){for(h=o+224|0,u=1,w=200;;){if(Wt(o+44|0,s),A=Os(e[o+44>>2]),g=e[r>>2],A?(e[r>>2]=2|g,br(Ss(e[o+44>>2]),s)):e[r>>2]=-3&g,v=e[33264],Dt(t,s,r,0),1&u?(e[o+16>>2]=189088,g=Ts(h,w,84130,o+16|0)):(e[o+32>>2]=15,e[o+36>>2]=189088,g=Ts(h,w,84434,o+32|0)),u=(A=e[33264])+1|0,e[33264]=u,A>>>0<=2147483646){for(;;)if(A=s,s=s+1|0,(0|(b=f[0|A]))==32|b-9>>>0<5){for(;A=(s=A)+1|0,(0|(b=f[0|s]))==32|b-9>>>0<5;);if(u=u-1|0,e[33264]=u,!((0|u)>0))break}}if(h=h+g|0,e[33264]=v,!(d[0|s]&&(u=0,(0|(w=w-g|0))>1)))break}(o+224|0)!=(0|h)&&(e[o>>2]=o+224,Ts(189088,200,84130,o))}return Y=o+432|0,l}function X(t,A,r,s,o,l,u,g){var h,w;h=e[32972],w=e[h+116>>2],k[t+8>>1]=B[t+8>>1]+l,l=32&g?0-l|0:l,k[t+10>>1]=l+B[t+10>>1],k[t+12>>1]=l+B[t+12>>1],s=(0|s)>(0|(l=((l=(0|O(A,w))/256|0)-(A=k[t+6>>1])|0)/2|0))?l:s,k[t+6>>1]=((0|r)<(0|s)?s:r)+A;e:{t:switch(o-1|0){case 0:A=(0|(A=235-(r=k[t+4>>1])|0))<=-100?-100:A,k[t+4>>1]=((0|A)>=-60?-60:A)+r;break e;case 1:A=(0|(A=(0|(A=235-(r=k[t+4>>1])|0))<=-300?-300:A))>=-150?-150:A,k[t+4>>1]=A+r,k[t+2>>1]=A+B[t+2>>1];break e;case 2:break t;default:break e}A=(0|(A=(0|(A=100-(r=k[t+4>>1])|0))<=-400?-400:A))>-300?-400:A,k[t+4>>1]=A+r,k[t+2>>1]=A+B[t+2>>1]}e[h+132>>2]||(f[t+20|0]=(O(d[t+20|0],u)>>>0)/100,f[t+21|0]=(O(d[t+21|0],u)>>>0)/100,f[t+22|0]=(O(d[t+22|0],u)>>>0)/100,f[t+23|0]=(O(d[t+23|0],u)>>>0)/100,f[t+24|0]=(O(d[t+24|0],u)>>>0)/100,f[t+25|0]=(O(d[t+25|0],u)>>>0)/100)}function de(t){var A,r=0,s=0,o=0,l=0;Y=A=Y-48|0;e:{if(t){d[0|t]||(t=ca(84285),d[0|t]&&t||(t=ca(121696),d[0|t]&&t||(t=ca(84614),d[0|t]&&t||(t=84891))));t:{for(;;){if(!(!(s=d[t+r|0])|(0|s)==47)){if(o=23,(0|(r=r+1|0))!=23)continue;break t}break}o=r}s=84891;t:{r:{if(r=d[0|t],(d[t+o|0]|(0|r)==46||(s=t,(0|r)==67))&&!d[s+1|0]||!sr(s,84891)||!sr(s,85136)){if(r=121652,d[s+1|0]==46)break r;t=0;break t}if(r=e[56851])for(;;){if(!sr(s,r+8|0))break r;if(!(r=e[r+32>>2]))break}(t=Nt(36))&&(r=e[30414],e[t>>2]=e[30413],e[t+4>>2]=r,qt(r=t+8|0,s,o),f[r+o|0]=0,e[t+32>>2]=e[56851],e[56851]=t),r=t||121652}t=r}if((0|t)==-1)break e;e[56809]=t}else t=e[56809];l=t?t+8|0:84309}return Y=A+48|0,l}function Ie(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0;h=!!((A=e[t+112>>2])|(s=e[t+116>>2])),o=A,u=A=(l=e[t+4>>2])-(g=e[t+44>>2])|0,r=A+e[t+120>>2]|0,A=e[t+124>>2]+(A>>31)|0;e:{if(!(((0|(A=r>>>0<u>>>0?A+1|0:A))>=(0|s)&r>>>0>=o>>>0|(0|A)>(0|s))&h)){if((0|(h=yn(t)))>=0)break e;l=e[t+4>>2],g=e[t+44>>2]}return e[t+112>>2]=-1,e[t+116>>2]=-1,e[t+104>>2]=l,s=(u=r)+(r=g-l|0)|0,A=(r>>31)+A|0,e[t+120>>2]=s,e[t+124>>2]=r>>>0>s>>>0?A+1|0:A,-1}return A=(s=r+1|0)?A:A+1|0,l=e[t+4>>2],g=e[t+8>>2],u=o=e[t+116>>2],o|(r=e[t+112>>2])&&(o=r-s|0,(0|(r=u-(A+(r>>>0<s>>>0)|0)|0))>=(0|(u=(w=g-l|0)>>31))&o>>>0>=w>>>0|(0|r)>(0|u)||(g=o+l|0)),e[t+104>>2]=g,s=(o=(r=e[t+44>>2])-l|0)+s|0,A=(o>>31)+A|0,e[t+120>>2]=s,e[t+124>>2]=s>>>0<o>>>0?A+1|0:A,r>>>0>=l>>>0&&(f[l-1|0]=h),h}function Be(t,A,r){var s=0,o=0;e:if((0|t)!=(0|A)){if(A-(o=t+r|0)>>>0<=0-(r<<1)>>>0)return qt(t,A,r);if(s=3&(t^A),t>>>0<A>>>0){if(s)s=t;else{if(3&t)for(s=t;;){if(!r)break e;if(f[0|s]=d[0|A],A=A+1|0,r=r-1|0,!(3&(s=s+1|0)))break}else s=t;if(!(r>>>0<=3))for(;e[s>>2]=e[A>>2],A=A+4|0,s=s+4|0,(r=r-4|0)>>>0>3;);}if(r)for(;f[0|s]=d[0|A],s=s+1|0,A=A+1|0,r=r-1|0;);}else{if(!s){if(3&o)for(;;){if(!r)break e;if(f[0|(s=(r=r-1|0)+t|0)]=d[A+r|0],!(3&s))break}if(!(r>>>0<=3))for(;e[(r=r-4|0)+t>>2]=e[A+r>>2],r>>>0>3;);}if(!r)break e;for(;f[(r=r-1|0)+t|0]=d[A+r|0],r;);}}return t}function je(t,A,r,s){e:switch(A-9|0){case 0:return A=e[r>>2],e[r>>2]=A+4,void(e[t>>2]=e[A>>2]);case 6:return A=e[r>>2],e[r>>2]=A+4,A=k[A>>1],e[t>>2]=A,void(e[t+4>>2]=A>>31);case 7:return A=e[r>>2],e[r>>2]=A+4,e[t>>2]=B[A>>1],void(e[t+4>>2]=0);case 8:return A=e[r>>2],e[r>>2]=A+4,A=f[0|A],e[t>>2]=A,void(e[t+4>>2]=A>>31);case 9:return A=e[r>>2],e[r>>2]=A+4,e[t>>2]=d[0|A],void(e[t+4>>2]=0);case 16:return A=e[r>>2]+7&-8,e[r>>2]=A+8,void(P[t>>3]=P[A>>3]);case 17:Zt[0|s](t,r);default:return;case 1:case 4:case 14:return A=e[r>>2],e[r>>2]=A+4,A=e[A>>2],e[t>>2]=A,void(e[t+4>>2]=A>>31);case 2:case 5:case 11:case 15:return A=e[r>>2],e[r>>2]=A+4,e[t>>2]=e[A>>2],void(e[t+4>>2]=0);case 3:case 10:case 12:case 13:break e}A=e[r>>2]+7&-8,e[r>>2]=A+8,r=e[A+4>>2],e[t>>2]=e[A>>2],e[t+4>>2]=r}function tt(t,A,r,s,o,l){var u;Y=u=Y-80|0;e:if((0|l)>=16384){if(wt(u+32|0,A,r,s,o,0,0,0,2147352576),s=e[u+40>>2],o=e[u+44>>2],A=e[u+32>>2],r=e[u+36>>2],l>>>0<32767){l=l-16383|0;break e}wt(u+16|0,A,r,s,o,0,0,0,2147352576),l=((0|l)>=49149?49149:l)-32766|0,s=e[u+24>>2],o=e[u+28>>2],A=e[u+16>>2],r=e[u+20>>2]}else(0|l)>-16383||(wt(u- -64|0,A,r,s,o,0,0,0,7471104),s=e[u+72>>2],o=e[u+76>>2],A=e[u+64>>2],r=e[u+68>>2],l>>>0>4294934644?l=l+16269|0:(wt(u+48|0,A,r,s,o,0,0,0,7471104),l=((0|l)<=-48920?-48920:l)+32538|0,s=e[u+56>>2],o=e[u+60>>2],A=e[u+48>>2],r=e[u+52>>2]));wt(u,A,r,s,o,0,0,0,l+16383<<16),A=e[u+12>>2],e[t+8>>2]=e[u+8>>2],e[t+12>>2]=A,A=e[u+4>>2],e[t>>2]=e[u>>2],e[t+4>>2]=A,Y=u+80|0}function Bt(t,A){var r,s,o=0;Y=r=Y+-64|0,o=e[t>>2],s=e[o-4>>2],o=e[o-8>>2],e[r+32>>2]=0,e[r+36>>2]=0,e[r+40>>2]=0,e[r+44>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,f[r+55|0]=0,f[r+56|0]=0,f[r+57|0]=0,f[r+58|0]=0,f[r+59|0]=0,f[r+60|0]=0,f[r+61|0]=0,f[r+62|0]=0,e[r+24>>2]=0,e[r+28>>2]=0,e[r+20>>2]=0,e[r+16>>2]=125084,e[r+12>>2]=t,e[r+8>>2]=A,t=t+o|0,o=0;e:if(ea(s,A,0))e[r+56>>2]=1,Zt[e[e[s>>2]+20>>2]](s,r+8|0,t,t,1,0),o=e[r+32>>2]==1?t:0;else{Zt[e[e[s>>2]+24>>2]](s,r+8|0,t,1,0);t:switch(e[r+44>>2]){case 0:o=e[r+48>>2]==1&&e[r+36>>2]==1&&e[r+40>>2]==1?e[r+28>>2]:0;break e;case 1:break t;default:break e}e[r+32>>2]!=1&&e[r+48>>2]|e[r+36>>2]!=1|e[r+40>>2]!=1||(o=e[r+24>>2])}return Y=r- -64|0,o}function Mt(t,A,r,s,o){var l,u,g=0;Y=l=Y-80|0,k[l+72>>1]=0,e[l+64>>2]=0,e[l+68>>2]=0,f[0|s]=0,g=br(A,u=2|(g=l- -64|0))+g|0,f[g+2|0]=32;e:if((0|r)!=-1)A>>>0>=33&&!gr(A)?(f[g+3|0]=(0|r)==32?32:31,f[l+65|0]=95,St(t,l- -64|1,l+16|0)||(f[l+65|0]=32,St(t,u,l+16|0)||Qr(t,u,l+16|0,40,0,268435456,0)),d[l+16|0]||Ia(t,A,l+16|0),A=Gt(s,l+16|0),!(r=d[0|A])|(0|r)==21||(e[l+56>>2]=0,e[l+60>>2]=0,KA(t,A,l+56|0,-1,1&o))):(e[l>>2]=A,lt(A=l- -64|1,85485,l),St(t,A,s));else{if(St(t,u,s)||(f[l+65|0]=95,St(t,l- -64|1,l+16|0)|e[t+212>>2]==25966))break e;ti(85055),St(e[47194],u,l+16|0)&&(f[0|s]=21,f[s+1|0]=0),ns(e[e[32972]+60>>2])}Y=l+80|0}function Je(t,A,r){var s=0,o=0,l=0,u=0;if(r&&(f[0|t]=A,f[(s=t+r|0)-1|0]=A,!(r>>>0<3||(f[t+2|0]=A,f[t+1|0]=A,f[s-3|0]=A,f[s-2|0]=A,r>>>0<7||(f[t+3|0]=A,f[s-4|0]=A,r>>>0<9||(o=(s=0-t&3)+t|0,A=O(255&A,16843009),e[o>>2]=A,e[(r=(s=r-s&-4)+o|0)-4>>2]=A,s>>>0<9||(e[o+8>>2]=A,e[o+4>>2]=A,e[r-8>>2]=A,e[r-12>>2]=A,s>>>0<25||(e[o+24>>2]=A,e[o+20>>2]=A,e[o+16>>2]=A,e[o+12>>2]=A,e[r-16>>2]=A,e[r-20>>2]=A,e[r-24>>2]=A,e[r-28>>2]=A,(r=s-(u=4&o|24)|0)>>>0<32))))))))for(s=eA(A,0,1,1),l=fe,A=o+u|0;e[A+24>>2]=s,e[A+28>>2]=l,e[A+16>>2]=s,e[A+20>>2]=l,e[A+8>>2]=s,e[A+12>>2]=l,e[A>>2]=s,e[A+4>>2]=l,A=A+32|0,(r=r-32|0)>>>0>31;);return t}function bt(){var t,A=0,r=0,s=0,o=0,l=0;if(Y=t=Y-208|0,(0|(s=e[50303]))>0)for(;(o=e[(r=201216+(A<<2)|0)>>2])&&(Me(o),e[r>>2]=0),(0|s)!=(0|(A=A+1|0)););if(e[50303]=0,e[t+16>>2]=137584,e[t+20>>2]=47,lt(A=t+32|0,87827,t+16|0),GA(A,kt(A)+1|0,0),e[t+4>>2]=47,e[t>>2]=137584,lt(A,87933,t),GA(A,kt(A)+1|0,1),A=e[50303],e[(r=A<<2)+201216>>2]=0,r=DA(s=e[50741],r+4|0)){if(e[50741]=r,us(201216,A,7),s=e[50741],r=0,A=e[50304])for(o=0;l=e[A+4>>2],d[0|l]&&sr(l+1|0,86589)&&Zr(e[A+8>>2],88032,3)&&(e[(r<<2)+s>>2]=A,r=r+1|0),A=e[201216+((o=o+1|0)<<2)>>2];);e[(r<<2)+s>>2]=0}return Y=t+208|0,s}function cA(t,A,r){var s=0,o=0,l=0,u=0;if(l=A-1|0,(0|A)>=2){A=t;e:{for(;;){t:{r:{if((0|(s=e[r+4>>2]))!=(0|(o=e[r+8>>2]))){if((u=Qa(s,10,o-s|0))?o=1+(u-(s=e[r+4>>2])|0)|0:(s=e[r+4>>2],o=e[r+8>>2]-s|0),qt(A,s,s=o>>>0<l>>>0?o:l),o=s+e[r+4>>2]|0,e[r+4>>2]=o,A=A+s|0,u||!(l=l-s|0))break t;if((0|o)!=e[r+8>>2]){e[r+4>>2]=o+1,s=d[0|o];break r}}if(!((0|(s=yn(r)))>=0)){if(s=0,(0|t)==(0|A))break e;if(16&d[0|r])break t;break e}}if(f[0|A]=s,A=A+1|0,(255&s)!=10&&(l=l-1|0))continue}break}t?(f[0|A]=0,s=t):s=0}}else if(A=e[r+72>>2],e[r+72>>2]=A-1|A,!l)return f[0|t]=0,t;return s}function nA(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0;if(A=O(t,44),(0|(t=e[A+137896>>2]))>0&&nA(t-1|0),t=e[36115],!((0|(A=e[(r=A+137856|0)+36>>2]))<=0)){if(o=e[r+32>>2],g=1&A,(0|A)!=1)for(h=-2&A,r=0;A=d[(l=(s=r<<4)+o|0)+10|0],e[144464+(A<<2)>>2]=l,(0|t)>=(0|A)?A=t:Je(144464+((t=t+1|0)<<2)|0,0,A-t<<2),t=d[(s=(16|s)+o|0)+10|0],e[144464+(t<<2)>>2]=s,(0|t)<=(0|A)?t=A:Je(144464+((A=A+1|0)<<2)|0,0,t-A<<2),r=r+2|0,(0|h)!=(0|(u=u+2|0)););else r=0;g&&(A=d[(r=(r<<4)+o|0)+10|0],e[144464+(A<<2)>>2]=r,(0|t)>=(0|A)||(Je(144464+((t=t+1|0)<<2)|0,0,A-t<<2),t=A))}e[36115]=t}function fr(t,A,r,s,o){var l,u=0,g=0,h=0;Y=l=Y-16|0;e:if(1&f[t+106|0]&&(u=d[0|r],!(!(1&f[s+2|0])&(0|u)!=46||256&(h=e[s+12>>2])|!(!(2&h)||o)||(Wt(l+12|0,(0|u)!=46?r:r+2|0),!(u=d[0|r])|!d[r+1|0])))){if(!(!(h=e[l+12>>2])|2&d[s+2|0])){if(!BA(h))break e;u=d[0|r]}(0|u)==46&&(f[0|r]=32),g=2,e[t+212>>2]!=26741|o||(r=BA(e[l+12>>2])?Fe(t,r+2|0,0,0):0,128&d[t+8233|0]&&(!(!(o=e[l+12>>2])|2&d[s+2|0])&o-48>>>0>=10||(g=0)),g=32768&r?0:g,131072&r&&(g=163840&e[t+8232>>2]?34:d[A-2|0]!=45?g:0))}return Y=l+16|0,g}function Vr(t,A,r,s,o){var l,u=0,g=0;if(Y=l=Y-208|0,e[l+204>>2]=r,Je(r=l+160|0,0,40),e[l+200>>2]=e[l+204>>2],(0|ba(0,A,l+200|0,l+80|0,r,s,o))<0)o=-1;else{e[t+76>>2]>=0,u=e[t>>2],e[t+72>>2]<=0&&(e[t>>2]=-33&u);e:{t:{if(e[t+48>>2]){if(e[t+16>>2])break t}else e[t+48>>2]=80,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,g=e[t+44>>2],e[t+44>>2]=l;if(r=-1,nn(t))break e}r=ba(t,A,l+200|0,l+80|0,l+160|0,s,o)}g&&(Zt[e[t+36>>2]](t,0,0),e[t+48>>2]=0,e[t+44>>2]=g,e[t+28>>2]=0,A=e[t+20>>2],e[t+16>>2]=0,e[t+20>>2]=0,r=A?r:-1),A=t,t=e[t>>2],e[A>>2]=t|32&u,o=32&t?-1:r}return Y=l+208|0,o}function tr(t,A,r,s){var o,l=0,u=0,g=0,h=0,w=0,b=0,v=0;if(Y=o=Y-208|0,u=d[0|A])for(;f[l+o|0]=u,h=((255&u)==6&(0|g)!=21)+h|0,g=u<<24>>24,u=d[(l=l+1|0)+A|0];);if(f[l+o|0]=0,l=d[0|o])for(b=h-2|0,g=0,v=(0|s)<2,u=0;;){e:{t:if((255&l)!=6|v|(0|u)==21){if((0|(s=255&l))==255){if(!w|(0|r)<2)break e;s=r>>>0>2?11:(0|g)%3|0?23:11}u=s,s=g}else{if(l=g+1|0,d[t+169|0]){u=(0|l)>1?5:6,s=l;break t}if(u=6,s=h,(0|l)==(0|h))break t;u=(0|l)%3|0||(0|g)==(0|b)?5:6,s=l}g=s,f[0|A]=u,A=A+1|0}if(!(l=d[(w=w+1|0)+o|0]))break}(0|r)>=2&&(f[0|A]=11,A=A+1|0),f[0|A]=0,Y=o+208|0}function QA(t,A){var r=0;r=0,t&&(r=e[50754],r=(t=(t=(0|O(e[145712+(A?12:((0|t)>199)<<2)>>2],t))/256|0)>>>0>(A=e[36430])>>>0?t:A)>>>0<=89999?(O(t,r)>>>0)/1e3|0:(O(t,(0|r)/25|0)>>>0)/40|0),(0|(t=e[36440]))<=0||(0|(A=e[36424]))<0||(e[(A=216192+(A<<4)|0)+4>>2]||(e[A+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Ps(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=r,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function PA(t,A,r,s,o,l,u,g){var h,w=0,b=0,v=0;w=1,h=b=2147483647&s;e:if(!((v=(0|b)==2147418112)&!r?t|A:v&!!(0|r)|b>>>0>2147418112)&&!((v=(0|(b=2147483647&g))==2147418112)&!u?o|l:v&!!(0|u)|b>>>0>2147418112)){if(!(t|o|r|u|A|l|b|h))return 0;if((0|(w=s&g))>0|(0|w)>=0){if(w=-1,(0|r)==(0|u)&(0|s)==(0|g)?(0|A)==(0|l)&t>>>0<o>>>0|A>>>0<l>>>0:r>>>0<u>>>0&(0|s)<=(0|g)|(0|s)<(0|g))break e;return!!(t^o|r^u|A^l|s^g)}w=-1,((0|r)==(0|u)&(0|s)==(0|g)?(0|A)==(0|l)&t>>>0>o>>>0|A>>>0>l>>>0:r>>>0>u>>>0&(0|s)>=(0|g)|(0|s)>(0|g))||(w=!!(t^o|r^u|A^l|s^g))}return w}function Or(t,A){var r=0,s=0,o=0,l=0;for(r=d[85836]|d[85837]<<8,f[0|A]=r,f[A+1|0]=r>>>8,f[A+2|0]=d[85838];;)if(o=d[0|t],t=r=t+1|0,(0|o)!=255){if(!o)break;if(!(s=e[144464+(o<<2)>>2]))continue;if(d[s+11|0]==1&&(l=d[s+14|0],!(B[s+8>>1]|l>>>0>4))){if(l>>>0<2)continue;f[0|A]=d[l+93943|0],A=A+1|0;continue}if(255&(t=e[s>>2]))for(;f[0|A]=t,A=A+1|0,s=65280&t,t=t>>>8|0,s;);if(t=r,(0|o)!=21||(32|(r=f[0|t]))-97>>>0>=26)continue;for(;f[0|A]=r,A=A+1|0,(32|(r=f[0|(t=t+1|0)]))-97>>>0<26;);}f[0|A]=0}function xs(t,A){var r,s,o=0,l=0,u=0;Y=r=Y-112|0,t||(e[50303]||bt(),t=201216),FA(o=r+16|0,A,40),e[r>>2]=47,e[r+4>>2]=o,lt(A=r- -64|0,87599,r),s=kt(A),u=-1;e:{t:{r:{if(l=e[t>>2]){A=0,o=-1;a:{for(;;){if(Kn(r+16|0,e[l>>2])){if(Kn(r+16|0,l=e[l+8>>2])?u=Kn(r- -64|0,l+(kt(l)-s|0)|0)?u:A:o=A,l=e[((A=A+1|0)<<2)+t>>2])continue;break a}break}if((0|A)>=0)break t;A=(0|o)<0?u:o;break r}if((0|(A=o))>=0)break r}A=u}if(o=0,(0|A)<0)break e}o=e[(A<<2)+t>>2]}return Y=r+112|0,o}function cr(t,A){var r,s,o=0,l=0,u=0,g=0,h=0;Y=r=Y-16|0,F(+A),s=0|y(1),l=0|y(0),(0|(u=(o=2147483647&s)+-1048576|0))==2145386495|u>>>0<2145386495?(g=l<<28,u=o>>>4|0,o=(15&o)<<28|l>>>4,l=u+1006632960|0):(0|o)==2146435072|o>>>0>2146435072?(g=l<<28,o=(15&s)<<28|l>>>4,l=s>>>4|2147418112):o|l?(wA(r,l,u=o,0,0,(o=o?Ce(o):Ce(l)+32|0)+49|0),h=e[r>>2],g=e[r+4>>2],u=15372-o<<16,o=e[r+8>>2],l=u|65536^e[r+12>>2]):(o=0,l=0),e[t>>2]=h,e[t+4>>2]=g,e[t+8>>2]=o,e[t+12>>2]=-2147483648&s|l,Y=r+16|0}function ys(t,A,r){var s=0,o=0;e:{t:{r:{if(!(3&((o=t)^A))){s=!!(0|r);a:if(!(!(3&A)|!r))for(;;){if(s=d[0|A],f[0|o]=s,!s)break e;if(o=o+1|0,s=!!(0|(r=r-1|0)),!(3&(A=A+1|0)))break a;if(!r)break}if(!s)break t;if(!d[0|A])break e;if(!(r>>>0<4))for(;;){if(~(s=e[A>>2])&s-16843009&-2139062144)break r;if(e[o>>2]=s,o=o+4|0,A=A+4|0,!((r=r-4|0)>>>0>3))break}}if(!r)break t}for(;;){if(s=d[0|A],f[0|o]=s,!s)break e;if(o=o+1|0,A=A+1|0,!(r=r-1|0))break}}r=0}return Je(o,0,r),t}function Ar(t,A,r,s,o,l){var u,g=0,h=0,w=0;Y=u=Y-240|0,g=e[r>>2],e[u+232>>2]=g,r=e[r+4>>2],e[u>>2]=t,e[u+236>>2]=r,w=1;e:{t:{r:{if(r|(0|g)!=1){for(g=t;;){if((0|ln(r=g-e[(h=(s<<2)+l|0)>>2]|0,t,A))<=0){r=g;break r}a:{if(!((0|s)<2|o)&&(o=e[h-8>>2],(0|ln(h=g-4|0,r,A))>=0||(0|ln(h-o|0,r,A))>=0))break a;if(e[(w<<2)+u>>2]=r,Bi(g=u+232|0,o=dt(g)),w=w+1|0,s=s+o|0,o=0,g=r,e[u+236>>2]|e[u+232>>2]!=1)continue;break t}break}r=g;break t}r=t}if(o)break e}Ei(u,w),bn(r,A,s,l)}Y=u+240|0}function ur(t,A){var r=0;e[4+((r=t<<2)+134912|0)>>2]=A,e[r+136192>>2]=A,r=28;e:{t:{r:switch(t-1|0){case 0:e[50792]=A,e[50786]=A,cs(3);break t;case 1:e[50787]=A,e[33037]=(0|O(d[e[50797]+105596|0],(0|O(e[50787],55))/100|0))/16;break t;case 2:t=(0|A)>=99?99:A,e[50785]=(0|t)>0?t:0;break t;case 3:e[50788]=(0|A)>=99?99:A;break t;case 12:e[47268]=A;break t;case 6:e[47205]=A;break t;case 9:break t;case 8:break r;default:break e}(t=255&A)&&(e[e[47192]+152>>2]=t),e[47196]=A}r=0}return r}function yA(t,A){var r=0,s=0,o=0;e:if(e[t>>2])for(;;){if(gr(e[t-4>>2])){if(s=0,(0|(r=f[0|A]))==e[t>>2])for(;(0|(r=f[(s=s+1|0)+A|0]))==e[(t=t+4|0)>>2];);if(!r){for(;A=t,t=t+4|0,gr(e[A>>2]););for(o=A+((e[A>>2]==61)<<2)|0;o=(t=o)+4|0,gr(e[t>>2]););t:switch((A=e[t>>2])-34|0){case 0:case 5:break e;default:break t}return gr(A)||e[t>>2]==47?102808:t}}if(!e[(t=t+4|0)>>2])break}return o}function rr(t,A,r,s){var o,l,u=0,g=0,h=0;return!d[t+25|0]|P[t+8>>3]!=r|P[t+16>>3]!=s?(P[t+16>>3]=s,P[t+8>>3]=r,s=(u=Dr(-3.141592653589793/(g=+e[t>>2])*s))*-u,P[t+48>>3]=s,u*=ds(-6.283185307179586/g*r),u+=u,P[t+40>>3]=u,g=1-u-s,P[t+32>>3]=g,!(h=d[t+24|0])|r==0||(g=1/g,P[t+32>>3]=g,s*=r=-g,P[t+48>>3]=s,u*=r,P[t+40>>3]=u,h=1)):(h=d[t+24|0],s=P[t+48>>3],u=P[t+40>>3],g=P[t+32>>3]),f[t+25|0]=1,r=P[t+64>>3],o=P[t+56>>3],P[t+64>>3]=o,l=A,A=s*r+(g*A+u*o),P[t+56>>3]=h?l:A,A}function Zs(t,A,r,s,o){var l=0,u=0,g=0,h=0,w=0;if((g=e[34388])&&!((0|(u=e[34436]))>=(e[34393]-2|0))){if(e[34436]=u+1,l=O(u,36)+g|0,e[l>>2]=t,e[l+4>>2]=e[34437],w=e[34438],e[l+12>>2]=A>>>24,e[l+8>>2]=16777215&A,e[l+24>>2]=w,A=e[50754],o=e[34439]+((o-e[34392]|0)/2|0)|0,e[l+20>>2]=o,A=ee(h=1e3*+(0|o)/+(0|A))<2147483648?~~h:-2147483648,e[l+16>>2]=A,t-3>>>0<=1)return void(e[28+(O(u,36)+g|0)>>2]=e[33282]+r);A=28+(O(u,36)+g|0)|0,e[A>>2]=r,(0|t)==7&&(e[A+4>>2]=s)}}function dr(t,A,r,s,o,l){var u=0,g=0,h=0,w=0;64&l?(A=31&(r=l+-64|0),(63&r)>>>0>=32?(r=0,A=o>>>A|0):(r=o>>>A|0,A=((1<<A)-1&o)<<32-A|s>>>A),s=0,o=0):l&&(h=s,u=31&(g=64-l|0),(63&g)>>>0>=32?(g=h<<u,w=0):(g=(1<<u)-1&h>>>32-u|o<<u,w=h<<u),h=A,A=31&l,(63&l)>>>0>=32?(u=0,A=r>>>A|0):(u=r>>>A|0,A=((1<<A)-1&r)<<32-A|h>>>A),A|=w,r=u|g,u=s,s=31&l,(63&l)>>>0>=32?(g=0,s=o>>>s|0):(g=o>>>s|0,s=((1<<s)-1&o)<<32-s|u>>>s),o=g),e[t>>2]=A,e[t+4>>2]=r,e[t+8>>2]=s,e[t+12>>2]=o}function Bs(t){var A=0,r=0;if(!t){if(e[33174]&&(A=Bs(e[33174])),e[33136]&&(A=Bs(e[33136])|A),t=e[56816])for(;e[t+20>>2]!=e[t+28>>2]&&(A=Bs(t)|A),t=e[t+56>>2];);return A}return e[t+76>>2]>=0,e[t+20>>2]==e[t+28>>2]||(Zt[e[t+36>>2]](t,0,0),e[t+20>>2])?((0|(A=e[t+8>>2]))!=(0|(r=e[t+4>>2]))&&(A=r-A|0,Zt[e[t+40>>2]](t,A,A>>31,1)),A=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+4>>2]=0,e[t+8>>2]=0):A=-1,A}function Pr(t,A){var r=0,s=0,o=0,l=0,u=0;if((192&(r=d[0|A]))==128)for(;(192&(r=d[0|(A=A-1|0)]))==128;);e:if(128&(r=r<<24>>24)){if(s=1,(0|(o=224&r))!=192)if((240&r)!=224){if(s=3,(248&r)!=240){r&=255,s=0;break e}}else s=2,u=1;r=d[s+93846|0]&r,(l=d[A+1|0])?(r=63&l|r<<6,(0|o)!=192&&((o=d[A+2|0])?(r=63&o|r<<6,u||((A=d[A+3|0])?r=63&A|r<<6:s=2)):s=1)):s=0}return e[t>>2]=r,s+1|0}function JA(t,A,r,s){var o,l=0,u=0;return Y=o=Y-224|0,t?(e[o>>2]=137584,e[o+4>>2]=47,e[o+8>>2]=A,lt(A=o+16|0,85430,o),(0|(l=Vs(A)))<0?A=Fs(s,0-l|0,o+16|0):(A=Is(o+16|0,85659))?((u=e[t>>2])&&Me(u),l?(u=Nt(l),e[t>>2]=u,u?(0|mn(u,l,A))==(0|l)?(Er(A),A=0,r&&(e[r>>2]=l)):(r=e[56798],Er(A),Me(e[t>>2]),e[t>>2]=0,A=Fs(s,r,o+16|0)):(Er(A),A=48)):(A=0,e[t>>2]=0)):A=Fs(s,e[56798],o+16|0)):A=28,Y=o+224|0,A}function Wt(t,A){var r=0,s=0,o=0,l=0,u=0;if((192&(r=d[0|A]))==128)for(;(192&(r=d[0|(A=A+1|0)]))==128;);e:if(128&(r=r<<24>>24)){if(s=1,(0|(o=224&r))!=192)if((240&r)!=224){if(s=3,(248&r)!=240){r&=255,s=0;break e}}else s=2,u=1;r=d[s+93846|0]&r,(l=d[A+1|0])?(r=63&l|r<<6,(0|o)!=192&&((o=d[A+2|0])?(r=63&o|r<<6,u||((A=d[A+3|0])?r=63&A|r<<6:s=2)):s=1)):s=0}return e[t>>2]=r,s+1|0}function wA(t,A,r,s,o,l){var u=0,g=0,h=0;64&l?(s=A,A=31&(o=l+-64|0),(63&o)>>>0>=32?(o=s<<A,s=0):(o=(1<<A)-1&s>>>32-A|r<<A,s<<=A),A=0,r=0):l&&(u=s,s=31&l,(63&l)>>>0>=32?(g=u<<s,h=0):(g=(1<<s)-1&u>>>32-s|o<<s,h=u<<s),u=A,s=31&(o=64-l|0),(63&o)>>>0>=32?(o=0,A=r>>>s|0):(o=r>>>s|0,A=((1<<s)-1&r)<<32-s|u>>>s),s=h|A,o|=g,A=31&l,(63&l)>>>0>=32?(g=u<<A,A=0):(g=(1<<A)-1&u>>>32-A|r<<A,A=u<<A),r=g),e[t>>2]=A,e[t+4>>2]=r,e[t+8>>2]=s,e[t+12>>2]=o}function Tr(t){var A=0;return t>>>0<=55295?A=d[e[125552+(t>>>6&67108860)>>2]+(255&t)|0]:(A=4,t>>>0<57344||(t>>>0<63488?A=3:t>>>0<=195327?A=d[e[126416+(t-63488>>>6&67108860)>>2]+(255&t)|0]:(A=2,t>>>0<917504||(t>>>0<=918015?A=d[e[128476+(t-917504>>>6&67108860)>>2]+(255&t)|0]:t>>>0<983040||(t>>>0<1048574?A=3:t>>>0<1048576||(A=3,t>>>0<1114110||(A=t>>>0<1114112?2:5))))))),255&A}function Ga(t,A){var r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0;if(!((0|(r=e[33709]))<=0)){if(o=(0|t)>31?t-32|0:t,t=0,r>>>0>=4)for(b=-4&r;g=2|t,h=1|t,s=e[134912+((u=3|t)<<6)>>2]==(0|o)?u:e[134912+(g<<6)>>2]==(0|o)?g:e[134912+(h<<6)>>2]==(0|o)?h:e[134912+(t<<6)>>2]==(0|o)?t:s,t=t+4|0,(0|b)!=(0|(l=l+4|0)););if(l=3&r)for(;s=e[134912+(t<<6)>>2]==(0|o)?t:s,t=t+1|0,(0|l)!=(0|(w=w+1|0)););(0|s)<=0||(e[33709]=s,r=s)}bs(A,r)}function fn(t){var A,r=0,s=0,o=0;for(Y=A=Y-96|0,FA(A,t,60),gn(A,1);o=Ss(f[0|(s=A+r|0)]),f[0|s]=o,r=r+1|0,255&o;);e[A+92>>2]=0,e[A+84>>2]=0,e[A+88>>2]=0,e[A+76>>2]=0,e[A+80>>2]=0,e[A+72>>2]=t;e:{t:{r:{if(aA(A,1)){if(d[202976])break r;break t}if(e[50303]||bt(),r=268437247,!(t=xs(201216,A))||!aA(e[t+8>>2],0))break e;if(!d[202976])break t}aA(202976,2)}Yr(e[32972]),e[A+76>>2]=e[32972]+40,hn(A+72|0,202976),r=0}return Y=A+96|0,r}function Ea(t,A){if(!t)return 0;e:{t:{if(t){if(A>>>0<=127)break t;if(e[e[56841]>>2]){if(A>>>0<=2047){f[t+1|0]=63&A|128,f[0|t]=A>>>6|192,t=2;break e}if(!((-8192&A)!=57344&A>>>0>=55296)){f[t+2|0]=63&A|128,f[0|t]=A>>>12|224,f[t+1|0]=A>>>6&63|128,t=3;break e}if(A-65536>>>0<=1048575){f[t+3|0]=63&A|128,f[0|t]=A>>>18|240,f[t+2|0]=A>>>6&63|128,f[t+1|0]=A>>>12&63|128,t=4;break e}}else if((-128&A)==57216)break t;e[56798]=25,t=-1}else t=1;break e}f[0|t]=A,t=1}return t}function Ii(t){var A=0,r=0,s=0,o=0;if(e[t+20>>2]=0,(s=(r=e[t+8>>2])-(A=e[t+4>>2])|0)>>>0>=9)for(;Me(e[A>>2]),A=e[t+4>>2]+4|0,e[t+4>>2]=A,(s=(r=e[t+8>>2])-A|0)>>>0>8;);o=512;e:switch((s>>>2|0)-1|0){case 1:o=1024;case 0:e[t+16>>2]=o;break;default:break e}if((0|A)!=(0|r)){for(;Me(e[A>>2]),(0|r)!=(0|(A=A+4|0)););(0|(A=e[t+8>>2]))!=(0|(r=e[t+4>>2]))&&(e[t+8>>2]=A+(3+(r-A|0)&-4))}(t=e[t>>2])&&Me(t)}function Qa(t,A,r){var s=0,o=0;s=!!(0|r);e:{t:{r:if(!(!(3&t)|!r))for(o=255&A;;){if((0|o)==d[0|t])break t;if(s=!!(0|(r=r-1|0)),!(3&(t=t+1|0)))break r;if(!r)break}if(!s)break e;if(!(d[0|t]==(255&A)|r>>>0<4))for(s=O(255&A,16843009);;){if(~(o=s^e[t>>2])&o-16843009&-2139062144)break t;if(t=t+4|0,!((r=r-4|0)>>>0>3))break}if(!r)break e}for(A&=255;;){if((0|A)==d[0|t])return t;if(t=t+1|0,!(r=r-1|0))break}}return 0}function Wn(t,A){var r=0,s=0;e:{if(s=255&A){if(3&t)for(;;){if(!(r=d[0|t])|(0|r)==(255&A))break e;if(!(3&(t=t+1|0)))break}t:if(!(~(r=e[t>>2])&r-16843009&-2139062144))for(s=O(s,16843009);;){if(~(r^=s)&r-16843009&-2139062144)break t;if(r=e[t+4>>2],t=t+4|0,r-16843009&~r&-2139062144)break}for(;(s=d[0|(r=t)])&&(t=r+1|0,(0|s)!=(255&A)););return r}return kt(t)+t|0}return t}function wi(t,A,r,s,o){var l,u=0,g=0;g=-1;e:if(!(((u=(0|(l=2147483647&s))==2147418112)&!r?t|A:u&!!(0|r)|l>>>0>2147418112)||(u=2147483647&o)>>>0>2147418112&(0|u)!=2147418112)){if(!(t|r|u|l|A))return 0;if((0|(u=s&o))>0|(0|u)>=0){if((!!(0|r)|(0|s)!=(0|o))&(0|s)<(0|o))break e;return!!(t|r|s^o|A)}(!r&(0|s)==(0|o)?t|A:!!(0|r)&(0|s)>=(0|o)|(0|s)>(0|o))||(g=!!(t|r|s^o|A))}return g}function gn(t,A){var r,s=0;Y=r=Y+-64|0,f[202976]=0,e[r+48>>2]=47,lt(r+59|0,91351,r+48|0),A||(f[r+59|0]=0);e:{t:{if(t&&(t=ta(t,43))){if(f[0|t]=0,f[0|(t=t+1|0)]-48>>>0>=10)break t;s=la(t)}if((0|s)<=0)break e;if(s>>>0<=9){e[r+4>>2]=s,e[r>>2]=r+59,lt(202976,91378,r);break e}e[r+20>>2]=s-10,e[r+16>>2]=r+59,lt(202976,91503,r+16|0);break e}e[r+36>>2]=t,e[r+32>>2]=r+59,lt(202976,85425,r+32|0)}Y=r- -64|0}function Js(t){var A,r=0,s=0,o=0;Y=A=Y-80|0,r=ZA(t,A+12|0),e[A+12>>2]?(FA(s=A+16|0,r,60),r=0,gn(s,1),!aA(s,0)|!d[202976]||aA(202976,2),Yr(e[32972]),hn(t,86012)):r=268437247,Y=A+80|0;e:{t:{r:{a:{if((0|r)<=268437502){if(!r)break e;if((0|r)==268436479)break t;if((0|r)!=268437247)break a;return 2}if((0|r)==268437503|(0|r)==268437759)break r;if((0|r)==268439295)break e}return-1}return 2}o=1}return o}function _r(t,A,r,s,o,l,u,g,h){var w,b,v;h=eA(A,r,g,h),g=fe,o=eA(s,o,l,u),s=fe+g|0,g=o>>>0>(h=o+h|0)>>>0?s+1|0:s,w=u,b=r,u=(r=eA(u,o=0,r,s=0))+h|0,h=fe+g|0,v=u,r=r>>>0>u>>>0?h+1|0:h,u=eA(l,0,A,0),g=fe,s=eA(l,h=0,b,s),l=fe+h|0,l=s>>>0>(g=g+s|0)>>>0?l+1|0:l,s=r,l=l>>>0>(h=l+v|0)>>>0?s+1|0:s,r=eA(A,0,w,o)+g|0,o=fe,g=(o=r>>>0<g>>>0?o+1|0:o)+h|0,h=l,e[t+8>>2]=g,e[t+12>>2]=o>>>0>g>>>0?h+1|0:h,e[t>>2]=u,e[t+4>>2]=r}function Gt(t,A){var r=0,s=0;e:{if(3&((s=t)^A))r=d[0|A];else{if(3&A)for(;;){if(r=d[0|A],f[0|s]=r,!r)break e;if(s=s+1|0,!(3&(A=A+1|0)))break}if(!(~(r=e[A>>2])&r-16843009&-2139062144))for(;e[s>>2]=r,r=e[A+4>>2],s=s+4|0,A=A+4|0,!(r-16843009&~r&-2139062144););}if(f[0|s]=r,255&r)for(;r=d[A+1|0],f[s+1|0]=r,s=s+1|0,A=A+1|0,r;);}return t}function ds(t){var A,r=0,s=0;Y=A=Y-16|0,F(+t),s=0|y(1),y(0);e:if((s&=2147483647)>>>0<=1072243195){if(r=1,s>>>0<1044816030)break e;r=Oa(t,0)}else if(r=t-t,!(s>>>0>=2146435072)){t:switch(3&Ta(t,A)){case 0:r=Oa(P[A>>3],P[A+8>>3]);break e;case 1:r=-Ma(P[A>>3],P[A+8>>3],1);break e;case 2:r=-Oa(P[A>>3],P[A+8>>3]);break e;default:break t}r=Ma(P[A>>3],P[A+8>>3],1)}return Y=A+16|0,t=r}function Vn(t,A,r,s){var o=0,l=0,u=0;if(!((kt(s)+kt(A)|0)>=(0|r))){for(u=e[36115],r=s;o=d[0|r];)if(r=r+1|0,!((0|o)>=(0|u))){e:{t:switch(o=e[144464+(o<<2)>>2],d[o+11|0]-1|0){case 1:break e;case 0:break t;default:continue}l=d[o+14|0]<4|l;continue}1&(d[o+4|0]>>>1|l)||(e[t+8212>>2]=e[t+8212>>2]+1),e[t+8208>>2]=e[t+8208>>2]+1,l=0}A&&ts(A,s)}}function pn(t){var A,r=0;Y=A=Y-16|0,F(+t),r=0|y(1),y(0);e:if((r&=2147483647)>>>0<=1072243195){if(r>>>0<1045430272)break e;t=Ma(t,0,0)}else if(r>>>0>=2146435072)t-=t;else{t:switch(3&Ta(t,A)){case 0:t=Ma(P[A>>3],P[A+8>>3],1);break e;case 1:t=Oa(P[A>>3],P[A+8>>3]);break e;case 2:t=-Ma(P[A>>3],P[A+8>>3],1);break e;default:break t}t=-Oa(P[A>>3],P[A+8>>3])}return Y=A+16|0,t}function Sa(t){var A=0;e[t+296>>2]=303173648,e[t+300>>2]=370677780,A=e[26341],e[t+304>>2]=e[26340],e[t+308>>2]=A,A=e[26343],e[t+312>>2]=e[26342],e[t+316>>2]=A,js(t),e[t+56>>2]=2,e[t+36>>2]=3,e[t+40>>2]=1074,f[t+168|0]=5,e[t+132>>2]=32,e[t+104>>2]=1032,e[t+108>>2]=66,e[t+8>>2]=5,e[t+12>>2]=32,f[t+365|0]=64|d[t+365|0],f[t+368|0]=64|d[t+368|0],f[t+396|0]=64|d[t+396|0],f[t+399|0]=64|d[t+399|0]}function Yn(t,A,r){var s=0,o=0,l=0;e:{if(!(s=e[r+16>>2])){if(nn(r))break e;s=e[r+16>>2]}if(s-(l=e[r+20>>2])>>>0<A>>>0)return 0|Zt[e[r+36>>2]](r,t,A);t:if(e[r+80>>2]<0)s=0;else{for(o=A;;){if(!(s=o)){s=0;break t}if(d[(o=s-1|0)+t|0]==10)break}if((o=0|Zt[e[r+36>>2]](r,t,s))>>>0<s>>>0)break e;t=t+s|0,A=A-s|0,l=e[r+20>>2]}qt(l,t,A),e[r+20>>2]=e[r+20>>2]+A,o=A+s|0}return o}function Hn(t){var A,r=0,s=0;e:{if((0|(A=e[34064]))>0)for(;;){if((s=e[136284+(r<<4)>>2])&&!sr(t,s)){if(e[136276+(r<<4)>>2])return r;if(s=-1,kr(0,r))break e;return r}if((0|A)==(0|(r=r+1|0)))break}s=-1,kr(t,A)||(r=DA(e[12+(136272+(e[34064]<<4)|0)>>2],kt(t)+1|0),s=e[34064],e[12+(136272+(s<<4)|0)>>2]=r,Gt(r,t),e[34064]=s+1)}return s}function Un(t,A){var r,s=0,o=0,l=0,u=0;for(Y=r=Y-16|0,f[0|A]=0,(s=15&e[t>>2])&&(A=(o=kt(A=Gt(A,G(128496,64|s))))+A|0),s=8;;){e:{t:{if(s>>>0<=29){if(e[t>>2]>>>s&1)break t;break e}if(!(e[t+4>>2]>>>s-32&1)|s>>>0<32)break e}(0|(o=(u=kt(l=G(128496,s))+1|0)+o|0))>=80||(e[r>>2]=l,lt(A,84439,r),A=A+u|0)}if((0|(s=s+1|0))==64)break}Y=r+16|0}function ki(t,A,r){var s,o=0,l=0,u=0;if(Y=s=Y-16|0,d[0|t]){for(u=e[30450];;)if(l=t,t=t+1|0,!((0|(o=f[0|l]))==32|o-9>>>0<5)){for((0|(o=la(l)))>0&&((0|o)<32?e[A>>2]=e[A>>2]|1<<o:(l=G(129568,r),e[s+4>>2]=o,e[s>>2]=l,ar(u,84902,s)),l=t);l=(t=l)+1|0,(o=f[0|t])-48>>>0<10|(32|o)-97>>>0<26;);if(!o)break}}Y=s+16|0}function $a(t,A,r){var s=0,o=0,l=0,u=0;e:if(A&&!((0|(o=r-4|0))<=0))for(l=(0|(r=e[A-4>>2]))!=34?(0|r)==39?r:0:r,r=0;;){if(u=r,!(r=e[A>>2]))break e;t:{if(!l){if((0|r)==32|r-9>>>0<5)break e;if((0|r)!=47)break t;break e}if((0|u)!=92&&(0|r)==(0|l))break e}if(A=A+4|0,!((0|o)>(0|(s=br(r,t+s|0)+s|0))))break}return f[t+s|0]=0,s}function BA(t){var A=0;e:if(!_t(t)){A=0;t:if(!(t>>>0<768)){if(t-2305>>>0<=1270){if((124&t)>>>0<100)break e;if(A=1,xi(93850,t))break t;return t-3450>>>0<6}if((0|t)==1541|t-1456>>>0<19|(0|t)==1648||(0|(A=-256&t))==10240|(0|A)==4352|t-3904>>>0<125|t>>>0<880)break e;A=1,t-1611>>>0<20||(A=t-12353>>>0<30400)}return A}return 1}function hn(t,A){var r=0;t?((r=e[t+4>>2])&&Gt(133208,r),(r=e[t>>2])&&FA(133168,r,40),e[33289]=d[t+14|0],e[33291]=d[t+13|0],e[33290]=d[t+12|0],FA(134672,d[0|A]!=33|d[A+1|0]!=118?A:(d[A+2|0]==47?3:0)+A|0,40),t=e[50298],e[33678]=e[50297],e[33679]=t,t=e[50302],e[33682]=e[50301],e[33683]=t,t=e[50300],e[33680]=e[50299],e[33681]=t):Je(133152,0,76)}function Fa(t,A,r,s){f[t+53|0]=1;e:if(e[t+4>>2]==(0|r)){f[t+52|0]=1;t:{if(!(r=e[t+16>>2])){if(e[t+36>>2]=1,e[t+24>>2]=s,e[t+16>>2]=A,(0|s)!=1)break e;if(e[t+48>>2]==1)break t;break e}if((0|A)==(0|r)){if((0|(r=e[t+24>>2]))==2&&(e[t+24>>2]=s,r=s),e[t+48>>2]!=1)break e;if((0|r)==1)break t;break e}e[t+36>>2]=e[t+36>>2]+1}f[t+54|0]=1}}function ia(t,A){var r=0,s=0,o=0,l=0,u=0;e:if(r=e[A>>2])for(;;){s=0;t:if(t){for(;u=f[s+r|0],(o=e[(s<<2)+t>>2])&&(s=s+1|0,(0|u)==(0|o)););r:switch(o-34|0){case 0:case 5:break r;default:break t}if(!u)break e}if(!(r=e[((l=l+1|0)<<3)+A>>2]))break}return e[4+((l<<3)+A|0)>>2]}function oa(t,A){e:if((0|A)>=1024){if(t*=898846567431158e293,A>>>0<2047){A=A-1023|0;break e}t*=898846567431158e293,A=((0|A)>=3069?3069:A)-2046|0}else(0|A)>-1023||(t*=2004168360008973e-307,A>>>0>4294965304?A=A+969|0:(t*=2004168360008973e-307,A=((0|A)<=-2960?-2960:A)+1938|0));return M(0,0),M(1,A+1023<<20),t*+S()}function Ts(t,A,r,s){var o,l,u,g=0;return Y=l=Y-16|0,e[l+12>>2]=s,Y=o=Y-160|0,u=A?t:o+158|0,e[o+144>>2]=u,g=-1,t=A-1|0,e[o+148>>2]=t>>>0<=A>>>0?t:0,t=Je(o,0,144),e[t+76>>2]=-1,e[t+36>>2]=17,e[t+80>>2]=-1,e[t+44>>2]=t+159,e[t+84>>2]=t+144,(0|A)<0?e[56798]=61:(f[0|u]=0,g=Vr(t,r,s,15,16)),Y=t+160|0,Y=l+16|0,g}function Kn(t,A){var r=0,s=0,o=0;e:if(r=d[0|t])for(;;){if(!(s=d[0|A])){o=r;break e}if((0|r)!=(0|s)&&(0|(s=r-65>>>0<26?32|r:r))!=(0|((r=d[0|A])-65>>>0<26?32|r:r))){o=d[0|t];break e}if(A=A+1|0,r=d[t+1|0],t=t+1|0,!r)break}return(o=(t=255&o)-65>>>0<26?32|t:t)-((t=d[0|A])-65>>>0<26?32|t:t)|0}function mn(t,A,r){var s=0,o=0;if(s=e[r+72>>2],e[r+72>>2]=s-1|s,(0|(s=e[r+4>>2]))==(0|(o=e[r+8>>2]))?s=A:(qt(t,s,s=A>>>0>(s=o-s|0)>>>0?s:A),e[r+4>>2]=s+e[r+4>>2],t=t+s|0,s=A-s|0),s)for(;;){if(En(r)||!(o=0|Zt[e[r+32>>2]](r,t,s)))return A-s|0;if(t=t+o|0,!(s=s-o|0))break}return A}function la(t){for(var A=0,r=0,s=0,o=0;t=(A=t)+1|0,(0|(r=f[0|A]))==32|r-9>>>0<5;);e:{t:{r:switch((r=f[0|A])-43|0){case 0:break t;case 2:break r;default:break e}o=1}r=f[0|t],A=t}if(r-48>>>0<10)for(;s=48+(O(s,10)-f[0|A]|0)|0,t=f[A+1|0],A=A+1|0,t-48>>>0<10;);return o?s:0-s|0}function Cn(t,A){var r,s,o,l=0;return Y=r=Y-32|0,e[A>>2]=0,e[A+4>>2]=0,e[(l=s=A+24|0)>>2]=0,e[l+4>>2]=0,e[(l=o=A+16|0)>>2]=0,e[l+4>>2]=0,e[(l=A+8|0)>>2]=0,e[l+4>>2]=0,e[r+28>>2]=A+28,e[r+24>>2]=s,e[r+20>>2]=A+20,e[r+16>>2]=o,e[r+12>>2]=A+12,e[r+8>>2]=l,e[r+4>>2]=A+4,e[r>>2]=A,t=jt(t,84553,r),Y=r+32|0,t}function Xn(t){var A=0,r=0,s=0;if((A=d[0|t])&&((r=d[t+1|0])?(r=A|r<<8,(A=d[t+2|0])&&(r|=A<<16,(t=d[t+3|0])&&(r|=t<<24))):r=A),(0|(A=e[36115]))>0)for(t=0;;){if(!(!(s=e[144464+(t<<2)>>2])|e[s>>2]!=(0|r)))return d[s+10|0];if((0|A)==(0|(t=t+1|0)))break}return 0}function bn(t,A,r,s){var o,l=0,u=0,g=0,h=0,w=0;Y=o=Y-240|0,e[o>>2]=t,g=1;e:if(!((0|r)<2))for(l=t;;){if((0|ln(t,u=(l=l-4|0)-e[((h=r-2|0)<<2)+s>>2]|0,A))>=0&&(0|ln(t,l,A))>=0)break e;if(w=u,l=(u=(0|ln(u,l,A))>=0)?w:l,e[(g<<2)+o>>2]=l,g=g+1|0,!((0|(r=u?r-1|0:h))>1))break}Ei(o,g),Y=o+240|0}function lt(t,A,r){var s,o,l,u=0;return Y=o=Y-16|0,e[o+12>>2]=r,Y=s=Y-160|0,qt(l=s+8|0,124528,144),e[s+52>>2]=t,e[s+28>>2]=t,u=(u=-2-t|0)>>>0>2147483647?2147483647:u,e[s+56>>2]=u,t=t+u|0,e[s+36>>2]=t,e[s+24>>2]=t,t=Si(l,A,r),u&&(A=e[s+28>>2],f[A-((0|A)==e[s+24>>2])|0]=0),Y=s+160|0,Y=o+16|0,t}function Ei(t,A){var r,s=0,o=0,l=0,u=0,g=0;if(s=4,Y=r=Y-256|0,(0|A)>=2)for(e[(g=(A<<2)+t|0)>>2]=r;;){for(l=s>>>0>=256?256:s,qt(e[g>>2],e[t>>2],l),o=0;u=(o<<2)+t|0,o=o+1|0,qt(e[u>>2],e[(o<<2)+t>>2],l),e[u>>2]=e[u>>2]+l,(0|A)!=(0|o););if(!(s=s-l|0))break}Y=r+256|0}function St(t,A,r){var s,o=0;return Y=s=Y-96|0,e[s+88>>2]=0,e[s+92>>2]=1073741824,e[s+84>>2]=A,A=LA(t,s+84|0,r,s+88|0,2,0),536870912&(o=e[s+88>>2])?(A=e[47202],e[47202]=0,f[s+2|0]=32,k[s>>1]=8192,FA(o=3|s,e[s+84>>2],77),t=Fe(t,o,0,0),Gt(r,189088),e[47202]=A):t=A?o:0,Y=s+96|0,t}function In(t,A,r){var s=0,o=0,l=0;o=qs(t),s=e[A>>2];e:{t:if((0|o)>=0){if(s){if(!sr(t,r))break t;(l=e[s+688>>2])&&Me(l),Me(s),e[A>>2]=0}e[A>>2]=Lt(t),t=Gt(r,t),gA(r=e[A>>2],r+228|0,0)&&(ns(e[e[32972]+60>>2]),f[0|t]=0,o=-1),s=e[A>>2],e[s+292>>2]=o}else if(!s)break e;f[s+268|0]=0}return o}function wn(t){var A=0,r=0;return(0|(A=e[t+76>>2]))>=0&(!A|e[56823]!=(-1073741825&A))?(r=e[(A=t+76|0)>>2],e[A>>2]=r||1073741823,(0|(r=e[t+4>>2]))==e[t+8>>2]?t=yn(t):(e[t+4>>2]=r+1,t=d[0|r]),e[A>>2]=0,t):(0|(A=e[t+4>>2]))!=e[t+8>>2]?(e[t+4>>2]=A+1,d[0|A]):yn(t)}function Zr(t,A,r){var s=0,o=0;e:{t:{if(r>>>0>=4){if(3&(t|A))break t;for(;;){if(e[t>>2]!=e[A>>2])break t;if(A=A+4|0,t=t+4|0,!((r=r-4|0)>>>0>3))break}}if(!r)break e}for(;;){if((0|(s=d[0|t]))==(0|(o=d[0|A]))){if(A=A+1|0,t=t+1|0,r=r-1|0)continue;break e}break}return s-o|0}return 0}function fs(t,A){var r,s=0,o=0,l=0;Y=r=Y-16|0,A?(wA(r,o=((s=A>>31)^A)-s|0,0,0,0,(s=Ce(o))+81|0),o=0+e[r+8>>2]|0,s=(65536^e[r+12>>2])+(16414-s<<16)|0,l=-2147483648&A|(s=o>>>0<l>>>0?s+1|0:s),s=e[r+4>>2],A=e[r>>2]):A=0,e[t>>2]=A,e[t+4>>2]=s,e[t+8>>2]=o,e[t+12>>2]=l,Y=r+16|0}function ca(t){var A,r=0,s=0,o=0;if((0|(r=Wn(t,61)))==(0|t))return 0;e:if(!d[(A=r-t|0)+t|0]&&(r=e[56800])&&(s=e[r>>2])){for(;;){if(Jn(t,s,A)||(s=e[r>>2]+A|0,d[0|s]!=61)){if(s=e[r+4>>2],r=r+4|0,s)continue;break e}break}o=s+1|0}return o}function qs(t){var A=0,r=0;e:if(!((0|(r=e[34461]))<=0)){for(;;){if(!sr(t,O(A,44)+137856|0)){e[34457]=A;break e}if((0|r)==(0|(A=A+1|0)))break}return-1}return(t=(0|A)==(0|r))?-1:((0|(t=t?-1:A))!=e[36114]&&(e[36115]=0,nA(t),e[36114]=t,e[36115]=e[36115]+1),A)}function en(t,A,r,s){var o=0,l=0;e:if((32|d[0|A])!=32){if(o=((0|s)>2)<<1,l=Us(t,A,r,o=(0|s)>1?4|o:o),d[0|r]!=21)for(o|=1,A=A+l|0,l=1;;){if((32|d[0|A])==32)break e;if(A=Us(t,A,r,o)+A|0,l=l+1|0,d[0|r]==21)break}return Gt(189088,r),0}return tr(t,r,s,l),A}function br(t,A){var r,s=0,o=0,l=0;if(t>>>0<=127)return f[0|A]=t,1;if(t>>>0>=1114112)return f[0|A]=32,1;for(s=O(r=t>>>0<2048?1:t>>>0<65536?2:3,6),f[0|A]=d[r+93842|0]|t>>>s;s=s-6|0,f[(o=o+1|0)+A|0]=t>>>s&63|128,(0|(l=l+1|0))!=(0|r););return r+1|0}function kn(t){var A=0,r=0;e:{if((0|(A=e[t+12>>2]))>=e[t+16>>2]){if(A=0,(0|(r=0|ge(e[t+8>>2],t+24|0,2048)))<=0){if(!r|(0|r)==-44)break e;return e[56798]=0-r,0}e[t+16>>2]=r}r=A,A=t+A|0,e[t+12>>2]=r+B[A+40>>1],r=e[A+36>>2],e[t>>2]=e[A+32>>2],e[t+4>>2]=r,A=A+24|0}return A}function tn(t,A){var r,s=0;if(s=e[t+632>>2])return!!(0|Hr(s,A));e:{t:{if((0|(r=e[t+600>>2]))>0){if(s=0,(A=A-r|0)-1>>>0<255)break t;break e}if((s=A-192|0)>>>0<=413)return 128&d[344+(d[s+94240|0]+t|0)|0];if(s=0,A>>>0>255)break e}s=128&d[344+(t+A|0)|0]}return s}function Ma(t,A,r){var s,o,l;return l=(s=t*t)*(s*s)*(158969099521155e-24*s-25050760253406863e-24)+(s*(27557313707070068e-22*s-.0001984126982985795)+.00833333333332249),o=s*t,r?t-(s*(.5*A-l*o)-A+.16666666666666632*o):o*(s*l-.16666666666666632)+t}function ua(t,A){var r,s=0,o=0,l=0;Y=r=Y-16|0,A?(wA(r,s=A,0,0,0,(A=Ce(A))+81|0),s=0+e[r+8>>2]|0,A=(65536^e[r+12>>2])+(16414-A<<16)|0,l=o>>>0>s>>>0?A+1|0:A,o=e[r+4>>2],A=e[r>>2]):A=0,e[t>>2]=A,e[t+4>>2]=o,e[t+8>>2]=s,e[t+12>>2]=l,Y=r+16|0}function da(t){var A,r=0;Y=A=Y-16|0,f[A+15|0]=10;e:{if(!(r=e[t+16>>2])){if(nn(t))break e;r=e[t+16>>2]}(0|r)==(0|(r=e[t+20>>2]))|e[t+80>>2]==10?Zt[e[t+36>>2]](t,A+15|0,1):(e[t+20>>2]=r+1,f[0|r]=10)}Y=A+16|0}function En(t){var A,r=0;return r=e[t+72>>2],e[t+72>>2]=r-1|r,e[t+20>>2]!=e[t+28>>2]&&Zt[e[t+36>>2]](t,0,0),e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,4&(r=e[t>>2])?(e[t>>2]=32|r,-1):(A=e[t+44>>2]+e[t+48>>2]|0,e[t+8>>2]=A,e[t+4>>2]=A,r<<27>>31)}function An(t){var A=0;e:{t:{r:{a:{if((0|(t=fn(t)))<=268437502){if(!t)break e;if((0|t)==268436479)break t;if((0|t)!=268437247)break a;return 2}if((0|t)==268437503|(0|t)==268437759)break r;if((0|t)==268439295)break e}return-1}return 2}A=1}return A}function kt(t){var A=0,r=0,s=0;e:{if(3&(A=t))for(;;){if(!d[0|A])break e;if(!(3&(A=A+1|0)))break}for(;r=A,A=A+4|0,!(~(s=e[r>>2])&s-16843009&-2139062144););for(;r=(A=r)+1|0,d[0|A];);}return A-t|0}function Gs(t,A,r){var s,o=0,l=0,u=0;e[t+112>>2]=A,e[t+116>>2]=r,s=e[t+4>>2],o=e[t+44>>2]-s|0,e[t+120>>2]=o,e[t+124>>2]=o>>31,o=e[t+8>>2],A|r&&((0|r)>=(0|(u=(l=o-s|0)>>31))&A>>>0>=l>>>0|(0|r)>(0|u)||(o=A+s|0)),e[t+104>>2]=o}function Mi(t,A){var r,s,o=0;if(F(+t),r=0|y(1),s=0|y(0),(0|(o=r>>>20&2047))!=2047){if(!o)return t==0?o=0:(t=Mi(18446744073709552e3*t,A),o=e[A>>2]+-64|0),e[A>>2]=o,t;e[A>>2]=o-1022,M(0,0|s),M(1,-2146435073&r|1071644672),t=+S()}return t}function Zn(t,A,r){return e[t+20>>2]!=e[t+28>>2]&&(Zt[e[t+36>>2]](t,0,0),!e[t+20>>2])||(e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,Zt[e[t+40>>2]](t,A,r,0),(0|fe)<0)?-1:(e[t+4>>2]=0,e[t+8>>2]=0,e[t>>2]=-17&e[t>>2],0)}function Oa(t,A){var r,s,o=0;return(s=1-(o=.5*(r=t*t)))+(1-s-o+(r*(r*(r*(2480158728947673e-20*r-.001388888888887411)+.0416666666666666)+(o=r*r)*o*(r*(-11359647557788195e-27*r+2087572321298175e-24)-27557314351390663e-23))-t*A))}function $s(t,A,r){var s=0,o=0;if(A)for(;r=r-1|0,o=t,t=go(t,A,10),s=fe,f[0|r]=o-eA(t,s,10,0)|48,o=A>>>0>9,A=s,o;);if(t)for(;A=(t>>>0)/10|0,f[0|(r=r-1|0)]=t-O(A,10)|48,s=t>>>0>9,t=A,s;);return r}function Xt(t,A){var r=0,s=0,o=0;e:if(t){for(;o=f[A+r|0],(s=e[(r<<2)+t>>2])&&(r=r+1|0,(0|o)==(0|s)););t:switch(s-34|0){case 0:case 5:break t;default:break e}if(!o)return 0}return 1}function vi(t,A,r){var s,o=0;return Y=s=Y-16|0,!(64&A)&&(o=0,4259840&~A)||(e[s+12>>2]=r+4,o=e[r>>2]),e[s>>2]=o,e[s+4>>2]=0,(t=0|ne(-100,0|t,32768|A,0|s))>>>0>=4294963201&&(e[56798]=0-t,t=-1),Y=s+16|0,t}function Jn(t,A,r){var s=0,o=0,l=0;if(!r)return 0;e:if(s=d[0|t]){for(;;){if((o=d[0|A])&&!(!(r=r-1|0)|(0|s)!=(0|o))){if(A=A+1|0,s=d[t+1|0],t=t+1|0,s)continue;break e}break}l=s}return(255&l)-d[0|A]|0}function _a(t,A){var r,s=0;Y=s=Y-128|0,s=Je(s,0,128),f[s+98|0]=9,f[s+66|0]=9,f[s+34|0]=t,k[s+68>>1]=1,r=e[36125],e[s+104>>2]=r,e[s+72>>2]=r,e[s+40>>2]=e[144464+(t<<2)>>2],f[s+2|0]=9,e[s+8>>2]=r,WA(0,0,s+32|0,A,0),Y=s+128|0}function rn(t){var A=0,r=0,s=0;if(f[e[t>>2]]-48>>>0>=10)return 0;for(;s=e[t>>2],r=-1,A>>>0<=214748364&&(r=(0|(r=f[0|s]-48|0))>(2147483647^(A=O(A,10)))?-1:r+A|0),e[t>>2]=s+1,A=r,f[s+1|0]-48>>>0<10;);return A}function Qs(t,A){var r=0;if(!(!t|e[t>>2]-48>>>0>=10)){if(e[t>>2]-48>>>0<10)for(;r=(e[t>>2]+O(r,10)|0)-48|0,e[(t=t+4|0)>>2]-48>>>0<10;);(0|A)==1&&(r=(0|Ss(e[t>>2]))==115?O(r,1e3):r)}return r}function gr(t){var A=0;A=1;e:{t:switch(0|Tr(t)){case 30:if(A=0,(0|t)==160|(0|t)==8199|(0|t)==8239)break e;return 1;case 0:if(t-9>>>0<5)return 1;if((0|t)==133)break e;break;case 28:case 29:break e;default:break t}A=0}return A}function sn(t,A,r){var s,o=0;return Y=s=Y-16|0,f[s+6|0]=0,f[s+7|0]=95,o=br(o=A,A=s+8|0)+s|0,f[o+8|0]=32,f[o+9|0]=0,St(t,s+7|0,r)||(f[s+7|0]=32,St(t,A,r)||Qr(t,A,r,20,0,0,0)),Y=s+16|0,f[0|r]}function qn(t){var A=0,r=0;r=170;e:if(!((0|t)<170))for(;;){if((0|t)==(0|r))return B[101616+(A<<1|2)>>1];if((2147483646&(A=A+2|0))==124)break e;if(!((0|(r=B[101616+(A<<1)>>1]))<=(0|t)))break}return 0}function eA(t,A,r,s){var o,l,u,g,h=0,w=0;return g=O(h=r>>>16|0,w=t>>>16|0),h=(65535&(w=((u=O(o=65535&r,l=65535&t))>>>16|0)+O(w,o)|0))+O(h,l)|0,fe=(O(A,r)+g|0)+O(t,s)+(w>>>16)+(h>>>16)|0,65535&u|h<<16}function Ss(t){var A=0,r=0,s=0,o=0;for(A=2778;;){if((0|(r=e[1040+((s=(A+o|0)/2|0)<<4)>>2]))==(0|t))return(A=e[1048+(s<<4)>>2])||t;if(!((0|(o=(r=t>>>0>r>>>0)?s+1|0:o))<=(0|(A=r?A:s-1|0))))break}return t}function an(t){var A=0,r=0,s=0,o=0;for(A=2778;;){if((0|(r=e[1040+((s=(A+o|0)/2|0)<<4)>>2]))==(0|t))return(A=e[1044+(s<<4)>>2])||t;if(!((0|(o=(r=t>>>0>r>>>0)?s+1|0:o))<=(0|(A=r?A:s-1|0))))break}return t}function Vs(t){var A,r=0;return Y=A=Y-112|0,(t=0|et(0|t,0|A))>>>0>=4294963201&&(e[56798]=0-t,t=-1),r=0-e[56798]|0,t||(r=-31,(61440&e[A+12>>2])!=16384&&(r=e[A+40>>2])),Y=A+112|0,t=r}function Mn(t,A,r){var s;if(!(s=e[t+16>>2]))return e[t+36>>2]=1,e[t+24>>2]=r,void(e[t+16>>2]=A);e:{if((0|A)==(0|s)){if(e[t+24>>2]!=2)break e;return void(e[t+24>>2]=r)}f[t+54|0]=1,e[t+24>>2]=2,e[t+36>>2]=e[t+36>>2]+1}}function Nr(t,A,r,s,o){var l;if(Y=l=Y-256|0,!(73728&o|(0|r)<=(0|s))){if(Je(l,255&A,(r=(s=r-s|0)>>>0<256)?s:256),!r)for(;Jr(t,l,256),(s=s-256|0)>>>0>255;);Jr(t,l,s)}Y=l+256|0}function Fs(t,A,r){var s=0;e:{if(t){if(s=e[t>>2]){Me(e[s+4>>2]),s=e[t>>2];break e}if(s=Nt(16),e[t>>2]=s,s)break e;A=48}return A}return e[s>>2]=0,e[s+4>>2]=ei(r),t=e[t>>2],e[t+8>>2]=0,e[t+12>>2]=0,A}function Er(t){var A=0,r=0;Bs(t),Zt[e[t+12>>2]](t),1&f[0|t]||((A=e[t+52>>2])&&(e[A+56>>2]=e[t+56>>2]),(r=e[t+56>>2])&&(e[r+52>>2]=A),e[56816]==(0|t)&&(e[56816]=r),Me(e[t+96>>2]),Me(t))}function Os(t){var A=0,r=0;A=1;e:{t:{r:{a:switch((r=Tr(t))-9|0){case 1:break e;case 6:case 18:break r;case 0:break a;default:break t}return(0|Ss(t))!=(0|t)}return Ue(t,r)>>>15&1}A=0}return A}function vn(t){var A,r,s,o=0,l=0;if(s=kt(t)+1|0,o=e[33282],(0|(r=(A=e[33287])+s|0))>=e[33286]){if(!(o=DA(o,l=r+1e3|0)))return-1;e[33286]=l,e[33282]=o}return qt(o+A|0,t,s),e[33287]=r,A}function nn(t){var A=0;return A=e[t+72>>2],e[t+72>>2]=A-1|A,8&(A=e[t>>2])?(e[t>>2]=32|A,-1):(e[t+4>>2]=0,e[t+8>>2]=0,A=e[t+44>>2],e[t+28>>2]=A,e[t+20>>2]=A,e[t+16>>2]=A+e[t+48>>2],0)}function $n(t,A,r,s){e:if(t){t:switch(A+2|0){case 0:return void(f[0|t]=r);case 1:return void(k[t>>1]=r);case 2:case 3:return void(e[t>>2]=r);case 5:break t;default:break e}e[t>>2]=r,e[t+4>>2]=s}}function xn(t,A,r,s,o,l,u,g,h){var w;Y=w=Y-16|0,ke(w,A,r,s,o,l,u,g,-2147483648^h),s=e[w>>2],r=e[w+4>>2],A=e[w+12>>2],e[t+8>>2]=e[w+8>>2],e[t+12>>2]=A,e[t>>2]=s,e[t+4>>2]=r,Y=w+16|0}function sr(t,A){var r=0,s=0;e:if(!(!(r=d[0|t])|(0|r)!=(0|(s=d[0|A]))))for(;;){if(s=d[A+1|0],!(r=d[t+1|0]))break e;if(A=A+1|0,t=t+1|0,(0|r)!=(0|s))break}return r-s|0}function G(t,A){var r=0,s=0,o=0;if(!(r=e[t>>2]))return 84399;if(e[t+4>>2]!=(0|A))for(;;){if(!(r=e[(s=t+8|0)>>2]))return 84399;if(o=t,t=s,e[o+12>>2]==(0|A))break}return r}function W(t,A,r){var s=0,o=0,l=0;e:if(r){for(;;){if(!(!(s=e[A>>2])|!(o=e[t>>2])|(0|s)!=(0|o))){if(A=A+4|0,t=t+4|0,r=r-1|0)continue;break e}break}l=o-s|0}return l}function q(t){var A,r=0,s=0;if((0|(A=e[36115]))>0)for(;;){if(!(!(s=e[144464+(r<<2)>>2])|e[s>>2]!=(0|t)))return d[s+10|0];if((0|A)==(0|(r=r+1|0)))break}return 0}function se(t){var A,r;return(t=(A=e[33175])+(r=t+7&-8)|0)>>>0<=A>>>0&&r||t>>>0>K.byteLength/65536<<16>>>0&&!(0|Pt(0|t))?(e[56798]=48,-1):(e[33175]=t,A)}function ue(t){var A=0;e:if(!((A=Tr(t))>>>0>27)){if(!(1<<A&134259072)){if((0|A)==6)return 1;if((0|A)!=9)break e;return(0|an(t))!=(0|t)}return Ue(t,A)>>>14&1}return 0}function Te(t,A){var r=0;return f[0|t]=A>>>24,f[0|(r=(A>>>0>16777215)+t|0)]=A>>>16,f[0|(r=r+!!(16711680&A)|0)]=A>>>8,f[0|(r=r+!!(65280&A)|0)]=A,f[r+!!(255&A)|0]=0,t}function $e(t,A){e:if((0|(t=ur(t,A)))<=268437502){if(!t|(0|t)==268436479|(0|t)!=268437247)break e;return}}function dt(t){var A=0;return A=e[t>>2]-1|0,(A=f[121600+(O(0-A&A,124511785)>>>27|0)|0])||(t=e[t+4>>2],A=(t=f[121600+(O(0-t&t,124511785)>>>27|0)|0])?t+32|0:0),A}function xt(t){var A=0,r=0,s=0;e:{if(!((A=Tr(t))>>>0>27)){if(r=1,116672&(s=1<<A))break e;if(134227968&s)return Ue(t,A)>>>10&1}r=0}return r}function _t(t){var A=0,r=0,s=0;e:{if(!((A=Tr(t))>>>0>27)){if(r=1,34752&(s=1<<A))break e;if(134227968&s)return Ue(t,A)>>>10&1}r=0}return r}function iA(){var t,A=0;(t=e[56797])&&((A=e[t+8>>2])&&Zt[e[e[A>>2]+12>>2]](A),(A=e[t+4>>2])&&Zt[e[e[A>>2]+16>>2]](A),Me(t)),e[56797]=0,e[56797]=Fr()}function MA(t,A){var r=0;return t&&(r=eA(t,0,A,0),(t|A)>>>0<65536||(r=fe?-1:r)),!(t=Nt(r))|!(3&d[t-4|0])||Je(t,0,r),t}function SA(t,A){var r,s;s=e[130128+(A-O(r=(0|A)/100|0,100)<<2)>>2],e[t+100>>2]=s,e[t+96>>2]=s,A+99>>>0>=199&&(e[t+100>>2]=e[130128+(r<<2)>>2])}function Yr(t){var A=0;(A=Nt(1344))&&(t=qt(A,t,1344),A=216192+(e[50758]<<4)|0,e[A>>2]=11,e[A+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function ss(t,A){var r=0;e:if(r=e[t>>2])for(;;){if(A&&!sr(A,r))break e;if(!(r=e[(t=t+8|0)>>2]))break}return e[t+4>>2]}function yn(t){var A,r=0;return Y=A=Y-16|0,r=-1,En(t)||(0|Zt[e[t+32>>2]](t,A+15|0,1))==1&&(r=d[A+15|0]),Y=A+16|0,r}function Hr(t,A){var r=0,s=0;if(A){for(;s=t,(r=e[t>>2])&&(t=s+4|0,(0|A)!=(0|r)););return r?s:0}return(ao(t)<<2)+t|0}function xi(t,A){var r=0,s=0;if(r=B[t>>1])for(;;){if(s=s+1|0,(0|A)==(0|r))return s;if(!(r=B[(s<<1)+t>>1]))break}return 0}function yi(t,A){var r=0,s=0;A>>>0<=31?(s=e[t>>2],r=t+4|0):(A=A-32|0,r=t),r=e[r>>2],e[t>>2]=s<<A,e[t+4>>2]=r<<A|s>>>32-A}function Bi(t,A){var r=0,s=0;r=e[t+4>>2],A>>>0<=31?s=e[t>>2]:(A=A-32|0,s=r,r=0),e[t+4>>2]=r>>>A,e[t>>2]=r<<32-A|s>>>A}function ws(t){var A=0;t=t||1;e:{for(;;){if(A=Nt(t))break e;if(!(A=e[57276]))break;Zt[0|A]()}ot(),L()}return A}function Di(t){return t>>>0<=131071?d[117424+(t>>>3&31|d[117424+(t>>>8|0)|0]<<5)|0]>>>(7&t)&1:t>>>0<196606}function Uo(t,A,r,s,o,l,u,g,h){e[t>>2]=A,e[t+4>>2]=r,e[t+8>>2]=s,e[t+12>>2]=65535&o|(h>>>16&32768|o>>>16&32767)<<16}function ea(t,A,r){return r?(0|t)==(0|A)?1:!sr(e[t+4>>2],e[A+4>>2]):e[t+4>>2]==e[A+4>>2]}function Ko(t){var A=0;(0|(A=0|Ne(-100,0|t,0)))==-31&&(A=0|be(0|t)),A>>>0>=4294963201&&(e[56798]=0-A)}function so(){var t;t=Nt(84)+80|0,e[t>>2]=125420,e[t>>2]=125380,e[t>>2]=125400,Ye(0|t,125512,9),L()}function Pi(t){var A,r;return A=wn(t),r=wn(t),wn(t)<<16&16711680|r<<8&65280|255&A|wn(t)<<24}function Bn(t){var A=0;return t?(A=1,t-9472>>>0<160|t-65529>>>0<7||(A=gr(t)),A):0}function Xo(t,A){var r;return r=A>>31,t=(e[t+76>>2],Zn(t,A,r))}function ao(t){var A=0,r=0;for(r=t;r=(A=r)+4|0,e[A>>2];);return A-t>>2}function Zo(t,A){return f[0|t]=A,f[t+4|0]=0,f[t+3|0]=A>>>24,f[t+2|0]=A>>>16,f[t+1|0]=A>>>8,t}function as(t,A){var r=0;return(-1>>>(r=31&A)&t)<<r|((r=t)&-1<<(t=0-A&31))>>>t}function Dn(t,A){var r=0;return(0|t)==73&&(r=305,d[A+173|0])||(r=Ss(t)),r}function ns(t){e[36114]!=(0|t)&&(e[36115]=0,nA(t),e[36114]=t,e[36115]=e[36115]+1)}function no(t){return t?e[34460]+t|0:(Ti(85328,20,e[30450]),e[32320])}function ei(t){var A,r;return(r=Nt(A=kt(t)+1|0))?qt(r,t,A):0}function Jo(){var t;e[33287]=0,(t=e[33282])&&(Me(t),e[33286]=0,e[33282]=0)}function ar(t,A,r){var s;Y=s=Y-16|0,e[s+12>>2]=r,Si(t,A,r),Y=s+16|0}function Ti(t,A,r){t=(e[r+76>>2],Yn(t,A,r))}function on(t,A){return A?t<<24|(65280&t)<<8|t>>>8&65280|t>>>24:t}function Pn(t){return t=t-8212>>>0>=12?xi(93856,t):1}function io(t){var A=0;t&&((A=e[t+688>>2])&&Me(A),Me(t))}function qo(t){return t=(0|t)<=127?ta(87712,t):0}function oo(t){return!(t=d[0|t]?1:Zr(t,t+1|0,3))}function lo(t){(t=(0|(t=0|ye(0|t)))!=27?t:0)&&(e[56798]=t)}function ln(t,A,r){return t|=0,A|=0,0|Zt[0|(r|=0)](t,A)}function ta(t,A){return t=Wn(t,A),d[0|t]==(255&A)?t:0}function Gi(t,A){return Xs(t,A,2147483647),fe=rt,We}function Qi(t){return t?31-Ce(t-1^t)|0:32}function Jr(t,A,r){32&d[0|t]||Yn(A,r,t)}function FA(t,A,r){f[(ys(t,A,r)+r|0)-1|0]=0}function ti(t){return In(t,188776,189328)}function $o(t,A){A|=0,e[(t|=0)+8>>2]=A}function Si(t,A,r){return Vr(t,A,r,0,0)}function e0(t){return e[(t|=0)+12>>2]}function t0(t){return e[(t|=0)+16>>2]}function co(t){return e[(t|=0)+20>>2]}function uo(t){return e[(t|=0)+8>>2]}function A0(t){return e[(t|=0)+4>>2]}function fo(t){return e[(t|=0)>>2]}function go(t,A,r){return Xs(t,A,r)}function Fi(t){(t|=0)&&Me(t)}function ts(t,A){Gt(kt(t)+t|0,A)}function po(t){return 0|(t|=0)}function ho(t){return 0}function Tn(t){Me(t|=0)}function r0(t){}C(c=d,1024,""),C(c,45536,"HhYWFhgWFhYXExYaFhIWFg4ODg4ODg4ODg4WFhoaGhYWCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoXFhMZERkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhcaExo="),C(c,45664,""),C(c,81428,"ggAAAAAAAAIAAAAAAAAAAgAAAAAAAAAC"),C(c,81475,"AgAAAAAAACAAAAAAAAAAIA=="),C(c,81506,"IA=="),C(c,81522,"IAAAAAAAAAAg"),C(c,81618,"IA=="),C(c,81634,"IA=="),C(c,81650,"IAAAAAAAAAAg"),C(c,81682,"IAAAAAAAAAAgAAAAAAAAACAAAAAAAIAAAAAAAAAAgA=="),C(c,81728,"gAAAAAAAAACAAAAAAAAAAIA="),C(c,81760,"gAAAAAAAAACA"),C(c,81904,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAU"),C(c,81961,"FAAAAAAAAAAU"),C(c,81985,"FAAAAAAAAAAE"),C(c,82009,"BAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),C(c,82097,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),C(c,82169,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAACA"),C(c,82224,"gAAAAAAAAACA"),C(c,82272,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(c,82353,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(c,82393,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(c,82625,"BAAAAAAAAAAE"),C(c,82649,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(c,83033,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(c,83097,"BAAAAAAAAAAE"),C(c,83121,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAQAAAEAAAAAFAAAAQAAAAgEAAABAAAAAQQAAAAAAAACBAAAAAAAAAgEAAAAAAAAAAQAAAAAAAAABAAAAQAAAAgEAAAAAAAAAQQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQA=="),C(c,83288,"QA=="),C(c,83303,"AkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAACEA="),C(c,83352,"QAAAAAAAABBAAAAQAAAAgAAg"),C(c,83379,"gAAAAABAAACQggAAIEAAAJAAAAAAAAAAgAAAAABAAACQggAAIEAAAJCCAAAgAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkAAAAEBAAACQAAAAYEAAAJCCAABgQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkIIAACBAAACQggAAIAAAAIAAAAAEAAAAAAAAAIAAAAAAAAAACAAAAAAAAAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAABEAAAAAAAAAIAAAAgIIAAAAAAACAgAAAAAAAAIAAAAAAAAAAgIYAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAgAAAAAAAAICAAAAAAAAAgJIAAACAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgIIAAAAAAACAhgAAAAAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgJIAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAhg=="),C(c,83999,""),C(c,93904,"ICAgICAgICAgICYlKyNTRFpBTCEgQD9KTktWP1RYP1dBQkNIRkdZPT0sLCcqICAAIAAhACIAsAIkACUA5gDIAigAKQB+AisAzAItAC4ALwBSAjEAMgBcAjQANQA2ADcAdQI5ANACsgI8AD0APgCUAlkCUQKyA+cA8ABbAkYAYgInAWoCXwJLAGsCcQJLAVQCpgNjAoACgwK4A4oCjAJTAccD+ACSAioDXABdAF4AXwBgAGEAYgBjAGQAZQBmAGECaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4AHkAegB7AHwAfQADA38APT0sLCcnAAMCBAUGBxoAAAAAAQECAwMEBQYHBwgJCgsAAAEBAgIDAwQFBgcHCAkKAAABAgMDAwQFBgcHBwgJClNldFdvcmRTdHJlc3MA5ADrAO8A9gD8AP8AAAAAAAAAYWFhYWFhYWNlZWVlaWlpaWRub29vb28Ab3V1dXV5dHNhYWFhYWFhY2VlZWVpaWlpZG5vb29vbwBvdXV1dXl0eWFhYWFhYWNjY2NjY2NjZGRkZGVlZWVlZWVlZWVnZ2dnZ2dnZ2hoaGhpaWlpaWlpaWlpaWlqamtra2xsbGxsbGxsbGxubm5ubm5ubm5vb29vb29vb3JycnJycnNzc3Nzc3NzdHR0dHR0dXV1dXV1dXV1dXV1d3d5eXl6enp6enpzYmJiYgAAb2NjZGRkZGRlZWVmZmdnaGlpa2tsbG1ubm9vb29vcHB5AABzc3R0dHR1dXV2eXl6enp6enp6AAAAd3R0dGtkZGRsbGxubm5hYWlpb291dXV1dXV1dXV1ZWFhYWFhYWdnZ2dra29vb296empkZGRnZ3d3bm5hYWFhb29hYWFhZWVlZWlpaWlvb29vcnJycnV1dXVzc3R0eXloaG5kb296emFhZWVvb29vb29vb3l5bG50amRxYWNjbHRzegAAYnV2ZWVqanFxcnJ5eWFhYWJvY2RkZWVlZWVl"),C(c,94846,"TG9va3VwRGljdDIAAAAAAAAAgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAoQCiAKMApAClAKYApwCoAKkAqgCrAKwArQCuAK8AsACxALIAswC0ALUAtgC3ALgAuQC6ALsAvAC9AL4AvwDAAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYA1wDYANkA2gDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wDwAPEA8gDzAPQA9QD2APcA+AD5APoA+wD8AP0A/gD/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAQB2AJBAaQAPQFaAacAqABgAV4BZAF5Aa0AfQF7AbAABQHbAkIBtAA+AVsBxwK4AGEBXwFlAXoB3QJ+AXwBVAHBAMIAAgHEADkBBgHHAAwByQAYAcsAGgHNAM4ADgEQAUMBRwHTANQAUAHWANcAWAFuAdoAcAHcAN0AYgHfAFUB4QDiAAMB5AA6AQcB5wANAekAGQHrABsB7QDuAA8BEQFEAUgB8wD0AFEB9gD3AFkBbwH6AHEB/AD9AGMB2QKAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAmAdgCowCkAP3/JAGnAKgAMAFeAR4BNAGtAP3/ewGwACcBsgCzALQAtQAlAbcAuAAxAV8BHwE1Ab0A/f98AcAAwQDCAP3/xAAKAQgBxwDIAMkAygDLAMwAzQDOAM8A/f/RANIA0wDUACAB1gDXABwB2QDaANsA3ABsAVwB3wDgAOEA4gD9/+QACwEJAecA6ADpAOoA6wDsAO0A7gDvAP3/8QDyAPMA9AAhAfYA9wAdAfkA+gD7APwAbQFdAdkCgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAE4AVYBpAAoATsBpwCoAGABEgEiAWYBrQB9Aa8AsAAFAdsCVwG0ACkBPAHHArgAYQETASMBZwFKAX4BSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgAqARABRQFMATYB1ADVANYA1wDYAHIB2gDbANwAaAFqAd8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4AKwERAUYBTQE3AfQA9QD2APcA+ABzAfoA+wD8AGkBawHZAoAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEEAgQDBAQEBQQGBAcECAQJBAoECwQMBK0ADgQPBBAEEQQSBBMEFAQVBBYEFwQYBBkEGgQbBBwEHQQeBB8EIAQhBCIEIwQkBCUEJgQnBCgEKQQqBCsELAQtBC4ELwQwBDEEMgQzBDQENQQ2BDcEOAQ5BDoEOwQ8BD0EPgQ/BEAEQQRCBEMERARFBEYERwRIBEkESgRLBEwETQROBE8EFiFRBFIEUwRUBFUEVgRXBFgEWQRaBFsEXASnAF4EXwSAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAD9//3//f+kAP3//f/9//3//f/9//3/DAatAP3//f/9//3//f/9//3//f/9//3//f/9//3/Gwb9//3//f8fBv3/IQYiBiMGJAYlBiYGJwYoBikGKgYrBiwGLQYuBi8GMAYxBjIGMwY0BjUGNgY3BjgGOQY6Bv3//f/9//3//f9ABkEGQgZDBkQGRQZGBkcGSAZJBkoGSwZMBk0GTgZPBlAGUQZSBv3//f/9//3//f/9//3//f/9//3//f/9//3/gACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAGCAZIKMArCCvIKYApwCoAKkAegOrAKwArQD9/xUgsACxALIAswCEA4UDhgO3AIgDiQOKA7sAjAO9AI4DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQP9/6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgP9/4AAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAP3/ogCjAKQApQCmAKcAqACpANcAqwCsAK0ArgCvALAAsQCyALMAtAC1ALYAtwC4ALkA9wC7ALwAvQC+AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f8XINAF0QXSBdMF1AXVBdYF1wXYBdkF2gXbBdwF3QXeBd8F4AXhBeIF4wXkBeUF5gXnBegF6QXqBf3//f8OIA8g/f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAChAKIAowCkAKUApgCnAKgAqQCqAKsArACtAK4ArwCwALEAsgCzALQAtQC2ALcAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxwDIAMkAygDLAMwAzQDOAM8AHgHRANIA0wDUANUA1gDXANgA2QDaANsA3AAwAV4B3wDgAOEA4gDjAOQA5QDmAOcA6ADpAOoA6wDsAO0A7gDvAB8B8QDyAPMA9AD1APYA9wD4APkA+gD7APwAMQFfAf8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAESASIBKgEoATYBpwA7ARABYAFmAX0BrQBqAUoBsAAFARMBIwErASkBNwG3ADwBEQFhAWcBfgEVIGsBSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgDPANAARQFMAdMA1ADVANYAaAHYAHIB2gDbANwA3QDeAN8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4A7wDwAEYBTQHzAPQA9QD2AGkB+ABzAfoA+wD8AP0A/gA4AYAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEOAg4DDgQOBQ4GDgcOCA4JDgoOCw4MDg0ODg4PDhAOEQ4SDhMOFA4VDhYOFw4YDhkOGg4bDhwOHQ4eDh8OIA4hDiIOIw4kDiUOJg4nDigOKQ4qDisOLA4tDi4OLw4wDjEOMg4zDjQONQ42DjcOOA45DjoO/f/9//3//f8/DkAOQQ5CDkMORA5FDkYORw5IDkkOSg5LDkwOTQ5ODk8OUA5RDlIOUw5UDlUOVg5XDlgOWQ5aDlsO/f/9//3//f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAdIKIAowCkAB4gpgCnANgAqQBWAasArACtAK4AxgCwALEAsgCzABwgtQC2ALcA+AC5AFcBuwC8AL0AvgDmAAQBLgEAAQYBxADFABgBEgEMAckAeQEWASIBNgEqATsBYAFDAUUB0wBMAdUA1gDXAHIBQQFaAWoB3AB7AX0B3wAFAS8BAQEHAeQA5QAZARMBDQHpAHoBFwEjATcBKwE8AWEBRAFGAfMATQH1APYA9wBzAUIBWwFrAfwAfAF+ARkggACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAAh4DHqMACgELAQoepwCAHqkAgh4LHvIerQCuAHgBHh4fHiABIQFAHkEetgBWHoEeVx6DHmAe8x6EHoUeYR7AAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPAHQB0QDSANMA1ADVANYAah7YANkA2gDbANwA3QB2Ad8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wB1AfEA8gDzAPQA9QD2AGse+AD5APoA+wD8AP0AdwH/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAogCjAKwgpQBgAacAYQGpAKoAqwCsAK0ArgCvALAAsQCyALMAfQG1ALYAtwB+AbkAugC7AFIBUwF4Ab8AwADBAMIAwwDEAMUAxgDHAMgAyQDKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA2ADZANoA2wDcAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QD6APsA/AD9AP4A/wCAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAEAQUBQQGsIB4gYAGnAGEBqQAYAqsAeQGtAHoBewGwALEADAFCAX0BHSC2ALcAfgENARkCuwBSAVMBeAF8AcAAwQDCAAIBxAAGAcYAxwDIAMkAygDLAMwAzQDOAM8AEAFDAdIA0wDUAFAB1gBaAXAB2QDaANsA3AAYARoC3wDgAOEA4gADAeQABwHmAOcA6ADpAOoA6wDsAO0A7gDvABEBRAHyAPMA9ABRAfYAWwFxAfkA+gD7APwAGQEbAv8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAEFAUEBrCAeIGABpwBhAakAGAKrAHkBrQB6AXsBsACxAAwBQgF9AR0gtgC3AH4BDQEZArsAUgFTAXgBfAHAAMEAwgACAcQABgHGAMcAyADJAMoAywDMAM0AzgDPABABQwHSANMA1ABQAdYAWgFwAdkA2gDbANwAGAEaAt8A4ADhAOIAAwHkAAcB5gDnAOgA6QDqAOsA7ADtAO4A7wARAUQB8gDzAPQAUQH2AFsBcQH5APoA+wD8ABkBGwL/AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9/wEJAgkDCQUJBgkHCQgJCQkKCQsJDgkPCRAJDQkSCRMJFAkRCRUJFgkXCRgJGQkaCRsJHAkdCR4JHwkgCSEJIgkjCSQJJQkmCScJKAkpCSoJKwksCS0JLgkvCV8JMAkxCTIJMwk0CTUJNgk3CTgJOQkgAD4JPwlACUEJQglDCUYJRwlICUUJSglLCUwJSQlNCTwJZAn9//3//f/9//3/IAAwADEAMgAzADQANQA2ADcAOAA5AP3//f/9//3//f8CAAAAAAAAAAEAAAADAAAA//36+Pb08vDu7Oro5uTi4N7c2tjW1NLQzszKyMbEwsC+vLq4trSysK6sqqimpKKgnpyamJaUkpCOjIqIhoSCgH58enh2dHJwbmxqaGZkYmBeXFpYVlRSUE5MSkhGREJAPjw6ODY0MjAuLCooJiQiIB4cGhgWFBIQDgwKCAYEAgAAAgQGCAoMDhASFBYYGhweICIkJigqLC4wMjQ2ODo8PkBCREZISkxOUFJUVlhaXF5gYmRmaGpsbnBydHZ4enx+gIKEhoiKjI6QkpSWmJqcnqCipKaoqqyusLK0tri6vL7AwsTGyMrMztDS1NbY2tze4OLk5ujq7O7w8vT2+Pr9///06uDWzMO6saifl4+Hf3hxamNcVlBKRD85NC8rJiIeGhcTEA0LCAYEAgEAAAAAAAAAAQIDBAUHCAoMDhATFRcaHR8iJSgsLjAyNDY5Oz1AQkVHSkxPUVRXWl1fYmVoa25xdHh7foGFiIuPkpaZnaCkqKyvs7e7v8PHy8/T19vgz8zJxsPAvbm0sKunopyXkoyGgXt1b2ljXVdQSkQ+ODMtJyIcFxINCAQCAgEAAAAAAAEBAgMEBQcICgwNDxIUFhkbHiEkJyotMDQ2ODo8P0FDRkhLTVBSVVhaXWBjZmlsb3J1eHt+gYWIi4+SlpmdoKSorK+zt7u/w8fLz9PX2+D/+fTu6eTf2tXQy8bBvbizr6qmoZ2ZlZCMiISAfXl1cW5qZ2NgXVlWU1BNSkdEQT48OTc0Mi8tKygmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),C(c,99845,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4g0M7NzMrIx8XDwcC9u7i1s7CtqqejoJ2ZlpKPi4eEgHx4dHBtaWVhXVlVUU1KRkI+Ozc0MS8tKigmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),C(c,99973,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4gmJmZmpydn6Gkp6mssLO2ur7BxcnN0dTY3N/j5urt8PL19/n7/P3+/v////////79+/r49vPx7uzp5uTg3drX09DMyMTAvLi0sKyno5+alpGNiIR/e3ZybWllYFxYVFBMSERAPDk1Mi8rKCYjIB0aFxUSDw0KCAcFAwIBAAAAAAD+///////+/fz6+Pb08e7r6OXh3trW0s3JxL+6trCrpqGclpGLhoB7dW9qZF9ZVE9JRD86NTArJiIdGRURDQoHBAMBAAAAAAAAAAABAQIEBQcJCw0QEhUYGx4iJSktMTU6PkNITFFXW15iZWhrbnF0dnh7fH6AgYKDg4SEg4OCgXJycXFwb21samhmZGFfXFpXVFFOS0hFQj87ODUyLywpJiMgHRsYFhQSEA4MCwoJCAcHBwcHBgUFBQUFBQUFBQYHBwgJCgwNDxASFBYYGx0gIyYpLC8zNzs/Q0dMUVZbYGVqb3R5f4SJj5Wboaets7rAx87V3OPq8fX3+vz9/v///v79/fz7+/r6+fj49/f29vX09PPz8vLx8PDv7u7t7Ovq6uno5+bl5OPi4eDe3dzb2djW1dPS0M7My8nHxcPAvry5t7Wyr62qp6ShnpqXlJCNiYWBfXl1cW1oZGFeW1dUUU1KRkNAPDk1Mi4qJyMfHBgUEQ0LCQcFBAMCAQAAAAAAAAAAAQEBAgIDAwQEBQYGBwgICQoLDAwNDg8QERITFBYXGBkbHB0fICIjJSYoKSstLzAyNDY4Ojw+QEJER0lLTlBSVVdaXV9iZWdqbXBzdnl8f4KGiYyQk5aanaCjpqmsr7K1uLu+wcTHys3Q09bZ3N/i5Ofp7O7w8vT2+Pr7/X9/f4CBg4SHiYyPkpaZnaGlqq6yt7vAxcnN0tba3uLm6u3w8/X4+vv8/f7+/fz7+ff08Ozn4tzVzsa9tKmekoiCfXdybGZgWlROSUI8NzItKCQfGxgUEQ4MCQcGBQQEBAQFBggKDRAUGB0jKS83PkdQWmRwfIOFiIqMjo+RkpOTAEAIAEYSAAAAAAAAGAwAAARQEgZOFgAAAAAAACI0AAAEWBYGUhYAAAAAAAAiQAAAAFwIAFxQAAAAAAAATAgBAABWBABeQgAAAAAAACIKAAAAPgoAPhQAAAAAAAAcEAAABEQSBkQWAAAAAAAAHiwAAAZAEABCIAAAAAAAACASAAACRC4AKiAAAAAAAAAuOgAABE4YBkgWAAAAAAAAKjQAAARYIgBAIAAAAAAAAC5SAAAAOAwAOBQAAAAAAAAYDAAAAEYSAEYYAAAAAAAAIBQAAAkAAAAJAAAAEAAAABAAAAAQAAAAFwAAADcAAAAgAAAAACgYCAAKNCAUCgYmGA4EAAYAAAAHAAAACQAAAAkAAAAUAAAAFAAAABQAAAAZAAAA5iAUCA=="),C(c,101072,"ZgNmAWYCpgSmAiYEpoooAmoDagFqAqoCbgNuAW4CrgIpALMEdAN0AXQCtAS0AgAAdAR6A3oBegK6An4BOQC+AgAApgMAAKYBAADmAwAAaAEAAGgCAAAoAwAA6AEAAOkBAABpBAAAqgMAAKoBAAAqAwAA6gMAAOoBAABsAgAArAEAACwDAAAsAgAAbQIAAG0EAACuBAAArgMAAK4BAADuAwAALgAAAO6LAABvAgAAMAIwAAAAcQEAADECAADxAQAAMQMAAHEEAABzAQAAMwIAAPMBMwAAADMAAAC0AwAAtAEAAPQCAAC0igAAdwEAADcCAAD3AQAAeAEAAHgCAAA4AgAA+AEAADkCAAD5AQAAeQQAALoEAAC6AwAAugEAADoEAAD6AgAA+gMAAHwCAAB+AgAAAAB/AQAAPwMAAP8BOACmAAEAgQBnBQAAKAEpBWkF6gAAAEIFAADDAEMdAADvBGwFLABsAAQAAACtAG0FAADuBAUAbgCxBPEEMQXxj7IAAAByBQAAMwVzAPQEtJoAAAgAtwCOADcVAAA3BQAAzQB3ALcIOAUAAG8FyQAJAbkAOQX6BAoAewW7ALwAvgB+AD8FPwEAAAsBAADMAIwAAAAAAGcAAABsDW0ALwGwAHEAdgVMBEwc6Y8AAOnPOY4AADnO"),C(c,101586,"sQNZAlsCswO5A1MByQPGA4MCxQOSApQCfgJ8AgAAqgBhgLIAMoCzADOAuQAxgLoAb4CwAmiAsQJmgrICaoCzAnKAtAJ5grUCe4K2AoGCtwJ3gLgCeYDAApSCwQKVguACY4LhAmyA4gJzgOMCeIBwIDCAcSBpgHQgNIB1IDWAdiA2gHcgN4B4IDiAeSA5gHogK4B7IC2AfCA9gH0gKIB+ICmAfyBugIAgMECBIDFAgiAyQIMgM0CEIDRAhSA1QIYgNkCHIDdAiCA4QIkgOUCKICtAiyAtQIwgPUCNIChAjiApQJAgYUCRIGVAkiBvQJMgeECUIFlClSBoQJYga0CXIGxAmCBtQJkgbkCaIHBAmyBzQJwgdEAAAAAAaXhjbXZsZA=="),C(c,101888,"AQAAAAoAAABkAAAA6AMAAAUAAAAyAAAA9AEAAAAXCgkYExgY"),C(c,101936,"///////9+fXy7uvo5OHe2tjV0s/MycbEwb+8ure1s7CurKmopaOhn56bmZiWlJKRj42LiYiHhYOCgX9+fHt6eHd2dXNycXBvbm1ramloZ2ZlZGNiYWBfXl1cW1pZWVhXVlVUU1JSUVBQT05NTExLS0pJSEdHRkVFRENDQkJBQEA/Pj49PTw7Ozo6OTk4ODc2NjU1NDQ0MzIyMTEwMC8vLi4uLS0sLCwrKyopKCgoJycnJiYmJSUlJCQjIyMjIiIiISEhICAfHx8eHh4dHR0dHBwbGxsbGhoaGhkZGRgYGBgXFxcXFhYWFRUVFRQUFBQTExMSEhERERAQEBAQEA8PDw8ODg4NDQ0MDAwMCwsLCwoKCgkJCQgICAAAAAAAAAAAeHl4d3d2dnV0dHNycXBwb29ubWxrampoZ2dmZmZlZWNiYmFgYF9eXVtaW1pZWFZVVlVVVFJRUE9NTk5MTUtLSklHSEZFRUVDQUA/Pz89PTs7Ozo4OTo4NjU0NDU0NDIwLy8tLi0="),C(c,102336,"FhYWFhYWFhUVFRUUFBMTEhEQDw8PDw8PDwAAAAAAAABkeGRpZG5uZF9kaXhpbn2Ch3N9ZGl4S2RLaXhVS2RpeFVpX3N4ZF9kbnhfaWRzeGRkZGl4ZGlfc3huX2RpeGRpaXp9bmlkaXhkaWl6fW5pZGl4X2lkc3huZGRkeGRkZGRkZGRk"),C(c,102480,"ZJZkaW5zbm5uZGmWaW59h4xzh2RpllppWnqHZFpkaZZkaWR6h2RkZGmWZGlpc4duaWRplmRpaXqCeH1kaZZkaW56fXNuZGmWZGlpeod4aWRplmRpaXOHbmlkZGRkZGRkZGRkZA=="),C(c,102592,"bnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRuZG5ubmRubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubg=="),C(c,102708,"rwAAAGQAAAAyAAAAMg=="),C(c,102744,"ZA=="),C(c,102764,"MjIoRlpkZGRGboeWZGRLZHiWAAAAAAAABwAAAA4AAAAVAAAAKAAAAFAAAAAAAAAAAFNBUFIAQwAAAAAARgAAAAAAAAABAAAAAgAAAAQAAAAPAAAAAAEAAAEBAAEBAgQAAAAAAPMAEAEAAQABAAEAAQAB8ADwAPA="),C(c,102898,"QABaAG4AgACPAJwAqQC1AMAAygDUAN0A5gDvAPcAAAEHAQ8BFgEeASUBLAEyATkBQAFGAUwBUgFYAV4BZAFqAW8BdQF6AYABhQGKAY8BlAGZAZ4BowGoAa0BsgG2AbsBwAHEAckBzQHRAdYB2gHeAeMB5wHrAe8B8wH3AfsBAAIDAgcCCwIPAhMCFwIbAh8CIgImAioCLQIxAjUCOAI8AkACQwJHAkoCTgJRAlQCWAJbAl8CYgJlAmkCbAJvAnMCdgJ5AnwCgAKDAoYCiQKMAo8CkgKWApkCnAKfAqICpQKoAqsCrgKxArQCtwK6Ar0CwALCAsUCyALLAs4C0QLUAtYC2QLcAt8C4gLkAucC6gLtAu8C8gL1AvcC+gL9AgADAgMFAwcDCgMNAw8DEgMVAxcDGgMcAx8DIQMkAycDKQMsAy4DMQMzAzYDOAM7Az0DQANCA0QDRwNJA0wDTgNRA1MDVQNYA1oDXQNfA2EDZANmA2gDawNtA28DcgN0A3YDeQN7A30DgAOCA4QDhgMAAAGqAqytAwQFsLGys7S0tgYHCLkJCrwMDQ4PEBESYWJjZGVmZ2hpamtsbW5vcHFyc3R1"),C(c,103360,"YAYAAPAGAABmCQAA5gkAAGYKAADmCgAAZgsAAOYLAABmDAAA5gwAAGYNAABQDgAA0A4AACAPAABAEAAAkBA="),C(c,103440,"5gDmAOYA5gAAAAAA5gDmAL4AqgC+AMgAAAAAAL4A8AC+AL4A0gDSAAAAAADSANIAyADIANIA0gAAAAAA5gDmAOYA5gDwAPAAAAAAAAQBBAGqAIwA3ADcAAAAAAD6AA4BoACMAMgAjAAAAAAA8ACgALQAtADSANIAAAAAAOYA8ACqANwAtAC0AAAAAAD6AA4BlgCCAMgAyAAAAAAADgEOAbYAjADcANwAAAAAAPgAEwGbALQA0gDSAAAAAAAOASwBwwMAAAAAAABsAAAAAAAAAKAAkQCbAJYAAAAAAMgA9QAnAAAAtwAAAAAAAADCugAAyADIAMgAyAAAAAAA0gDmAAABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGgAAAAAAABscHR4fICEiIyQlJicoKSorAAAs"),C(c,103790,"LQAAAAAAAAAu"),C(c,103816,"Lw=="),C(c,103833,"MAAAAAAAMQ=="),C(c,103856,"Mg=="),C(c,103868,"MwAAAK0AAQBABgEADCAtAAAAAAC+AL4A0gDSAAAAAADmAPoAoACWAMgAyAAAAAAA+gAEAbkAwwDDAL4AAAAAANIA3AD6AMgA+gD6AAAAAAD6APoAMjM0Njk6PD0+P0BBQkNERkdJSktMTU5PUFFSU1RWAACWAIwAtAC0AAAAAADIAMgAbA=="),C(c,104016,"oADIALQAtAAAAAAA3ADwALQAoADIAMgAAAAAAPAA+gBjAAAAZgAAAGgAAABrAAAAcAAAAHQAAAB4AAAA/g=="),C(c,104096,"oACMAJYApQAAAAAA2gAxAZEAkQCqAKAAAAAAAEoBXgEuAAAALAAAACcAAADIAg=="),C(c,104160,"MTIzNTY3OTo7PD4/QEFCREVGR0hJSktMTU5PUFFSU1RW"),C(c,104208,"vgC0AOYA5gAAAAAA+gD6ABESExQWFxkaGxwdHyAhIiQlJicoKSosc3uDmwAAAAAAtAC0AL4AtAAAAAAA5gDwALQAtAC0AKAAAAAAAOYAtABABAAAMAQAADUEAAA4BAAAOQQAAD4EAABDBAAASwQAAE0EAABOBAAATwQAAFAEAABRBAAAVgQAAFcEAABdBAAAXgQ="),C(c,104368,"tACgAMgAyAAAAAAA3ADmAKAAhwDSANIAAAAAAAQBGAGgAIwAyADIAAAAAADcAOYAyADIAMgAyAAAAAAAyADIAKAAvgCvAK8AAAAAAMgA0gCqAHMA0gDwAAAAAAAEARgBqgCqALQAtAAAAAAA8AAEAZYAtADIAMgAAAAAANIA+gCWAJYAtAC0AAAAAAAsASwBoACHANwA3AAAAAAA+gAYAaAAqgDIAMgAAAAAAEABVAG0AKAA8ADwAAAAAAAEAQQBvgC0AMgA5gAAAAAA8AD6AJYAlgC0ALQA0gDmAOYA8ABhAAAA4AAAAOEAAACjHgAA4wAAAKEeAAADAQAAsR4AAK8eAACzHgAAtR4AALceAADiAAAApx4AAKUeAACpHgAAqx4AAK0eAABlAAAA6AAAAOkAAAC7HgAAvR4AALkeAADqAAAAwR4AAL8eAADDHgAAxR4AAMceAABpAAAA7AAAAO0AAADJHgAAKQEAAMseAABvAAAA8gAAAPMAAADPHgAA9QAAAM0eAAD0AAAA0x4AANEeAADVHgAA1x4AANkeAAChAQAA3R4AANseAADfHgAA4R4AAOMeAAB1AAAA+QAAAPoAAADnHgAAaQEAAOUeAACwAQAA6x4AAOkeAADtHgAA7x4AAPEeAAB5AAAA8x4AAP0AAAD3HgAA+R4AAPUe"),C(c,104896,"5gCWAOYA5gDmAAAA8AD6AAAAAAAnAAAAAAAAAAABAgM="),C(c,104945,"AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRo="),C(c,105072,"GxwdAAAeHyAhIiMkACUmAAAAACcAACgAKQAqACsAAAAAAAAsAC0ALgAAAAAALwAAADAAAAAAAAAAMQ=="),C(c,105170,"MgAz"),C(c,105195,"NAAAAAAANQA2"),C(c,105226,"NwA4ADkArQABAAwgAQ=="),C(c,105249,"AQIDAAQAAQIDAAQFBgIDAAQFBwEDAAQICQoDAAAICAoDAAALCwsLAAAMDAwMAAAMAQ4BEwEBAw8DDgYRBgMJAQsPCwEMCQwBDgYOCQ4ODg8OHA4DDxEPEg8PEBEQAREGEQkRDxETEiAS/38AAAAAlgCMANwA3AAAAAAABAEYAYKAeHRkZICAgIyAgKCrq4CAgA=="),C(c,105412,"yAAAAMgAAACQAQAAkAEAAJABAABYAgAAWAIAAFgC"),C(c,105456,"8AAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAAQIMAw0EDgULAAAAAQIDBAUGAAAAAAAACwwNDg=="),C(c,105540,"MgAAAK8AAABkAAAAMg=="),C(c,105568,"rw=="),C(c,105596,"EBAKEBY="),C(c,105620,"/38AANAHAAAsAQAAYwAAAGMAAABjAAAAAAAAANAH"),C(c,105668,"BA=="),C(c,105680,"QEFCQ0RFRkdISUpLTE1OT1BRUlNUVldYWVtcXV5gYWJkZWdoaWtsbm9xc3R2d3l7fH6AgoSFh4mLjY+Rk5WXmZueoKKkp6mrrrCztbi6vb/CxcfKzdDT1tnc3+Ll6Ozv8vb5/P7/"),C(c,105792,"//7+/v7+/v7+/v39/f38/Pz7+/v6+vn5+Pj39/b19fTz8/Lx7+3r6efl4+Hf3drY1dPQzcvIxcK/u7i1sq6rp6OgnJiUkIyIhH97d3JuaWRgXltYVlNRTkxKR0VCQD48OTc1MzEvLCooJiQiIB4dGxkXFRMSEA4MCwkHBgQDAQ=="),C(c,106064,"//7+/v7+/f38+/v6+fj39vX08vHv7uzq6efl4+Hf3NrY1dPRz83LycfFw8G/vbu5t7SysK2rqaakoZ+cmpeUko+MioeEgX57eHZzcGxpZmNgX11bWlhWVVNSUE9NTEpJSEZFRENCQD8+PTw7Ojk4Nzc2NTQ0MzIyMTAwLy8uLi4tLS0sLCwsLCwsKysrKywrKiopKCgnJiYlJCQjIyIhISAgHx4eHR0cHBsaGhkZGBgXFxYWFRUUFBMTEhISEREQEA8PDw4ODQ0NDAwLCwsKCgoJCQkICAgHBwcHBgYGBQUFBQQEBAQEAwMDAwICAgICAgEBAQEBAQ=="),C(c,106341,"RvIpAC8ALwBF8ikALwAuAEXyKAAuAC0ANPIoAC0tLAA08igAKysrADTyKAAqKioANPIoACkpKQA08igAAOf/zv+1/5z/g/9q/1H/N/8e/wX/7P7T/rr+of6I/m/+Vf48/iP+Cv7x/dj9v/2m/Y39dP1b/UL9Kf0Q/ff83vzF/Kz8k/x6/GH8SPwv/Bb8/fvk+8v7svuZ+4D7Z/tP+zb7HfsE++v60vq6+qH6iPpv+lf6Pvol+g369Pnb+cP5qvmR+Xn5YPlH+S/5Fvn++OX4zfi0+Jz4g/hr+FP4Ovgi+Ar48ffZ98H3qPeQ93j3YPdH9y/3F/f/9uf2z/a39p/2h/Zv9lf2P/Yn9g/29/Xf9cf1sPWY9YD1aPVR9Tn1IfUK9fL02/TD9Kz0lPR99GX0TvQ29B/0CPTw89nzwvOr85TzfPNl807zN/Mg8wnz8vLb8sTyrvKX8oDyafJS8jzyJfIO8vjx4fHL8bTxnvGH8XHxW/FE8S7xGPEB8evw1fC/8Knwk/B98GfwUfA78CXwEPD67+Tvzu+576Pvje9472LvTe847yLvDe/47uLuze647qPuju557mTuT+467iXuEO777eft0u297antlO2A7WvtV+1C7S7tGu0F7fHs3ezJ7LXsoeyN7HnsZexR7D3sKuwW7ALs7+vb68jrtOuh643reutn61TrQest6xrrB+v06uLqz+q86qnqluqE6nHqX+pM6jrqJ+oV6gPq8One6czpuumo6ZbphOly6WHpT+k96SzpGukI6ffo5ujU6MPosuig6I/ofuht6FzoS+g76CroGegI6Pjn5+fX58bntuel55Xnhed152XnVedF5zXnJecV5wXn9ubm5tfmx+a45qjmmeaK5nvma+Zc5k3mPuYw5iHmEuYD5vXl5uXY5cnlu+Wt5Z7lkOWC5XTlZuVY5UrlPOUv5SHlE+UG5fjk6+Te5NDkw+S25KnknOSP5ILkdeRo5FzkT+RD5DbkKuQd5BHkBeT54+3j4ePV48njveOx46XjmuOO44Pjd+Ns42HjVuNL4z/jNOMq4x/jFOMJ4//i9OLq4t/i1eLK4sDituKs4qLimOKO4oTie+Jx4mfiXuJU4kviQuI54i/iJuId4hTiDOID4vrh8eHp4eDh2OHQ4cfhv+G34a/hp+Gf4Zfhj+GI4YDheOFx4WrhYuFb4VThTeFG4T/hOOEx4SrhJOEd4RbhEOEK4QPh/eD34PHg6+Dl4N/g2eDU4M7gyeDD4L7guOCz4K7gqeCk4J/gmuCV4JHgjOCH4IPgfuB64HbgcuBu4GrgZuBi4F7gWuBX4FPgT+BM4EngReBC4D/gPOA54DbgM+Ax4C7gK+Ap4CfgJOAi4CDgHuAc4BrgGOAW4BTgEuAR4A/gDuAN4AvgCuAJ4AjgB+AG4AXgBeAE4APgA+AC4ALgAuAC4ALgAeAC4ALgAuAC4ALgA+AD4ATgBeAF4AbgB+AI4AngCuAL4A3gDuAP4BHgEuAU4BbgGOAa4BzgHuAg4CLgJOAn4CngK+Au4DHgM+A24DngPOA/4ELgReBJ4EzgT+BT4FfgWuBe4GLgZuBq4G7gcuB24HrgfuCD4IfgjOCR4JXgmuCf4KTgqeCu4LPguOC+4MPgyeDO4NTg2eDf4OXg6+Dx4Pfg/eAD4QrhEOEW4R3hJOEq4THhOOE/4UbhTeFU4VvhYuFq4XHheOGA4Yjhj+GX4Z/hp+Gv4bfhv+HH4dDh2OHg4enh8eH64QPiDOIU4h3iJuIv4jniQuJL4lTiXuJn4nHie+KE4o7imOKi4qzituLA4sri1eLf4uri9OL/4gnjFOMf4yrjNOM/40vjVuNh42zjd+OD447jmuOl47HjvePJ49Xj4ePt4/njBeQR5B3kKuQ25EPkT+Rc5GjkdeSC5I/knOSp5Lbkw+TQ5N7k6+T45AblE+Uh5S/lPOVK5VjlZuV05YLlkOWe5a3lu+XJ5djl5uX15QPmEuYh5jDmPuZN5lzma+Z75ormmeao5rjmx+bX5ubm9uYF5xXnJec150XnVedl53XnheeV56XntufG59fn5+f45wjoGegq6DvoS+hc6G3ofuiP6KDosujD6NTo5uj36AjpGuks6T3pT+lh6XLphOmW6ajpuunM6d7p8OkD6hXqJ+o66kzqX+px6oTqluqp6rzqz+ri6vTqB+sa6y3rQetU62freuuN66HrtOvI69vr7+sC7BbsKuw97FHsZex57I3soey17Mns3ezx7AXtGu0u7ULtV+1r7YDtlO2p7b3t0u3n7fvtEO4l7jruT+5k7nnuju6j7rjuze7i7vjuDe8i7zjvTe9i73jvje+j77nvzu/k7/rvEPAl8DvwUfBn8H3wk/Cp8L/w1fDr8AHxGPEu8UTxW/Fx8YfxnvG08cvx4fH48Q7yJfI88lLyafKA8pfyrvLE8tvy8vIJ8yDzN/NO82XzfPOU86vzwvPZ8/DzCPQf9Db0TvRl9H30lPSs9MP02/Ty9Ar1IfU59VH1aPWA9Zj1sPXH9d/19/UP9if2P/ZX9m/2h/af9rf2z/bn9v/2F/cv90f3YPd495D3qPfB99n38fcK+CL4OvhT+Gv4g/ic+LT4zfjl+P74Fvkv+Uf5YPl5+ZH5qvnD+dv59PkN+iX6PvpX+m/6iPqh+rr60vrr+gT7Hfs2+0/7Z/uA+5n7svvL++T7/fsW/C/8SPxh/Hr8k/ys/MX83vz3/BD9Kf1C/Vv9dP2N/ab9v/3Y/fH9Cv4j/jz+Vf5v/oj+of66/tP+7P4F/x7/N/9R/2r/g/+c/7X/zv/n/wAAGQAyAEsAZAB9AJYArwDJAOIA+wAUAS0BRgFfAXgBkQGrAcQB3QH2AQ8CKAJBAloCcwKMAqUCvgLXAvACCQMiAzsDVANtA4YDnwO4A9ED6gMDBBwENQROBGcEgASZBLEEygTjBPwEFQUuBUYFXwV4BZEFqQXCBdsF8wUMBiUGPQZWBm8GhwagBrkG0QbqBgIHGwczB0wHZAd9B5UHrQfGB94H9gcPCCcIPwhYCHAIiAigCLkI0QjpCAEJGQkxCUkJYQl5CZEJqQnBCdkJ8QkJCiEKOQpQCmgKgAqYCq8KxwrfCvYKDgslCz0LVAtsC4MLmwuyC8oL4Qv4CxAMJww+DFUMbAyEDJsMsgzJDOAM9wwODSUNPA1SDWkNgA2XDa4NxA3bDfINCA4fDjUOTA5iDnkOjw6lDrwO0g7oDv8OFQ8rD0EPVw9tD4MPmQ+vD8UP2w/wDwYQHBAyEEcQXRBzEIgQnhCzEMgQ3hDzEAgRHhEzEUgRXRFyEYcRnBGxEcYR2xHwEQUSGRIuEkMSVxJsEoASlRKpEr4S0hLmEvsSDxMjEzcTSxNfE3MThxObE68TwxPWE+oT/hMRFCUUOBRMFF8UcxSGFJkUrBS/FNMU5hT5FAwVHhUxFUQVVxVqFXwVjxWhFbQVxhXZFesV/RUQFiIWNBZGFlgWahZ8Fo4WnxaxFsMW1BbmFvgWCRcaFywXPRdOF2AXcReCF5MXpBe1F8UX1hfnF/gXCBgZGCkYOhhKGFsYaxh7GIsYmxirGLsYyxjbGOsY+xgKGRoZKRk5GUgZWBlnGXYZhRmVGaQZsxnCGdAZ3xnuGf0ZCxoaGigaNxpFGlMaYhpwGn4ajBqaGqgathrEGtEa3xrtGvoaCBsVGyIbMBs9G0obVxtkG3EbfhuLG5gbpBuxG70byhvWG+Mb7xv7GwccExwfHCscNxxDHE8cWxxmHHIcfRyJHJQcnxyqHLUcwRzMHNYc4RzsHPccAR0MHRYdIR0rHTYdQB1KHVQdXh1oHXIdfB2FHY8dmR2iHawdtR2+Hccd0R3aHeMd7B30Hf0dBh4PHhceIB4oHjAeOR5BHkkeUR5ZHmEeaR5xHngegB6IHo8elh6eHqUerB6zHroewR7IHs8e1h7cHuMe6h7wHvYe/R4DHwkfDx8VHxsfIR8nHywfMh83Hz0fQh9IH00fUh9XH1wfYR9mH2sfbx90H3kffR+CH4Yfih+OH5Iflh+aH54foh+mH6kfrR+xH7Qftx+7H74fwR/EH8cfyh/NH88f0h/VH9cf2R/cH94f4B/iH+Qf5h/oH+of7B/uH+8f8R/yH/Mf9R/2H/cf+B/5H/of+x/7H/wf/R/9H/4f/h/+H/4f/h//H/4f/h/+H/4f/h/9H/0f/B/7H/sf+h/5H/gf9x/2H/Uf8x/yH/Ef7x/uH+wf6h/oH+Yf5B/iH+Af3h/cH9kf1x/VH9Ifzx/NH8ofxx/EH8Efvh+7H7cftB+xH60fqR+mH6Ifnh+aH5Yfkh+OH4ofhh+CH30feR90H28fax9mH2EfXB9XH1IfTR9IH0IfPR83HzIfLB8nHyEfGx8VHw8fCR8DH/0e9h7wHuoe4x7cHtYezx7IHsEeuh6zHqwepR6eHpYejx6IHoAeeB5xHmkeYR5ZHlEeSR5BHjkeMB4oHiAeFx4PHgYe/R30Hewd4x3aHdEdxx2+HbUdrB2iHZkdjx2FHXwdch1oHV4dVB1KHUAdNh0rHSEdFh0MHQEd9xzsHOEc1hzMHMEctRyqHJ8clByJHH0cchxmHFscTxxDHDccKxwfHBMcBxz7G+8b4xvWG8obvRuxG6QbmBuLG34bcRtkG1cbShs9GzAbIhsVGwgb+hrtGt8a0RrEGrYaqBqaGowafhpwGmIaUxpFGjcaKBoaGgsa/RnuGd8Z0BnCGbMZpBmVGYUZdhlnGVgZSBk5GSkZGhkKGfsY6xjbGMsYuxirGJsYixh7GGsYWxhKGDoYKRgZGAgY+BfnF9YXxRe1F6QXkxeCF3EXYBdOFz0XLBcaFwkX+BbmFtQWwxaxFp8WjhZ8FmoWWBZGFjQWIhYQFv0V6xXZFcYVtBWhFY8VfBVqFVcVRBUxFR4VDBX5FOYU0xS/FKwUmRSGFHMUXxRMFDgUJRQRFP4T6hPWE8MTrxObE4cTcxNfE0sTNxMjEw8T+xLmEtISvhKpEpUSgBJsElcSQxIuEhkSBRLwEdsRxhGxEZwRhxFyEV0RSBEzER4RCBHzEN4QyBCzEJ4QiBBzEF0QRxAyEBwQBhDwD9sPxQ+vD5kPgw9tD1cPQQ8rDxUP/w7oDtIOvA6lDo8OeQ5iDkwONQ4fDggO8g3bDcQNrg2XDYANaQ1SDTwNJQ0ODfcM4AzJDLIMmwyEDGwMVQw+DCcMEAz4C+ELyguyC5sLgwtsC1QLPQslCw4L9grfCscKrwqYCoAKaApQCjkKIQoJCvEJ2QnBCakJkQl5CWEJSQkxCRkJAQnpCNEIuQigCIgIcAhYCD8IJwgPCPYH3gfGB60HlQd9B2QHTAczBxsHAgfqBtEGuQagBocGbwZWBj0GJQYMBvMF2wXCBakFkQV4BV8FRgUuBRUF/ATjBMoEsQSZBIAEZwROBDUEHAQDBOoD0QO4A58DhgNtA1QDOwMiAwkD8ALXAr4CpQKMAnMCWgJBAigCDwL2Ad0BxAGrAZEBeAFfAUYBLQEUAfsA4gDJAK8AlgB9AGQASwAyABkAMAAAADAAAABAAAAAUAAAAJAAAACgAAAAsAAAAMAAAACAm7XL3Ojt7Obczr+wo5iQjIuMj5KUlZKMg3hpWUk8MSopLTZEVml9j5+qsbKtpJaHeGlcU09PVV5reoiWoquwsa6ooJiRi4iJjZSdqLK7wMG9tKWSfGNKMh4OBQIFDx4wRFltf4yWnJ+fnZuZmZyhqbO/ytXc4N7YzLumj3dgSzouKCkvOkhZanqGkJSVkYmAdWtiXFpcYWl0gIqUmp6dmJCGfHFoYmBja3iIm6/C0t/m5+LXxrKchG9bS0A5Nzg9Q0pQVFZVUk1IQj8+QUlWZ3yTq8PZ6vb8+/Tn1cCqlIBxZF1aXGFocHd9f397dGthV05IRkhOWWZ1hJOfp6uqpJmLe2pbTkZDRU1aa3+SprjFz9PSzcS5raGWjomHh4qNkZKRjIR4aFVBLhwOBQEFDx80TWiBmrDBzdPT0Mi/taukn5ydoKWqrrGwq6OWh3ZjUUI2Ly0xOkhZa36OnKaqqaOYintsXVJKSEpQWmd1gi0AAAAmAAAALQAAAC0AAAA3AAAALQ=="),C(c,110928,"yv5w/hICZAHgAFkAFwD2/8b/8P/NAVcCGAK9AgIDXQLxAc0BMAKUAW4A4ACDAGgAn/+bABYBZv9z+6r94QJ9ALD9KQALAAn/9v9BAFwAUADQ/kcApwD//3oA6QChANX/FgHfAeUBlwEKAYoChgBQAOwARAAEAQ0BswA1AIwAEwElASgBaAABAZgANwG2AAcB9QB9ADoBjAAsAMsA5gAV/+L+FwBrAFwApf8mANABuwGwAGIA8Pxv9p346/vA+Ur6mPoT+0v8Jv0="),C(c,111162,"BgAHAAgACQAKAAsADQAOABAAEgAUABYAGQAcACAAIwAoAC0AMwA5AEAARwBQAFoAZQByAIAAjgCfALMAygDjAAABHAE+AWcBlQHHAQACOAJ+As8CcQOPAwAEcQT8BJ4FVgYfBwAI4Qj4CTsLrAw9DgAQwxHwE3cWWBl7HAAghSPfJ+4ssDL2OABArkekUIVbZmYzc/9/"),C(c,111324,"qMtoQQAAAACoy2jBAAAAAAAAAAAXCtQJkglQCQ8JzgiPCE8IEwjVB5oHYgcoB/MGvgaLBloGKwb9BdMFqQWBBVwFOAUWBfcE1wS7BKAEhgRuBFcEQQQtBBkEBwT1A+QD1APFA7YDqAOZA40DfwNxA2UDVwNLAz4DMgMkAxgDCwP+AvIC5ALYAssCvgKxAqQClwKLAn0CcgJkAlkCTAJAAjQCKAIcAhICBQL7AfAB5QHbAdABxgG7AbIBqAGeAZQBigGBAXcBbgFjAVsBUAFIAT0BNAErASABGAENAQQB+gDwAOcA3ADUAMgAwAC1AKwAoQCYAI4AhQB7AHEAaQBeAFYATABDADkAMQAnAB4AFgALAAQA+//y/+n/4P/X/87/xP+7/7L/qf+g/5X/jf+C/3r/cP9m/1z/Uv9J/z//Nf8r/yL/F/8O/wT/+v7x/uf+3f7T/sr+wP62/q3+o/6b/pD+h/59/nP+av5f/lb+TP5C/jj+Lf4j/hn+Df4D/vf97P3h/dX9yf29/bH9pf2Y/Yz9f/1z/Wb9Wf1M/T/9M/0k/Rn9Cv3//PH85fzY/Mz8vvyz/KT8mPyL/H78cfxi/FX8Rfw4/Cb8GfwG/Pb74vvQ+7r7pfuO+3b7XPtB+yT7Bvvl+sT6n/p5+lP6KPr++dD5oflw+Tz5CfnR+Jr4YPgm+Oj3q/ds9yz36/aq9mj2Jvbj9bAEdgRABA4E3wO0A4sDZQNBAx8DAAPiAsYCqwKSAnoCZAJOAjoCJwIVAgMC8wHjAdQBxgG4AasBnwGTAYcBfAFyAWgBXgFVAUwBQwE7ATMBLAEkAR0BFgEQAQkBAwH9APcA8gDtAOcA4gDdANkA1ADQAMwAxwDDAMAAvAC4ALQAsQCuAKoApwCkAKEAngCbAJkAlgCTAJEAjgCMAIkAhwCFAIMAgAB+AHwAegB4AHcAdQBzAHEAbwBuAGwAagBpAGcAZgBkAGMAYQBgAF8AXQBcAFsAWgBYAFcAVgBVAFQAUwBSAFAATwBOAE0ATABLAEsASgBJAEgARwBGAEUARABEAEMAQgBBAEAAQAA/AD4APQA9ADwAOwA7ADoAOQA5ADgAOAA3ADcANgA2ADUANQA0ADQAMwAzADIAMgAxADEAMAAwAC8ALwAuAC4ALQAtACwALAArACsAKgAqACkAKQApACkAKAAoACcAJwAmACYAJgAmACUAJQAkACQAJAAkACMAIwAjACMAIgAiACEAIQAhACEAIAAgACAAIAAfAB8AHwAfAB4AHgAeAB4AHQAdAB0AHQAcABwAHAAcABsAGwAxNkZyYW1lTWFuYWdlckltcGwAMTJGcmFtZU1hbmFnZXIAMjNTcGVlY2hXYXZlR2VuZXJhdG9ySW1wbAAxOVNwZWVjaFdhdmVHZW5lcmF0b3IAMTNXYXZlR2VuZXJhdG9y"),C(c,112416,"AwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4kANJNQgBJBuAACeouAByS0QDrHf4AKbEcAOg+pwD1NYIARLsuAJzphAC0JnAAQX5fANaROQBTgzkAnPQ5AItfhAAo+b0A+B87AN7/lwAPmAUAES/vAApaiwBtH20Az342AAnLJwBGT7cAnmY/AC3qXwC6J3UA5evHAD178QD3OQcAklKKAPtr6gAfsV8ACF2NADADVgB7/EYA8KtrACC8zwA29JoA46kdAF5hkQAIG+YAhZllAKAUXwCNQGgAgNj/ACdzTQAGBjEAylYVAMmocwB74mAAa4zAABnERwDNZ8MACejcAFmDKgCLdsQAphyWAESv3QAZV9EApT4FAAUH/wAzfj8AwjLoAJhP3gC7fTIAJj3DAB5r7wCf+F4ANR86AH/yygDxhx0AfJAhAGokfADVbvoAMC13ABU7QwC1FMYAwxmdAK3EwgAsTUEADABdAIZ9RgDjcS0Am8aaADNiAAC00nwAtKeXADdV1QDXPvYAoxAYAE12/ABknSoAcNerAGN8+AB6sFcAFxXnAMBJVgA71tkAp4Q4ACQjywDWincAWlQjAAAfuQDxChsAGc7fAJ8x/wBmHmoAmVdhAKz7RwB+f9gAImW3ADLoiQDmv2AA78TNAGw2CQBdP9QAFt7XAFg73gDem5IA0iIoACiG6ADiWE0AxsoyAAjjFgDgfcsAF8BQAPMdpwAY4FsALhM0AIMSYgCDSAEA9Y5bAK2wfwAe6fIASEpDABBn0wCq3dgArl9CAGphzgAKKKQA05m0AAam8gBcd38Ao8KDAGE8iACKc3gAr4xaAG/XvQAtpmMA9L/LAI2B7wAmwWcAVcpFAMrZNgAoqNIAwmGNABLJdwAEJhQAEkabAMRZxADIxUQATbKRAAAX8wDUQ60AKUnlAP3VEAAAvvwAHpTMAHDO7gATPvUA7PGAALPnwwDH+CgAkwWUAMFxPgAuCbMAC0XzAIgSnACrIHsALrWfAEeSwgB7Mi8ADFVtAHKnkABr5x8AMcuWAHkWSgBBeeIA9N+JAOiUlwDi5oQAmTGXAIjtawBfXzYAu/0OAEiatABnpGwAcXJCAI1dMgCfFbgAvOUJAI0xJQD3dDkAMAUcAA0MAQBLCGgALO5YAEeqkAB05wIAvdYkAPd9pgBuSHIAnxbvAI6UpgC0kfYA0VNRAM8K8gAgmDMA9Ut+ALJjaADdPl8AQF0DAIWJfwBVUikAN2TAAG3YEAAySDIAW0x1AE5x1ABFVG4ACwnBACr1aQAUZtUAJwedAF0EUAC0O9sA6nbFAIf5FwBJa30AHSe6AJZpKQDGzKwArRRUAJDiagCI2YkALHJQAASkvgB3B5QA8zBwAAD8JwDqcagAZsJJAGTgPQCX3YMAoz+XAEOU/QANhowAMUHeAJI5nQDdcIwAF7fnAAjfOwAVNysAXICgAFqAkwAQEZIAD+jYAGyArwDb/0sAOJAPAFkYdgBipRUAYcu7AMeJuQAQQL0A0vIEAEl1JwDrtvYA2yK7AAoUqgCJJi8AZIN2AAk7MwAOlBoAUTqqAB2jwgCv7a4AXCYSAG3CTQAtepwAwFaXAAM/gwAJ8PYAK0CMAG0xmQA5tAcADCAVANjDWwD1ksQAxq1LAE7KpQCnN80A5qk2AKuSlADdQmgAGWPeAHaM7wBoi1IA/Ns3AK6hqwDfFTEAAK6hAAz72gBkTWYA7QW3ACllMABXVr8AR/86AGr5uQB1vvMAKJPfAKuAMABmjPYABMsVAPoiBgDZ5B0APbOkAFcbjwA2zQkATkLpABO+pAAzI7UA8KoaAE9lqADSwaUACz8PAFt4zQAj+XYAe4sEAIkXcgDGplMAb27iAO/rAACbSlgAxNq3AKpmugB2z88A0QIdALHxLQCMmcEAw613AIZI2gD3XaAAxoD0AKzwLwDd7JoAP1y8ANDebQCQxx8AKtu2AKMlOgAAr5oArVOTALZXBAApLbQAS4B+ANoHpwB2qg4Ae1mhABYSKgDcty0A+uX9AInb/gCJvv0A5HZsAAap/AA+gHAAhW4VAP2H/wAoPgcAYWczACoYhgBNveoAs+evAI9tbgCVZzkAMb9bAITXSAAw3xYAxy1DACVhNQDJcM4AMMu4AL9s/QCkAKIABWzkAFrdoAAhb0cAYhLSALlchABwYUkAa1bgAJlSAQBQVTcAHtW3ADPxxAATbl8AXTDkAIUuqQAdssMAoTI2AAi3pADqsdQAFvchAI9p5AAn/3cADAOAAI1ALQBPzaAAIKWZALOi0wAvXQoAtPlCABHaywB9vtAAm9vBAKsXvQDKooEACGpcAC5VFwAnAFUAfxTwAOEHhgAUC2QAlkGNAIe+3gDa/SoAayW2AHuJNAAF8/4Aub+eAGhqTwBKKqgAT8RaAC34vADXWpgA9MeVAA1NjQAgOqYApFdfABQ/sQCAOJUAzCABAHHdhgDJ3rYAv2D1AE1lEQABB2sAjLCsALLA0ABRVUgAHvsOAJVywwCjBjsAwEA1AAbcewDgRcwATin6ANbKyADo80EAfGTeAJtk2ADZvjEApJfDAHdY1ABp48UA8NoTALo6PABGGEYAVXVfANK99QBuksYArC5dAA5E7QAcPkIAYcSHACn96QDn1vMAInzKAG+RNQAI4MUA/9eNAG5q4gCw/cYAkwjBAHxddABrrbIAzW6dAD5yewDGEWoA98+pAClz3wC1yboAtwBRAOKyDQB0uiQA5X1gAHTYigANFSwAgRgMAH5mlAABKRYAn3p2AP39vgBWRe8A2X42AOzZEwCLurkAxJf8ADGoJwDxbsMAlMU2ANioVgC0qLUAz8wOABKJLQBvVzQALFaJAJnO4wDWILkAa16qAD4qnAARX8wA/QtKAOH0+wCOO20A4oYsAOnUhAD8tKkA7+7RAC41yQAvOWEAOCFEABvZyACB/AoA+0pqAC8c2ABTtIQATpmMAFQizAAqVdwAwMbWAAsZlgAacLgAaZVkACZaYAA/Uu4AfxEPAPS1EQD8y/UANLwtADS87gDoXcwA3V5gAGeOmwCSM+8AyRe4AGFYmwDhV7wAUYPGANg+EADdcUgALRzdAK8YoQAhLEYAWfPXANl6mACeVMAAT4b6AFYG/ADlea4AiSI2ADitIgBnk9wAVeiqAIImOADK55sAUQ2kAJkzsQCp1w4AaQVIAGWy8AB/iKcAiEyXAPnRNgAhkrMAe4JKAJjPIQBAn9wA3EdVAOF0OgBn60IA/p3fAF7UXwB7Z6QAuqx6AFX2ogAriCMAQbpVAFluCAAhKoYAOUeDAInj5gDlntQASftAAP9W6QAcD8oAxVmKAJT6KwDTwcUAD8XPANtargBHxYYAhUNiACGGOwAseZQAEGGHACpMewCALBoAQ78SAIgmkAB4PIkAqMTkAOXbewDEOsIAJvTqAPdnigANkr8AZaMrAD2TsQC9fAsApFHcACfdYwBp4d0AmpQZAKgplQBozigACe20AESfIABOmMoAcIJjAH58IwAPuTIAp/WOABRW5wAh8QgAtZ0qAG9+TQClGVEAtfmrAILf1gCW3WEAFjYCAMQ6nwCDoqEAcu1tADmNegCCuKkAazJcAEYnWwAANO0A0gB3APz0VQABWU0A4HGA"),C(c,115203,"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNf6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8="),C(c,115390,"8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8hX9u6BXj7z8T9mc1UtKMPHSFFdOw2e8/+o75I4DOi7ze9t0pa9DvP2HI5mFO92A8yJt1GEXH7z+Z0zNb5KOQPIPzxso+vu8/bXuDXaaalzwPiflsWLXvP/zv/ZIatY4890dyK5Ks7z/RnC9wPb4+PKLR0zLso+8/C26QiTQDarwb0/6vZpvvPw69LypSVpW8UVsS0AGT7z9V6k6M74BQvMwxbMC9iu8/FvTVuSPJkbzgLamumoLvP69VXOnj04A8UY6lyJh67z9Ik6XqFRuAvHtRfTy4cu8/PTLeVfAfj7zqjYw4+WrvP79TEz+MiYs8dctv61tj7z8m6xF2nNmWvNRcBITgW+8/YC86PvfsmjyquWgxh1TvP504hsuC54+8Hdn8IlBN7z+Nw6ZEQW+KPNaMYog7Ru8/fQTksAV6gDyW3H2RST/vP5SoqOP9jpY8OGJ1bno47z99SHTyGF6HPD+msk/OMe8/8ucfmCtHgDzdfOJlRSvvP14IcT97uJa8gWP14d8k7z8xqwlt4feCPOHeH/WdHu8/+r9vGpshPbyQ2drQfxjvP7QKDHKCN4s8CwPkpoUS7z+Py86JkhRuPFYvPqmvDO8/tquwTXVNgzwVtzEK/gbvP0x0rOIBQoY8MdhM/HAB7z9K+NNdOd2PPP8WZLII/O4/BFuOO4Cjhrzxn5JfxfbuP2hQS8ztSpK8y6k6N6fx7j+OLVEb+AeZvGbYBW2u7O4/0jaUPujRcbz3n+U02+fuPxUbzrMZGZm85agTwy3j7j9tTCqnSJ+FPCI0Ekym3u4/imkoemASk7wcgKwERdruP1uJF0iPp1i8Ki73IQrW7j8bmklnmyx8vJeoUNn10e4/EazCYO1jQzwtiWFgCM7uP+9kBjsJZpY8VwAd7UHK7j95A6Ha4cxuPNA8wbWixu4/MBIPP47/kzze09fwKsPuP7CvervOkHY8Jyo21dq/7j934FTrvR2TPA3d/ZmyvO4/jqNxADSUj7ynLJ12srnuP0mjk9zM3oe8QmbPotq27j9fOA+9xt54vIJPnVYrtO4/9lx77EYShrwPkl3KpLHuP47X/RgFNZM82ie1Nkev7j8Fm4ovt5h7PP3Hl9QSre4/CVQc4uFjkDwpVEjdB6vuP+rGGVCFxzQ8t0ZZiiap7j81wGQr5jKUPEghrRVvp+4/n3aZYUrkjLwJ3Ha54aXuP6hN7zvFM4y8hVU6sH6k7j+u6SuJeFOEvCDDzDRGo+4/WFhWeN3Ok7wlIlWCOKLuP2QZfoCqEFc8c6lM1FWh7j8oIl6/77OTvM07f2aeoO4/grk0h60Sary/2gt1EqDuP+6pbbjvZ2O8LxplPLKf7j9RiOBUPdyAvISUUfl9n+4/zz5afmQfeLx0X+zodZ/uP7B9i8BK7oa8dIGlSJqf7j+K5lUeMhmGvMlnQlbrn+4/09QJXsuckDw/Xd5PaaDuPx2lTbncMnu8hwHrcxSh7j9rwGdU/eyUPDLBMAHtoe4/VWzWq+HrZTxiTs8286LuP0LPsy/FoYi8Eho+VCek7j80NzvxtmmTvBPOTJmJpe4/Hv8ZOoRegLytxyNGGqfuP25XcthQ1JS87ZJEm9mo7j8Aig5bZ62QPJlmitnHqu4/tOrwwS+3jTzboCpC5azuP//nxZxgtmW8jES1FjKv7j9EX/NZg/Z7PDZ3FZmuse4/gz0epx8Jk7zG/5ELW7TuPykebIu4qV285cXNsDe37j9ZuZB8+SNsvA9SyMtEuu4/qvn0IkNDkrxQTt6fgr3uP0uOZtdsyoW8ugfKcPHA7j8nzpEr/K9xPJDwo4KRxO4/u3MK4TXSbTwjI+MZY8juP2MiYiIExYe8ZeVde2bM7j/VMeLjhhyLPDMtSuyb0O4/Fbu809G7kbxdJT6yA9XuP9Ix7pwxzJA8WLMwE57Z7j+zWnNuhGmEPL/9eVVr3u4/tJ2Ol83fgrx689O/a+PuP4czy5J3Gow8rdNamZ/o7j/62dFKj3uQvGa2jSkH7u4/uq7cVtnDVbz7FU+4ovPuP0D2pj0OpJC8OlnljXL57j80k6049NZovEde+/J2/+4/NYpYa+LukbxKBqEwsAXvP83dXwrX/3Q80sFLkB4M7z+smJL6+72RvAke11vCEu8/swyvMK5uczycUoXdmxnvP5T9n1wy4448etD/X6sg7z+sWQnRj+CEPEvRVy7xJ+8/ZxpOOK/NYzy15waUbS/vP2gZkmwsa2c8aZDv3CA37z/StcyDGIqAvPrDXVULP+8/b/r/P12tj7x8iQdKLUfvP0mpdTiuDZC88okNCIdP7z+nBz2mhaN0PIek+9wYWO8/DyJAIJ6RgryYg8kW42DvP6ySwdVQWo48hTLbA+Zp7z9LawGsWTqEPGC0AfMhc+8/Hz60ByHVgrxfm3szl3zvP8kNRzu5Kom8KaH1FEaG7z/TiDpgBLZ0PPY/i+cukO8/cXKdUezFgzyDTMf7UZrvP/CR048S94+82pCkoq+k7z99dCPimK6NvPFnji1Ir+8/CCCqQbzDjjwnWmHuG7rvPzLrqcOUK4Q8l7prNyvF7z/uhdExqWSKPEBFblt20O8/7eM75Lo3jrwUvpyt/dvvP53NkU07iXc82JCegcHn7z+JzGBBwQVTPPFxjyvC8+8/EhETFBUWFxgZGhscHR4fICERIiMkESUmJygpKissES0uLxAQMBAQEBAQEBAxMjMQNDUQEBERERERERERERERERERERERERERERERERE2ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERNxERERE4ETk6Ozw9PhERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEUBBEUJDREVGR0hJShFLTE1OT1BREFJTVFVWV1hZWltcXRBeX2AQERERYWJjEBAQEBAQEBAQEBERERFkEBAQEBAQEBAQEBAQEBAQERFlEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQERFmZxAQaGkREREREREREREREREREREREREREREREWoREWsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEWxtEBAQEBAQEBAQbhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQb3BxchAQEBAQEBAQc3R1EBAQEBB2dxAQEBB4EBB5EBAQEBAQEBAQEBAQEBA="),C(c,117968,"//////////////////////////////////////////8AAAAAAAAAAP7//wf+//8HAAAAAAAEIAT//3////9//////////////////////////////////8P/AwAfUA=="),C(c,118072,"IAAAAAAA37xA1///+////////////7///////////////////////wP8///////////////////////////+////fwL//////wEAAAAA/7+2AP///4cHAAAA/wf//////////v/D////////////////7x/+4f+fAAD///////8A4P///////////////wMA//////8HMAT////8/x8AAP///wH/BwAAAAAAAP//3z8AAPD/+AP////////////v/9/h/8///v/vn/n///3F459ZgLDP/wMQ7of5///9bcOHGQJewP8/AO6/+////e3jvxsBAM//AB7un/n///3t458ZwLDP/wIA7Mc91hjH/8PHHYEAwP8AAO/f/f///f/j3x1gB8//AADv3/3///3v498dYEDP/wYA79/9/////+ffXfCAz/8A/Oz/f/z///svf4Bf/8D/DAD+/////3//Bz8g/wMAAAAA1vf//6///ztfIP/zAAAAAAEAAAD/AwAA//7///8f/v8D///+////HwAAAAAAAAAA////////f/n/A////////////z//////vyD///////f///////////89fz3//////z3/////PX89/3//////////Pf//////////BwAAAAD//wAA/////////////z8//v//////////////////////////////////////////////////////////n////v//B////////////8f/Af/fDwD//w8A//8PAP/fDQD////////P//8BgBD/AwAAAAD/A///////////////Af//////B///////////PwD///9//w//AcD/////Px8A//////8P////A/8DAAAAAP///w//////////f/7/HwD/A/8DgA=="),C(c,118768,"////////7//vD/8DAAAAAP//////8////////7//AwD///////9/AP/j//////8//wH//////+cAAAAAAN5vBP///////////////////////////////wAAAACA/x8A//8/P/////8/P/+q////P////////99f3B/PD/8f3B8="),C(c,118910,"AoAAAP8f"),C(c,118928,"hPwvPlC9//PgQwAA//////8B"),C(c,118982,"wP///////wMAAP//////f///////f/////////////////////8feAwA/////78g/////////4AAAP//fwB/f39/f39/f/////8AAAAAAIA="),C(c,119088,"4AAAAP4DPh/+////////////f+D+//////////////fg///////+/////////////38AAP///wcAAAAAAAD///////////////////////////////8/"),C(c,119184,"////////////////////////////////////////AAD//////////////////////x8AAAAAAAAAAP//////P/8f////DwAA//////9/8I///////////////////wAAAACA//z////////////////5////////fAAAAAAAgP+//////wAAAP///////w8A//////////8vAP8DAAD86P//////B/////8HAP///x/////////3/wCA/wP///9/////////fwD/P/8D//9//P////////9/BQAAOP//PAB+fn4Af3////////f/AP///////////////////wf/A///////////////////////////DwD//3/4//////8P/////////////////z//////////////////AwAAAAB/APjg//1/X9v/////////////////AwAAAPj///////////////8/AAD///////////z///////8AAAAAAP8P"),C(c,119582,"3/////////////////////8fAAD/A/7//wf+//8HwP////////////9//Pz8HAAAAAD/7///f///t/8//z8AAAAA////////////////////BwAAAAAAAAAA////////Hw=="),C(c,119712,"////H////////wEAAAAAAP////8A4P///wf//////wf///8//////w//PgAAAAAA/////////////////////////z//A/////8P/////w///////wD///////8P"),C(c,119824,"////////fwD//z8A/w=="),C(c,119856,"P/3/////v5H//z8A//9/AP///38AAAAAAAAAAP//NwD//z8A////AwAAAAAAAAAA/////////8AAAAAAAAAAAG/w7/7//z8AAAAAAP///x////8fAAAAAP/+//8fAAAA////////PwD//z8A//8HAP//Aw=="),C(c,119984,"////////////AQAAAAAAAP///////wcA////////BwD//////wD/Aw=="),C(c,120048,"////H4AA//8/"),C(c,120076,"//9/AP//////////PwAAAMD/AAD8////////AQAA////Af8D////////x/9wAP////9HAP//////////HgD/FwAAAAD///v///+fQAAAAAAAAAAAf73/v/8B/////////wH/A++f+f///e3jnxmB4A8="),C(c,120208,"//////////+7B/+DAAAAAP//////////swD/Aw=="),C(c,120256,"////////P38AAAA/AAAAAP////////9/EQD/AwAAAAD///////8/Af8DAAAAAAAA////5/8H/wM="),C(c,120336,"/////////wE="),C(c,120356,"////////////AwCA"),C(c,120388,"//z///////waAAAA////////538AAP///////////yAAAAAA/////////wH//f////9/fwEA/wMAAPz////8///+fw=="),C(c,120464,"f/v/////f7TLAP8Dv/3///9/ewH/Aw=="),C(c,120524,"//9/AP////////////////////////8D"),C(c,120560,"/////////////////38AAP///////////////////////////////w8="),C(c,120624,"//////9/"),C(c,120656,"//////////9/"),C(c,120688,"/////////wH///9//wM="),C(c,120714,"////PwAA////////AAAPAP8D+P//4P//"),C(c,120760,"//////////8="),C(c,120784,"////////////h/////////+A//8AAAAAAAAAAAsAAAD/////////////////////////////////////////AP///////////////////////////////////////wcA////fwAAAAAAAAcA8AD/////////////////////////////////////////////////////////////////D/////////////////8H/x//Af9D"),C(c,120976,"/////////////9///////////99k3v/r7/////////+/59/f////e1/8/f//////////////////////////////////////////////////////P/////3///f////3///f////3///f////3/////9/////f//98////////9////52wc="),C(c,121136,"//////8fgD//Qw=="),C(c,121192,"//////8P/wP///////////////////////////////8fAAAAAAAAAP//////////jwj/Aw=="),C(c,121264,"7////5b+9wqE6paqlvf3Xv/7/w/u+/8P"),C(c,121302,"////A////wP///8D"),C(c,121328,"/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8="),C(c,121601,"ARcCHRgTAx4bGQsUCAQNHxYcEhoKBwwVEQkGEAUPDt4SBJUAAAAA////////////////INsBABQAAABDLlVURi04"),C(c,121696,"TENfQ1RZUEUAAAAATENfTlVNRVJJQwAATENfVElNRQAAAAAATENfQ09MTEFURQAATENfTU9ORVRBUlkATENfTUVTU0FHRVM="),C(c,121776,"Qy5VVEYtOA=="),C(c,121800,"MAUCAE5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNl"),C(c,123730,"pQJbAPABtQWMBSUBgwYdA5QE/wDHAzEDCwa8AY8BfwPKBCsA2gavAEIDTgPcAQ4EFQChBg0BlAILAjgGZAK8Av8CXQPnBAsHzwLLBe8F2wXhAh4GRQKFAIICbANvBPEA8wMYBdkA2gNMBlQCewGdA70EAABRABUCuwCzA20A/wGFBC8F+QQ4AGUBRgGfALcGqAFzAlMB"),C(c,123928,"IQQAAAAAAAAAAC8C"),C(c,123960,"NQRHBFYE"),C(c,123982,"oAQ="),C(c,124002,"RgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBw=="),C(c,124048,"GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="),C(c,124129,"DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"),C(c,124187,"DA=="),C(c,124199,"EwAAAAATAAAAAAkMAAAAAAAMAAAM"),C(c,124245,"EA=="),C(c,124257,"DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"),C(c,124303,"Eg=="),C(c,124315,"EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"),C(c,124370,"GgAAABoaGgAAAAAAAAk="),C(c,124419,"FA=="),C(c,124431,"FwAAAAAXAAAAAAkUAAAAAAAUAAAU"),C(c,124477,"Fg=="),C(c,124489,"FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"),C(c,124564,"EQ=="),C(c,124604,"//////////8="),C(c,124672,"0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAACAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAAAAAIAAAAAkAAAAKAAAADQAAAAsAAAAMAAAAhQAAAAAgAAABIAAAAiAAAAMgAAAEIAAABSAAAAYgAAAIIAAACSAAAAogAAAoIAAAKSAAAF8gAAAAMAAAAAAAAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAAGjpAQB46AEAZOoBAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAGjpAQCo6AEAnOgBAE4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAAGjpAQDY6AEAnOgBAE4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FAGjpAQAI6QEA/OgBAAAAAADM6AEAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAAAAAAsOkBABQAAAAcAAAAFgAAABcAAAAYAAAAHQAAAB4AAAAfAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAGjpAQCI6QEAzOgBAAAAAAAg6gEACQAAACAAAAAhAAAAAAAAAEjqAQAJAAAAIgAAACMAAAAAAAAACOoBAAkAAAAkAAAAJQAAAFN0OWV4Y2VwdGlvbgAAAABA6QEA+OkBAFN0OWJhZF9hbGxvYwAAAABo6QEAEOoBAAjqAQBTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAaOkBACzqAQAg6gEAU3Q5dHlwZV9pbmZvAAAAAEDpAQBU6gE="),C(c,125552,"wLEAAMCyAADAswAAwLQAAMC1AADAtgAAwLcAAMC4AADAuQAAwLoAAMC7AADAvAAAwL0AAMC+AADAvwAAwMAAAMDBAADAwgAAwMMAAMDEAADAxQAAwMIAAMDGAADAxwAAwMgAAMDJAADAygAAwMsAAMDMAADAzQAAwM4AAMDPAADA0AAAwNEAAMDSAADA0wAAwNQAAMDVAADA1gAAwNcAAMDYAADA2QAAwNIAAMDaAADA2wAAwNwAAMDdAADA3gAAwN8AAMDgAADA4QAAwNgAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA4gAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwOMAAMDkAADAwgAAwMIAAMDCAADA5QAAwMIAAMDmAADA5wAAwOgAAMDpAADA6gAAwOsAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA7AAAwO0AAMDCAADA7gAAwO8AAMDCAADA8AAAwPEAAMDyAADA8wAAwPQAAMD1AADA9gAAwPcAAMD4AADAwgAAwPkAAMD6AADA+wAAwPwAAMD9AADA/gAAwP8AAMAAAQDAAQEAwAIBAMADAQDABAEAwAUBAMAGAQDABwEAwAgBAMAJAQDACgEAwAsBAMAMAQDACwEAwA0BAMAOAQDADwEAwAsBAMDCAADAwgAAwMIAAMAQAQDAEQEAwBIBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMDCAADAwgAAwBMBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBQBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBUBAMAWAQDACwEAwAsBAMAXAQDAGAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAGQEAwMIAAMDCAADAGgEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAGwEAwBwBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMAdAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwB4BAMAfAQDAIAEAwCEBAMAiAQDAIwEAwCQBAMAlAQDA2AAAwNgAAMAmAQDACwEAwAsBAMALAQDACwEAwAsBAMAnAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwCgBAMApAQDACwEAwAsBAMAqAQDACwEAwCsBAMALAQDALAEAwC0BAMAuAQDALwEAwNgAAMDYAADAMAEAwDEBAMAyAQDAMwEAwDQBAMALAQDACwEAwAsBAMALAQDACwEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA1AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwDYBAMA3AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAOAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA5AQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMA6AQDAOwEAwDwB"),C(c,128496,"oVcBAEEAAADdVwEAQgAAACZYAQBDAAAAa1gBAEQAAADSWAEARQAAABNZAQBGAAAAfFkBAEcAAACEWQEASAAAADBaAQBJAAAAZ1oBAEoAAADuWgEASwAAAC5bAQBMAAAAcVsBAE0AAADZWwEATgAAAGtcAQBPAAAAh1wBAAgAAADcXAEACQAAAB9dAQAKAAAAZ10BAAsAAACVXQEADAAAAMpdAQANAAAAD14BAA4AAAAqXgEADwAAAIZeAQAPAAAAvV4BABAAAABDXwEAEQAAAH1fAQASAAAAq18BABMAAADZXwEAFAAAAAVgAQAVAAAAMGABABcAAABgYAEAGAAAAHlgAQAZAAAAtWABABsAAADdYAEAHAAAAPBgAQAdAAAAI2EBACAAAABEYQEAIQAAAG9hAQAiAAAAnWEBACMAAADRYQEAJAAAAPNhAQAlAAAAFWIBACYAAABZYgEAKAAAAH1iAQApAAAArmIBACoAAADoYgEAKwAAADVjAQAtAAAAb2MBAC4AAACnYwEALwAAAOZjAQAwAAAAeGQBADEAAACdZAEAMgAAAM9kAQAzAAAA/mQBAGQAAABgZQEAyAAAAN1lAQDJAAAAAAAAAP////8iZgEAAQAAAD5mAQACAAAABVUBAAMAAADNZgEAEQAAADRnAQASAAAAg2cBABMAAAD7ZwEAFAAAADtoAQAVAAAATGgBABYAAAB0aAEAEQAAALdoAQAhAAAAymgBACIAAAD+aAEAIwAAAEtpAQAkAAAAaWkBACUAAACfaQEAJgAAAOJpAQAhAAAAAAAAAP////8AAAAAAAAAACYAAAAAAAAAAQAAAJByAQABAAAAkHMBAAEAAACQdAEAAQAAAJB1AQABAAAAkHYBAAEAAACQdwEAAQAAAJB4AQABAAAAkHkBAAEAAACQegEAAQAAAJB7AQABAAAAkHwBAAEAAACQfQEAAQAAAJB+AQABAAAAkH8BAAEAAACQgAEAAQAAAJCBAQABAAAAkIIBAAUAAAAAAAAABg=="),C(c,129280,"oIMBAKCDAQAghAEAIIQBAKCEAQAghQEAoIUBACCGAQCghgEAoIYBACCHAQAghwEAoIcBAKCHAQAgiAEAIIgBAKCIAQCgiAEAIIkBACCJAQAuOU4ycIoBAAMHBQCQigEALjlOLnCKAQADBwUAkIoBAC45Ti5wigEAAwcFAJCKAQAuOVoycIoBAAMJBQCVigEALjlOMnCKAQADBwUAkIoBAC45SjdwigEABAcFAJqKAQAuOUo3cIoBAAQHBQCaigEALjlKN3CKAQAEBwUAmooBAC45TjJwigEAAwcFAJCKAQAuOU4ucIoBAAMHBQCQigEALjlOMnCKAQADBwUAkIoBACIpKSBwigEAAwcFAJqKAQAuOTcycIoBAAMHBQCaigEAo1MBABABAAAAVAEADAEAANJUAQARAQAAClUBACMAAAB/VQEAGwAAADRWAQAVAAAAxVYBAAABAAABVwEAAgEAAE1XAQADAQAAvVcBAAQBAAD7VwEABQEAAE5YAQATAAAAkVgBAB4AAADVWAEAFwAAAF9ZAQAaAAAAkVkBABkAAAD0WQEAGAAAADhaAQAdAAAAzloBABwAAAAPWwEAFgAAADdbAQAU"),C(c,129744,"Q1gBABABAACIWAEADAEAAPNYAQARAQAAM1kBACMAAACHWQEAGwAAAOBZAQAVAAAAQloBAAABAACcWgEAAgEAAABbAQADAQAAT1sBAAQBAACnWwEABQEAAEhcAQATAAAAc1wBAB4AAADEXAEAFwAAABVdAQAaAAAAXV0BABkAAACIXQEAGAAAANJdAQAdAAAABF4BABwAAAAvXgEAFgAAAF9eAQAU"),C(c,129920,"u08BAAEAAABcUAEAAAAAAM9QAQAAAAAAOFIBAAAAAABBUwEAAAAAAIFTAQAAAAAA+1MBAAAAAADnVAEAAAAAACVVAQAAAAAAiVUBAAAAAABUVgEAAAAAAPxWAQAAAAAADlcBAAAAAABIVwEAAAAAAKdXAQAAAAAA9lcBAAAAAAA3WAEAAAAAAKNYAQAAAAAA6FgBAAAAAAAuWQEAAAAAAH9ZAQAAAAAA61kBAAAAAAD/////g00BAIIAAAB5AAAAdg=="),C(c,130128,"4I8BAOCPAQBQkAEAwJABAMCQAQDAkAEAAQAAANQKAwCMCgMAROcC"),C(c,130176,"I0sBAAEAAAAAAAAA/////1dMAQABAAAA+0wBAAIAAADGTQEAAwAAAAAAAAD/////Vk4BAAAAAADSTgEAAQAAALJPAQACAAAAGFABABQAAAAAAAAA/////wAAAAAAAAAAt1ABABIAAABNUgEAFAAAAN5SAQAkAAAAhlMBAEAAAAARVAEAwQAAAAAAAAD/////q1QBAAEAAAAAAAAA/////1dMAQAAAAAAGVUBAAEAAACRVQEAAgAAAENWAQADAAAA31YBAAQAAAAgVwEABQAAAAAAAAD/////AAAAAAAAAABXTAEAAQAAAIlXAQACAAAAr1cBAAMAAADfVgEABAAAACBXAQAFAAAAAAAAAP////8AAAAAClgBADxYAQAYUAEAqFgB"),C(c,130480,"8l8BAAEAAAA5YAEAAgAAAFhgAQADAAAAgWABAAQAAACwYAEABQAAANNgAQAGAAAABWEBAAcAAAAqYQEACAAAAFFhAQAJAAAAdmEBAAoAAACQYQEACwAAAMNhAQAMAAAA+WEBAA0AAAAuYgEADgAAAE5iAQAPAAAAhmIBAA8AAADUYgEADwAAABljAQAPAAAAP2MBAA8AAACkYwEABwAAANpjAQAHAAAAO2QBAAcAAACEZAEABwAAAK9kAQAHAAAAw2QBAA4AAADnZAEADgAAAAplAQAQAAAA9GUBABAAAAArZgEAEAAAAN9WAQAQAAAAbmYBABAAAADBZgEAEA=="),C(c,130752,"f20BAD4AAACjbQEAPOAAAM1tAQAmAAAA1G0BACIAAAA6bgEAIAAAAHhuAQAnAAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAxWcBAAAAAAAJaAEAHgAAAEJoAQBBAAAAQ1YBAGQAAACGaAEAlgAAAKVoAQDmAAAAAAAAAP////9jZwEAZAAAAL5oAQA8AAAA6WgBAFAAAABDVgEAZAAAABJpAQB9AAAAUmkBAKAAAAAAAAAA/////wAAAAAAAAAAY2cBAGQAAACUaQEARgAAAN5pAQBVAAAAQ1YBAGQAAAAoagEAbgAAAGdqAQB4AAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAlGkBABQAAADeaQEAMgAAAENWAQBkAAAAKGoBAIwAAABnagEAtAAAAAAAAAD/////"),C(c,131076,"QP8BAAD/AQCA/wEAwP8B"),C(c,131104,"wmoBACDgAAALawEACeAAAEFrAQBf4AAAe2sBACI="),C(c,131152,"q2sBAAEAAAC8awEAAgAAAA1sAQAD"),C(c,131184,"+EwBAMJNAQBTTgEACU8BAOVPAQBkUAEA2lABAGdSAQDyUgEA1FMBAGFUAQ=="),C(c,131236,"iFIBADlTAQAAAAAAnlMBAGRUAQDwVAEAL1UBAJpVAQBQVgE="),C(c,131280,"Y1IBAIADAACAA/8DbGUAAAcAAAA0UwEAIAQAAAAELwUAAAAAAAAAAHNTAQAwBQAAMAWPBXloAAAEAAAAG1QBAJAFAACQBf8FAAAAAAAAAAC3VAEAAAYAAAAG/wYAAAAAAAAAACpVAQAABwAAAAdPBwAAAAAAAAAAllUBAAAJAAAACX8JaWgAAAQAAAA/VgEAgAkAAIAJ/wluYgAABAAAANZWAQAACgAAAAp/CmFwAAAEAAAAClcBAIAKAACACv8KdWcAAAQAAABfVwEAAAsAAAALfwsAAAAAAAAAAM5XAQCACwAAgAv/C2F0AAAEAAAAD1gBAAAMAAAADH8MZXQAAAAAAAAsWAEAgAwAAIAM/wxuawAABAAAAJ9YAQAADQAAAA1/DWxtAAAEAAAA5FgBAIANAACADf8NaXMAAAQAAAA8WQEAAA4AAAAOfw4AAAAAAAAAAJtZAQCADgAAgA7/DgAAAAAAAAAA8FkBAAAPAAAAD/8PAAAAAAAAAAA0WgEAABAAAAAQnxAAAAAAAAAAANlaAQCgEAAAoBD/EGFrAAAEAAAAGFsBAAARAAAAEf8Rb2sAAAQAAABKWwEAABIAAAASnxMAAAAAAAAAALlbAQAAKAAAACj/KAAAAAAQAAAAWlwBAEAwAABAMP8wAAAAAAgAAACDXAEAADEAAAAx/58AAAAACAAAABhbAQAApwAAAKf/129rAAAM"),C(c,131840,"WAIAAKoAAACwBAAAhwAAANAHAABuAAAAuAsAAG4AAAD/////"),C(c,131888,"qAsD"),C(c,131904,"mF4BAAEAAAA4XwEAAgAAAGFfAQADAAAAnV8BAAYAAADCXwEACQAAAPhfAQAKAAAAJ2ABAAQAAABNYAEABQAAAI1gAQAkAAAAq2ABAAsAAADVYAEADAAAAPZgAQANAAAAFmEBAA4AAABMYQEADwAAAGdhAQAQAAAAlmEBABEAAAC7YQEAEgAAAAJiAQAfAAAAG2IBACUAAABIYgEAIAAAAJJiAQAhAAAAzmIBACIAAADwYgEABwAAAC5jAQAI"),C(c,132112,"jmMBAAEAAAC8YwEAAgAAAAAAAAABAAAAFJwBACCcAQAsnAEAPAAAABo="),C(c,132163,"AgMFCAsOEhYbICUrMTc+RUxTWmJpcXmAiJCYn6autbzCyc/V2uDk6e3w9Pb5+/z9/f39/Pv59vTw7enk4NrVz8nCvLWupp+YkIiAeXFpYlpTTEU+NzErJSAbFhIOCwgFAwI="),C(c,132288,"QAAAAAABAAAAAAAA7AQCACcAAAAoAAAAKQAAACoAAAArAAAAQOkBAMO2AQBo6QEAsLYBAOQEAgAAAAAAJAUCACwAAAAtAAAALgAAAC8AAABA6QEAArcBAGjpAQDstgEAEAUCAGjpAQDStgEAGAUCAAU="),C(c,132412,"DQ=="),C(c,132436,"CwAAAAoAAADoeAM="),C(c,132460,"Ag=="),C(c,132476,"//////////8="),C(c,132544,"MAUCAAAAAAAF"),C(c,132564,"MA=="),C(c,132588,"CwAAADEAAAD4eAMAAAQ="),C(c,132612,"AQ=="),C(c,132628,"/////wo="),C(c,132696,"yAUCAAB/BA==");var Gn,Zt=(Gn=[null,function(t){var A,r=0;return r=e[(t|=0)>>2],e[t>>2]=r+1,r=255&(A=f[0|r]),(0|A)<0&&(r=B[(e[t+12>>2]+(r<<1)|0)-256>>1]),0|r},ho,function(t){var A,r;return A=e[(t|=0)>>2],r=e[A>>2],e[t>>2]=A+4,0|r},function(t){var A=0,r=0;return A=e[(t|=0)>>2],(0|(r=dn(t)))==65533&&(e[t>>2]=A+1,e[t+8>>2]=1,r=255&(A=f[0|A]),(0|A)>=0||(r=B[(e[t+12>>2]+(r<<1)|0)-256>>1])),0|r},dn,function(t){var A,r,s=0;return(s=e[4+(t|=0)>>2])>>>0<=(r=(A=e[t>>2])+1|0)>>>0?(e[t>>2]=s,65533):(e[t>>2]=r,s=d[0|A],e[t>>2]=A+2,s|d[A+1|0]<<8)},function(t,A){var r,s,o;return A|=0,t=e[(t|=0)>>2],r=e[t+4>>2],s=e[A>>2],(A=sr(r+1|0,(o=e[s+4>>2])+1|0))||(A=f[0|r]-f[0|o]|0)||(A=sr(e[t>>2],e[s>>2])),0|A},function(t,A){var r;return t|=0,A=e[(A|=0)>>2],r=e[t>>2],(t=e[A+16>>2]-e[r+16>>2]|0)||(t=sr(e[r>>2],e[A>>2])),0|t},po,function(t,A,r,s){var o;return A|=0,r|=0,s|=0,Y=o=Y-16|0,(t=0|qe(e[60+(t|=0)>>2],0|A,0|r,255&s,o+8|0))?(e[56798]=t,t=-1):t=0,Y=o+16|0,fe=t?-1:e[o+12>>2],0|(t?-1:e[o+8>>2])},function(t,A,r){A|=0,r|=0;var s,o=0,l=0,u=0,g=0,h=0,w=0;Y=s=Y-32|0,o=e[28+(t|=0)>>2],e[s+16>>2]=o,u=e[t+20>>2],e[s+28>>2]=r,e[s+24>>2]=A,A=u-o|0,e[s+20>>2]=A,u=A+r|0,h=2;e:{t:{A=s+16|0,(o=0|Oe(e[t+60>>2],0|A,2,s+12|0))?(e[56798]=o,o=-1):o=0;r:{if(o)o=A;else for(;;){if((0|(l=e[s+12>>2]))==(0|u))break r;if((0|l)<0){o=A;break t}if(g=l-((w=(g=e[A+4>>2])>>>0<l>>>0)?g:0)|0,e[(o=(w<<3)+A|0)>>2]=g+e[o>>2],e[(A=(w?12:4)+A|0)>>2]=e[A>>2]-g,u=u-l|0,A=o,h=h-w|0,(l=0|Oe(e[t+60>>2],0|A,0|h,s+12|0))?(e[56798]=l,l=-1):l=0,l)break}if((0|u)!=-1)break t}A=e[t+44>>2],e[t+28>>2]=A,e[t+20>>2]=A,e[t+16>>2]=A+e[t+48>>2],t=r;break e}e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t>>2]=32|e[t>>2],t=0,(0|h)!=2&&(t=r-e[o+4>>2]|0)}return Y=s+32|0,0|t},function(t,A,r){t|=0,A|=0,r|=0;var s,o=0,l=0,u=0;Y=s=Y-32|0,e[s+16>>2]=A,o=e[t+48>>2],e[s+20>>2]=r-!!(0|o),l=e[t+44>>2],e[s+28>>2]=o,e[s+24>>2]=l;e:{t:{if((o=0|Ze(e[t+60>>2],s+16|0,2,s+12|0))?(e[56798]=o,o=-1):o=0,o)A=32;else{if((0|(o=e[s+12>>2]))>0)break t;A=o?32:16}e[t>>2]=A|e[t>>2];break e}u=o,(l=e[s+20>>2])>>>0>=o>>>0||(o=e[t+44>>2],e[t+4>>2]=o,e[t+8>>2]=o+(u-l|0),e[t+48>>2]&&(e[t+4>>2]=o+1,f[(A+r|0)-1|0]=d[0|o]),u=r)}return Y=s+32|0,0|u},function(t){return 0|ye(e[60+(t|=0)>>2])},ln,function(t,A,r,s,o,l){t|=0,A=+A,r|=0,s|=0,o|=0,l|=0;var u,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0,Xe=0;Y=u=Y-560|0,e[u+44>>2]=0,F(+A),g=0|y(1),y(0),(0|g)<0?(ie=1,ze=84997,F(+(A=-A)),g=0|y(1),y(0)):2048&o?(ie=1,ze=85e3):(ze=(ie=1&o)?85003:84998,Xe=!ie);e:if(2146435072&~g){ve=u+16|0;t:{r:{a:{if(A=Mi(A,u+44|0),(A+=A)!=0){if(g=e[u+44>>2],e[u+44>>2]=g-1,(0|(Pe=32|l))!=97)break a;break t}if((0|(Pe=32|l))==97)break t;v=e[u+44>>2],T=(0|s)<0?6:s;break r}v=g-29|0,e[u+44>>2]=v,A*=268435456,T=(0|s)<0?6:s}for(h=J=(u+48|0)+((0|v)>=0?288:0)|0;s=A<4294967296&A>=0?~~A>>>0:0,e[h>>2]=s,h=h+4|0,(A=1e9*(A-+(s>>>0)))!=0;);if((0|v)<=0)s=v,g=h,w=J;else for(w=J,s=v;;){if(V=(0|s)>=29?29:s,!(w>>>0>(g=h-4|0)>>>0)){for(s=0;b=e[g>>2],Se=s,s=31&V,(63&V)>>>0>=32?(_=b<<s,s=0):(_=(1<<s)-1&b>>>32-s,s=b<<s),b=_+H|0,s=go(Se=Se+s|0,s>>>0>Se>>>0?b+1|0:b,1e9),e[g>>2]=Se-eA(s,fe,1e9,0),w>>>0<=(g=g-4|0)>>>0;);s&&(e[(w=w-4|0)>>2]=s)}for(;w>>>0<(g=h)>>>0&&!e[(h=g-4|0)>>2];);if(s=e[u+44>>2]-V|0,e[u+44>>2]=s,h=g,!((0|s)>0))break}if((0|s)<0)for(he=1+((T+25>>>0)/9|0)|0,H=(0|Pe)==102;;){if(_=(0|(s=0-s|0))>=9?9:s,g>>>0<=w>>>0)h=e[w>>2];else{for(V=1e9>>>_|0,b=~(-1<<_),s=0,h=w;Se=s,s=e[h>>2],e[h>>2]=Se+(s>>>_|0),s=O(V,s&b),(h=h+4|0)>>>0<g>>>0;);h=e[w>>2],s&&(e[g>>2]=s,g=g+4|0)}if(s=_+e[u+44>>2]|0,e[u+44>>2]=s,w=(!h<<2)+w|0,g=g-(h=H?J:w)>>2>(0|he)?h+(he<<2)|0:g,!((0|s)<0))break}if(s=0,!(g>>>0<=w>>>0||(s=O(J-w>>2,9),h=10,(b=e[w>>2])>>>0<10)))for(;s=s+1|0,b>>>0>=(h=O(h,10))>>>0;);if((0|(h=(T-((0|Pe)!=102?s:0)|0)-((0|Pe)==103&!!(0|T))|0))<(O(g-J>>2,9)-9|0)){if(v=((((0|v)<0?4:292)+u|0)+((b=(0|(V=h+9216|0))/9|0)<<2)|0)-4048|0,h=10,(0|(_=V-O(b,9)|0))<=7)for(;h=O(h,10),(0|(_=_+1|0))!=8;);if(!(!(H=(V=e[v>>2])-O(h,he=(V>>>0)/(h>>>0)|0)|0)&(0|(b=v+4|0))==(0|g))&&(!(1&he)&&(A=9007199254740992,!(1&f[v-4|0])|(0|h)!=1e9|w>>>0>=v>>>0)||(A=9007199254740994),re=(0|g)==(0|b)?1:1.5,re=(b=h>>>1|0)>>>0>H>>>0?.5:(0|b)==(0|H)?re:1.5,d[0|ze]!=45|Xe||(re=-re,A=-A),b=V-H|0,e[v>>2]=b,A+re!=A)){if(s=h+b|0,e[v>>2]=s,s>>>0>=1e9)for(;e[v>>2]=0,(v=v-4|0)>>>0<w>>>0&&(e[(w=w-4|0)>>2]=0),s=e[v>>2]+1|0,e[v>>2]=s,s>>>0>999999999;);if(s=O(J-w>>2,9),h=10,!((b=e[w>>2])>>>0<10))for(;s=s+1|0,b>>>0>=(h=O(h,10))>>>0;);}g=g>>>0>(h=v+4|0)>>>0?h:g}for(;b=g,!(V=g>>>0<=w>>>0)&&!e[(g=b-4|0)>>2];);if((0|Pe)==103){if(T=((g=(0|(h=T||1))>(0|s)&(0|s)>-5)?~s:-1)+h|0,l=(g?-1:-2)+l|0,!(v=8&o)){if(g=-9,!V&&(v=e[b-4>>2])&&(_=10,g=0,!((v>>>0)%10|0))){for(;h=g,g=g+1|0,!((v>>>0)%((_=O(_,10))>>>0)|0););g=~h}h=O(b-J>>2,9),(-33&l)!=70?(v=0,T=(0|(g=(0|(g=((s+h|0)+g|0)-9|0))>0?g:0))>(0|T)?T:g):(v=0,T=(0|(g=(0|(g=(g+h|0)-9|0))>0?g:0))>(0|T)?T:g)}}else v=8&o;if(_=-1,(0|((V=v|T)?2147483645:2147483646))<(0|T))break e;if(H=1+(!!(0|V)+T|0)|0,(0|(h=-33&l))!=70){if((ve-(g=$s(((g=s>>31)^s)-g|0,0,ve))|0)<=1)for(;f[0|(g=g-1|0)]=48,(ve-g|0)<2;);if(f[0|(he=g-2|0)]=l,f[g-1|0]=(0|s)<0?45:43,(0|(g=ve-he|0))>(2147483647^H))break e}else{if((2147483647^H)<(0|s))break e;g=(0|s)>0?s:0}if((0|(s=g+H|0))>(2147483647^ie))break e;Nr(t,32,r,H=s+ie|0,o),Jr(t,ze,ie),Nr(t,48,r,H,65536^o);r:{a:{n:{if((0|h)==70){for(s=8|(l=u+16|0),v=9|l,w=h=w>>>0>J>>>0?J:w;;){g=$s(e[w>>2],0,v);o:if((0|h)==(0|w))(0|g)==(0|v)&&(f[u+24|0]=48,g=s);else{if(u+16>>>0>=g>>>0)break o;for(;f[0|(g=g-1|0)]=48,u+16>>>0<g>>>0;);}if(Jr(t,g,v-g|0),!(J>>>0>=(w=w+4|0)>>>0))break}if(V&&Jr(t,85998,1),(0|T)<=0|w>>>0>=b>>>0)break n;for(;;){if((g=$s(e[w>>2],0,v))>>>0>u+16>>>0)for(;f[0|(g=g-1|0)]=48,u+16>>>0<g>>>0;);if(Jr(t,g,(0|T)>=9?9:T),g=T-9|0,b>>>0<=(w=w+4|0)>>>0)break a;if(s=(0|T)>9,T=g,!s)break}break a}o:if(!((0|T)<0))for(J=w>>>0<b>>>0?b:w+4|0,s=8|(l=u+16|0),b=9|l,h=w;;){(0|b)==(0|(g=$s(e[h>>2],0,b)))&&(f[u+24|0]=48,g=s);c:if((0|h)==(0|w))Jr(t,g,1),g=g+1|0,v|T&&Jr(t,85998,1);else{if(u+16>>>0>=g>>>0)break c;for(;f[0|(g=g-1|0)]=48,u+16>>>0<g>>>0;);}if(Jr(t,g,(0|(l=b-g|0))>(0|T)?T:l),T=T-l|0,J>>>0<=(h=h+4|0)>>>0)break o;if(!((0|T)>=0))break}Nr(t,48,T+18|0,18,0),Jr(t,he,ve-he|0);break r}g=T}Nr(t,48,g+9|0,9,0)}Nr(t,32,r,H,8192^o),_=(0|r)<(0|H)?H:r;break e}if(v=(l<<26>>31&9)+ze|0,!(s>>>0>11)){for(g=12-s|0,re=16;re*=16,g=g-1|0;);A=d[0|v]!=45?A+re-re:-(re+(-A-re))}for((0|ve)==(0|(g=$s(((g=e[u+44>>2])^(h=g>>31))-h|0,0,ve)))&&(f[u+15|0]=48,g=u+15|0),J=2|ie,w=32&l,h=e[u+44>>2],f[0|(T=g-2|0)]=l+15,f[g-1|0]=(0|h)<0?45:43,g=8&o,h=u+16|0;l=h,b=ee(A)<2147483648?~~A:-2147483648,f[0|h]=w|d[b+124512|0],!((0|s)>0|g)&(A=16*(A-+(0|b)))==0|((h=l+1|0)-(u+16|0)|0)!=1||(f[l+1|0]=46,h=l+2|0),A!=0;);_=-1,(2147483645-(l=(g=ve-T|0)+J|0)|0)<(0|s)||(Nr(t,32,r,l=(s=!s||((w=h-(u+16|0)|0)-2|0)>=(0|s)?w=h-(u+16|0)|0:s+2|0)+l|0,o),Jr(t,v,J),Nr(t,48,r,l,65536^o),Jr(t,u+16|0,w),Nr(t,48,s-w|0,0,0),Jr(t,T,g),Nr(t,32,r,l,8192^o),_=(0|r)<(0|l)?l:r)}else Nr(t,32,r,g=ie+3|0,-65537&o),Jr(t,ze,ie),s=32&l,Jr(t,A!=A?s?85596:85774:s?85247:85460,3),Nr(t,32,r,g,8192^o),_=(0|r)<(0|g)?g:r;return Y=u+560|0,0|_},function(t,A){var r;t|=0,r=A|=0,A=e[A>>2]+7&-8,e[r>>2]=A+16,P[t>>3]=ut(e[A>>2],e[A+4>>2],e[A+8>>2],e[A+12>>2])},function(t,A,r){A|=0,r|=0;var s,o,l=0,u=0;return s=e[84+(t|=0)>>2],u=e[s+4>>2],o=e[t+28>>2],(l=(l=e[t+20>>2]-o|0)>>>0>u>>>0?u:l)&&(qt(e[s>>2],o,l),e[s>>2]=l+e[s>>2],u=e[s+4>>2]-l|0,e[s+4>>2]=u),l=e[s>>2],(u=r>>>0>u>>>0?u:r)&&(qt(l,A,u),l=u+e[s>>2]|0,e[s>>2]=l,e[s+4>>2]=e[s+4>>2]-u),f[0|l]=0,A=e[t+44>>2],e[t+28>>2]=A,e[t+20>>2]=A,0|r},function(t,A,r){r|=0;var s,o,l=0;return qt(A|=0,s=e[84+(t|=0)>>2],r=r>>>0>(l=(o=Qa(s,0,l=r+256|0))?o-s|0:l)>>>0?l:r),A=s+l|0,e[t+84>>2]=A,e[t+8>>2]=A,e[t+4>>2]=r+s,0|r},function(t,A,r){A|=0,r|=0;var s,o=0,l=0,u=0;o=e[84+(t|=0)>>2],s=e[o>>2]?o:84412,o=0;e:if(e[t+48>>2])for(;;){if(!(l=e[(o<<2)+s>>2]))break e;if(f[e[t+44>>2]+o|0]=(0|l)>=128?64:l,!((o=o+1|0)>>>0<Ae[t+48>>2]))break}return l=e[t+44>>2],e[t+4>>2]=l,e[t+84>>2]=(o<<2)+s,e[t+8>>2]=o+l,!r|!o||(e[t+4>>2]=l+1,f[0|A]=d[0|l],u=1),0|u},po,Tn,r0,r0,function(t,A,r){r|=0;var s,o=0;return Y=s=Y+-64|0,o=1,ea(t|=0,A|=0,0)||(o=0,A&&(o=0,(A=Bt(A,125132))&&(Je(4|(o=s+8|0),0,52),e[s+56>>2]=1,e[s+20>>2]=-1,e[s+16>>2]=t,e[s+8>>2]=A,Zt[e[e[A>>2]+28>>2]](A,o,e[r>>2],1),(0|(t=e[s+32>>2]))==1&&(e[r>>2]=e[s+24>>2]),o=(0|t)==1))),Y=s- -64|0,0|o},function(t,A,r,s,o,l){r|=0,s|=0,o|=0,l|=0,ea(t|=0,e[8+(A|=0)>>2],l)&&Fa(A,r,s,o)},function(t,A,r,s,o){if(r|=0,s|=0,o|=0,ea(t|=0,e[8+(A|=0)>>2],o))e[A+28>>2]==1|e[A+4>>2]!=(0|r)||(e[A+28>>2]=s);else e:if(ea(t,e[A>>2],o)){if(!(e[A+16>>2]!=(0|r)&e[A+20>>2]!=(0|r))){if((0|s)!=1)break e;return void(e[A+32>>2]=1)}e[A+20>>2]=r,e[A+32>>2]=s,e[A+40>>2]=e[A+40>>2]+1,e[A+36>>2]!=1|e[A+24>>2]!=2||(f[A+54|0]=1),e[A+44>>2]=4}},function(t,A,r,s){r|=0,s|=0,ea(t|=0,e[8+(A|=0)>>2],0)&&Mn(A,r,s)},Tn,function(t,A,r,s,o,l){r|=0,s|=0,o|=0,l|=0,ea(t|=0,e[8+(A|=0)>>2],l)?Fa(A,r,s,o):(t=e[t+8>>2],Zt[e[e[t>>2]+20>>2]](t,A,r,s,o,l))},function(t,A,r,s,o){if(r|=0,s|=0,o|=0,ea(t|=0,e[8+(A|=0)>>2],o))e[A+28>>2]==1|e[A+4>>2]!=(0|r)||(e[A+28>>2]=s);else e:{if(ea(t,e[A>>2],o)){if(!(e[A+16>>2]!=(0|r)&e[A+20>>2]!=(0|r))){if((0|s)!=1)break e;return void(e[A+32>>2]=1)}e[A+32>>2]=s;t:if(e[A+44>>2]!=4){if(k[A+52>>1]=0,t=e[t+8>>2],Zt[e[e[t>>2]+20>>2]](t,A,r,r,1,o),d[A+53|0]){if(e[A+44>>2]=3,!d[A+52|0])break t;break e}e[A+44>>2]=4}if(e[A+20>>2]=r,e[A+40>>2]=e[A+40>>2]+1,e[A+36>>2]!=1|e[A+24>>2]!=2)break e;return void(f[A+54|0]=1)}t=e[t+8>>2],Zt[e[e[t>>2]+24>>2]](t,A,r,s,o)}},function(t,A,r,s){r|=0,s|=0,ea(t|=0,e[8+(A|=0)>>2],0)?Mn(A,r,s):(t=e[t+8>>2],Zt[e[e[t>>2]+28>>2]](t,A,r,s))},Tn,function(t){return 84787},Tn,function(t){return 85058},Tn,function(t){return 84147},function(t){var A;return A=t|=0,t=e[t>>2],e[A>>2]=t+1,0|((0|(t=f[0|t]))<0?65533:255&t)},function(t,A,r,s,o,l){t|=0,A|=0,r|=0,s|=0,o|=0,l|=0;var u,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0;if(u=ws(408),e[u+4>>2]=s,e[u>>2]=r,A?(qt(u+16|0,A,376),P[u+392>>3]=(P[A+368>>3]-P[A>>3])/+(r>>>0),A=0):A=1,e[u+400>>2]=o,f[u+8|0]=A,l){if(r=e[t+24>>2])for(A=e[t+20>>2],s=e[t+8>>2];(o=e[e[(A>>>8&16777212)+s>>2]+((1023&A)<<2)>>2])&&(Me(o),r=e[t+24>>2],s=e[t+8>>2],A=e[t+20>>2]),A=A+1|0,e[t+20>>2]=A,r=r-1|0,e[t+24>>2]=r,A>>>0>=2048&&(Me(e[s>>2]),s=e[t+8>>2]+4|0,e[t+8>>2]=s,A=e[t+20>>2]-1024|0,e[t+20>>2]=A,r=e[t+24>>2]),r;);A=e[t+28>>2],e[t+420>>2]=e[A>>2],(r=e[t+32>>2])&&(f[A+8|0]=d[r+8|0],qt(A+16|0,t+40|0,376),(A=e[t+32>>2])&&Me(A),e[t+32>>2]=0)}if(r=(s=e[t+24>>2])+e[t+20>>2]|0,o=e[t+12>>2],(0|r)==(0|((0|(A=e[t+8>>2]))!=(0|o)?(o-A<<8)-1:0))){Y=g=Y-32|0;e:{t:{r:{a:{if((A=e[16+(l=t+4|0)>>2])>>>0>=1024){if(e[l+16>>2]=A-1024,A=e[l+4>>2],T=e[A>>2],o=A+4|0,e[l+4>>2]=o,(0|(A=e[l+8>>2]))==e[l+12>>2])if((h=e[l>>2])>>>0<o>>>0)r=Be((s=(1+(o-h>>2)|0)/-2<<2)+o|0,o,A=A-o|0)+A|0,e[l+8>>2]=r,e[l+4>>2]=s+e[l+4>>2];else{if((r=(0|A)==(0|h)?1:A-h>>1)>>>0>=1073741824)break a;if(_=(s=r<<2)+(w=ws(s))|0,r=s=w+(-4&r)|0,(0|A)!=(0|o)){if(V=-4&(A=A-o|0),v=1+((b=A-4|0)>>>2|0)&7)for(r=0,A=s;e[A>>2]=e[o>>2],o=o+4|0,A=A+4|0,(0|v)!=(0|(r=r+1|0)););else A=s;if(r=s+V|0,!(b>>>0<28))for(;e[A>>2]=e[o>>2],e[A+4>>2]=e[o+4>>2],e[A+8>>2]=e[o+8>>2],e[A+12>>2]=e[o+12>>2],e[A+16>>2]=e[o+16>>2],e[A+20>>2]=e[o+20>>2],e[A+24>>2]=e[o+24>>2],e[A+28>>2]=e[o+28>>2],o=o+32|0,(0|r)!=(0|(A=A+32|0)););}e[l+12>>2]=_,e[l+8>>2]=r,e[l+4>>2]=s,e[l>>2]=w,h&&(Me(h),r=e[l+8>>2])}else r=A;e[r>>2]=T,e[l+8>>2]=e[l+8>>2]+4;break e}if((h=(o=e[l+8>>2])-e[l+4>>2]>>2)>>>0<(s=(A=e[l+12>>2])-(r=e[l>>2])|0)>>2>>>0){if((0|A)!=(0|o)){e[g+8>>2]=ws(4096),qa(l,g+8|0);break e}if(e[g+8>>2]=ws(4096),wa(l,g+8|0),A=e[l+4>>2],T=e[A>>2],o=A+4|0,e[l+4>>2]=o,(0|(A=e[l+8>>2]))==e[l+12>>2])if((h=e[l>>2])>>>0<o>>>0)r=Be((s=(1+(o-h>>2)|0)/-2<<2)+o|0,o,A=A-o|0)+A|0,e[l+8>>2]=r,e[l+4>>2]=s+e[l+4>>2];else{if((r=(0|A)==(0|h)?1:A-h>>1)>>>0>=1073741824)break a;if(_=(s=r<<2)+(w=ws(s))|0,r=s=w+(-4&r)|0,(0|A)!=(0|o)){if(V=-4&(A=A-o|0),v=1+((b=A-4|0)>>>2|0)&7)for(r=0,A=s;e[A>>2]=e[o>>2],o=o+4|0,A=A+4|0,(0|v)!=(0|(r=r+1|0)););else A=s;if(r=s+V|0,!(b>>>0<28))for(;e[A>>2]=e[o>>2],e[A+4>>2]=e[o+4>>2],e[A+8>>2]=e[o+8>>2],e[A+12>>2]=e[o+12>>2],e[A+16>>2]=e[o+16>>2],e[A+20>>2]=e[o+20>>2],e[A+24>>2]=e[o+24>>2],e[A+28>>2]=e[o+28>>2],o=o+32|0,(0|r)!=(0|(A=A+32|0)););}e[l+12>>2]=_,e[l+8>>2]=r,e[l+4>>2]=s,e[l>>2]=w,h&&(Me(h),r=e[l+8>>2])}else r=A;e[r>>2]=T,e[l+8>>2]=e[l+8>>2]+4;break e}if(e[g+24>>2]=l+12,!((A=(0|A)==(0|r)?1:s>>1)>>>0>=1073741824)){if(A=ws(r=A<<2),e[g+8>>2]=A,s=A+(h<<2)|0,e[g+16>>2]=s,e[g+20>>2]=A+r,e[g+12>>2]=s,e[g+4>>2]=ws(4096),qa(g+8|0,g+4|0),(0|(o=e[l+8>>2]))==e[l+4>>2]){A=o;break t}for(;wa(g+8|0,o=o-4|0),e[l+4>>2]!=(0|o););break r}}so(),L()}A=e[l+8>>2]}r=e[l>>2],e[l>>2]=e[g+8>>2],e[g+8>>2]=r,e[l+4>>2]=e[g+12>>2],e[g+12>>2]=o,e[l+8>>2]=e[g+16>>2],e[g+16>>2]=A,s=e[l+12>>2],e[l+12>>2]=e[g+20>>2],e[g+20>>2]=s,(0|A)!=(0|o)&&(e[g+16>>2]=A+(3+(o-A|0)&-4)),r&&Me(r)}Y=g+32|0,r=(s=e[t+24>>2])+e[t+20>>2]|0,A=e[t+8>>2]}e[e[A+(r>>>8&16777212)>>2]+((1023&r)<<2)>>2]=u,e[t+24>>2]=s+1},function(t){var A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0;r=e[420+(t|=0)>>2]+1|0,e[t+420>>2]=r;e:{if(A=e[t+32>>2]){if(r>>>0>(g=e[A+4>>2])>>>0){(r=e[t+28>>2])&&(Me(r),A=e[t+32>>2]),e[t+32>>2]=0,e[t+28>>2]=A;break e}for(l=t+40|0,u=A+16|0,h=e[t+28>>2]+16|0,w=+(r>>>0)/+(g>>>0),A=0;;){if(s=P[(r=A<<3)+u>>3],o=P[r+h>>3],P[r+l>>3]=s==s?(s-o)*w+o:o,(0|(r=1|A))==47)break e;s=P[(r<<=3)+u>>3],o=P[r+h>>3],P[r+l>>3]=s==s?(s-o)*w+o:o,A=A+2|0}}if(A=e[t+28>>2],r>>>0>Ae[A>>2]){if(l=e[t+24>>2]){if(f[t+416|0]=0,u=e[t+8>>2],r=e[t+20>>2],A=e[e[u+(r>>>8&16777212)>>2]+((1023&r)<<2)>>2],e[t+32>>2]=A,e[t+24>>2]=l-1,r=r+1|0,e[t+20>>2]=r,r>>>0>=2048&&(Me(e[u>>2]),e[t+8>>2]=e[t+8>>2]+4,e[t+20>>2]=e[t+20>>2]-1024,A=e[t+32>>2]),d[A+8|0])qt(A+16|0,e[t+28>>2]+16|0,376),A=e[t+32>>2],e[A+368>>2]=0,e[A+372>>2]=0,s=P[t+40>>3],e[A+392>>2]=0,e[A+396>>2]=0,P[A+16>>3]=s;else if(r=e[t+28>>2],d[r+8|0]&&(qt(r+16|0,A+16|0,376),A=e[t+28>>2],e[A+368>>2]=0,e[A+372>>2]=0,!(A=e[t+32>>2])))break e;(0|(r=e[A+400>>2]))!=-1&&(e[t+424>>2]=r),e[t+420>>2]=0,P[A+16>>3]=P[A+392>>3]*+Ae[A+4>>2]+P[A+16>>3];break e}f[t+416|0]=1}else s=P[A+392>>3]+P[t+40>>3],P[t+40>>3]=s,P[A+16>>3]=s}return 0|(d[t+416|0]?0:t+40)},function(t){return e[424+(t|=0)>>2]},function(t){var A=0;return e[(t|=0)>>2]=132304,(A=e[t+28>>2])&&Me(A),(A=e[t+32>>2])&&Me(A),Ii(t+4|0),0|t},function(t){var A=0;e[(t|=0)>>2]=132304,(A=e[t+28>>2])&&Me(A),(A=e[t+32>>2])&&Me(A),Ii(t+4|0),Me(t)},function(t,A,r){A|=0,r|=0;var s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0;if(!e[1088+(t|=0)>>2])return 0;e:if(A){for(w=t+648|0,h=t- -64|0;;){if(s=e[t+1088>>2],!(s=0|Zt[e[e[s>>2]+4>>2]](s)))break e;if(o=ht(P[t+32>>3]+P[s+16>>3]/+e[t+24>>2]),P[t+32>>3]=o,o=pn(6.283185307179586*o),o=ht(P[t+16>>3]+P[s>>3]*(.06*o*P[s+8>>3]+1)/+e[t+8>>2]),P[t+16>>3]=o,g=eA(e[56848],e[56849],1284865837,1481765933),l=fe,l=(g=g+1|0)?l:l+1|0,e[56848]=g,e[56849]=l,u=.75*P[t+40>>3]+ +(l>>>1|0)/2147483647,P[t+40>>3]=u,b=P[s+24>>3],l=o>=P[s+32>>3],f[t+48|0]=l,u=(T=b)*(b=.2*u),u=rr(h+512|0,rr(h+440|0,o=P[s+352>>3]*(b*P[s+48>>3]+P[s+40>>3]*(o+o+-1+(l?u:.01*u)))*.5,P[s+104>>3],P[s+168>>3]),P[s+112>>3],P[s+176>>3]),u=rr(h+8|0,rr(h+80|0,rr(h+152|0,rr(h+224|0,rr(h+296|0,rr(h+368|0,u==u?(u-o)*P[s+184>>3]+o:o,P[s+96>>3],P[s+160>>3]),P[s+88>>3],P[s+152>>3]),P[s+80>>3],P[s+144>>3]),P[s+72>>3],P[s+136>>3]),P[s+64>>3],P[s+128>>3]),P[s+56>>3],P[s+120>>3]),g=eA(e[56848],e[56849],1284865837,1481765933),l=fe,l=(g=g+1|0)?l:l+1|0,e[56848]=g,e[56849]=l,o=.75*P[t+56>>3]+ +(l>>>1|0)/2147483647,P[t+56>>3]=o,l=(v<<1)+r|0,b=rr(w+8|0,o=P[s+352>>3]*(P[s+192>>3]*(.3*o))*.5,P[s+200>>3],P[s+248>>3]),_=P[s+296>>3],V=rr(w+80|0,o,P[s+208>>3],P[s+256>>3]),H=P[s+304>>3],J=rr(w+152|0,o,P[s+216>>3],P[s+264>>3]),re=P[s+312>>3],ie=rr(w+224|0,o,P[s+224>>3],P[s+272>>3]),he=P[s+320>>3],ve=rr(w+296|0,o,P[s+232>>3],P[s+280>>3]),Pe=P[s+328>>3],T=u,u=(rr(w+368|0,o,P[s+240>>3],P[s+288>>3])-o)*P[s+336>>3]+(Pe*(ve-o)+(he*(ie-o)+(re*(J-o)+(H*(V-o)+(_*(b-o)+0))))),o=(T+(o==o?(o-u)*P[s+344>>3]+u:u))*P[s+360>>3]*4e3,s=(0|(s=ee(o)<2147483648?~~o:-2147483648))>=32e3?32e3:s,k[l>>1]=(0|s)<=-32e3?-32e3:s,(0|(v=v+1|0))==(0|A))break}v=A}return 0|(A>>>0>v>>>0?v:A)},function(t,A){A|=0,e[1088+(t|=0)>>2]=A},po,Tn,ho,function(t,A,r,s){return fe=0,0}],Gn.grow=function(t){var A=this.length;return this.length=this.length+t,A},Gn.set=function(t,A){this[t]=A},Gn.get=function(t){return this[t]},Gn);return{v:function(){var t,A=0;Y=t=Y-16|0,0|at(t+12|0,t+8|0)||(A=Nt(4+(e[t+12>>2]<<2)|0),e[56800]=A,A&&(!(A=Nt(e[t+8>>2]))||(e[e[56800]+(e[t+12>>2]<<2)>>2]=0,0|Ve(e[56800],0|A)))&&(e[56800]=0)),Y=t+16|0,e[56841]=227236,e[56823]=42},w:Fi,x:fo,y:function(t,A){A|=0,e[(t|=0)>>2]=A},z:function(t,A){return A|=0,f[e[(t|=0)+4>>2]+A|0]},A:uo,B:$o,C:function(t){return d[(t|=0)+12|0]},D:function(t,A){A|=0,f[(t|=0)+12|0]=A},E:function(t){return d[(t|=0)+13|0]},F:function(t,A){A|=0,f[(t|=0)+13|0]=A},G:function(t){return d[(t|=0)+14|0]},H:function(t,A){A|=0,f[(t|=0)+14|0]=A},I:function(t){return d[(t|=0)+15|0]},J:function(t,A){A|=0,f[(t|=0)+15|0]=A},K:t0,L:function(t,A){A|=0,e[(t|=0)+16>>2]=A},M:co,N:function(t,A){A|=0,e[(t|=0)+20>>2]=A},O:Fi,P:fo,Q:A0,R:uo,S:e0,T:t0,U:co,V:function(t){return e[(t|=0)+24>>2]},W:Fi,X:function(){var t,A=0,r=0,s=0,o=0,l=0,u=0,g=0,h=0,w=0,b=0,v=0,T=0,_=0,V=0,H=0,J=0,re=0,ie=0,he=0,ve=0,Pe=0,Se=0,ze=0;if(t=ws(20),e[t+16>>2]=0,e[t+8>>2]=175,e[t+12>>2]=50,!(A=e[33208])){Y=A=(Y=he=Y-16|0)-80|0;e:{if((r=ca(84292))&&(e[A+32>>2]=r,Ts(137584,160,85959,A+32|0),(0|Vs(137584))==-31||(e[A+16>>2]=r,Ts(137584,160,86031,A+16|0),(0|Vs(137584))==-31)))break e;(r=ca(84619))&&(e[A>>2]=r,Ts(137584,160,85959,A),(0|Vs(137584))==-31)||(r=d[84826]|d[84827]<<8|d[84828]<<16|d[84829]<<24,e[34396]=d[84822]|d[84823]<<8|d[84824]<<16|d[84825]<<24,e[34397]=r,k[68804]=d[84846]|d[84847]<<8,r=d[84842]|d[84843]<<8|d[84844]<<16|d[84845]<<24,e[34400]=d[84838]|d[84839]<<8|d[84840]<<16|d[84841]<<24,e[34401]=r,r=d[84834]|d[84835]<<8|d[84836]<<16|d[84837]<<24,e[34398]=d[84830]|d[84831]<<8|d[84832]<<16|d[84833]<<24,e[34399]=r)}if(Y=A+80|0,e[he+12>>2]=0,o=he+12|0,Y=g=Y-16|0,e[g+12>>2]=22050,de(85144)||de(85315)||de(85473)||de(85698),v=g+12|0,Y=l=Y-16|0,e[l+12>>2]=0,!((A=JA(137832,84262,0,o))||(A=JA(137836,84420,0,o))||(A=JA(137840,84813,0,o))||(A=JA(137820,85016,l+12|0,o))))if(e[34454]=Ae[l+12>>2]/68,r=e[34460],e[34456]=r,r&&(0|(w=d[0|r]|d[r+1|0]<<8|d[r+2|0]<<16|d[r+3|0]<<24))==83969){if(T=d[r+4|0]|d[r+5|0]<<8|d[r+6|0]<<16|d[r+7|0]<<24,r=e[34458],V=d[0|r],e[34461]=V,V)for(A=r+4|0,w=0;s=O(w,44)+137856|0,o=d[0|A],e[s+36>>2]=o,e[s+40>>2]=d[A+1|0],u=d[A+8|0]|d[A+9|0]<<8|d[A+10|0]<<16|d[A+11|0]<<24,r=d[A+4|0]|d[A+5|0]<<8|d[A+6|0]<<16|d[A+7|0]<<24,f[0|s]=r,f[s+1|0]=r>>>8,f[s+2|0]=r>>>16,f[s+3|0]=r>>>24,f[s+4|0]=u,f[s+5|0]=u>>>8,f[s+6|0]=u>>>16,f[s+7|0]=u>>>24,u=d[A+16|0]|d[A+17|0]<<8|d[A+18|0]<<16|d[A+19|0]<<24,r=d[A+12|0]|d[A+13|0]<<8|d[A+14|0]<<16|d[A+15|0]<<24,f[s+8|0]=r,f[s+9|0]=r>>>8,f[s+10|0]=r>>>16,f[s+11|0]=r>>>24,f[s+12|0]=u,f[s+13|0]=u>>>8,f[s+14|0]=u>>>16,f[s+15|0]=u>>>24,u=d[A+24|0]|d[A+25|0]<<8|d[A+26|0]<<16|d[A+27|0]<<24,r=d[A+20|0]|d[A+21|0]<<8|d[A+22|0]<<16|d[A+23|0]<<24,f[s+16|0]=r,f[s+17|0]=r>>>8,f[s+18|0]=r>>>16,f[s+19|0]=r>>>24,f[s+20|0]=u,f[s+21|0]=u>>>8,f[s+22|0]=u>>>16,f[s+23|0]=u>>>24,u=d[A+32|0]|d[A+33|0]<<8|d[A+34|0]<<16|d[A+35|0]<<24,r=d[A+28|0]|d[A+29|0]<<8|d[A+30|0]<<16|d[A+31|0]<<24,f[s+24|0]=r,f[s+25|0]=r>>>8,f[s+26|0]=r>>>16,f[s+27|0]=r>>>24,f[s+28|0]=u,f[s+29|0]=u>>>8,f[s+30|0]=u>>>16,f[s+31|0]=u>>>24,r=A+36|0,e[s+32>>2]=r,A=r+(o<<4)|0,(0|V)!=(0|(w=w+1|0)););(0|V)<=e[34457]&&(e[34457]=0),A=0,v&&(e[v>>2]=T)}else e:{t:{if(o){if(r=e[o>>2]){Me(e[r+4>>2]),A=e[o>>2];break t}if(A=Nt(16),e[o>>2]=A,A)break t;A=48}else A=268436223;break e}e[A>>2]=1,e[A+4>>2]=ei(137584),r=e[o>>2],e[r+12>>2]=83969,e[r+8>>2]=w,A=268436223}if(Y=l+16|0,r=A,!A){if(v=e[g+12>>2],e[50754]=v,e[50759]=0,e[50760]=134217728/(0|v),e[50762]=0,e[50763]=0,e[50765]=2147483647,e[50781]=100,e[50779]=32,e[50761]=(v<<6)/(0|v),A=e[26385],e[50784]=e[26384],e[50785]=A,A=e[26387],e[50786]=e[26386],e[50787]=A,A=e[26389],e[50788]=e[26388],e[50789]=A,A=e[26391],e[50790]=e[26390],e[50791]=A,A=e[26393],e[50792]=e[26392],e[50793]=A,A=e[26395],e[50794]=e[26394],e[50795]=A,A=e[26397],e[50796]=e[26396],e[50797]=A,e[50798]=e[26398],T=(0|(A=(0|(o=O(v,60)))/12800|0))>=128?128:A,e[50799]=T,e[50800]=(0|T)/2,!((0|v)==22050|(0|o)<12800)){if(v=1&(A=(0|T)<=1?1:T),re=+(0|T),w=0,(0|T)>=2)for(T=2147483646&A,A=0;H=w+132160|0,h=127*(1-ds(6.283185307179586*+(0|w)/re)),_=ee(h)<2147483648?~~h:-2147483648,f[0|H]=_,H=(o=1|w)+132160|0,h=127*(1-ds(6.283185307179586*+(0|o)/re)),_=ee(h)<2147483648?~~h:-2147483648,f[0|H]=_,w=w+2|0,(0|T)!=(0|(A=A+2|0)););v&&(A=w+132160|0,h=127*(1-ds(6.283185307179586*+(0|w)/re)),H=ee(h)<2147483648?~~h:-2147483648,f[0|A]=H)}if(e[50801]=105792,e[56797]=Fr(),e[55964]=38,e[55921]=1,e[55918]=22050,e[56606]=0,e[55960]=110928,e[55958]=0,e[55959]=1074266112,e[55956]=100,e[55922]=20,e[55923]=220,e[55916]=1,e[55917]=0,iA(),e[56244]=0,e[56245]=0,e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,re=-3.141592653589793/+(0|(A=e[55918])),P[27967]=re,o=(0|O(A,630))/1e4|0,e[55920]=o,A=(0|O(A,950))/1e4|0,e[55919]=A,h=-2*re,P[27968]=h,re=(Se=Dr(re*+(0|o)))*-Se,P[28129]=re,h=Se*ds(h*+(0|A)),h+=h,P[28128]=h,P[28127]=1-h-re,e[55990]=0,e[55991]=0,e[55988]=0,e[55989]=0,e[56006]=0,e[56007]=0,e[56004]=0,e[56005]=0,e[56022]=0,e[56023]=0,e[56020]=0,e[56021]=0,e[56038]=0,e[56039]=0,e[56036]=0,e[56037]=0,e[56054]=0,e[56055]=0,e[56052]=0,e[56053]=0,e[56070]=0,e[56071]=0,e[56068]=0,e[56069]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0,e[56639]=59,e[56640]=59,e[56629]=0,e[56630]=59,e[56619]=89,e[56620]=160,e[56609]=280,e[56610]=688,e[56611]=1064,e[56621]=70,e[56631]=59,e[56612]=2806,e[56613]=3260,e[56622]=160,e[56623]=200,e[56632]=59,e[56633]=59,e[56641]=89,e[56642]=149,e[56643]=200,e[56644]=200,e[56634]=59,e[56635]=59,e[56624]=200,e[56625]=500,e[56614]=3700,e[56615]=6500,e[56645]=500,e[56646]=0,e[56616]=7e3,e[56626]=500,e[56636]=0,e[56647]=0,e[56637]=0,e[56627]=500,e[56617]=8e3,e[56669]=89,e[56648]=0,e[56638]=0,e[56628]=89,e[56618]=280,e[56657]=62,e[56655]=0,e[56656]=0,e[56653]=50,e[56654]=0,e[56651]=0,e[56652]=0,e[56649]=0,e[56650]=40,e[56607]=1e3,e[56608]=59,Y=l=Y-416|0,e[l+16>>2]=137584,e[l+20>>2]=47,e[l+24>>2]=85952,lt(A=l+240|0,85699,l+16|0),u=Is(A,86034)){if(cA(l+240|0,170,u))for(v=5|(A=l+240|0),T=10|A;d[l+240|0]!=47&&(e[l+240>>2]!=1701736308?Zr(l+240|0,86614,9)||(e[l+4>>2]=l+32,e[l>>2]=l+239,(0|jt(T,86829,l))==2&&(o=e[34064],e[(V=136272+(o<<4)|0)>>2]=f[l+239|0],A=ei(l+32|0),e[34064]=o+1,e[V+12>>2]=A,e[V+4>>2]=0)):(Y=A=Y-48|0,e[32960]=-1,e[32961]=-1,e[32970]=-1,e[32971]=-1,e[32968]=-1,e[32969]=-1,e[32966]=-1,e[32967]=-1,e[32964]=-1,e[32965]=-1,e[32962]=-1,e[32963]=-1,e[A+36>>2]=131876,e[A+32>>2]=131872,e[A+28>>2]=131868,e[A+24>>2]=131864,e[A+20>>2]=131860,e[A+16>>2]=131856,e[A+12>>2]=131852,e[A+8>>2]=131848,e[A+4>>2]=131844,e[A>>2]=131840,jt(v,84222,A),Y=A+48|0)),cA(l+240|0,170,u););Er(u)}Y=l+416|0,e[50297]=0,e[50298]=0,e[50301]=0,e[50302]=0,e[50299]=0,e[50300]=0,hn(0,85698),e[36425]=0,e[36424]=0,e[36426]=0,e[36427]=-1,Jo(),yt(0),s=e[25690],e[34062]=s,b=e[25689],l=e[25688],e[34060]=l,e[34061]=b,J=e[25687],u=e[25686],e[34058]=u,e[34059]=J,ie=e[25685],V=e[25684],e[34056]=V,e[34057]=ie,ve=e[25683],v=e[25682],e[34054]=v,e[34055]=ve,Pe=e[25681],T=e[25680],e[34052]=T,e[34053]=Pe,_=e[25679],o=e[25678],e[34050]=o,e[34051]=_,H=e[25677],A=e[25676],e[34048]=A,e[34049]=H,e[33729]=A,e[33730]=H,e[33731]=o,e[33732]=_,e[33733]=T,e[33734]=Pe,e[33735]=v,e[33736]=ve,e[33737]=V,e[33738]=ie,e[33739]=u,e[33740]=J,e[33741]=l,e[33742]=b,e[33743]=s,ur(1,175),ur(2,100),ur(6,e[47200]),ur(5,e[47201]),ur(7,0),e[47198]=0,e[47197]=0,h=+te()/1e3,o=eA(A=ee(h)<9223372036854776e3?~~h>>>0:0,0,1103515245,0),A=fe,A=(o=o+12345|0)>>>0<12345?A+1|0:A,e[33209]=Gi(o,A)}if(Y=g+16|0,r){H=e[30450],ve=e[he+12>>2],g=(b=Y-560|0)+48|0,Y=s=(Y=b)-16|0;e:{t:switch(0|as(r-268435967|0,24)){case 0:FA(g,84133,512);break e;case 1:FA(g,84580,512);break e;case 2:FA(g,84747,512);break e;case 3:FA(g,85084,512);break e;case 4:FA(g,85251,512);break e;case 5:FA(g,85380,512);break e;case 6:FA(g,85607,512);break e;case 7:FA(g,85722,512);break e;case 8:FA(g,85913,512);break e;case 9:FA(g,86046,512);break e;case 10:FA(g,86153,512);break e;case 11:FA(g,86678,512);break e;case 12:FA(g,86773,512);break e;case 14:FA(g,86958,512);break e;case 15:FA(g,87071,512);break e;default:break t}if(1879048192&r)e[s>>2]=r,Ts(g,512,87182,s);else{if(w=0,l=B[123728+((r>>>0<=153?r:0)<<1)>>1]+121804|0,r=e[e[56841]+20>>2]){Pe=e[r+4>>2],J=e[r>>2],ie=e[J>>2]+1794895138|0,_=on(e[J+8>>2],ie),o=on(e[J+12>>2],ie),A=on(e[J+16>>2],ie);t:if(!(Pe>>>2>>>0<=_>>>0||3&(A|o)|(r=Pe-(_<<2)|0)>>>0<=o>>>0|A>>>0>=r>>>0))for(v=A>>>2|0,T=o>>>2|0;;){if(V=on(e[(r=((A=(o=(u=_>>>1|0)+ze|0)<<1)+T<<2)+J|0)>>2],ie),(r=on(e[r+4>>2],ie))>>>0>=Pe>>>0|V>>>0>=Pe-r>>>0|d[(r+V|0)+J|0])break t;if(!(r=sr(l,r+J|0))){if(A=on(e[(r=(A+v<<2)+J|0)>>2],ie),(r=on(e[r+4>>2],ie))>>>0>=Pe>>>0|A>>>0>=Pe-r>>>0)break t;w=d[(A+r|0)+J|0]?0:r+J|0;break t}if((0|_)==1)break t;_=(r=(0|r)<0)?u:_-u|0,ze=r?ze:o}}if((r=kt(A=w||l))>>>0>=512){qt(g,A,511),f[g+511|0]=0;break e}qt(g,A,r+1|0)}}Y=s+16|0;e:if(ve){t:switch(e[ve>>2]){case 0:e[b+16>>2]=e[ve+4>>2],e[b+20>>2]=b+48,ar(H,87384,b+16|0);break e;case 1:break t;default:break e}A=e[ve+12>>2],r=e[ve+8>>2],e[b+36>>2]=e[ve+4>>2],fe=r,e[b+40>>2]=A,e[b+44>>2]=fe,e[b+32>>2]=b+48,ar(H,87521,b+32|0)}else e[b>>2]=b+48,ar(H,87700,b);Y=b+560|0,(0|he)!=-12&&(r=e[he+12>>2])&&(Me(e[r+4>>2]),Me(e[he+12>>2]),e[he+12>>2]=0)}r=e[24806],e[34389]=0,e[32538]=r,r=(1e3+((r=O(e[50754],100))-((0|r)%1e3|0)|0)|0)/500|0,e[34390]=r,r=DA(e[34391],r),e[34392]=r,r&&(e[34391]=r,e[34393]=40,(r=DA(e[34388],1440))&&(e[34388]=r)),e[47198]=0,Y=he+16|0,A=e[50754],e[33208]=A}return e[t+4>>2]=A,e[t>>2]=bt(),0|t},Y:function(t,A,r){t|=0,A|=0,r|=0,e[34440]=r,$e(3,e[t+12>>2]),$e(1,e[t+8>>2]),(t=e[t+16>>2])?Js(t):An(1024),It(A),e[34440]=0},Z:function(t,A,r){return t|=0,A|=0,r|=0,e[34440]=0,(t=Is(r,1032))?(e[47195]=t,e[47197]=130,t||(e[47195]=e[30450]),It(A),e[47195]=0,e[47197]=0,e[47195]=e[30450],Er(t),0):-1},_:function(t){return 36},$:function(t,A,r){var s;return t|=0,A|=0,Y=s=Y-32|0,(r|=0)?(e[s+24>>2]=0,e[s+28>>2]=0,e[s+16>>2]=0,e[s+20>>2]=0,e[s+12>>2]=r,e[s+8>>2]=A,f[s+21|0]=0,A=Js(s+8|0)):A=An(A),e[t+16>>2]=201188,Y=s+32|0,0|A},aa:function(t,A,r,s){var o;return t|=0,A|=0,Y=o=Y-32|0,(r|=0)|(s|=0)?(e[o+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+12>>2]=r,e[o+8>>2]=A,f[o+22|0]=0,f[o+20|0]=s,A=Js(o+8|0)):A=An(A),e[t+16>>2]=201188,Y=o+32|0,0|A},ba:function(t,A,r,s,o){var l;return t|=0,A|=0,Y=l=Y-32|0,(s|=0)|(o|=0)|(r|=0)?(e[l+24>>2]=0,e[l+28>>2]=0,e[l+16>>2]=0,e[l+20>>2]=0,e[l+12>>2]=r,e[l+8>>2]=A,f[l+21|0]=o,f[l+20|0]=s,A=Js(l+8|0)):A=An(A),e[t+16>>2]=201188,Y=l+32|0,0|A},ca:function(t,A,r,s,o,l){var u;return t|=0,A|=0,Y=u=Y-32|0,(s|=0)|(o|=0)|(l|=0)|(r|=0)?(e[u+24>>2]=0,e[u+28>>2]=0,e[u+16>>2]=0,e[u+20>>2]=0,e[u+12>>2]=r,e[u+8>>2]=A,f[u+22|0]=l,f[u+21|0]=o,f[u+20|0]=s,A=Js(u+8|0)):A=An(A),e[t+16>>2]=201188,Y=u+32|0,0|A},da:function(t,A){return A|=0,e[e[(t|=0)>>2]+(A<<2)>>2]},ea:function(t,A,r){A|=0,r|=0,e[e[(t|=0)>>2]+(A<<2)>>2]=r},fa:A0,ga:uo,ha:$o,ia:e0,ja:function(t,A){A|=0,e[(t|=0)+12>>2]=A},ka:Fi,la:function(){return 0},ma:function(){return 1},na:function(){return 2},oa:function(){return 3},pa:function(){return 4},qa:function(){return 5},ra:function(){return 6},sa:function(){return 7},ta:function(){return 8},ua:Zt,va:function(){return 227192},wa:Me,xa:Nt,ya:function(t){return(t|=0)?0|!!(0|Bt(t,125228)):0}}}(i)}(n)},instantiate:function(a,n){return{then:function(i){var c=new Yo.Module(a);i({instance:new Yo.Instance(c,n)})}}},RuntimeError:Error};typeof Yo!="object"&&Rn("no native wasm support detected");var O8=!1;function X2(a,n){a||Rn(n)}var Ns,Oo,Hl,jA,es,_8,N8,D4=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function So(a,n,i){for(var c=n+i,p=n;a[p]&&!(p>=c);)++p;if(p-n>16&&a.buffer&&D4)return D4.decode(a.subarray(n,p));for(var m="";n<p;){var C=a[n++];if(128&C){var I=63&a[n++];if((224&C)!=192){var E=63&a[n++];if((C=(240&C)==224?(15&C)<<12|I<<6|E:(7&C)<<18|I<<12|E<<6|63&a[n++])<65536)m+=String.fromCharCode(C);else{var x=C-65536;m+=String.fromCharCode(55296|x>>10,56320|1023&x)}}else m+=String.fromCharCode((31&C)<<6|I)}else m+=String.fromCharCode(C)}return m}function _o(a,n){return a?So(Oo,a,n):""}function p1(a,n,i,c){if(!(c>0))return 0;for(var p=i,m=i+c-1,C=0;C<a.length;++C){var I=a.charCodeAt(C);if(I>=55296&&I<=57343&&(I=65536+((1023&I)<<10)|1023&a.charCodeAt(++C)),I<=127){if(i>=m)break;n[i++]=I}else if(I<=2047){if(i+1>=m)break;n[i++]=192|I>>6,n[i++]=128|63&I}else if(I<=65535){if(i+2>=m)break;n[i++]=224|I>>12,n[i++]=128|I>>6&63,n[i++]=128|63&I}else{if(i+3>=m)break;n[i++]=240|I>>18,n[i++]=128|I>>12&63,n[i++]=128|I>>6&63,n[i++]=128|63&I}}return n[i]=0,i-p}function z8(a){for(var n=0,i=0;i<a.length;++i){var c=a.charCodeAt(i);c<=127?n++:c<=2047?n+=2:c>=55296&&c<=57343?(n+=4,++i):n+=3}return n}var Fn,Z2=ae.INITIAL_MEMORY||16777216;Fl=ae.wasmMemory?ae.wasmMemory:new Yo.Memory({initial:Z2/65536,maximum:Z2/65536}),Fn=Fl.buffer,ae.HEAP8=Ns=new Int8Array(Fn),ae.HEAP16=Hl=new Int16Array(Fn),ae.HEAP32=jA=new Int32Array(Fn),ae.HEAPU8=Oo=new Uint8Array(Fn),ae.HEAPU16=new Uint16Array(Fn),ae.HEAPU32=es=new Uint32Array(Fn),ae.HEAPF32=_8=new Float32Array(Fn),ae.HEAPF64=N8=new Float64Array(Fn),Z2=Fl.buffer.byteLength;var P4=[],L8=[],T4=[],R8=!1;function j8(a){L8.unshift(a)}var fA,jr,Ji=0,G0=null;function W8(a){Ji++,ae.monitorRunDependencies&&ae.monitorRunDependencies(Ji)}function V8(a){if(Ji--,ae.monitorRunDependencies&&ae.monitorRunDependencies(Ji),Ji==0&&G0){var n=G0;G0=null,n()}}function Rn(a){throw ae.onAbort&&ae.onAbort(a),Vo(a="Aborted("+a+")"),O8=!0,a+=". Build with -sASSERTIONS for more info.",new Yo.RuntimeError(a)}function dk(a){this.name="ExitStatus",this.message="Program terminated with exit("+a+")",this.status=a}function J2(a){for(;a.length>0;)a.shift()(ae)}function fk(a,n="i8"){switch(n.endsWith("*")&&(n="*"),n){case"i1":case"i8":return Ns[a|0];case"i16":return Hl[a>>1];case"i32":case"i64":return jA[a>>2];case"float":return _8[a>>2];case"double":return N8[a>>3];case"*":return es[a>>2];default:Rn("invalid type for getValue: "+n)}return null}function gk(a){this.excPtr=a,this.ptr=a-24,this.set_type=function(n){es[this.ptr+4>>2]=n},this.get_type=function(){return es[this.ptr+4>>2]},this.set_destructor=function(n){es[this.ptr+8>>2]=n},this.get_destructor=function(){return es[this.ptr+8>>2]},this.set_refcount=function(n){jA[this.ptr>>2]=n},this.set_caught=function(n){n=n?1:0,Ns[this.ptr+12|0]=n},this.get_caught=function(){return Ns[this.ptr+12|0]!=0},this.set_rethrown=function(n){n=n?1:0,Ns[this.ptr+13|0]=n},this.get_rethrown=function(){return Ns[this.ptr+13|0]!=0},this.init=function(n,i){this.set_adjusted_ptr(0),this.set_type(n),this.set_destructor(i),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var n=jA[this.ptr>>2];jA[this.ptr>>2]=n+1},this.release_ref=function(){var n=jA[this.ptr>>2];return jA[this.ptr>>2]=n-1,n===1},this.set_adjusted_ptr=function(n){es[this.ptr+16>>2]=n},this.get_adjusted_ptr=function(){return es[this.ptr+16>>2]},this.get_exception_ptr=function(){if(HI(this.get_type()))return es[this.excPtr>>2];var n=this.get_adjusted_ptr();return n!==0?n:this.excPtr}}var lr={isAbs:a=>a.charAt(0)==="/",splitPath:a=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a).slice(1),normalizeArray:(a,n)=>{for(var i=0,c=a.length-1;c>=0;c--){var p=a[c];p==="."?a.splice(c,1):p===".."?(a.splice(c,1),i++):i&&(a.splice(c,1),i--)}if(n)for(;i;i--)a.unshift("..");return a},normalize:a=>{var n=lr.isAbs(a),i=a.substr(-1)==="/";return(a=lr.normalizeArray(a.split("/").filter(c=>!!c),!n).join("/"))||n||(a="."),a&&i&&(a+="/"),(n?"/":"")+a},dirname:a=>{var n=lr.splitPath(a),i=n[0],c=n[1];return i||c?(c&&(c=c.substr(0,c.length-1)),i+c):"."},basename:a=>{if(a==="/")return"/";var n=(a=(a=lr.normalize(a)).replace(/\/$/,"")).lastIndexOf("/");return n===-1?a:a.substr(n+1)},join:function(){var a=Array.prototype.slice.call(arguments);return lr.normalize(a.join("/"))},join2:(a,n)=>lr.normalize(a+"/"+n)},di={resolve:function(){for(var a="",n=!1,i=arguments.length-1;i>=-1&&!n;i--){var c=i>=0?arguments[i]:$.cwd();if(typeof c!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!c)return"";a=c+"/"+a,n=lr.isAbs(c)}return(n?"/":"")+(a=lr.normalizeArray(a.split("/").filter(p=>!!p),!n).join("/"))||"."},relative:(a,n)=>{function i(x){for(var D=0;D<x.length&&x[D]==="";D++);for(var y=x.length-1;y>=0&&x[y]==="";y--);return D>y?[]:x.slice(D,y-D+1)}a=di.resolve(a).substr(1),n=di.resolve(n).substr(1);for(var c=i(a.split("/")),p=i(n.split("/")),m=Math.min(c.length,p.length),C=m,I=0;I<m;I++)if(c[I]!==p[I]){C=I;break}var E=[];for(I=C;I<c.length;I++)E.push("..");return(E=E.concat(p.slice(C))).join("/")}};function Y8(a,n,i){var c=z8(a)+1,p=new Array(c),m=p1(a,p,0,p.length);return n&&(p.length=m),p}var Zi={ttys:[],init:function(){},shutdown:function(){},register:function(a,n){Zi.ttys[a]={input:[],output:[],ops:n},$.registerDevice(a,Zi.stream_ops)},stream_ops:{open:function(a){var n=Zi.ttys[a.node.rdev];if(!n)throw new $.ErrnoError(43);a.tty=n,a.seekable=!1},close:function(a){a.tty.ops.fsync(a.tty)},fsync:function(a){a.tty.ops.fsync(a.tty)},read:function(a,n,i,c,p){if(!a.tty||!a.tty.ops.get_char)throw new $.ErrnoError(60);for(var m=0,C=0;C<c;C++){var I;try{I=a.tty.ops.get_char(a.tty)}catch{throw new $.ErrnoError(29)}if(I===void 0&&m===0)throw new $.ErrnoError(6);if(I==null)break;m++,n[i+C]=I}return m&&(a.node.timestamp=Date.now()),m},write:function(a,n,i,c,p){if(!a.tty||!a.tty.ops.put_char)throw new $.ErrnoError(60);try{for(var m=0;m<c;m++)a.tty.ops.put_char(a.tty,n[i+m])}catch{throw new $.ErrnoError(29)}return c&&(a.node.timestamp=Date.now()),m}},default_tty_ops:{put_char:function(a,n){n===null||n===10?(Yl(So(a.output,0)),a.output=[]):n!=0&&a.output.push(n)},fsync:function(a){a.output&&a.output.length>0&&(Yl(So(a.output,0)),a.output=[])}},default_tty1_ops:{put_char:function(a,n){n===null||n===10?(Vo(So(a.output,0)),a.output=[]):n!=0&&a.output.push(n)},fsync:function(a){a.output&&a.output.length>0&&(Vo(So(a.output,0)),a.output=[])}}};function H8(a){Rn()}var EA={ops_table:null,mount:function(a){return EA.createNode(null,"/",16895,0)},createNode:function(a,n,i,c){if($.isBlkdev(i)||$.isFIFO(i))throw new $.ErrnoError(63);EA.ops_table||(EA.ops_table={dir:{node:{getattr:EA.node_ops.getattr,setattr:EA.node_ops.setattr,lookup:EA.node_ops.lookup,mknod:EA.node_ops.mknod,rename:EA.node_ops.rename,unlink:EA.node_ops.unlink,rmdir:EA.node_ops.rmdir,readdir:EA.node_ops.readdir,symlink:EA.node_ops.symlink},stream:{llseek:EA.stream_ops.llseek}},file:{node:{getattr:EA.node_ops.getattr,setattr:EA.node_ops.setattr},stream:{llseek:EA.stream_ops.llseek,read:EA.stream_ops.read,write:EA.stream_ops.write,allocate:EA.stream_ops.allocate,mmap:EA.stream_ops.mmap,msync:EA.stream_ops.msync}},link:{node:{getattr:EA.node_ops.getattr,setattr:EA.node_ops.setattr,readlink:EA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:EA.node_ops.getattr,setattr:EA.node_ops.setattr},stream:$.chrdev_stream_ops}});var p=$.createNode(a,n,i,c);return $.isDir(p.mode)?(p.node_ops=EA.ops_table.dir.node,p.stream_ops=EA.ops_table.dir.stream,p.contents={}):$.isFile(p.mode)?(p.node_ops=EA.ops_table.file.node,p.stream_ops=EA.ops_table.file.stream,p.usedBytes=0,p.contents=null):$.isLink(p.mode)?(p.node_ops=EA.ops_table.link.node,p.stream_ops=EA.ops_table.link.stream):$.isChrdev(p.mode)&&(p.node_ops=EA.ops_table.chrdev.node,p.stream_ops=EA.ops_table.chrdev.stream),p.timestamp=Date.now(),a&&(a.contents[n]=p,a.timestamp=p.timestamp),p},getFileDataAsTypedArray:function(a){return a.contents?a.contents.subarray?a.contents.subarray(0,a.usedBytes):new Uint8Array(a.contents):new Uint8Array(0)},expandFileStorage:function(a,n){var i=a.contents?a.contents.length:0;if(!(i>=n)){n=Math.max(n,i*(i<1048576?2:1.125)>>>0),i!=0&&(n=Math.max(n,256));var c=a.contents;a.contents=new Uint8Array(n),a.usedBytes>0&&a.contents.set(c.subarray(0,a.usedBytes),0)}},resizeFileStorage:function(a,n){if(a.usedBytes!=n)if(n==0)a.contents=null,a.usedBytes=0;else{var i=a.contents;a.contents=new Uint8Array(n),i&&a.contents.set(i.subarray(0,Math.min(n,a.usedBytes))),a.usedBytes=n}},node_ops:{getattr:function(a){var n={};return n.dev=$.isChrdev(a.mode)?a.id:1,n.ino=a.id,n.mode=a.mode,n.nlink=1,n.uid=0,n.gid=0,n.rdev=a.rdev,$.isDir(a.mode)?n.size=4096:$.isFile(a.mode)?n.size=a.usedBytes:$.isLink(a.mode)?n.size=a.link.length:n.size=0,n.atime=new Date(a.timestamp),n.mtime=new Date(a.timestamp),n.ctime=new Date(a.timestamp),n.blksize=4096,n.blocks=Math.ceil(n.size/n.blksize),n},setattr:function(a,n){n.mode!==void 0&&(a.mode=n.mode),n.timestamp!==void 0&&(a.timestamp=n.timestamp),n.size!==void 0&&EA.resizeFileStorage(a,n.size)},lookup:function(a,n){throw $.genericErrors[44]},mknod:function(a,n,i,c){return EA.createNode(a,n,i,c)},rename:function(a,n,i){if($.isDir(a.mode)){var c;try{c=$.lookupNode(n,i)}catch{}if(c)for(var p in c.contents)throw new $.ErrnoError(55)}delete a.parent.contents[a.name],a.parent.timestamp=Date.now(),a.name=i,n.contents[i]=a,n.timestamp=a.parent.timestamp,a.parent=n},unlink:function(a,n){delete a.contents[n],a.timestamp=Date.now()},rmdir:function(a,n){var i=$.lookupNode(a,n);for(var c in i.contents)throw new $.ErrnoError(55);delete a.contents[n],a.timestamp=Date.now()},readdir:function(a){var n=[".",".."];for(var i in a.contents)a.contents.hasOwnProperty(i)&&n.push(i);return n},symlink:function(a,n,i){var c=EA.createNode(a,n,41471,0);return c.link=i,c},readlink:function(a){if(!$.isLink(a.mode))throw new $.ErrnoError(28);return a.link}},stream_ops:{read:function(a,n,i,c,p){var m=a.node.contents;if(p>=a.node.usedBytes)return 0;var C=Math.min(a.node.usedBytes-p,c);if(C>8&&m.subarray)n.set(m.subarray(p,p+C),i);else for(var I=0;I<C;I++)n[i+I]=m[p+I];return C},write:function(a,n,i,c,p,m){if(!c)return 0;var C=a.node;if(C.timestamp=Date.now(),n.subarray&&(!C.contents||C.contents.subarray)){if(m)return C.contents=n.subarray(i,i+c),C.usedBytes=c,c;if(C.usedBytes===0&&p===0)return C.contents=n.slice(i,i+c),C.usedBytes=c,c;if(p+c<=C.usedBytes)return C.contents.set(n.subarray(i,i+c),p),c}if(EA.expandFileStorage(C,p+c),C.contents.subarray&&n.subarray)C.contents.set(n.subarray(i,i+c),p);else for(var I=0;I<c;I++)C.contents[p+I]=n[i+I];return C.usedBytes=Math.max(C.usedBytes,p+c),c},llseek:function(a,n,i){var c=n;if(i===1?c+=a.position:i===2&&$.isFile(a.node.mode)&&(c+=a.node.usedBytes),c<0)throw new $.ErrnoError(28);return c},allocate:function(a,n,i){EA.expandFileStorage(a.node,n+i),a.node.usedBytes=Math.max(a.node.usedBytes,n+i)},mmap:function(a,n,i,c,p){if(!$.isFile(a.node.mode))throw new $.ErrnoError(43);var m,C,I=a.node.contents;if(2&p||I.buffer!==Ns.buffer){if((i>0||i+n<I.length)&&(I=I.subarray?I.subarray(i,i+n):Array.prototype.slice.call(I,i,i+n)),C=!0,!(m=H8()))throw new $.ErrnoError(48);Ns.set(I,m)}else C=!1,m=I.byteOffset;return{ptr:m,allocated:C}},msync:function(a,n,i,c,p){return EA.stream_ops.write(a,n,0,c,i,!1),0}}},$={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(a,n={})=>{if(!(a=di.resolve(a)))return{path:"",node:null};if((n=Object.assign({follow_mount:!0,recurse_count:0},n)).recurse_count>8)throw new $.ErrnoError(32);for(var i=a.split("/").filter(x=>!!x),c=$.root,p="/",m=0;m<i.length;m++){var C=m===i.length-1;if(C&&n.parent)break;if(c=$.lookupNode(c,i[m]),p=lr.join2(p,i[m]),$.isMountpoint(c)&&(!C||C&&n.follow_mount)&&(c=c.mounted.root),!C||n.follow)for(var I=0;$.isLink(c.mode);){var E=$.readlink(p);if(p=di.resolve(lr.dirname(p),E),c=$.lookupPath(p,{recurse_count:n.recurse_count+1}).node,I++>40)throw new $.ErrnoError(32)}}return{path:p,node:c}},getPath:a=>{for(var n;;){if($.isRoot(a)){var i=a.mount.mountpoint;return n?i[i.length-1]!=="/"?i+"/"+n:i+n:i}n=n?a.name+"/"+n:a.name,a=a.parent}},hashName:(a,n)=>{for(var i=0,c=0;c<n.length;c++)i=(i<<5)-i+n.charCodeAt(c)|0;return(a+i>>>0)%$.nameTable.length},hashAddNode:a=>{var n=$.hashName(a.parent.id,a.name);a.name_next=$.nameTable[n],$.nameTable[n]=a},hashRemoveNode:a=>{var n=$.hashName(a.parent.id,a.name);if($.nameTable[n]===a)$.nameTable[n]=a.name_next;else for(var i=$.nameTable[n];i;){if(i.name_next===a){i.name_next=a.name_next;break}i=i.name_next}},lookupNode:(a,n)=>{var i=$.mayLookup(a);if(i)throw new $.ErrnoError(i,a);for(var c=$.hashName(a.id,n),p=$.nameTable[c];p;p=p.name_next){var m=p.name;if(p.parent.id===a.id&&m===n)return p}return $.lookup(a,n)},createNode:(a,n,i,c)=>{var p=new $.FSNode(a,n,i,c);return $.hashAddNode(p),p},destroyNode:a=>{$.hashRemoveNode(a)},isRoot:a=>a===a.parent,isMountpoint:a=>!!a.mounted,isFile:a=>(61440&a)==32768,isDir:a=>(61440&a)==16384,isLink:a=>(61440&a)==40960,isChrdev:a=>(61440&a)==8192,isBlkdev:a=>(61440&a)==24576,isFIFO:a=>(61440&a)==4096,isSocket:a=>!(49152&~a),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:a=>{var n=$.flagModes[a];if(n===void 0)throw new Error("Unknown file open mode: "+a);return n},flagsToPermissionString:a=>{var n=["r","w","rw"][3&a];return 512&a&&(n+="w"),n},nodePermissions:(a,n)=>$.ignorePermissions||(!n.includes("r")||292&a.mode)&&(!n.includes("w")||146&a.mode)&&(!n.includes("x")||73&a.mode)?0:2,mayLookup:a=>{var n=$.nodePermissions(a,"x");return n||(a.node_ops.lookup?0:2)},mayCreate:(a,n)=>{try{return $.lookupNode(a,n),20}catch{}return $.nodePermissions(a,"wx")},mayDelete:(a,n,i)=>{var c;try{c=$.lookupNode(a,n)}catch(m){return m.errno}var p=$.nodePermissions(a,"wx");if(p)return p;if(i){if(!$.isDir(c.mode))return 54;if($.isRoot(c)||$.getPath(c)===$.cwd())return 10}else if($.isDir(c.mode))return 31;return 0},mayOpen:(a,n)=>a?$.isLink(a.mode)?32:$.isDir(a.mode)&&($.flagsToPermissionString(n)!=="r"||512&n)?31:$.nodePermissions(a,$.flagsToPermissionString(n)):44,MAX_OPEN_FDS:4096,nextfd:(a=0,n=$.MAX_OPEN_FDS)=>{for(var i=a;i<=n;i++)if(!$.streams[i])return i;throw new $.ErrnoError(33)},getStream:a=>$.streams[a],createStream:(a,n,i)=>{$.FSStream||($.FSStream=function(){this.shared={}},$.FSStream.prototype={},Object.defineProperties($.FSStream.prototype,{object:{get:function(){return this.node},set:function(p){this.node=p}},isRead:{get:function(){return(2097155&this.flags)!=1}},isWrite:{get:function(){return!!(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(p){this.shared.flags=p}},position:{get:function(){return this.shared.position},set:function(p){this.shared.position=p}}})),a=Object.assign(new $.FSStream,a);var c=$.nextfd(n,i);return a.fd=c,$.streams[c]=a,a},closeStream:a=>{$.streams[a]=null},chrdev_stream_ops:{open:a=>{var n=$.getDevice(a.node.rdev);a.stream_ops=n.stream_ops,a.stream_ops.open&&a.stream_ops.open(a)},llseek:()=>{throw new $.ErrnoError(70)}},major:a=>a>>8,minor:a=>255&a,makedev:(a,n)=>a<<8|n,registerDevice:(a,n)=>{$.devices[a]={stream_ops:n}},getDevice:a=>$.devices[a],getMounts:a=>{for(var n=[],i=[a];i.length;){var c=i.pop();n.push(c),i.push.apply(i,c.mounts)}return n},syncfs:(a,n)=>{typeof a=="function"&&(n=a,a=!1),$.syncFSRequests++,$.syncFSRequests>1&&Vo("warning: "+$.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var i=$.getMounts($.root.mount),c=0;function p(C){return $.syncFSRequests--,n(C)}function m(C){if(C)return m.errored?void 0:(m.errored=!0,p(C));++c>=i.length&&p(null)}i.forEach(C=>{if(!C.type.syncfs)return m(null);C.type.syncfs(C,a,m)})},mount:(a,n,i)=>{var c,p=i==="/",m=!i;if(p&&$.root)throw new $.ErrnoError(10);if(!p&&!m){var C=$.lookupPath(i,{follow_mount:!1});if(i=C.path,c=C.node,$.isMountpoint(c))throw new $.ErrnoError(10);if(!$.isDir(c.mode))throw new $.ErrnoError(54)}var I={type:a,opts:n,mountpoint:i,mounts:[]},E=a.mount(I);return E.mount=I,I.root=E,p?$.root=E:c&&(c.mounted=I,c.mount&&c.mount.mounts.push(I)),E},unmount:a=>{var n=$.lookupPath(a,{follow_mount:!1});if(!$.isMountpoint(n.node))throw new $.ErrnoError(28);var i=n.node,c=i.mounted,p=$.getMounts(c);Object.keys($.nameTable).forEach(C=>{for(var I=$.nameTable[C];I;){var E=I.name_next;p.includes(I.mount)&&$.destroyNode(I),I=E}}),i.mounted=null;var m=i.mount.mounts.indexOf(c);i.mount.mounts.splice(m,1)},lookup:(a,n)=>a.node_ops.lookup(a,n),mknod:(a,n,i)=>{var c=$.lookupPath(a,{parent:!0}).node,p=lr.basename(a);if(!p||p==="."||p==="..")throw new $.ErrnoError(28);var m=$.mayCreate(c,p);if(m)throw new $.ErrnoError(m);if(!c.node_ops.mknod)throw new $.ErrnoError(63);return c.node_ops.mknod(c,p,n,i)},create:(a,n)=>(n=n!==void 0?n:438,n&=4095,n|=32768,$.mknod(a,n,0)),mkdir:(a,n)=>(n=n!==void 0?n:511,n&=1023,n|=16384,$.mknod(a,n,0)),mkdirTree:(a,n)=>{for(var i=a.split("/"),c="",p=0;p<i.length;++p)if(i[p]){c+="/"+i[p];try{$.mkdir(c,n)}catch(m){if(m.errno!=20)throw m}}},mkdev:(a,n,i)=>(i===void 0&&(i=n,n=438),n|=8192,$.mknod(a,n,i)),symlink:(a,n)=>{if(!di.resolve(a))throw new $.ErrnoError(44);var i=$.lookupPath(n,{parent:!0}).node;if(!i)throw new $.ErrnoError(44);var c=lr.basename(n),p=$.mayCreate(i,c);if(p)throw new $.ErrnoError(p);if(!i.node_ops.symlink)throw new $.ErrnoError(63);return i.node_ops.symlink(i,c,a)},rename:(a,n)=>{var i,c,p=lr.dirname(a),m=lr.dirname(n),C=lr.basename(a),I=lr.basename(n);if(i=$.lookupPath(a,{parent:!0}).node,c=$.lookupPath(n,{parent:!0}).node,!i||!c)throw new $.ErrnoError(44);if(i.mount!==c.mount)throw new $.ErrnoError(75);var E,x=$.lookupNode(i,C),D=di.relative(a,m);if(D.charAt(0)!==".")throw new $.ErrnoError(28);if((D=di.relative(n,p)).charAt(0)!==".")throw new $.ErrnoError(55);try{E=$.lookupNode(c,I)}catch{}if(x!==E){var y=$.isDir(x.mode),M=$.mayDelete(i,C,y);if(M)throw new $.ErrnoError(M);if(M=E?$.mayDelete(c,I,y):$.mayCreate(c,I))throw new $.ErrnoError(M);if(!i.node_ops.rename)throw new $.ErrnoError(63);if($.isMountpoint(x)||E&&$.isMountpoint(E))throw new $.ErrnoError(10);if(c!==i&&(M=$.nodePermissions(i,"w")))throw new $.ErrnoError(M);$.hashRemoveNode(x);try{i.node_ops.rename(x,c,I)}catch(S){throw S}finally{$.hashAddNode(x)}}},rmdir:a=>{var n=$.lookupPath(a,{parent:!0}).node,i=lr.basename(a),c=$.lookupNode(n,i),p=$.mayDelete(n,i,!0);if(p)throw new $.ErrnoError(p);if(!n.node_ops.rmdir)throw new $.ErrnoError(63);if($.isMountpoint(c))throw new $.ErrnoError(10);n.node_ops.rmdir(n,i),$.destroyNode(c)},readdir:a=>{var n=$.lookupPath(a,{follow:!0}).node;if(!n.node_ops.readdir)throw new $.ErrnoError(54);return n.node_ops.readdir(n)},unlink:a=>{var n=$.lookupPath(a,{parent:!0}).node;if(!n)throw new $.ErrnoError(44);var i=lr.basename(a),c=$.lookupNode(n,i),p=$.mayDelete(n,i,!1);if(p)throw new $.ErrnoError(p);if(!n.node_ops.unlink)throw new $.ErrnoError(63);if($.isMountpoint(c))throw new $.ErrnoError(10);n.node_ops.unlink(n,i),$.destroyNode(c)},readlink:a=>{var n=$.lookupPath(a).node;if(!n)throw new $.ErrnoError(44);if(!n.node_ops.readlink)throw new $.ErrnoError(28);return di.resolve($.getPath(n.parent),n.node_ops.readlink(n))},stat:(a,n)=>{var i=$.lookupPath(a,{follow:!n}).node;if(!i)throw new $.ErrnoError(44);if(!i.node_ops.getattr)throw new $.ErrnoError(63);return i.node_ops.getattr(i)},lstat:a=>$.stat(a,!0),chmod:(a,n,i)=>{var c;if(typeof a=="string"?c=$.lookupPath(a,{follow:!i}).node:c=a,!c.node_ops.setattr)throw new $.ErrnoError(63);c.node_ops.setattr(c,{mode:4095&n|-4096&c.mode,timestamp:Date.now()})},lchmod:(a,n)=>{$.chmod(a,n,!0)},fchmod:(a,n)=>{var i=$.getStream(a);if(!i)throw new $.ErrnoError(8);$.chmod(i.node,n)},chown:(a,n,i,c)=>{var p;if(typeof a=="string"?p=$.lookupPath(a,{follow:!c}).node:p=a,!p.node_ops.setattr)throw new $.ErrnoError(63);p.node_ops.setattr(p,{timestamp:Date.now()})},lchown:(a,n,i)=>{$.chown(a,n,i,!0)},fchown:(a,n,i)=>{var c=$.getStream(a);if(!c)throw new $.ErrnoError(8);$.chown(c.node,n,i)},truncate:(a,n)=>{if(n<0)throw new $.ErrnoError(28);var i;if(typeof a=="string"?i=$.lookupPath(a,{follow:!0}).node:i=a,!i.node_ops.setattr)throw new $.ErrnoError(63);if($.isDir(i.mode))throw new $.ErrnoError(31);if(!$.isFile(i.mode))throw new $.ErrnoError(28);var c=$.nodePermissions(i,"w");if(c)throw new $.ErrnoError(c);i.node_ops.setattr(i,{size:n,timestamp:Date.now()})},ftruncate:(a,n)=>{var i=$.getStream(a);if(!i)throw new $.ErrnoError(8);if(!(2097155&i.flags))throw new $.ErrnoError(28);$.truncate(i.node,n)},utime:(a,n,i)=>{var c=$.lookupPath(a,{follow:!0}).node;c.node_ops.setattr(c,{timestamp:Math.max(n,i)})},open:(a,n,i)=>{if(a==="")throw new $.ErrnoError(44);var c;if(i=i===void 0?438:i,i=64&(n=typeof n=="string"?$.modeStringToFlags(n):n)?4095&i|32768:0,typeof a=="object")c=a;else{a=lr.normalize(a);try{c=$.lookupPath(a,{follow:!(131072&n)}).node}catch{}}var p=!1;if(64&n)if(c){if(128&n)throw new $.ErrnoError(20)}else c=$.mknod(a,i,0),p=!0;if(!c)throw new $.ErrnoError(44);if($.isChrdev(c.mode)&&(n&=-513),65536&n&&!$.isDir(c.mode))throw new $.ErrnoError(54);if(!p){var m=$.mayOpen(c,n);if(m)throw new $.ErrnoError(m)}512&n&&!p&&$.truncate(c,0),n&=-131713;var C=$.createStream({node:c,path:$.getPath(c),flags:n,seekable:!0,position:0,stream_ops:c.stream_ops,ungotten:[],error:!1});return C.stream_ops.open&&C.stream_ops.open(C),!ae.logReadFiles||1&n||($.readFiles||($.readFiles={}),a in $.readFiles||($.readFiles[a]=1)),C},close:a=>{if($.isClosed(a))throw new $.ErrnoError(8);a.getdents&&(a.getdents=null);try{a.stream_ops.close&&a.stream_ops.close(a)}catch(n){throw n}finally{$.closeStream(a.fd)}a.fd=null},isClosed:a=>a.fd===null,llseek:(a,n,i)=>{if($.isClosed(a))throw new $.ErrnoError(8);if(!a.seekable||!a.stream_ops.llseek)throw new $.ErrnoError(70);if(i!=0&&i!=1&&i!=2)throw new $.ErrnoError(28);return a.position=a.stream_ops.llseek(a,n,i),a.ungotten=[],a.position},read:(a,n,i,c,p)=>{if(c<0||p<0)throw new $.ErrnoError(28);if($.isClosed(a))throw new $.ErrnoError(8);if((2097155&a.flags)==1)throw new $.ErrnoError(8);if($.isDir(a.node.mode))throw new $.ErrnoError(31);if(!a.stream_ops.read)throw new $.ErrnoError(28);var m=p!==void 0;if(m){if(!a.seekable)throw new $.ErrnoError(70)}else p=a.position;var C=a.stream_ops.read(a,n,i,c,p);return m||(a.position+=C),C},write:(a,n,i,c,p,m)=>{if(c<0||p<0)throw new $.ErrnoError(28);if($.isClosed(a))throw new $.ErrnoError(8);if(!(2097155&a.flags))throw new $.ErrnoError(8);if($.isDir(a.node.mode))throw new $.ErrnoError(31);if(!a.stream_ops.write)throw new $.ErrnoError(28);a.seekable&&1024&a.flags&&$.llseek(a,0,2);var C=p!==void 0;if(C){if(!a.seekable)throw new $.ErrnoError(70)}else p=a.position;var I=a.stream_ops.write(a,n,i,c,p,m);return C||(a.position+=I),I},allocate:(a,n,i)=>{if($.isClosed(a))throw new $.ErrnoError(8);if(n<0||i<=0)throw new $.ErrnoError(28);if(!(2097155&a.flags))throw new $.ErrnoError(8);if(!$.isFile(a.node.mode)&&!$.isDir(a.node.mode))throw new $.ErrnoError(43);if(!a.stream_ops.allocate)throw new $.ErrnoError(138);a.stream_ops.allocate(a,n,i)},mmap:(a,n,i,c,p)=>{if(2&c&&!(2&p)&&(2097155&a.flags)!=2)throw new $.ErrnoError(2);if((2097155&a.flags)==1)throw new $.ErrnoError(2);if(!a.stream_ops.mmap)throw new $.ErrnoError(43);return a.stream_ops.mmap(a,n,i,c,p)},msync:(a,n,i,c,p)=>a.stream_ops.msync?a.stream_ops.msync(a,n,i,c,p):0,munmap:a=>0,ioctl:(a,n,i)=>{if(!a.stream_ops.ioctl)throw new $.ErrnoError(59);return a.stream_ops.ioctl(a,n,i)},readFile:(a,n={})=>{if(n.flags=n.flags||0,n.encoding=n.encoding||"binary",n.encoding!=="utf8"&&n.encoding!=="binary")throw new Error('Invalid encoding type "'+n.encoding+'"');var i,c=$.open(a,n.flags),p=$.stat(a).size,m=new Uint8Array(p);return $.read(c,m,0,p,0),n.encoding==="utf8"?i=So(m,0):n.encoding==="binary"&&(i=m),$.close(c),i},writeFile:(a,n,i={})=>{i.flags=i.flags||577;var c=$.open(a,i.flags,i.mode);if(typeof n=="string"){var p=new Uint8Array(z8(n)+1),m=p1(n,p,0,p.length);$.write(c,p,0,m,void 0,i.canOwn)}else{if(!ArrayBuffer.isView(n))throw new Error("Unsupported data type");$.write(c,n,0,n.byteLength,void 0,i.canOwn)}$.close(c)},cwd:()=>$.currentPath,chdir:a=>{var n=$.lookupPath(a,{follow:!0});if(n.node===null)throw new $.ErrnoError(44);if(!$.isDir(n.node.mode))throw new $.ErrnoError(54);var i=$.nodePermissions(n.node,"x");if(i)throw new $.ErrnoError(i);$.currentPath=n.path},createDefaultDirectories:()=>{$.mkdir("/tmp"),$.mkdir("/home"),$.mkdir("/home/web_user")},createDefaultDevices:()=>{$.mkdir("/dev"),$.registerDevice($.makedev(1,3),{read:()=>0,write:(a,n,i,c,p)=>c}),$.mkdev("/dev/null",$.makedev(1,3)),Zi.register($.makedev(5,0),Zi.default_tty_ops),Zi.register($.makedev(6,0),Zi.default_tty1_ops),$.mkdev("/dev/tty",$.makedev(5,0)),$.mkdev("/dev/tty1",$.makedev(6,0)),$.mkdir("/dev/shm"),$.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{$.mkdir("/proc");var a=$.mkdir("/proc/self");$.mkdir("/proc/self/fd"),$.mount({mount:()=>{var n=$.createNode(a,"fd",16895,73);return n.node_ops={lookup:(i,c)=>{var p=+c,m=$.getStream(p);if(!m)throw new $.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>m.path}};return C.parent=C,C}},n}},{},"/proc/self/fd")},createStandardStreams:()=>{ae.stdin?$.createDevice("/dev","stdin",ae.stdin):$.symlink("/dev/tty","/dev/stdin"),ae.stdout?$.createDevice("/dev","stdout",null,ae.stdout):$.symlink("/dev/tty","/dev/stdout"),ae.stderr?$.createDevice("/dev","stderr",null,ae.stderr):$.symlink("/dev/tty1","/dev/stderr"),$.open("/dev/stdin",0),$.open("/dev/stdout",1),$.open("/dev/stderr",1)},ensureErrnoError:()=>{$.ErrnoError||($.ErrnoError=function(a,n){this.node=n,this.setErrno=function(i){this.errno=i},this.setErrno(a),this.message="FS error"},$.ErrnoError.prototype=new Error,$.ErrnoError.prototype.constructor=$.ErrnoError,[44].forEach(a=>{$.genericErrors[a]=new $.ErrnoError(a),$.genericErrors[a].stack="<generic error, no stack>"}))},staticInit:()=>{$.ensureErrnoError(),$.nameTable=new Array(4096),$.mount(EA,{},"/"),$.createDefaultDirectories(),$.createDefaultDevices(),$.createSpecialDirectories(),$.filesystems={MEMFS:EA}},init:(a,n,i)=>{$.init.initialized=!0,$.ensureErrnoError(),ae.stdin=a||ae.stdin,ae.stdout=n||ae.stdout,ae.stderr=i||ae.stderr,$.createStandardStreams()},quit:()=>{$.init.initialized=!1;for(var a=0;a<$.streams.length;a++){var n=$.streams[a];n&&$.close(n)}},getMode:(a,n)=>{var i=0;return a&&(i|=365),n&&(i|=146),i},findObject:(a,n)=>{var i=$.analyzePath(a,n);return i.exists?i.object:null},analyzePath:(a,n)=>{try{a=(c=$.lookupPath(a,{follow:!n})).path}catch{}var i={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var c=$.lookupPath(a,{parent:!0});i.parentExists=!0,i.parentPath=c.path,i.parentObject=c.node,i.name=lr.basename(a),c=$.lookupPath(a,{follow:!n}),i.exists=!0,i.path=c.path,i.object=c.node,i.name=c.node.name,i.isRoot=c.path==="/"}catch(p){i.error=p.errno}return i},createPath:(a,n,i,c)=>{a=typeof a=="string"?a:$.getPath(a);for(var p=n.split("/").reverse();p.length;){var m=p.pop();if(m){var C=lr.join2(a,m);try{$.mkdir(C)}catch{}a=C}}return C},createFile:(a,n,i,c,p)=>{var m=lr.join2(typeof a=="string"?a:$.getPath(a),n),C=$.getMode(c,p);return $.create(m,C)},createDataFile:(a,n,i,c,p,m)=>{var C=n;a&&(a=typeof a=="string"?a:$.getPath(a),C=n?lr.join2(a,n):a);var I=$.getMode(c,p),E=$.create(C,I);if(i){if(typeof i=="string"){for(var x=new Array(i.length),D=0,y=i.length;D<y;++D)x[D]=i.charCodeAt(D);i=x}$.chmod(E,146|I);var M=$.open(E,577);$.write(M,i,0,i.length,0,m),$.close(M),$.chmod(E,I)}return E},createDevice:(a,n,i,c)=>{var p=lr.join2(typeof a=="string"?a:$.getPath(a),n),m=$.getMode(!!i,!!c);$.createDevice.major||($.createDevice.major=64);var C=$.makedev($.createDevice.major++,0);return $.registerDevice(C,{open:I=>{I.seekable=!1},close:I=>{c&&c.buffer&&c.buffer.length&&c(10)},read:(I,E,x,D,y)=>{for(var M=0,S=0;S<D;S++){var F;try{F=i()}catch{throw new $.ErrnoError(29)}if(F===void 0&&M===0)throw new $.ErrnoError(6);if(F==null)break;M++,E[x+S]=F}return M&&(I.node.timestamp=Date.now()),M},write:(I,E,x,D,y)=>{for(var M=0;M<D;M++)try{c(E[x+M])}catch{throw new $.ErrnoError(29)}return D&&(I.node.timestamp=Date.now()),M}}),$.mkdev(p,m,C)},forceLoadFile:a=>{if(a.isDevice||a.isFolder||a.link||a.contents)return!0;throw typeof XMLHttpRequest<"u"?new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."):new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(a,n,i,c,p)=>{function m(){this.lengthKnown=!1,this.chunks=[]}if(m.prototype.get=function(y){if(!(y>this.length-1||y<0)){var M=y%this.chunkSize,S=y/this.chunkSize|0;return this.getter(S)[M]}},m.prototype.setDataGetter=function(y){this.getter=y},m.prototype.cacheLength=function(){var y=new XMLHttpRequest;if(y.open("HEAD",i,!1),y.send(null),!(y.status>=200&&y.status<300||y.status===304))throw new Error("Couldn't load "+i+". Status: "+y.status);var M,S=Number(y.getResponseHeader("Content-length")),F=(M=y.getResponseHeader("Accept-Ranges"))&&M==="bytes",L=(M=y.getResponseHeader("Content-Encoding"))&&M==="gzip",Z=1048576;F||(Z=S);var z=this;z.setDataGetter(N=>{var K=N*Z,f=(N+1)*Z-1;if(f=Math.min(f,S-1),z.chunks[N]===void 0&&(z.chunks[N]=((k,e)=>{if(k>e)throw new Error("invalid range ("+k+", "+e+") or no bytes requested!");if(e>S-1)throw new Error("only "+S+" bytes available! programmer error!");var d=new XMLHttpRequest;if(d.open("GET",i,!1),S!==Z&&d.setRequestHeader("Range","bytes="+k+"-"+e),d.responseType="arraybuffer",d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined"),d.send(null),!(d.status>=200&&d.status<300||d.status===304))throw new Error("Couldn't load "+i+". Status: "+d.status);return d.response!==void 0?new Uint8Array(d.response||[]):Y8(d.responseText||"",!0)})(K,f)),z.chunks[N]===void 0)throw new Error("doXHR failed!");return z.chunks[N]}),!L&&S||(Z=S=1,S=this.getter(0).length,Z=S,Yl("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=S,this._chunkSize=Z,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!uk)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var C=new m;Object.defineProperties(C,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var I={isDevice:!1,contents:C}}else I={isDevice:!1,url:i};var E=$.createFile(a,n,I,c,p);I.contents?E.contents=I.contents:I.url&&(E.contents=null,E.url=I.url),Object.defineProperties(E,{usedBytes:{get:function(){return this.contents.length}}});var x={};function D(y,M,S,F,L){var Z=y.node.contents;if(L>=Z.length)return 0;var z=Math.min(Z.length-L,F);if(Z.slice)for(var N=0;N<z;N++)M[S+N]=Z[L+N];else for(N=0;N<z;N++)M[S+N]=Z.get(L+N);return z}return Object.keys(E.stream_ops).forEach(y=>{var M=E.stream_ops[y];x[y]=function(){return $.forceLoadFile(E),M.apply(null,arguments)}}),x.read=(y,M,S,F,L)=>($.forceLoadFile(E),D(y,M,S,F,L)),x.mmap=(y,M,S,F,L)=>{$.forceLoadFile(E);var Z=H8();if(!Z)throw new $.ErrnoError(48);return D(y,Ns,Z,M,S),{ptr:Z,allocated:!0}},E.stream_ops=x,E},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(a,n,i)=>{n=n||(()=>{}),i=i||(()=>{});var c=$.indexedDB();try{var p=c.open($.DB_NAME(),$.DB_VERSION)}catch(m){return i(m)}p.onupgradeneeded=()=>{Yl("creating db"),p.result.createObjectStore($.DB_STORE_NAME)},p.onsuccess=()=>{var m=p.result.transaction([$.DB_STORE_NAME],"readwrite"),C=m.objectStore($.DB_STORE_NAME),I=0,E=0,x=a.length;function D(){E==0?n():i()}a.forEach(y=>{var M=C.put($.analyzePath(y).object.contents,y);M.onsuccess=()=>{++I+E==x&&D()},M.onerror=()=>{E++,I+E==x&&D()}}),m.onerror=i},p.onerror=i},loadFilesFromDB:(a,n,i)=>{n=n||(()=>{}),i=i||(()=>{});var c=$.indexedDB();try{var p=c.open($.DB_NAME(),$.DB_VERSION)}catch(m){return i(m)}p.onupgradeneeded=i,p.onsuccess=()=>{var m=p.result;try{var C=m.transaction([$.DB_STORE_NAME],"readonly")}catch(M){return void i(M)}var I=C.objectStore($.DB_STORE_NAME),E=0,x=0,D=a.length;function y(){x==0?n():i()}a.forEach(M=>{var S=I.get(M);S.onsuccess=()=>{$.analyzePath(M).exists&&$.unlink(M),$.createDataFile(lr.dirname(M),lr.basename(M),S.result,!0,!0,!0),++E+x==D&&y()},S.onerror=()=>{x++,E+x==D&&y()}}),C.onerror=i},p.onerror=i}},vr={DEFAULT_POLLMASK:5,calculateAt:function(a,n,i){if(lr.isAbs(n))return n;var c;if(a===-100?c=$.cwd():c=vr.getStreamFromFD(a).path,n.length==0){if(!i)throw new $.ErrnoError(44);return c}return lr.join2(c,n)},doStat:function(a,n,i){try{var c=a(n)}catch(I){if(I&&I.node&&lr.normalize(n)!==lr.normalize($.getPath(I.node)))return-54;throw I}jA[i>>2]=c.dev,jA[i+8>>2]=c.ino,jA[i+12>>2]=c.mode,es[i+16>>2]=c.nlink,jA[i+20>>2]=c.uid,jA[i+24>>2]=c.gid,jA[i+28>>2]=c.rdev,jr=[c.size>>>0,(fA=c.size,+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[i+40>>2]=jr[0],jA[i+44>>2]=jr[1],jA[i+48>>2]=4096,jA[i+52>>2]=c.blocks;var p=c.atime.getTime(),m=c.mtime.getTime(),C=c.ctime.getTime();return jr=[Math.floor(p/1e3)>>>0,(fA=Math.floor(p/1e3),+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[i+56>>2]=jr[0],jA[i+60>>2]=jr[1],es[i+64>>2]=p%1e3*1e3,jr=[Math.floor(m/1e3)>>>0,(fA=Math.floor(m/1e3),+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[i+72>>2]=jr[0],jA[i+76>>2]=jr[1],es[i+80>>2]=m%1e3*1e3,jr=[Math.floor(C/1e3)>>>0,(fA=Math.floor(C/1e3),+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[i+88>>2]=jr[0],jA[i+92>>2]=jr[1],es[i+96>>2]=C%1e3*1e3,jr=[c.ino>>>0,(fA=c.ino,+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[i+104>>2]=jr[0],jA[i+108>>2]=jr[1],0},doMsync:function(a,n,i,c,p){if(!$.isFile(n.node.mode))throw new $.ErrnoError(43);if(2&c)return 0;var m=Oo.slice(a,a+i);$.msync(n,m,p,i,c)},varargs:void 0,get:function(){return vr.varargs+=4,jA[vr.varargs-4>>2]},getStr:function(a){return _o(a)},getStreamFromFD:function(a){var n=$.getStream(a);if(!n)throw new $.ErrnoError(8);return n}},q2={};function Q0(){if(!Q0.strings){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g1||"./this.program"};for(var n in q2)q2[n]===void 0?delete a[n]:a[n]=q2[n];var i=[];for(var n in a)i.push(n+"="+a[n]);Q0.strings=i}return Q0.strings}var G4=function(a,n,i,c){a||(a=this),this.parent=a,this.mount=a.mount,this.mounted=null,this.id=$.nextInode++,this.name=n,this.mode=i,this.node_ops={},this.stream_ops={},this.rdev=c};Object.defineProperties(G4.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(a){a?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return $.isDir(this.mode)}},isDevice:{get:function(){return $.isChrdev(this.mode)}}}),$.FSNode=G4,$.staticInit(),ae.FS_createPath=$.createPath,ae.FS_createDataFile=$.createDataFile,ae.FS_unlink=$.unlink,ae.FS_createLazyFile=$.createLazyFile,ae.FS_createDevice=$.createDevice;var pk={g:function(a,n,i,c){Rn("Assertion failed: "+_o(a)+", at: "+[n?_o(n):"unknown filename",i,c?_o(c):"unknown function"])},u:function(a,n,i){throw new gk(a).init(n,i),a},d:function(a,n,i){vr.varargs=i;try{var c=vr.getStreamFromFD(a);switch(n){case 0:return(p=vr.get())<0?-28:$.createStream(c,p).fd;case 1:case 2:case 6:case 7:return 0;case 3:return c.flags;case 4:var p=vr.get();return c.flags|=p,0;case 5:return p=vr.get(),Hl[p+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return m=28,jA[YI()>>2]=m,-1}}catch(C){if($===void 0||!(C instanceof $.ErrnoError))throw C;return-C.errno}var m},q:function(a,n,i){try{var c=vr.getStreamFromFD(a);c.getdents||(c.getdents=$.readdir(c.path));for(var p=280,m=0,C=$.llseek(c,0,1),I=Math.floor(C/p);I<c.getdents.length&&m+p<=i;){var E,x,D=c.getdents[I];if(D===".")E=c.node.id,x=4;else if(D==="..")E=$.lookupPath(c.path,{parent:!0}).node.id,x=4;else{var y=$.lookupNode(c.node,D);E=y.id,x=$.isChrdev(y.mode)?2:$.isDir(y.mode)?4:$.isLink(y.mode)?10:8}jr=[E>>>0,(fA=E,+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[n+m>>2]=jr[0],jA[n+m+4>>2]=jr[1],jr=[(I+1)*p>>>0,(fA=(I+1)*p,+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[n+m+8>>2]=jr[0],jA[n+m+12>>2]=jr[1],Hl[n+m+16>>1]=280,Ns[n+m+18|0]=x,p1(D,Oo,n+m+19,256),m+=p,I+=1}return $.llseek(c,I*p,0),m}catch(M){if($===void 0||!(M instanceof $.ErrnoError))throw M;return-M.errno}},h:function(a,n,i){vr.varargs=i;try{var c=vr.getStreamFromFD(a);switch(n){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return c.tty?0:-59;case 21519:if(!c.tty)return-59;var p=vr.get();return jA[p>>2]=0,0;case 21520:return c.tty?-28:-59;case 21531:return p=vr.get(),$.ioctl(c,n,p);default:return-28}}catch(m){if($===void 0||!(m instanceof $.ErrnoError))throw m;return-m.errno}},e:function(a,n,i,c){vr.varargs=c;try{n=vr.getStr(n),n=vr.calculateAt(a,n);var p=c?vr.get():0;return $.open(n,i,p).fd}catch(m){if($===void 0||!(m instanceof $.ErrnoError))throw m;return-m.errno}},o:function(a){try{return a=vr.getStr(a),$.rmdir(a),0}catch(n){if($===void 0||!(n instanceof $.ErrnoError))throw n;return-n.errno}},n:function(a,n){try{return a=vr.getStr(a),vr.doStat($.stat,a,n)}catch(i){if($===void 0||!(i instanceof $.ErrnoError))throw i;return-i.errno}},p:function(a,n,i){try{return n=vr.getStr(n),n=vr.calculateAt(a,n),i===0?$.unlink(n):i===512?$.rmdir(n):Rn("Invalid flags passed to unlinkat"),0}catch(c){if($===void 0||!(c instanceof $.ErrnoError))throw c;return-c.errno}},i:function(){return!0},l:function(){Rn("")},f:function(){return Date.now()},j:function(a,n,i){Oo.copyWithin(a,n,n+i)},m:function(a){Oo.length,Rn("OOM")},r:function(a,n){var i=0;return Q0().forEach(function(c,p){var m=n+i;es[a+4*p>>2]=m,function(C,I){for(var E=0;E<C.length;++E)Ns[0|I++]=C.charCodeAt(E);Ns[0|I]=0}(c,m),i+=c.length+1}),0},s:function(a,n){var i=Q0();es[a>>2]=i.length;var c=0;return i.forEach(function(p){c+=p.length+1}),es[n>>2]=c,0},b:function(a){try{var n=vr.getStreamFromFD(a);return $.close(n),0}catch(i){if($===void 0||!(i instanceof $.ErrnoError))throw i;return i.errno}},t:function(a,n,i,c){try{var p=function(m,C,I,E){for(var x=0,D=0;D<I;D++){var y=es[C>>2],M=es[C+4>>2];C+=8;var S=$.read(m,Ns,y,M,E);if(S<0)return-1;if(x+=S,S<M)break}return x}(vr.getStreamFromFD(a),n,i);return es[c>>2]=p,0}catch(m){if($===void 0||!(m instanceof $.ErrnoError))throw m;return m.errno}},k:function(a,n,i,c,p){try{var m=(E=i)+2097152>>>0<4194305-!!(I=n)?(I>>>0)+4294967296*E:NaN;if(isNaN(m))return 61;var C=vr.getStreamFromFD(a);return $.llseek(C,m,c),jr=[C.position>>>0,(fA=C.position,+Math.abs(fA)>=1?fA>0?(0|Math.min(+Math.floor(fA/4294967296),4294967295))>>>0:~~+Math.ceil((fA-+(~~fA>>>0))/4294967296)>>>0:0)],jA[p>>2]=jr[0],jA[p+4>>2]=jr[1],C.getdents&&m===0&&c===0&&(C.getdents=null),0}catch(x){if($===void 0||!(x instanceof $.ErrnoError))throw x;return x.errno}var I,E},c:function(a,n,i,c){try{var p=function(m,C,I,E){for(var x=0,D=0;D<I;D++){var y=es[C>>2],M=es[C+4>>2];C+=8;var S=$.write(m,Ns,y,M,E);if(S<0)return-1;x+=S}return x}(vr.getStreamFromFD(a),n,i);return es[c>>2]=p,0}catch(m){if($===void 0||!(m instanceof $.ErrnoError))throw m;return m.errno}},a:Fl};(function(){var a,n={a:pk};function i(p,m){var C=p.exports;ae.asm=C,ae.asm.ua,j8(ae.asm.v),V8()}function c(p){i(p.instance)}if(W8(),ae.instantiateWasm)try{return ae.instantiateWasm(n,i)}catch(p){return Vo("Module.instantiateWasm callback failed with error: "+p),!1}a=c,async function(){return[]}().then(function(p){return Yo.instantiate(p,n)}).then(function(p){return p}).then(a,function(p){Vo("failed to asynchronously prepare wasm: "+p),Rn(p)})})(),ae.___wasm_call_ctors=function(){return(ae.___wasm_call_ctors=ae.asm.v).apply(null,arguments)};var U8=ae._emscripten_bind_VoidPtr___destroy___0=function(){return(U8=ae._emscripten_bind_VoidPtr___destroy___0=ae.asm.w).apply(null,arguments)},K8=ae._emscripten_bind_espeak_VOICE_get_name_0=function(){return(K8=ae._emscripten_bind_espeak_VOICE_get_name_0=ae.asm.x).apply(null,arguments)},X8=ae._emscripten_bind_espeak_VOICE_set_name_1=function(){return(X8=ae._emscripten_bind_espeak_VOICE_set_name_1=ae.asm.y).apply(null,arguments)},Z8=ae._emscripten_bind_espeak_VOICE_get_languages_1=function(){return(Z8=ae._emscripten_bind_espeak_VOICE_get_languages_1=ae.asm.z).apply(null,arguments)},J8=ae._emscripten_bind_espeak_VOICE_get_identifier_0=function(){return(J8=ae._emscripten_bind_espeak_VOICE_get_identifier_0=ae.asm.A).apply(null,arguments)},q8=ae._emscripten_bind_espeak_VOICE_set_identifier_1=function(){return(q8=ae._emscripten_bind_espeak_VOICE_set_identifier_1=ae.asm.B).apply(null,arguments)},$8=ae._emscripten_bind_espeak_VOICE_get_gender_0=function(){return($8=ae._emscripten_bind_espeak_VOICE_get_gender_0=ae.asm.C).apply(null,arguments)},eI=ae._emscripten_bind_espeak_VOICE_set_gender_1=function(){return(eI=ae._emscripten_bind_espeak_VOICE_set_gender_1=ae.asm.D).apply(null,arguments)},tI=ae._emscripten_bind_espeak_VOICE_get_age_0=function(){return(tI=ae._emscripten_bind_espeak_VOICE_get_age_0=ae.asm.E).apply(null,arguments)},AI=ae._emscripten_bind_espeak_VOICE_set_age_1=function(){return(AI=ae._emscripten_bind_espeak_VOICE_set_age_1=ae.asm.F).apply(null,arguments)},rI=ae._emscripten_bind_espeak_VOICE_get_variant_0=function(){return(rI=ae._emscripten_bind_espeak_VOICE_get_variant_0=ae.asm.G).apply(null,arguments)},sI=ae._emscripten_bind_espeak_VOICE_set_variant_1=function(){return(sI=ae._emscripten_bind_espeak_VOICE_set_variant_1=ae.asm.H).apply(null,arguments)},aI=ae._emscripten_bind_espeak_VOICE_get_xx1_0=function(){return(aI=ae._emscripten_bind_espeak_VOICE_get_xx1_0=ae.asm.I).apply(null,arguments)},nI=ae._emscripten_bind_espeak_VOICE_set_xx1_1=function(){return(nI=ae._emscripten_bind_espeak_VOICE_set_xx1_1=ae.asm.J).apply(null,arguments)},iI=ae._emscripten_bind_espeak_VOICE_get_score_0=function(){return(iI=ae._emscripten_bind_espeak_VOICE_get_score_0=ae.asm.K).apply(null,arguments)},oI=ae._emscripten_bind_espeak_VOICE_set_score_1=function(){return(oI=ae._emscripten_bind_espeak_VOICE_set_score_1=ae.asm.L).apply(null,arguments)},lI=ae._emscripten_bind_espeak_VOICE_get_spare_0=function(){return(lI=ae._emscripten_bind_espeak_VOICE_get_spare_0=ae.asm.M).apply(null,arguments)},cI=ae._emscripten_bind_espeak_VOICE_set_spare_1=function(){return(cI=ae._emscripten_bind_espeak_VOICE_set_spare_1=ae.asm.N).apply(null,arguments)},uI=ae._emscripten_bind_espeak_VOICE___destroy___0=function(){return(uI=ae._emscripten_bind_espeak_VOICE___destroy___0=ae.asm.O).apply(null,arguments)},dI=ae._emscripten_bind_espeak_EVENT_get_type_0=function(){return(dI=ae._emscripten_bind_espeak_EVENT_get_type_0=ae.asm.P).apply(null,arguments)},fI=ae._emscripten_bind_espeak_EVENT_get_unique_identifier_0=function(){return(fI=ae._emscripten_bind_espeak_EVENT_get_unique_identifier_0=ae.asm.Q).apply(null,arguments)},gI=ae._emscripten_bind_espeak_EVENT_get_text_position_0=function(){return(gI=ae._emscripten_bind_espeak_EVENT_get_text_position_0=ae.asm.R).apply(null,arguments)},pI=ae._emscripten_bind_espeak_EVENT_get_length_0=function(){return(pI=ae._emscripten_bind_espeak_EVENT_get_length_0=ae.asm.S).apply(null,arguments)},hI=ae._emscripten_bind_espeak_EVENT_get_audio_position_0=function(){return(hI=ae._emscripten_bind_espeak_EVENT_get_audio_position_0=ae.asm.T).apply(null,arguments)},mI=ae._emscripten_bind_espeak_EVENT_get_sample_0=function(){return(mI=ae._emscripten_bind_espeak_EVENT_get_sample_0=ae.asm.U).apply(null,arguments)},CI=ae._emscripten_bind_espeak_EVENT_get_user_data_0=function(){return(CI=ae._emscripten_bind_espeak_EVENT_get_user_data_0=ae.asm.V).apply(null,arguments)},bI=ae._emscripten_bind_espeak_EVENT___destroy___0=function(){return(bI=ae._emscripten_bind_espeak_EVENT___destroy___0=ae.asm.W).apply(null,arguments)},II=ae._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=function(){return(II=ae._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=ae.asm.X).apply(null,arguments)},wI=ae._emscripten_bind_eSpeakNGWorker_synth__2=function(){return(wI=ae._emscripten_bind_eSpeakNGWorker_synth__2=ae.asm.Y).apply(null,arguments)},kI=ae._emscripten_bind_eSpeakNGWorker_synth_ipa__2=function(){return(kI=ae._emscripten_bind_eSpeakNGWorker_synth_ipa__2=ae.asm.Z).apply(null,arguments)},EI=ae._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=function(){return(EI=ae._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=ae.asm._).apply(null,arguments)},MI=ae._emscripten_bind_eSpeakNGWorker_set_voice_2=function(){return(MI=ae._emscripten_bind_eSpeakNGWorker_set_voice_2=ae.asm.$).apply(null,arguments)},vI=ae._emscripten_bind_eSpeakNGWorker_set_voice_3=function(){return(vI=ae._emscripten_bind_eSpeakNGWorker_set_voice_3=ae.asm.aa).apply(null,arguments)},xI=ae._emscripten_bind_eSpeakNGWorker_set_voice_4=function(){return(xI=ae._emscripten_bind_eSpeakNGWorker_set_voice_4=ae.asm.ba).apply(null,arguments)},yI=ae._emscripten_bind_eSpeakNGWorker_set_voice_5=function(){return(yI=ae._emscripten_bind_eSpeakNGWorker_set_voice_5=ae.asm.ca).apply(null,arguments)},BI=ae._emscripten_bind_eSpeakNGWorker_get_voices_1=function(){return(BI=ae._emscripten_bind_eSpeakNGWorker_get_voices_1=ae.asm.da).apply(null,arguments)},DI=ae._emscripten_bind_eSpeakNGWorker_set_voices_2=function(){return(DI=ae._emscripten_bind_eSpeakNGWorker_set_voices_2=ae.asm.ea).apply(null,arguments)},PI=ae._emscripten_bind_eSpeakNGWorker_get_samplerate_0=function(){return(PI=ae._emscripten_bind_eSpeakNGWorker_get_samplerate_0=ae.asm.fa).apply(null,arguments)},TI=ae._emscripten_bind_eSpeakNGWorker_get_rate_0=function(){return(TI=ae._emscripten_bind_eSpeakNGWorker_get_rate_0=ae.asm.ga).apply(null,arguments)},GI=ae._emscripten_bind_eSpeakNGWorker_set_rate_1=function(){return(GI=ae._emscripten_bind_eSpeakNGWorker_set_rate_1=ae.asm.ha).apply(null,arguments)},QI=ae._emscripten_bind_eSpeakNGWorker_get_pitch_0=function(){return(QI=ae._emscripten_bind_eSpeakNGWorker_get_pitch_0=ae.asm.ia).apply(null,arguments)},SI=ae._emscripten_bind_eSpeakNGWorker_set_pitch_1=function(){return(SI=ae._emscripten_bind_eSpeakNGWorker_set_pitch_1=ae.asm.ja).apply(null,arguments)},FI=ae._emscripten_bind_eSpeakNGWorker___destroy___0=function(){return(FI=ae._emscripten_bind_eSpeakNGWorker___destroy___0=ae.asm.ka).apply(null,arguments)},OI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=function(){return(OI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=ae.asm.la).apply(null,arguments)},_I=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=function(){return(_I=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=ae.asm.ma).apply(null,arguments)},NI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=function(){return(NI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=ae.asm.na).apply(null,arguments)},zI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=function(){return(zI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=ae.asm.oa).apply(null,arguments)},LI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=function(){return(LI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=ae.asm.pa).apply(null,arguments)},RI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=function(){return(RI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=ae.asm.qa).apply(null,arguments)},jI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=function(){return(jI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=ae.asm.ra).apply(null,arguments)},WI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=function(){return(WI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=ae.asm.sa).apply(null,arguments)},VI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=function(){return(VI=ae._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=ae.asm.ta).apply(null,arguments)},YI=ae.___errno_location=function(){return(YI=ae.___errno_location=ae.asm.va).apply(null,arguments)};ae._free=function(){return(ae._free=ae.asm.wa).apply(null,arguments)},ae._malloc=function(){return(ae._malloc=ae.asm.xa).apply(null,arguments)};var Ul,HI=ae.___cxa_is_pointer_type=function(){return(HI=ae.___cxa_is_pointer_type=ae.asm.ya).apply(null,arguments)};function UI(a){function n(){Ul||(Ul=!0,ae.calledRun=!0,O8||(R8=!0,ae.noFSInit||$.init.initialized||$.init(),$.ignorePermissions=!1,J2(L8),ae.onRuntimeInitialized&&ae.onRuntimeInitialized(),function(){if(ae.postRun)for(typeof ae.postRun=="function"&&(ae.postRun=[ae.postRun]);ae.postRun.length;)i=ae.postRun.shift(),T4.unshift(i);var i;J2(T4)}()))}Ji>0||(function(){if(ae.preRun)for(typeof ae.preRun=="function"&&(ae.preRun=[ae.preRun]);ae.preRun.length;)i=ae.preRun.shift(),P4.unshift(i);var i;J2(P4)}(),Ji>0||(ae.setStatus?(ae.setStatus("Running..."),setTimeout(function(){setTimeout(function(){ae.setStatus("")},1),n()},1)):n()))}if(ae.___start_em_js=132724,ae.___stop_em_js=132822,ae.addRunDependency=W8,ae.removeRunDependency=V8,ae.FS_createPath=$.createPath,ae.FS_createDataFile=$.createDataFile,ae.FS_createLazyFile=$.createLazyFile,ae.FS_createDevice=$.createDevice,ae.FS_unlink=$.unlink,G0=function a(){Ul||UI(),Ul||(G0=a)},ae.preInit)for(typeof ae.preInit=="function"&&(ae.preInit=[ae.preInit]);ae.preInit.length>0;)ae.preInit.pop()();function aa(){}function Kl(a){return(a||aa).__cache__}function No(a,n){var i=Kl(n),c=i[a];return c||((c=Object.create((n||aa).prototype)).ptr=a,i[a]=c)}UI(),aa.prototype=Object.create(aa.prototype),aa.prototype.constructor=aa,aa.prototype.__class__=aa,aa.__cache__={},ae.WrapperObject=aa,ae.getCache=Kl,ae.wrapPointer=No,ae.castObject=function(a,n){return No(a.ptr,n)},ae.NULL=No(0),ae.destroy=function(a){if(!a.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";a.__destroy__(),delete Kl(a.__class__)[a.ptr]},ae.compare=function(a,n){return a.ptr===n.ptr},ae.getPointer=function(a){return a.ptr},ae.getClass=function(a){return a.__class__};var ir={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(ir.needed){for(var a=0;a<ir.temps.length;a++)ae._free(ir.temps[a]);ir.temps.length=0,ae._free(ir.buffer),ir.buffer=0,ir.size+=ir.needed,ir.needed=0}ir.buffer||(ir.size+=128,ir.buffer=ae._malloc(ir.size),X2(ir.buffer)),ir.pos=0},alloc:function(a,n){X2(ir.buffer);var i,c=n.BYTES_PER_ELEMENT,p=a.length*c;return p=p+7&-8,ir.pos+p>=ir.size?(X2(p>0),ir.needed+=p,i=ae._malloc(p),ir.temps.push(i)):(i=ir.buffer+ir.pos,ir.pos+=p),i},copy:function(a,n,i){switch(i>>>=0,n.BYTES_PER_ELEMENT){case 2:i>>>=1;break;case 4:i>>>=2;break;case 8:i>>>=3}for(var c=0;c<a.length;c++)n[i+c]=a[c]}};function Vi(a){if(typeof a=="string"){var n=Y8(a),i=ir.alloc(n,Ns);return ir.copy(n,Ns,i),i}return a}function On(){throw"cannot construct a VoidPtr, no constructor in IDL"}function Yt(){throw"cannot construct a espeak_VOICE, no constructor in IDL"}function xA(){throw"cannot construct a espeak_EVENT, no constructor in IDL"}function mA(){this.ptr=II(),Kl(mA)[this.ptr]=this}On.prototype=Object.create(aa.prototype),On.prototype.constructor=On,On.prototype.__class__=On,On.__cache__={},ae.VoidPtr=On,On.prototype.__destroy__=On.prototype.__destroy__=function(){var a=this.ptr;U8(a)},Yt.prototype=Object.create(aa.prototype),Yt.prototype.constructor=Yt,Yt.prototype.__class__=Yt,Yt.__cache__={},ae.espeak_VOICE=Yt,Yt.prototype.get_name=Yt.prototype.get_name=function(){var a=this.ptr;return _o(K8(a))},Yt.prototype.set_name=Yt.prototype.set_name=function(a){var n=this.ptr;ir.prepare(),a=a&&typeof a=="object"?a.ptr:Vi(a),X8(n,a)},Object.defineProperty(Yt.prototype,"name",{get:Yt.prototype.get_name,set:Yt.prototype.set_name}),Yt.prototype.get_languages=Yt.prototype.get_languages=function(a){var n=this.ptr;return a&&typeof a=="object"&&(a=a.ptr),Z8(n,a)},Object.defineProperty(Yt.prototype,"languages",{get:Yt.prototype.get_languages}),Yt.prototype.get_identifier=Yt.prototype.get_identifier=function(){var a=this.ptr;return _o(J8(a))},Yt.prototype.set_identifier=Yt.prototype.set_identifier=function(a){var n=this.ptr;ir.prepare(),a=a&&typeof a=="object"?a.ptr:Vi(a),q8(n,a)},Object.defineProperty(Yt.prototype,"identifier",{get:Yt.prototype.get_identifier,set:Yt.prototype.set_identifier}),Yt.prototype.get_gender=Yt.prototype.get_gender=function(){var a=this.ptr;return $8(a)},Yt.prototype.set_gender=Yt.prototype.set_gender=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),eI(n,a)},Object.defineProperty(Yt.prototype,"gender",{get:Yt.prototype.get_gender,set:Yt.prototype.set_gender}),Yt.prototype.get_age=Yt.prototype.get_age=function(){var a=this.ptr;return tI(a)},Yt.prototype.set_age=Yt.prototype.set_age=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),AI(n,a)},Object.defineProperty(Yt.prototype,"age",{get:Yt.prototype.get_age,set:Yt.prototype.set_age}),Yt.prototype.get_variant=Yt.prototype.get_variant=function(){var a=this.ptr;return rI(a)},Yt.prototype.set_variant=Yt.prototype.set_variant=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),sI(n,a)},Object.defineProperty(Yt.prototype,"variant",{get:Yt.prototype.get_variant,set:Yt.prototype.set_variant}),Yt.prototype.get_xx1=Yt.prototype.get_xx1=function(){var a=this.ptr;return aI(a)},Yt.prototype.set_xx1=Yt.prototype.set_xx1=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),nI(n,a)},Object.defineProperty(Yt.prototype,"xx1",{get:Yt.prototype.get_xx1,set:Yt.prototype.set_xx1}),Yt.prototype.get_score=Yt.prototype.get_score=function(){var a=this.ptr;return iI(a)},Yt.prototype.set_score=Yt.prototype.set_score=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),oI(n,a)},Object.defineProperty(Yt.prototype,"score",{get:Yt.prototype.get_score,set:Yt.prototype.set_score}),Yt.prototype.get_spare=Yt.prototype.get_spare=function(){var a=this.ptr;return lI(a)},Yt.prototype.set_spare=Yt.prototype.set_spare=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),cI(n,a)},Object.defineProperty(Yt.prototype,"spare",{get:Yt.prototype.get_spare,set:Yt.prototype.set_spare}),Yt.prototype.__destroy__=Yt.prototype.__destroy__=function(){var a=this.ptr;uI(a)},xA.prototype=Object.create(aa.prototype),xA.prototype.constructor=xA,xA.prototype.__class__=xA,xA.__cache__={},ae.espeak_EVENT=xA,xA.prototype.get_type=xA.prototype.get_type=function(){var a=this.ptr;return dI(a)},Object.defineProperty(xA.prototype,"type",{get:xA.prototype.get_type}),xA.prototype.get_unique_identifier=xA.prototype.get_unique_identifier=function(){var a=this.ptr;return fI(a)},Object.defineProperty(xA.prototype,"unique_identifier",{get:xA.prototype.get_unique_identifier}),xA.prototype.get_text_position=xA.prototype.get_text_position=function(){var a=this.ptr;return gI(a)},Object.defineProperty(xA.prototype,"text_position",{get:xA.prototype.get_text_position}),xA.prototype.get_length=xA.prototype.get_length=function(){var a=this.ptr;return pI(a)},Object.defineProperty(xA.prototype,"length",{get:xA.prototype.get_length}),xA.prototype.get_audio_position=xA.prototype.get_audio_position=function(){var a=this.ptr;return hI(a)},Object.defineProperty(xA.prototype,"audio_position",{get:xA.prototype.get_audio_position}),xA.prototype.get_sample=xA.prototype.get_sample=function(){var a=this.ptr;return mI(a)},Object.defineProperty(xA.prototype,"sample",{get:xA.prototype.get_sample}),xA.prototype.get_user_data=xA.prototype.get_user_data=function(){var a=this.ptr;return CI(a)},Object.defineProperty(xA.prototype,"user_data",{get:xA.prototype.get_user_data}),xA.prototype.__destroy__=xA.prototype.__destroy__=function(){var a=this.ptr;bI(a)},mA.prototype=Object.create(aa.prototype),mA.prototype.constructor=mA,mA.prototype.__class__=mA,mA.__cache__={},ae.eSpeakNGWorker=mA,mA.prototype.synth_=mA.prototype.synth_=function(a,n){var i=this.ptr;ir.prepare(),a=a&&typeof a=="object"?a.ptr:Vi(a),n&&typeof n=="object"&&(n=n.ptr),wI(i,a,n)},mA.prototype.synth_ipa_=mA.prototype.synth_ipa_=function(a,n){var i=this.ptr;return ir.prepare(),a=a&&typeof a=="object"?a.ptr:Vi(a),n=n&&typeof n=="object"?n.ptr:Vi(n),kI(i,a,n)},mA.prototype.getSizeOfEventStruct_=mA.prototype.getSizeOfEventStruct_=function(){var a=this.ptr;return EI(a)},mA.prototype.set_voice=mA.prototype.set_voice=function(a,n,i,c,p){var m=this.ptr;return ir.prepare(),a=a&&typeof a=="object"?a.ptr:Vi(a),n=n&&typeof n=="object"?n.ptr:Vi(n),i&&typeof i=="object"&&(i=i.ptr),c&&typeof c=="object"&&(c=c.ptr),p&&typeof p=="object"&&(p=p.ptr),i===void 0?MI(m,a,n):c===void 0?vI(m,a,n,i):p===void 0?xI(m,a,n,i,c):yI(m,a,n,i,c,p)},mA.prototype.get_voices=mA.prototype.get_voices=function(a){var n=this.ptr;return a&&typeof a=="object"&&(a=a.ptr),No(BI(n,a),Yt)},mA.prototype.set_voices=mA.prototype.set_voices=function(a,n){var i=this.ptr;ir.prepare(),a&&typeof a=="object"&&(a=a.ptr),n&&typeof n=="object"&&(n=n.ptr),DI(i,a,n)},Object.defineProperty(mA.prototype,"voices",{get:mA.prototype.get_voices,set:mA.prototype.set_voices}),mA.prototype.get_samplerate=mA.prototype.get_samplerate=function(){var a=this.ptr;return PI(a)},Object.defineProperty(mA.prototype,"samplerate",{get:mA.prototype.get_samplerate}),mA.prototype.get_rate=mA.prototype.get_rate=function(){var a=this.ptr;return TI(a)},mA.prototype.set_rate=mA.prototype.set_rate=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),GI(n,a)},Object.defineProperty(mA.prototype,"rate",{get:mA.prototype.get_rate,set:mA.prototype.set_rate}),mA.prototype.get_pitch=mA.prototype.get_pitch=function(){var a=this.ptr;return QI(a)},mA.prototype.set_pitch=mA.prototype.set_pitch=function(a){var n=this.ptr;a&&typeof a=="object"&&(a=a.ptr),SI(n,a)},Object.defineProperty(mA.prototype,"pitch",{get:mA.prototype.get_pitch,set:mA.prototype.set_pitch}),mA.prototype.__destroy__=mA.prototype.__destroy__=function(){var a=this.ptr;FI(a)},function(){function a(){ae.espeakEVENT_LIST_TERMINATED=OI(),ae.espeakEVENT_WORD=_I(),ae.espeakEVENT_SENTENCE=NI(),ae.espeakEVENT_MARK=zI(),ae.espeakEVENT_PLAY=LI(),ae.espeakEVENT_END=RI(),ae.espeakEVENT_MSG_TERMINATED=jI(),ae.espeakEVENT_PHONEME=WI(),ae.espeakEVENT_SAMPLERATE=VI()}R8?a():j8(a)}(),mA.prototype.list_voices=function(){for(var a,n=[],i=this.get_voices(a=0);i.ptr!=0;i=this.get_voices(++a)){let I=function(E){for(var x="",D=E,y=i.get_languages(D++);y!=0;)x+=String.fromCharCode(y),y=i.get_languages(D++);return x};for(var c={name:i.get_name(),identifier:i.get_identifier(),languages:[]},p=0,m=i.get_languages(p);m!=0;){var C={priority:m,name:I(++p)};c.languages.push(C),p+=C.name.length+1,m=i.get_languages(p)}n.push(c)}return n};var hk=["list_terminated","word","sentence","mark","play","end","msg_terminated","phoneme","samplerate"];mA.prototype.synthesize=function(a,n){var i=this.getSizeOfEventStruct_(),c=addFunction(function(p,m,C){for(var I=new Float32Array(2*m),E=0;E<m;E++)I[2*E]=Math.max(-1,Math.min(1,fk(p+2*E,"i16")/32768)),I[2*E+1]=I[2*E];var x=[];for(p=C,ev=No(p,xA);ev.get_type()!=ae.espeakEVENT_LIST_TERMINATED;ev=No(p+=i,xA))x.push({type:hk[ev.get_type()],text_position:ev.get_text_position(),word_length:ev.get_length(),audio_position:ev.get_audio_position()});return n(I,x)?1:0});this.synth_(a,c),removeFunction(c)},mA.prototype.synthesize_ipa=function(a,n){var i="espeak-ng-ipa-tmp-"+Math.random().toString().substring(2),c="",p=this.synth_ipa_(a,i);return p==0&&(c=$.readFile(i,{encoding:"utf8"})),$.unlink(i),{code:p,ipa:c}};const KI=new Promise(a=>{ae.calledRun?a(new ae.eSpeakNGWorker):ae.onRuntimeInitialized=()=>a(new ae.eSpeakNGWorker)}),mk=["en"],Ck=KI.then(a=>{const n=a.list_voices().map(({name:c,identifier:p,languages:m})=>({name:c,identifier:p,languages:m.filter(C=>mk.includes(C.name.split("-")[0]))})).filter(c=>c.languages.length>0),i=new Set;for(const c of n){i.add(c.identifier);for(const p of c.languages)i.add(p.name)}return{voices:n,identifiers:i}}),bk=async(a,n="en-us")=>{const i=await KI,{identifiers:c}=await Ck;if(!c.has(n))throw new Error(`Invalid language identifier: "${n}". Should be one of: ${Array.from(c).toSorted().join(", ")}.`);return i.set_voice(n),i.synthesize_ipa(a).ipa?.split(`
`).filter(p=>p.length>0)??[]};var Cl={};function Ik(a){if(a.includes("."))return a;if(a.includes(":")){let[m,C]=a.split(":").map(Number);return C===0?`${m} o'clock`:C<10?`${m} oh ${C}`:`${m} ${C}`}let n=parseInt(a.slice(0,4),10);if(n<1100||n%1e3<10)return a;let i=a.slice(0,2),c=parseInt(a.slice(2,4),10),p=a.endsWith("s")?"s":"";if(n%1e3>=100&&n%1e3<=999){if(c===0)return`${i} hundred${p}`;if(c<10)return`${i} oh ${c}${p}`}return`${i} ${c}${p}`}function wk(a){const n=a[0]==="$"?"dollar":"pound";if(isNaN(Number(a.slice(1))))return`${a.slice(1)} ${n}s`;if(!a.includes(".")){let m=a.slice(1)==="1"?"":"s";return`${a.slice(1)} ${n}${m}`}const[i,c]=a.slice(1).split("."),p=parseInt(c.padEnd(2,"0"),10);return`${i} ${n}${i==="1"?"":"s"} and ${p} ${a[0]==="$"?p===1?"cent":"cents":p===1?"penny":"pence"}`}function kk(a){let[n,i]=a.split(".");return`${n} point ${i.split("").join(" ")}`}const Ek=new RegExp(`(\\s*[${Q4=';:,.!?¡¿—…"«»“”(){}[]',Q4.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]+\\s*)+`,"g");var Q4;async function S4(a,n="a",i=!0){i&&(a=function(I){return I.replace(/[‘’]/g,"'").replace(/«/g,"“").replace(/»/g,"”").replace(/[“”]/g,'"').replace(/\(/g,"«").replace(/\)/g,"»").replace(/、/g,", ").replace(/。/g,". ").replace(/！/g,"! ").replace(/，/g,", ").replace(/：/g,": ").replace(/；/g,"; ").replace(/？/g,"? ").replace(/[^\S \n]/g," ").replace(/  +/," ").replace(/(?<=\n) +(?=\n)/g,"").replace(/\bD[Rr]\.(?= [A-Z])/g,"Doctor").replace(/\b(?:Mr\.|MR\.(?= [A-Z]))/g,"Mister").replace(/\b(?:Ms\.|MS\.(?= [A-Z]))/g,"Miss").replace(/\b(?:Mrs\.|MRS\.(?= [A-Z]))/g,"Mrs").replace(/\betc\.(?! [A-Z])/gi,"etc").replace(/\b(y)eah?\b/gi,"$1e'a").replace(/\d*\.\d+|\b\d{4}s?\b|(?<!:)\b(?:[1-9]|1[0-2]):[0-5]\d\b(?!:)/g,Ik).replace(/(?<=\d),(?=\d)/g,"").replace(/[$£]\d+(?:\.\d+)?(?: hundred| thousand| (?:[bm]|tr)illion)*\b|[$£]\d+\.\d\d?\b/gi,wk).replace(/\d*\.\d+/g,kk).replace(/(?<=\d)-(?=\d)/g," to ").replace(/(?<=\d)S/g," S").replace(/(?<=[BCDFGHJ-NP-TV-Z])'?s\b/g,"'S").replace(/(?<=X')S\b/g,"s").replace(/(?:[A-Za-z]\.){2,} [a-z]/g,E=>E.replace(/\./g,"-")).replace(/(?<=[A-Z])\.(?=[A-Z])/gi,"-").trim()}(a));const c=function(I,E){const x=[];let D=0;for(const y of I.matchAll(E)){const M=y[0];D<y.index&&x.push({match:!1,text:I.slice(D,y.index)}),M.length>0&&x.push({match:!0,text:M}),D=y.index+M.length}return D<I.length&&x.push({match:!1,text:I.slice(D)}),x}(a,Ek),p=n==="a"?"en-us":"en";let C=(await Promise.all(c.map(async({match:I,text:E})=>I?E:(await bk(E,p)).join(" ")))).join("").replace(/kəkˈoːɹoʊ/g,"kˈoʊkəɹoʊ").replace(/kəkˈɔːɹəʊ/g,"kˈəʊkəɹəʊ").replace(/ʲ/g,"j").replace(/r/g,"ɹ").replace(/x/g,"k").replace(/ɬ/g,"l").replace(/(?<=[a-zɹː])(?=hˈʌndɹɪd)/g," ").replace(/ z(?=[;:,.!?¡¿—…"«»“” ]|$)/g,"z");return n==="a"&&(C=C.replace(/(?<=nˈaɪn)ti(?!ː)/g,"di")),C.trim()}function $2(a,n=!0){return".!?…。？！".includes(a)||n&&a===`
`}function Mk(a,n){let i=n;for(;i<a.length&&!/\s/.test(a[i]);)++i;return a.substring(n,i)}const vk=new Set(["mr","mrs","ms","dr","prof","sr","jr","sgt","col","gen","rep","sen","gov","lt","maj","capt","st","mt","etc","co","inc","ltd","dept","vs","p","pg","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","sun","mon","tu","tue","tues","wed","th","thu","thur","thurs","fri","sat"]);function xk(a){return a=a.replace(/['’]s$/i,"").replace(/\.+$/,""),vk.has(a.toLowerCase())}const XI=new Map([[")","("],["]","["],["}","{"],["》","《"],["〉","〈"],["›","‹"],["»","«"],["〉","〈"],["」","「"],["』","『"],["〕","〔"],["】","【"]]),yk=new Set(XI.values());function Bk(a,n,i,c){if(a==='"'||a==="'")return a==="'"&&i>0&&i<c.length-1&&/[A-Za-z]/.test(c[i-1])&&/[A-Za-z]/.test(c[i+1])?void 0:void(n.length&&n.at(-1)===a?n.pop():n.push(a));if(yk.has(a))return void n.push(a);const p=XI.get(a);p&&n.length&&n.at(-1)===p&&n.pop()}class Xl{constructor(){this._buffer="",this._sentences=[],this._resolver=null,this._closed=!1}push(...n){for(const i of n)this._buffer+=i,this._process()}close(){if(this._closed)throw new Error("Stream is already closed.");this._closed=!0,this.flush()}flush(){const n=this._buffer.trim();n.length>0&&this._sentences.push(n),this._buffer="",this._resolve()}_resolve(){this._resolver&&(this._resolver(),this._resolver=null)}_process(){let n=0;const i=this._buffer,c=i.length;let p=0,m=[];const C=I=>{let E=I;for(;E+1<c&&$2(i[E+1],!1);)++E;for(;E+1<c&&(x=i[E+1],`"')]}」』`.includes(x));)++E;var x;let D=E+1;for(;D<c&&/\s/.test(i[D]);)++D;return{end:E,nextNonSpace:D}};for(;p<c;){const I=i[p];if(Bk(I,m,p,i),m.length===0&&$2(I)){const E=i.slice(n,p);if(/(^|\n)\d+$/.test(E)){++p;continue}const{end:x,nextNonSpace:D}=C(p);if(p===D-1&&I!==`
`){++p;continue}if(D===c)break;let y=p-1;for(;y>=0&&/\S/.test(i[y]);)y--;y=Math.max(n,y+1);const M=Mk(i,y);if(!M){++p;continue}if((/https?[,:]\/\//.test(M)||M.includes("@"))&&!$2(M.at(-1))){p=y+M.length;continue}if(xk(M)){++p;continue}if(/^([A-Za-z]\.)+$/.test(M)&&D<c&&/[A-Z]/.test(i[D])){++p;continue}if(I==="."&&D<c&&/[a-z]/.test(i[D])){++p;continue}const S=i.substring(n,x+1).trim();if(S==="..."||S==="…"){++p;continue}S&&this._sentences.push(S),p=n=x+1}else++p}this._buffer=i.substring(n),this._sentences.length>0&&this._resolve()}async*[Symbol.asyncIterator](){if(this._resolver)throw new Error("Another iterator is already active.");for(;;)if(this._sentences.length>0)yield this._sentences.shift();else{if(this._closed)break;await new Promise(n=>{this._resolver=n})}}[Symbol.iterator](){this.flush();const n=this._sentences[Symbol.iterator]();return this._sentences=[],n}get sentences(){return this._sentences}}const C0=Object.freeze({af_heart:{name:"Heart",language:"en-us",gender:"Female",traits:"❤️",targetQuality:"A",overallGrade:"A"},af_alloy:{name:"Alloy",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_aoede:{name:"Aoede",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_bella:{name:"Bella",language:"en-us",gender:"Female",traits:"🔥",targetQuality:"A",overallGrade:"A-"},af_jessica:{name:"Jessica",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_kore:{name:"Kore",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_nicole:{name:"Nicole",language:"en-us",gender:"Female",traits:"🎧",targetQuality:"B",overallGrade:"B-"},af_nova:{name:"Nova",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_river:{name:"River",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_sarah:{name:"Sarah",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_sky:{name:"Sky",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C-"},am_adam:{name:"Adam",language:"en-us",gender:"Male",targetQuality:"D",overallGrade:"F+"},am_echo:{name:"Echo",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_eric:{name:"Eric",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_fenrir:{name:"Fenrir",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_liam:{name:"Liam",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_michael:{name:"Michael",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_onyx:{name:"Onyx",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_puck:{name:"Puck",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_santa:{name:"Santa",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D-"},bf_emma:{name:"Emma",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"B",overallGrade:"B-"},bf_isabella:{name:"Isabella",language:"en-gb",gender:"Female",targetQuality:"B",overallGrade:"C"},bm_george:{name:"George",language:"en-gb",gender:"Male",targetQuality:"B",overallGrade:"C"},bm_lewis:{name:"Lewis",language:"en-gb",gender:"Male",targetQuality:"C",overallGrade:"D+"},bf_alice:{name:"Alice",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bf_lily:{name:"Lily",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bm_daniel:{name:"Daniel",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},bm_fable:{name:"Fable",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"B",overallGrade:"C"}}),eu=new Map;async function Dk(a){if(eu.has(a))return eu.get(a);const n=new Float32Array(await async function(i){if(Cl&&Object.hasOwn(Cl,"readFile")){const I=typeof __dirname<"u"?__dirname:import.meta.dirname,E=Cl.resolve(I,`../voices/${i}.bin`),{buffer:x}=await Cl.readFile(E);return x}const c=`https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/voices/${i}.bin`;let p;try{p=await caches.open("kokoro-voices");const I=await p.match(c);if(I)return await I.arrayBuffer()}catch(I){console.warn("Unable to open cache",I)}const m=await fetch(c),C=await m.arrayBuffer();if(p)try{await p.put(c,new Response(C,{headers:m.headers}))}catch(I){console.warn("Unable to cache file",I)}return C}(a));return eu.set(a,n),n}class h1{constructor(n,i){this.model=n,this.tokenizer=i}static async from_pretrained(n,{dtype:i="fp32",device:c=null,progress_callback:p=null}={}){const m=lk.from_pretrained(n,{progress_callback:p,dtype:i,device:c}),C=ik.from_pretrained(n,{progress_callback:p}),I=await Promise.all([m,C]);return new h1(...I)}get voices(){return C0}list_voices(){console.table(C0)}_validate_voice(n){if(!C0.hasOwnProperty(n))throw console.error(`Voice "${n}" not found. Available voices:`),console.table(C0),new Error(`Voice "${n}" not found. Should be one of: ${Object.keys(C0).join(", ")}.`);return n.at(0)}async generate(n,{voice:i="af_heart",speed:c=1}={}){const p=this._validate_voice(i),m=await S4(n,p),{input_ids:C}=this.tokenizer(m,{truncation:!0});return this.generate_from_ids(C,{voice:i,speed:c})}async generate_from_ids(n,{voice:i="af_heart",speed:c=1}={}){const p=256*Math.min(Math.max(n.dims.at(-1)-2,0),509),m=(await Dk(i)).slice(p,p+256),C={input_ids:n,style:new Wo("float32",m,[1,256]),speed:new Wo("float32",[c],[1])},{waveform:I}=await this.model(C);return new ok(I.data,24e3)}async*stream(n,{voice:i="af_heart",speed:c=1,split_pattern:p=null}={}){const m=this._validate_voice(i);let C;if(n instanceof Xl)C=n;else{if(typeof n!="string")throw new Error("Invalid input type. Expected string or TextSplitterStream.");{C=new Xl;const I=p?n.split(p).map(E=>E.trim()).filter(E=>E.length>0):[n];C.push(...I)}}for await(const I of C){const E=await S4(I,m),{input_ids:x}=this.tokenizer(E,{truncation:!0}),D=await this.generate_from_ids(x,{voice:i,speed:c});yield{text:I,phonemes:E,audio:D}}}}const Po="0.32.1";let F4=!1,S0,ZI,Su,JI,qI,$I;function Pk(a,n={auto:!1}){if(F4)throw new Error(`you must \`import '@anthropic-ai/sdk/shims/${a.kind}'\` before importing anything else from @anthropic-ai/sdk`);if(S0)throw new Error(`can't \`import '@anthropic-ai/sdk/shims/${a.kind}'\` after \`import '@anthropic-ai/sdk/shims/${S0}'\``);F4=n.auto,S0=a.kind,ZI=a.fetch,Su=a.File,JI=a.ReadableStream,qI=a.getDefaultAgent,$I=a.fileFromPath}class Tk{constructor(n){this.body=n}get[Symbol.toStringTag](){return"MultipartBody"}}function Gk({manuallyImported:a}={}){const n=a?"You may need to use polyfills":"Add one of these imports before your first `import … from '@anthropic-ai/sdk'`:\n- `import '@anthropic-ai/sdk/shims/node'` (if you're running on Node)\n- `import '@anthropic-ai/sdk/shims/web'` (otherwise)\n";let i,c,p,m;try{i=fetch,c=Request,p=Response,m=Headers}catch(C){throw new Error(`this environment is missing the following Web Fetch API type: ${C.message}. ${n}`)}return{kind:"web",fetch:i,Request:c,Response:p,Headers:m,FormData:typeof FormData<"u"?FormData:class{constructor(){throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${n}`)}},Blob:typeof Blob<"u"?Blob:class{constructor(){throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${n}`)}},File:typeof File<"u"?File:class{constructor(){throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${n}`)}},ReadableStream:typeof ReadableStream<"u"?ReadableStream:class{constructor(){throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${n}`)}},getMultipartRequestOptions:async(C,I)=>({...I,body:new Tk(C)}),getDefaultAgent:C=>{},fileFromPath:()=>{throw new Error("The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/anthropics/anthropic-sdk-typescript#file-uploads")},isFsReadStream:C=>!1}}S0||Pk(Gk(),{auto:!0});class HA extends Error{}class zs extends HA{constructor(n,i,c,p){super(`${zs.makeMessage(n,i,c)}`),this.status=n,this.headers=p,this.request_id=p?.["request-id"],this.error=i}static makeMessage(n,i,c){const p=i?.message?typeof i.message=="string"?i.message:JSON.stringify(i.message):i?JSON.stringify(i):c;return n&&p?`${n} ${p}`:n?`${n} status code (no body)`:p||"(no status code or body)"}static generate(n,i,c,p){if(!n)return new ec({message:c,cause:Fu(i)});const m=i;return n===400?new t6(n,m,c,p):n===401?new A6(n,m,c,p):n===403?new r6(n,m,c,p):n===404?new s6(n,m,c,p):n===409?new a6(n,m,c,p):n===422?new n6(n,m,c,p):n===429?new i6(n,m,c,p):n>=500?new o6(n,m,c,p):new zs(n,m,c,p)}}class Ka extends zs{constructor({message:n}={}){super(void 0,void 0,n||"Request was aborted.",void 0),this.status=void 0}}class ec extends zs{constructor({message:n,cause:i}){super(void 0,void 0,n||"Connection error.",void 0),this.status=void 0,i&&(this.cause=i)}}class e6 extends ec{constructor({message:n}={}){super({message:n??"Request timed out."})}}class t6 extends zs{constructor(){super(...arguments),this.status=400}}class A6 extends zs{constructor(){super(...arguments),this.status=401}}class r6 extends zs{constructor(){super(...arguments),this.status=403}}class s6 extends zs{constructor(){super(...arguments),this.status=404}}class a6 extends zs{constructor(){super(...arguments),this.status=409}}class n6 extends zs{constructor(){super(...arguments),this.status=422}}class i6 extends zs{constructor(){super(...arguments),this.status=429}}class o6 extends zs{}class Ci{constructor(){this.buffer=[],this.trailingCR=!1}decode(n){let i=this.decodeText(n);if(this.trailingCR&&(i="\r"+i,this.trailingCR=!1),i.endsWith("\r")&&(this.trailingCR=!0,i=i.slice(0,-1)),!i)return[];const c=Ci.NEWLINE_CHARS.has(i[i.length-1]||"");let p=i.split(Ci.NEWLINE_REGEXP);return c&&p.pop(),p.length===1&&!c?(this.buffer.push(p[0]),[]):(this.buffer.length>0&&(p=[this.buffer.join("")+p[0],...p.slice(1)],this.buffer=[]),c||(this.buffer=[p.pop()||""]),p)}decodeText(n){if(n==null)return"";if(typeof n=="string")return n;if(typeof Buffer<"u"){if(n instanceof Buffer)return n.toString();if(n instanceof Uint8Array)return Buffer.from(n).toString();throw new HA(`Unexpected: received non-Uint8Array (${n.constructor.name}) stream chunk in an environment with a global "Buffer" defined, which this library assumes to be Node. Please report this error.`)}if(typeof TextDecoder<"u"){if(n instanceof Uint8Array||n instanceof ArrayBuffer)return this.textDecoder??(this.textDecoder=new TextDecoder("utf8")),this.textDecoder.decode(n);throw new HA(`Unexpected: received non-Uint8Array/ArrayBuffer (${n.constructor.name}) in a web platform. Please report this error.`)}throw new HA("Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.")}flush(){if(!this.buffer.length&&!this.trailingCR)return[];const n=[this.buffer.join("")];return this.buffer=[],this.trailingCR=!1,n}}Ci.NEWLINE_CHARS=new Set([`
`,"\r"]);Ci.NEWLINE_REGEXP=/\r\n|[\n\r]/g;class un{constructor(n,i){this.iterator=n,this.controller=i}static fromSSEResponse(n,i){let c=!1;async function*p(){if(c)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");c=!0;let m=!1;try{for await(const C of Qk(n,i)){if(C.event==="completion")try{yield JSON.parse(C.data)}catch(I){throw console.error("Could not parse message into JSON:",C.data),console.error("From chunk:",C.raw),I}if(C.event==="message_start"||C.event==="message_delta"||C.event==="message_stop"||C.event==="content_block_start"||C.event==="content_block_delta"||C.event==="content_block_stop")try{yield JSON.parse(C.data)}catch(I){throw console.error("Could not parse message into JSON:",C.data),console.error("From chunk:",C.raw),I}if(C.event!=="ping"&&C.event==="error")throw zs.generate(void 0,`SSE Error: ${C.data}`,C.data,u6(n.headers))}m=!0}catch(C){if(C instanceof Error&&C.name==="AbortError")return;throw C}finally{m||i.abort()}}return new un(p,i)}static fromReadableStream(n,i){let c=!1;async function*p(){const C=new Ci,I=m1(n);for await(const E of I)for(const x of C.decode(E))yield x;for(const E of C.flush())yield E}async function*m(){if(c)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");c=!0;let C=!1;try{for await(const I of p())C||I&&(yield JSON.parse(I));C=!0}catch(I){if(I instanceof Error&&I.name==="AbortError")return;throw I}finally{C||i.abort()}}return new un(m,i)}[Symbol.asyncIterator](){return this.iterator()}tee(){const n=[],i=[],c=this.iterator(),p=m=>({next:()=>{if(m.length===0){const C=c.next();n.push(C),i.push(C)}return m.shift()}});return[new un(()=>p(n),this.controller),new un(()=>p(i),this.controller)]}toReadableStream(){const n=this;let i;const c=new TextEncoder;return new JI({async start(){i=n[Symbol.asyncIterator]()},async pull(p){try{const{value:m,done:C}=await i.next();if(C)return p.close();const I=c.encode(JSON.stringify(m)+`
`);p.enqueue(I)}catch(m){p.error(m)}},async cancel(){await i.return?.()}})}}async function*Qk(a,n){if(!a.body)throw n.abort(),new HA("Attempted to iterate over a response with no body");const i=new Ok,c=new Ci,p=m1(a.body);for await(const m of Sk(p))for(const C of c.decode(m)){const I=i.decode(C);I&&(yield I)}for(const m of c.flush()){const C=i.decode(m);C&&(yield C)}}async function*Sk(a){let n=new Uint8Array;for await(const i of a){if(i==null)continue;const c=i instanceof ArrayBuffer?new Uint8Array(i):typeof i=="string"?new TextEncoder().encode(i):i;let p=new Uint8Array(n.length+c.length);p.set(n),p.set(c,n.length),n=p;let m;for(;(m=Fk(n))!==-1;)yield n.slice(0,m),n=n.slice(m)}n.length>0&&(yield n)}function Fk(a){for(let c=0;c<a.length-2;c++){if(a[c]===10&&a[c+1]===10||a[c]===13&&a[c+1]===13)return c+2;if(a[c]===13&&a[c+1]===10&&c+3<a.length&&a[c+2]===13&&a[c+3]===10)return c+4}return-1}class Ok{constructor(){this.event=null,this.data=[],this.chunks=[]}decode(n){if(n.endsWith("\r")&&(n=n.substring(0,n.length-1)),!n){if(!this.event&&!this.data.length)return null;const m={event:this.event,data:this.data.join(`
`),raw:this.chunks};return this.event=null,this.data=[],this.chunks=[],m}if(this.chunks.push(n),n.startsWith(":"))return null;let[i,c,p]=_k(n,":");return p.startsWith(" ")&&(p=p.substring(1)),i==="event"?this.event=p:i==="data"&&this.data.push(p),null}}function _k(a,n){const i=a.indexOf(n);return i!==-1?[a.substring(0,i),n,a.substring(i+n.length)]:[a,"",""]}function m1(a){if(a[Symbol.asyncIterator])return a;const n=a.getReader();return{async next(){try{const i=await n.read();return i?.done&&n.releaseLock(),i}catch(i){throw n.releaseLock(),i}},async return(){const i=n.cancel();return n.releaseLock(),await i,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}const Nk=a=>a!=null&&typeof a=="object"&&typeof a.url=="string"&&typeof a.blob=="function",zk=a=>a!=null&&typeof a=="object"&&typeof a.name=="string"&&typeof a.lastModified=="number"&&tc(a),tc=a=>a!=null&&typeof a=="object"&&typeof a.size=="number"&&typeof a.type=="string"&&typeof a.text=="function"&&typeof a.slice=="function"&&typeof a.arrayBuffer=="function";async function Lk(a,n,i){if(a=await a,zk(a))return a;if(Nk(a)){const p=await a.blob();n||(n=new URL(a.url).pathname.split(/[\\/]/).pop()??"unknown_file");const m=tc(p)?[await p.arrayBuffer()]:[p];return new Su(m,n,i)}const c=await Rk(a);if(n||(n=Wk(a)??"unknown_file"),!i?.type){const p=c[0]?.type;typeof p=="string"&&(i={...i,type:p})}return new Su(c,n,i)}async function Rk(a){let n=[];if(typeof a=="string"||ArrayBuffer.isView(a)||a instanceof ArrayBuffer)n.push(a);else if(tc(a))n.push(await a.arrayBuffer());else if(Vk(a))for await(const i of a)n.push(i);else throw new Error(`Unexpected data type: ${typeof a}; constructor: ${a?.constructor?.name}; props: ${jk(a)}`);return n}function jk(a){return`[${Object.getOwnPropertyNames(a).map(i=>`"${i}"`).join(", ")}]`}function Wk(a){return tu(a.name)||tu(a.filename)||tu(a.path)?.split(/[\\/]/).pop()}const tu=a=>{if(typeof a=="string")return a;if(typeof Buffer<"u"&&a instanceof Buffer)return String(a)},Vk=a=>a!=null&&typeof a=="object"&&typeof a[Symbol.asyncIterator]=="function",O4=a=>a&&typeof a=="object"&&a.body&&a[Symbol.toStringTag]==="MultipartBody";var l6={},Yk=function(a,n,i,c,p){if(typeof n=="function"?a!==n||!0:!n.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n.set(a,i),i},Hk=function(a,n,i,c){if(typeof n=="function"?a!==n||!0:!n.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?c:i==="a"?c.call(a):c?c.value:n.get(a)},bl;async function c6(a){const{response:n}=a;if(a.options.stream)return zo("response",n.status,n.url,n.headers,n.body),a.options.__streamClass?a.options.__streamClass.fromSSEResponse(n,a.controller):un.fromSSEResponse(n,a.controller);if(n.status===204)return null;if(a.options.__binaryResponse)return n;const i=n.headers.get("content-type");if(i?.includes("application/json")||i?.includes("application/vnd.api+json")){const m=await n.json();return zo("response",n.status,n.url,n.headers,m),m}const p=await n.text();return zo("response",n.status,n.url,n.headers,p),p}class Ac extends Promise{constructor(n,i=c6){super(c=>{c(null)}),this.responsePromise=n,this.parseResponse=i}_thenUnwrap(n){return new Ac(this.responsePromise,async i=>n(await this.parseResponse(i),i))}asResponse(){return this.responsePromise.then(n=>n.response)}async withResponse(){const[n,i]=await Promise.all([this.parse(),this.asResponse()]);return{data:n,response:i}}parse(){return this.parsedPromise||(this.parsedPromise=this.responsePromise.then(this.parseResponse)),this.parsedPromise}then(n,i){return this.parse().then(n,i)}catch(n){return this.parse().catch(n)}finally(n){return this.parse().finally(n)}}class Uk{constructor({baseURL:n,maxRetries:i=2,timeout:c=6e5,httpAgent:p,fetch:m}){this.baseURL=n,this.maxRetries=Au("maxRetries",i),this.timeout=Au("timeout",c),this.httpAgent=p,this.fetch=m??ZI}authHeaders(n){return{}}defaultHeaders(n){return{Accept:"application/json","Content-Type":"application/json","User-Agent":this.getUserAgent(),...$k(),...this.authHeaders(n)}}validateHeaders(n,i){}defaultIdempotencyKey(){return`stainless-node-retry-${sE()}`}get(n,i){return this.methodRequest("get",n,i)}post(n,i){return this.methodRequest("post",n,i)}patch(n,i){return this.methodRequest("patch",n,i)}put(n,i){return this.methodRequest("put",n,i)}delete(n,i){return this.methodRequest("delete",n,i)}methodRequest(n,i,c){return this.request(Promise.resolve(c).then(async p=>{const m=p&&tc(p?.body)?new DataView(await p.body.arrayBuffer()):p?.body instanceof DataView?p.body:p?.body instanceof ArrayBuffer?new DataView(p.body):p&&ArrayBuffer.isView(p?.body)?new DataView(p.body.buffer):p?.body;return{method:n,path:i,...p,body:m}}))}getAPIList(n,i,c){return this.requestAPIList(i,{method:"get",path:n,...c})}calculateContentLength(n){if(typeof n=="string"){if(typeof Buffer<"u")return Buffer.byteLength(n,"utf8").toString();if(typeof TextEncoder<"u")return new TextEncoder().encode(n).length.toString()}else if(ArrayBuffer.isView(n))return n.byteLength.toString();return null}buildRequest(n,{retryCount:i=0}={}){const{method:c,path:p,query:m,headers:C={}}=n,I=ArrayBuffer.isView(n.body)||n.__binaryRequest&&typeof n.body=="string"?n.body:O4(n.body)?n.body.body:n.body?JSON.stringify(n.body,null,2):null,E=this.calculateContentLength(I),x=this.buildURL(p,m);"timeout"in n&&Au("timeout",n.timeout);const D=n.timeout??this.timeout,y=n.httpAgent??this.httpAgent??qI(x),M=D+1e3;typeof y?.options?.timeout=="number"&&M>(y.options.timeout??0)&&(y.options.timeout=M),this.idempotencyHeader&&c!=="get"&&(n.idempotencyKey||(n.idempotencyKey=this.defaultIdempotencyKey()),C[this.idempotencyHeader]=n.idempotencyKey);const S=this.buildHeaders({options:n,headers:C,contentLength:E,retryCount:i});return{req:{method:c,...I&&{body:I},headers:S,...y&&{agent:y},signal:n.signal??null},url:x,timeout:D}}buildHeaders({options:n,headers:i,contentLength:c,retryCount:p}){const m={};c&&(m["content-length"]=c);const C=this.defaultHeaders(n);return L4(m,C),L4(m,i),O4(n.body)&&S0!=="node"&&delete m["content-type"],R4(C,"x-stainless-retry-count")===void 0&&R4(i,"x-stainless-retry-count")===void 0&&(m["x-stainless-retry-count"]=String(p)),this.validateHeaders(m,i),m}async prepareOptions(n){}async prepareRequest(n,{url:i,options:c}){}parseHeaders(n){return n?Symbol.iterator in n?Object.fromEntries(Array.from(n).map(i=>[...i])):{...n}:{}}makeStatusError(n,i,c,p){return zs.generate(n,i,c,p)}request(n,i=null){return new Ac(this.makeRequest(n,i))}async makeRequest(n,i){const c=await n,p=c.maxRetries??this.maxRetries;i==null&&(i=p),await this.prepareOptions(c);const{req:m,url:C,timeout:I}=this.buildRequest(c,{retryCount:p-i});if(await this.prepareRequest(m,{url:C,options:c}),zo("request",C,c,m.headers),c.signal?.aborted)throw new Ka;const E=new AbortController,x=await this.fetchWithTimeout(C,m,I,E).catch(Fu);if(x instanceof Error){if(c.signal?.aborted)throw new Ka;if(i)return this.retryRequest(c,i);throw x.name==="AbortError"?new e6:new ec({cause:x})}const D=u6(x.headers);if(!x.ok){if(i&&this.shouldRetry(x)){const Z=`retrying, ${i} attempts remaining`;return zo(`response (error; ${Z})`,x.status,C,D),this.retryRequest(c,i,D)}const y=await x.text().catch(Z=>Fu(Z).message),M=eE(y),S=M?void 0:y;throw zo(`response (error; ${i?"(error; no more retries left)":"(error; not retryable)"})`,x.status,C,D,S),this.makeStatusError(x.status,M,S,D)}return{response:x,options:c,controller:E}}requestAPIList(n,i){const c=this.makeRequest(i,null);return new Xk(this,c,n)}buildURL(n,i){const c=AE(n)?new URL(n):new URL(this.baseURL+(this.baseURL.endsWith("/")&&n.startsWith("/")?n.slice(1):n)),p=this.defaultQuery();return Zl(p)||(i={...p,...i}),typeof i=="object"&&i&&!Array.isArray(i)&&(c.search=this.stringifyQuery(i)),c.toString()}stringifyQuery(n){return Object.entries(n).filter(([i,c])=>typeof c<"u").map(([i,c])=>{if(typeof c=="string"||typeof c=="number"||typeof c=="boolean")return`${encodeURIComponent(i)}=${encodeURIComponent(c)}`;if(c===null)return`${encodeURIComponent(i)}=`;throw new HA(`Cannot stringify type ${typeof c}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`)}).join("&")}async fetchWithTimeout(n,i,c,p){const{signal:m,...C}=i||{};m&&m.addEventListener("abort",()=>p.abort());const I=setTimeout(()=>p.abort(),c);return this.getRequestClient().fetch.call(void 0,n,{signal:p.signal,...C}).finally(()=>{clearTimeout(I)})}getRequestClient(){return{fetch:this.fetch}}shouldRetry(n){const i=n.headers.get("x-should-retry");return i==="true"?!0:i==="false"?!1:n.status===408||n.status===409||n.status===429||n.status>=500}async retryRequest(n,i,c){let p;const m=c?.["retry-after-ms"];if(m){const I=parseFloat(m);Number.isNaN(I)||(p=I)}const C=c?.["retry-after"];if(C&&!p){const I=parseFloat(C);Number.isNaN(I)?p=Date.parse(C)-Date.now():p=I*1e3}if(!(p&&0<=p&&p<60*1e3)){const I=n.maxRetries??this.maxRetries;p=this.calculateDefaultRetryTimeoutMillis(i,I)}return await rE(p),this.makeRequest(n,i-1)}calculateDefaultRetryTimeoutMillis(n,i){const m=i-n,C=Math.min(.5*Math.pow(2,m),8),I=1-Math.random()*.25;return C*I*1e3}getUserAgent(){return`${this.constructor.name}/JS ${Po}`}}class Kk{constructor(n,i,c,p){bl.set(this,void 0),Yk(this,bl,n),this.options=p,this.response=i,this.body=c}hasNextPage(){return this.getPaginatedItems().length?this.nextPageInfo()!=null:!1}async getNextPage(){const n=this.nextPageInfo();if(!n)throw new HA("No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.");const i={...this.options};if("params"in n&&typeof i.query=="object")i.query={...i.query,...n.params};else if("url"in n){const c=[...Object.entries(i.query||{}),...n.url.searchParams.entries()];for(const[p,m]of c)n.url.searchParams.set(p,m);i.query=void 0,i.path=n.url.toString()}return await Hk(this,bl,"f").requestAPIList(this.constructor,i)}async*iterPages(){let n=this;for(yield n;n.hasNextPage();)n=await n.getNextPage(),yield n}async*[(bl=new WeakMap,Symbol.asyncIterator)](){for await(const n of this.iterPages())for(const i of n.getPaginatedItems())yield i}}class Xk extends Ac{constructor(n,i,c){super(i,async p=>new c(n,p.response,await c6(p),p.options))}async*[Symbol.asyncIterator](){const n=await this;for await(const i of n)yield i}}const u6=a=>new Proxy(Object.fromEntries(a.entries()),{get(n,i){const c=i.toString();return n[c.toLowerCase()]||n[c]}}),Zk={method:!0,path:!0,query:!0,body:!0,headers:!0,maxRetries:!0,stream:!0,timeout:!0,httpAgent:!0,signal:!0,idempotencyKey:!0,__binaryRequest:!0,__binaryResponse:!0,__streamClass:!0},Il=a=>typeof a=="object"&&a!==null&&!Zl(a)&&Object.keys(a).every(n=>d6(Zk,n)),Jk=()=>{if(typeof Deno<"u"&&Deno.build!=null)return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":Po,"X-Stainless-OS":N4(Deno.build.os),"X-Stainless-Arch":_4(Deno.build.arch),"X-Stainless-Runtime":"deno","X-Stainless-Runtime-Version":typeof Deno.version=="string"?Deno.version:Deno.version?.deno??"unknown"};if(typeof EdgeRuntime<"u")return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":Po,"X-Stainless-OS":"Unknown","X-Stainless-Arch":`other:${EdgeRuntime}`,"X-Stainless-Runtime":"edge","X-Stainless-Runtime-Version":process.version};if(Object.prototype.toString.call(typeof process<"u"?process:0)==="[object process]")return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":Po,"X-Stainless-OS":N4(process.platform),"X-Stainless-Arch":_4(process.arch),"X-Stainless-Runtime":"node","X-Stainless-Runtime-Version":process.version};const a=qk();return a?{"X-Stainless-Lang":"js","X-Stainless-Package-Version":Po,"X-Stainless-OS":"Unknown","X-Stainless-Arch":"unknown","X-Stainless-Runtime":`browser:${a.browser}`,"X-Stainless-Runtime-Version":a.version}:{"X-Stainless-Lang":"js","X-Stainless-Package-Version":Po,"X-Stainless-OS":"Unknown","X-Stainless-Arch":"unknown","X-Stainless-Runtime":"unknown","X-Stainless-Runtime-Version":"unknown"}};function qk(){if(typeof navigator>"u"||!navigator)return null;const a=[{key:"edge",pattern:/Edge(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"ie",pattern:/MSIE(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"ie",pattern:/Trident(?:.*rv\:(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"chrome",pattern:/Chrome(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"firefox",pattern:/Firefox(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"safari",pattern:/(?:Version\W+(\d+)\.(\d+)(?:\.(\d+))?)?(?:\W+Mobile\S*)?\W+Safari/}];for(const{key:n,pattern:i}of a){const c=i.exec(navigator.userAgent);if(c){const p=c[1]||0,m=c[2]||0,C=c[3]||0;return{browser:n,version:`${p}.${m}.${C}`}}}return null}const _4=a=>a==="x32"?"x32":a==="x86_64"||a==="x64"?"x64":a==="arm"?"arm":a==="aarch64"||a==="arm64"?"arm64":a?`other:${a}`:"unknown",N4=a=>(a=a.toLowerCase(),a.includes("ios")?"iOS":a==="android"?"Android":a==="darwin"?"MacOS":a==="win32"?"Windows":a==="freebsd"?"FreeBSD":a==="openbsd"?"OpenBSD":a==="linux"?"Linux":a?`Other:${a}`:"Unknown");let z4;const $k=()=>z4??(z4=Jk()),eE=a=>{try{return JSON.parse(a)}catch{return}},tE=new RegExp("^(?:[a-z]+:)?//","i"),AE=a=>tE.test(a),rE=a=>new Promise(n=>setTimeout(n,a)),Au=(a,n)=>{if(typeof n!="number"||!Number.isInteger(n))throw new HA(`${a} must be an integer`);if(n<0)throw new HA(`${a} must be a positive integer`);return n},Fu=a=>{if(a instanceof Error)return a;if(typeof a=="object"&&a!==null)try{return new Error(JSON.stringify(a))}catch{}return new Error(String(a))},ru=a=>{if(typeof process<"u")return l6?.[a]?.trim()??void 0;if(typeof Deno<"u")return Deno.env?.get?.(a)?.trim()};function Zl(a){if(!a)return!0;for(const n in a)return!1;return!0}function d6(a,n){return Object.prototype.hasOwnProperty.call(a,n)}function L4(a,n){for(const i in n){if(!d6(n,i))continue;const c=i.toLowerCase();if(!c)continue;const p=n[i];p===null?delete a[c]:p!==void 0&&(a[c]=p)}}function zo(a,...n){typeof process<"u"&&l6?.DEBUG==="true"&&console.log(`Anthropic:DEBUG:${a}`,...n)}const sE=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,a=>{const n=Math.random()*16|0;return(a==="x"?n:n&3|8).toString(16)}),aE=()=>typeof window<"u"&&typeof window.document<"u"&&typeof navigator<"u",nE=a=>typeof a?.get=="function",R4=(a,n)=>{const i=n.toLowerCase();if(nE(a)){const c=n[0]?.toUpperCase()+n.substring(1).replace(/([^\w])(\w)/g,(p,m,C)=>m+C.toUpperCase());for(const p of[n,i,n.toUpperCase(),c]){const m=a.get(p);if(m)return m}}for(const[c,p]of Object.entries(a))if(c.toLowerCase()===i)return Array.isArray(p)?(p.length<=1||console.warn(`Received ${p.length} entries for the ${n} header, using the first entry.`),p[0]):p};class iE extends Kk{constructor(n,i,c,p){super(n,i,c,p),this.data=c.data||[],this.has_more=c.has_more||!1,this.first_id=c.first_id||null,this.last_id=c.last_id||null}getPaginatedItems(){return this.data??[]}nextPageParams(){const n=this.nextPageInfo();if(!n)return null;if("params"in n)return n.params;const i=Object.fromEntries(n.url.searchParams);return Object.keys(i).length?i:null}nextPageInfo(){if(this.options.query?.before_id){const i=this.first_id;return i?{params:{before_id:i}}:null}const n=this.last_id;return n?{params:{after_id:n}}:null}}class ro{constructor(n){this._client=n}}class C1{constructor(n,i){this.iterator=n,this.controller=i}async*decoder(){const n=new Ci;for await(const i of this.iterator)for(const c of n.decode(i))yield JSON.parse(c);for(const i of n.flush())yield JSON.parse(i)}[Symbol.asyncIterator](){return this.decoder()}static fromResponse(n,i){if(!n.body)throw i.abort(),new HA("Attempted to iterate over a response with no body");return new C1(m1(n.body),i)}}class b1 extends ro{create(n,i){const{betas:c,...p}=n;return this._client.post("/v1/messages/batches?beta=true",{body:p,...i,headers:{"anthropic-beta":[...c??[],"message-batches-2024-09-24"].toString(),...i?.headers}})}retrieve(n,i={},c){if(Il(i))return this.retrieve(n,{},i);const{betas:p}=i;return this._client.get(`/v1/messages/batches/${n}?beta=true`,{...c,headers:{"anthropic-beta":[...p??[],"message-batches-2024-09-24"].toString(),...c?.headers}})}list(n={},i){if(Il(n))return this.list({},n);const{betas:c,...p}=n;return this._client.getAPIList("/v1/messages/batches?beta=true",I1,{query:p,...i,headers:{"anthropic-beta":[...c??[],"message-batches-2024-09-24"].toString(),...i?.headers}})}cancel(n,i={},c){if(Il(i))return this.cancel(n,{},i);const{betas:p}=i;return this._client.post(`/v1/messages/batches/${n}/cancel?beta=true`,{...c,headers:{"anthropic-beta":[...p??[],"message-batches-2024-09-24"].toString(),...c?.headers}})}async results(n,i={},c){if(Il(i))return this.results(n,{},i);const p=await this.retrieve(n);if(!p.results_url)throw new HA(`No batch \`results_url\`; Has it finished processing? ${p.processing_status} - ${p.id}`);const{betas:m}=i;return this._client.get(p.results_url,{...c,headers:{"anthropic-beta":[...m??[],"message-batches-2024-09-24"].toString(),...c?.headers},__binaryResponse:!0})._thenUnwrap((C,I)=>C1.fromResponse(I.response,I.controller))}}class I1 extends iE{}b1.BetaMessageBatchesPage=I1;let rc=class extends ro{constructor(){super(...arguments),this.batches=new b1(this._client)}create(n,i){const{betas:c,...p}=n;return this._client.post("/v1/messages?beta=true",{body:p,timeout:this._client._options.timeout??6e5,...i,headers:{...c?.toString()!=null?{"anthropic-beta":c?.toString()}:void 0,...i?.headers},stream:n.stream??!1})}countTokens(n,i){const{betas:c,...p}=n;return this._client.post("/v1/messages/count_tokens?beta=true",{body:p,...i,headers:{"anthropic-beta":[...c??[],"token-counting-2024-11-01"].toString(),...i?.headers}})}};rc.Batches=b1;rc.BetaMessageBatchesPage=I1;const oE=a=>{let n=0,i=[];for(;n<a.length;){let c=a[n];if(c==="\\"){n++;continue}if(c==="{"){i.push({type:"brace",value:"{"}),n++;continue}if(c==="}"){i.push({type:"brace",value:"}"}),n++;continue}if(c==="["){i.push({type:"paren",value:"["}),n++;continue}if(c==="]"){i.push({type:"paren",value:"]"}),n++;continue}if(c===":"){i.push({type:"separator",value:":"}),n++;continue}if(c===","){i.push({type:"delimiter",value:","}),n++;continue}if(c==='"'){let I="",E=!1;for(c=a[++n];c!=='"';){if(n===a.length){E=!0;break}if(c==="\\"){if(n++,n===a.length){E=!0;break}I+=c+a[n],c=a[++n]}else I+=c,c=a[++n]}c=a[++n],E||i.push({type:"string",value:I});continue}if(c&&/\s/.test(c)){n++;continue}let m=/[0-9]/;if(c&&m.test(c)||c==="-"||c==="."){let I="";for(c==="-"&&(I+=c,c=a[++n]);c&&m.test(c)||c===".";)I+=c,c=a[++n];i.push({type:"number",value:I});continue}let C=/[a-z]/i;if(c&&C.test(c)){let I="";for(;c&&C.test(c)&&n!==a.length;)I+=c,c=a[++n];if(I=="true"||I=="false"||I==="null")i.push({type:"name",value:I});else{n++;continue}continue}n++}return i},To=a=>{if(a.length===0)return a;let n=a[a.length-1];switch(n.type){case"separator":return a=a.slice(0,a.length-1),To(a);case"number":let i=n.value[n.value.length-1];if(i==="."||i==="-")return a=a.slice(0,a.length-1),To(a);case"string":let c=a[a.length-2];if(c?.type==="delimiter")return a=a.slice(0,a.length-1),To(a);if(c?.type==="brace"&&c.value==="{")return a=a.slice(0,a.length-1),To(a);break;case"delimiter":return a=a.slice(0,a.length-1),To(a)}return a},lE=a=>{let n=[];return a.map(i=>{i.type==="brace"&&(i.value==="{"?n.push("}"):n.splice(n.lastIndexOf("}"),1)),i.type==="paren"&&(i.value==="["?n.push("]"):n.splice(n.lastIndexOf("]"),1))}),n.length>0&&n.reverse().map(i=>{i==="}"?a.push({type:"brace",value:"}"}):i==="]"&&a.push({type:"paren",value:"]"})}),a},cE=a=>{let n="";return a.map(i=>{switch(i.type){case"string":n+='"'+i.value+'"';break;default:n+=i.value;break}}),n},f6=a=>JSON.parse(cE(lE(To(oE(a)))));var ra=function(a,n,i,c,p){if(c==="m")throw new TypeError("Private method is not writable");if(c==="a"&&!p)throw new TypeError("Private accessor was defined without a setter");if(typeof n=="function"?a!==n||!p:!n.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return c==="a"?p.call(a,i):p?p.value=i:n.set(a,i),i},NA=function(a,n,i,c){if(i==="a"&&!c)throw new TypeError("Private accessor was defined without a getter");if(typeof n=="function"?a!==n||!c:!n.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?c:i==="a"?c.call(a):c?c.value:n.get(a)},xa,ci,wl,kl,b0,I0,El,w0,_n,k0,Ml,vl,xo,su,j4,au,nu,iu,ou,W4;const V4="__json_buf";class Jl{constructor(){xa.add(this),this.messages=[],this.receivedMessages=[],ci.set(this,void 0),this.controller=new AbortController,wl.set(this,void 0),kl.set(this,()=>{}),b0.set(this,()=>{}),I0.set(this,void 0),El.set(this,()=>{}),w0.set(this,()=>{}),_n.set(this,{}),k0.set(this,!1),Ml.set(this,!1),vl.set(this,!1),xo.set(this,!1),au.set(this,n=>{if(ra(this,Ml,!0,"f"),n instanceof Error&&n.name==="AbortError"&&(n=new Ka),n instanceof Ka)return ra(this,vl,!0,"f"),this._emit("abort",n);if(n instanceof HA)return this._emit("error",n);if(n instanceof Error){const i=new HA(n.message);return i.cause=n,this._emit("error",i)}return this._emit("error",new HA(String(n)))}),ra(this,wl,new Promise((n,i)=>{ra(this,kl,n,"f"),ra(this,b0,i,"f")}),"f"),ra(this,I0,new Promise((n,i)=>{ra(this,El,n,"f"),ra(this,w0,i,"f")}),"f"),NA(this,wl,"f").catch(()=>{}),NA(this,I0,"f").catch(()=>{})}static fromReadableStream(n){const i=new Jl;return i._run(()=>i._fromReadableStream(n)),i}static createMessage(n,i,c){const p=new Jl;for(const m of i.messages)p._addPromptCachingBetaMessageParam(m);return p._run(()=>p._createPromptCachingBetaMessage(n,{...i,stream:!0},{...c,headers:{...c?.headers,"X-Stainless-Helper-Method":"stream"}})),p}_run(n){n().then(()=>{this._emitFinal(),this._emit("end")},NA(this,au,"f"))}_addPromptCachingBetaMessageParam(n){this.messages.push(n)}_addPromptCachingBetaMessage(n,i=!0){this.receivedMessages.push(n),i&&this._emit("message",n)}async _createPromptCachingBetaMessage(n,i,c){const p=c?.signal;p&&(p.aborted&&this.controller.abort(),p.addEventListener("abort",()=>this.controller.abort())),NA(this,xa,"m",nu).call(this);const m=await n.create({...i,stream:!0},{...c,signal:this.controller.signal});this._connected();for await(const C of m)NA(this,xa,"m",iu).call(this,C);if(m.controller.signal?.aborted)throw new Ka;NA(this,xa,"m",ou).call(this)}_connected(){this.ended||(NA(this,kl,"f").call(this),this._emit("connect"))}get ended(){return NA(this,k0,"f")}get errored(){return NA(this,Ml,"f")}get aborted(){return NA(this,vl,"f")}abort(){this.controller.abort()}on(n,i){return(NA(this,_n,"f")[n]||(NA(this,_n,"f")[n]=[])).push({listener:i}),this}off(n,i){const c=NA(this,_n,"f")[n];if(!c)return this;const p=c.findIndex(m=>m.listener===i);return p>=0&&c.splice(p,1),this}once(n,i){return(NA(this,_n,"f")[n]||(NA(this,_n,"f")[n]=[])).push({listener:i,once:!0}),this}emitted(n){return new Promise((i,c)=>{ra(this,xo,!0,"f"),n!=="error"&&this.once("error",c),this.once(n,i)})}async done(){ra(this,xo,!0,"f"),await NA(this,I0,"f")}get currentMessage(){return NA(this,ci,"f")}async finalMessage(){return await this.done(),NA(this,xa,"m",su).call(this)}async finalText(){return await this.done(),NA(this,xa,"m",j4).call(this)}_emit(n,...i){if(NA(this,k0,"f"))return;n==="end"&&(ra(this,k0,!0,"f"),NA(this,El,"f").call(this));const c=NA(this,_n,"f")[n];if(c&&(NA(this,_n,"f")[n]=c.filter(p=>!p.once),c.forEach(({listener:p})=>p(...i))),n==="abort"){const p=i[0];!NA(this,xo,"f")&&!c?.length&&Promise.reject(p),NA(this,b0,"f").call(this,p),NA(this,w0,"f").call(this,p),this._emit("end");return}if(n==="error"){const p=i[0];!NA(this,xo,"f")&&!c?.length&&Promise.reject(p),NA(this,b0,"f").call(this,p),NA(this,w0,"f").call(this,p),this._emit("end")}}_emitFinal(){this.receivedMessages.at(-1)&&this._emit("finalPromptCachingBetaMessage",NA(this,xa,"m",su).call(this))}async _fromReadableStream(n,i){const c=i?.signal;c&&(c.aborted&&this.controller.abort(),c.addEventListener("abort",()=>this.controller.abort())),NA(this,xa,"m",nu).call(this),this._connected();const p=un.fromReadableStream(n,this.controller);for await(const m of p)NA(this,xa,"m",iu).call(this,m);if(p.controller.signal?.aborted)throw new Ka;NA(this,xa,"m",ou).call(this)}[(ci=new WeakMap,wl=new WeakMap,kl=new WeakMap,b0=new WeakMap,I0=new WeakMap,El=new WeakMap,w0=new WeakMap,_n=new WeakMap,k0=new WeakMap,Ml=new WeakMap,vl=new WeakMap,xo=new WeakMap,au=new WeakMap,xa=new WeakSet,su=function(){if(this.receivedMessages.length===0)throw new HA("stream ended without producing a PromptCachingBetaMessage with role=assistant");return this.receivedMessages.at(-1)},j4=function(){if(this.receivedMessages.length===0)throw new HA("stream ended without producing a PromptCachingBetaMessage with role=assistant");const i=this.receivedMessages.at(-1).content.filter(c=>c.type==="text").map(c=>c.text);if(i.length===0)throw new HA("stream ended without producing a content block with type=text");return i.join(" ")},nu=function(){this.ended||ra(this,ci,void 0,"f")},iu=function(i){if(this.ended)return;const c=NA(this,xa,"m",W4).call(this,i);switch(this._emit("streamEvent",i,c),i.type){case"content_block_delta":{const p=c.content.at(-1);i.delta.type==="text_delta"&&p.type==="text"?this._emit("text",i.delta.text,p.text||""):i.delta.type==="input_json_delta"&&p.type==="tool_use"&&p.input&&this._emit("inputJson",i.delta.partial_json,p.input);break}case"message_stop":{this._addPromptCachingBetaMessageParam(c),this._addPromptCachingBetaMessage(c,!0);break}case"content_block_stop":{this._emit("contentBlock",c.content.at(-1));break}case"message_start":{ra(this,ci,c,"f");break}}},ou=function(){if(this.ended)throw new HA("stream has ended, this shouldn't happen");const i=NA(this,ci,"f");if(!i)throw new HA("request ended without sending any chunks");return ra(this,ci,void 0,"f"),i},W4=function(i){let c=NA(this,ci,"f");if(i.type==="message_start"){if(c)throw new HA(`Unexpected event order, got ${i.type} before receiving "message_stop"`);return i.message}if(!c)throw new HA(`Unexpected event order, got ${i.type} before "message_start"`);switch(i.type){case"message_stop":return c;case"message_delta":return c.stop_reason=i.delta.stop_reason,c.stop_sequence=i.delta.stop_sequence,c.usage.output_tokens=i.usage.output_tokens,c;case"content_block_start":return c.content.push(i.content_block),c;case"content_block_delta":{const p=c.content.at(i.index);if(p?.type==="text"&&i.delta.type==="text_delta")p.text+=i.delta.text;else if(p?.type==="tool_use"&&i.delta.type==="input_json_delta"){let m=p[V4]||"";m+=i.delta.partial_json,Object.defineProperty(p,V4,{value:m,enumerable:!1,writable:!0}),m&&(p.input=f6(m))}return c}case"content_block_stop":return c}},Symbol.asyncIterator)](){const n=[],i=[];let c=!1;return this.on("streamEvent",p=>{const m=i.shift();m?m.resolve(p):n.push(p)}),this.on("end",()=>{c=!0;for(const p of i)p.resolve(void 0);i.length=0}),this.on("abort",p=>{c=!0;for(const m of i)m.reject(p);i.length=0}),this.on("error",p=>{c=!0;for(const m of i)m.reject(p);i.length=0}),{next:async()=>n.length?{value:n.shift(),done:!1}:c?{value:void 0,done:!0}:new Promise((m,C)=>i.push({resolve:m,reject:C})).then(m=>m?{value:m,done:!1}:{value:void 0,done:!0}),return:async()=>(this.abort(),{value:void 0,done:!0})}}toReadableStream(){return new un(this[Symbol.asyncIterator].bind(this),this.controller).toReadableStream()}}let g6=class extends ro{create(n,i){const{betas:c,...p}=n;return this._client.post("/v1/messages?beta=prompt_caching",{body:p,timeout:this._client._options.timeout??6e5,...i,headers:{"anthropic-beta":[...c??[],"prompt-caching-2024-07-31"].toString(),...i?.headers},stream:n.stream??!1})}stream(n,i){return Jl.createMessage(this,n,i)}};class w1 extends ro{constructor(){super(...arguments),this.messages=new g6(this._client)}}w1.Messages=g6;class sc extends ro{constructor(){super(...arguments),this.messages=new rc(this._client),this.promptCaching=new w1(this._client)}}sc.Messages=rc;sc.PromptCaching=w1;class p6 extends ro{create(n,i){return this._client.post("/v1/complete",{body:n,timeout:this._client._options.timeout??6e5,...i,stream:n.stream??!1})}}var sa=function(a,n,i,c,p){if(c==="m")throw new TypeError("Private method is not writable");if(c==="a"&&!p)throw new TypeError("Private accessor was defined without a setter");if(typeof n=="function"?a!==n||!p:!n.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return c==="a"?p.call(a,i):p?p.value=i:n.set(a,i),i},zA=function(a,n,i,c){if(i==="a"&&!c)throw new TypeError("Private accessor was defined without a getter");if(typeof n=="function"?a!==n||!c:!n.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?c:i==="a"?c.call(a):c?c.value:n.get(a)},ya,ui,xl,yl,E0,M0,Bl,v0,Nn,x0,Dl,Pl,yo,lu,Y4,cu,uu,du,fu,H4;const U4="__json_buf";class ql{constructor(){ya.add(this),this.messages=[],this.receivedMessages=[],ui.set(this,void 0),this.controller=new AbortController,xl.set(this,void 0),yl.set(this,()=>{}),E0.set(this,()=>{}),M0.set(this,void 0),Bl.set(this,()=>{}),v0.set(this,()=>{}),Nn.set(this,{}),x0.set(this,!1),Dl.set(this,!1),Pl.set(this,!1),yo.set(this,!1),cu.set(this,n=>{if(sa(this,Dl,!0,"f"),n instanceof Error&&n.name==="AbortError"&&(n=new Ka),n instanceof Ka)return sa(this,Pl,!0,"f"),this._emit("abort",n);if(n instanceof HA)return this._emit("error",n);if(n instanceof Error){const i=new HA(n.message);return i.cause=n,this._emit("error",i)}return this._emit("error",new HA(String(n)))}),sa(this,xl,new Promise((n,i)=>{sa(this,yl,n,"f"),sa(this,E0,i,"f")}),"f"),sa(this,M0,new Promise((n,i)=>{sa(this,Bl,n,"f"),sa(this,v0,i,"f")}),"f"),zA(this,xl,"f").catch(()=>{}),zA(this,M0,"f").catch(()=>{})}static fromReadableStream(n){const i=new ql;return i._run(()=>i._fromReadableStream(n)),i}static createMessage(n,i,c){const p=new ql;for(const m of i.messages)p._addMessageParam(m);return p._run(()=>p._createMessage(n,{...i,stream:!0},{...c,headers:{...c?.headers,"X-Stainless-Helper-Method":"stream"}})),p}_run(n){n().then(()=>{this._emitFinal(),this._emit("end")},zA(this,cu,"f"))}_addMessageParam(n){this.messages.push(n)}_addMessage(n,i=!0){this.receivedMessages.push(n),i&&this._emit("message",n)}async _createMessage(n,i,c){const p=c?.signal;p&&(p.aborted&&this.controller.abort(),p.addEventListener("abort",()=>this.controller.abort())),zA(this,ya,"m",uu).call(this);const m=await n.create({...i,stream:!0},{...c,signal:this.controller.signal});this._connected();for await(const C of m)zA(this,ya,"m",du).call(this,C);if(m.controller.signal?.aborted)throw new Ka;zA(this,ya,"m",fu).call(this)}_connected(){this.ended||(zA(this,yl,"f").call(this),this._emit("connect"))}get ended(){return zA(this,x0,"f")}get errored(){return zA(this,Dl,"f")}get aborted(){return zA(this,Pl,"f")}abort(){this.controller.abort()}on(n,i){return(zA(this,Nn,"f")[n]||(zA(this,Nn,"f")[n]=[])).push({listener:i}),this}off(n,i){const c=zA(this,Nn,"f")[n];if(!c)return this;const p=c.findIndex(m=>m.listener===i);return p>=0&&c.splice(p,1),this}once(n,i){return(zA(this,Nn,"f")[n]||(zA(this,Nn,"f")[n]=[])).push({listener:i,once:!0}),this}emitted(n){return new Promise((i,c)=>{sa(this,yo,!0,"f"),n!=="error"&&this.once("error",c),this.once(n,i)})}async done(){sa(this,yo,!0,"f"),await zA(this,M0,"f")}get currentMessage(){return zA(this,ui,"f")}async finalMessage(){return await this.done(),zA(this,ya,"m",lu).call(this)}async finalText(){return await this.done(),zA(this,ya,"m",Y4).call(this)}_emit(n,...i){if(zA(this,x0,"f"))return;n==="end"&&(sa(this,x0,!0,"f"),zA(this,Bl,"f").call(this));const c=zA(this,Nn,"f")[n];if(c&&(zA(this,Nn,"f")[n]=c.filter(p=>!p.once),c.forEach(({listener:p})=>p(...i))),n==="abort"){const p=i[0];!zA(this,yo,"f")&&!c?.length&&Promise.reject(p),zA(this,E0,"f").call(this,p),zA(this,v0,"f").call(this,p),this._emit("end");return}if(n==="error"){const p=i[0];!zA(this,yo,"f")&&!c?.length&&Promise.reject(p),zA(this,E0,"f").call(this,p),zA(this,v0,"f").call(this,p),this._emit("end")}}_emitFinal(){this.receivedMessages.at(-1)&&this._emit("finalMessage",zA(this,ya,"m",lu).call(this))}async _fromReadableStream(n,i){const c=i?.signal;c&&(c.aborted&&this.controller.abort(),c.addEventListener("abort",()=>this.controller.abort())),zA(this,ya,"m",uu).call(this),this._connected();const p=un.fromReadableStream(n,this.controller);for await(const m of p)zA(this,ya,"m",du).call(this,m);if(p.controller.signal?.aborted)throw new Ka;zA(this,ya,"m",fu).call(this)}[(ui=new WeakMap,xl=new WeakMap,yl=new WeakMap,E0=new WeakMap,M0=new WeakMap,Bl=new WeakMap,v0=new WeakMap,Nn=new WeakMap,x0=new WeakMap,Dl=new WeakMap,Pl=new WeakMap,yo=new WeakMap,cu=new WeakMap,ya=new WeakSet,lu=function(){if(this.receivedMessages.length===0)throw new HA("stream ended without producing a Message with role=assistant");return this.receivedMessages.at(-1)},Y4=function(){if(this.receivedMessages.length===0)throw new HA("stream ended without producing a Message with role=assistant");const i=this.receivedMessages.at(-1).content.filter(c=>c.type==="text").map(c=>c.text);if(i.length===0)throw new HA("stream ended without producing a content block with type=text");return i.join(" ")},uu=function(){this.ended||sa(this,ui,void 0,"f")},du=function(i){if(this.ended)return;const c=zA(this,ya,"m",H4).call(this,i);switch(this._emit("streamEvent",i,c),i.type){case"content_block_delta":{const p=c.content.at(-1);i.delta.type==="text_delta"&&p.type==="text"?this._emit("text",i.delta.text,p.text||""):i.delta.type==="input_json_delta"&&p.type==="tool_use"&&p.input&&this._emit("inputJson",i.delta.partial_json,p.input);break}case"message_stop":{this._addMessageParam(c),this._addMessage(c,!0);break}case"content_block_stop":{this._emit("contentBlock",c.content.at(-1));break}case"message_start":{sa(this,ui,c,"f");break}}},fu=function(){if(this.ended)throw new HA("stream has ended, this shouldn't happen");const i=zA(this,ui,"f");if(!i)throw new HA("request ended without sending any chunks");return sa(this,ui,void 0,"f"),i},H4=function(i){let c=zA(this,ui,"f");if(i.type==="message_start"){if(c)throw new HA(`Unexpected event order, got ${i.type} before receiving "message_stop"`);return i.message}if(!c)throw new HA(`Unexpected event order, got ${i.type} before "message_start"`);switch(i.type){case"message_stop":return c;case"message_delta":return c.stop_reason=i.delta.stop_reason,c.stop_sequence=i.delta.stop_sequence,c.usage.output_tokens=i.usage.output_tokens,c;case"content_block_start":return c.content.push(i.content_block),c;case"content_block_delta":{const p=c.content.at(i.index);if(p?.type==="text"&&i.delta.type==="text_delta")p.text+=i.delta.text;else if(p?.type==="tool_use"&&i.delta.type==="input_json_delta"){let m=p[U4]||"";m+=i.delta.partial_json,Object.defineProperty(p,U4,{value:m,enumerable:!1,writable:!0}),m&&(p.input=f6(m))}return c}case"content_block_stop":return c}},Symbol.asyncIterator)](){const n=[],i=[];let c=!1;return this.on("streamEvent",p=>{const m=i.shift();m?m.resolve(p):n.push(p)}),this.on("end",()=>{c=!0;for(const p of i)p.resolve(void 0);i.length=0}),this.on("abort",p=>{c=!0;for(const m of i)m.reject(p);i.length=0}),this.on("error",p=>{c=!0;for(const m of i)m.reject(p);i.length=0}),{next:async()=>n.length?{value:n.shift(),done:!1}:c?{value:void 0,done:!0}:new Promise((m,C)=>i.push({resolve:m,reject:C})).then(m=>m?{value:m,done:!1}:{value:void 0,done:!0}),return:async()=>(this.abort(),{value:void 0,done:!0})}}toReadableStream(){return new un(this[Symbol.asyncIterator].bind(this),this.controller).toReadableStream()}}class h6 extends ro{create(n,i){return n.model in K4&&console.warn(`The model '${n.model}' is deprecated and will reach end-of-life on ${K4[n.model]}
Please migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.`),this._client.post("/v1/messages",{body:n,timeout:this._client._options.timeout??6e5,...i,stream:n.stream??!1})}stream(n,i){return ql.createMessage(this,n,i)}}const K4={"claude-1.3":"November 6th, 2024","claude-1.3-100k":"November 6th, 2024","claude-instant-1.1":"November 6th, 2024","claude-instant-1.1-100k":"November 6th, 2024","claude-instant-1.2":"November 6th, 2024"};var m6;class Gr extends Uk{constructor({baseURL:n=ru("ANTHROPIC_BASE_URL"),apiKey:i=ru("ANTHROPIC_API_KEY")??null,authToken:c=ru("ANTHROPIC_AUTH_TOKEN")??null,...p}={}){const m={apiKey:i,authToken:c,...p,baseURL:n||"https://api.anthropic.com"};if(!m.dangerouslyAllowBrowser&&aE())throw new HA(`It looks like you're running in a browser-like environment.

This is disabled by default, as it risks exposing your secret API credentials to attackers.
If you understand the risks and have appropriate mitigations in place,
you can set the \`dangerouslyAllowBrowser\` option to \`true\`, e.g.,

new Anthropic({ apiKey, dangerouslyAllowBrowser: true });

TODO: link!
`);super({baseURL:m.baseURL,timeout:m.timeout??6e5,httpAgent:m.httpAgent,maxRetries:m.maxRetries,fetch:m.fetch}),this.completions=new p6(this),this.messages=new h6(this),this.beta=new sc(this),this._options=m,this.apiKey=i,this.authToken=c}defaultQuery(){return this._options.defaultQuery}defaultHeaders(n){return{...super.defaultHeaders(n),...this._options.dangerouslyAllowBrowser?{"anthropic-dangerous-direct-browser-access":"true"}:void 0,"anthropic-version":"2023-06-01",...this._options.defaultHeaders}}validateHeaders(n,i){if(!(this.apiKey&&n["x-api-key"])&&i["x-api-key"]!==null&&!(this.authToken&&n.authorization)&&i.authorization!==null)throw new Error('Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the "X-Api-Key" or "Authorization" headers to be explicitly omitted')}authHeaders(n){const i=this.apiKeyAuth(n),c=this.bearerAuth(n);return i!=null&&!Zl(i)?i:c!=null&&!Zl(c)?c:{}}apiKeyAuth(n){return this.apiKey==null?{}:{"X-Api-Key":this.apiKey}}bearerAuth(n){return this.authToken==null?{}:{Authorization:`Bearer ${this.authToken}`}}}m6=Gr;Gr.Anthropic=m6;Gr.HUMAN_PROMPT=`

Human:`;Gr.AI_PROMPT=`

Assistant:`;Gr.DEFAULT_TIMEOUT=6e5;Gr.AnthropicError=HA;Gr.APIError=zs;Gr.APIConnectionError=ec;Gr.APIConnectionTimeoutError=e6;Gr.APIUserAbortError=Ka;Gr.NotFoundError=s6;Gr.ConflictError=a6;Gr.RateLimitError=i6;Gr.BadRequestError=t6;Gr.AuthenticationError=A6;Gr.InternalServerError=o6;Gr.PermissionDeniedError=r6;Gr.UnprocessableEntityError=n6;Gr.toFile=Lk;Gr.fileFromPath=$I;const{HUMAN_PROMPT:RE,AI_PROMPT:jE}=Gr;Gr.Completions=p6;Gr.Messages=h6;Gr.Beta=sc;const ac=16e3,k1=ac/1e3,uE=.3,dE=.1,fE=400,gE=fE*k1,pE=80,C6=pE*k1,hE=250*k1,mE=30,CE=512,bE=Math.ceil(C6/CE),IE="onnx-community/Kokoro-82M-v1.0-ONNX";let E1;const M1=await h1.from_pretrained(IE,{dtype:"fp32",device:"webgpu"}),Ou="webgpu";self.postMessage({type:"info",message:`Using device: "${Ou}"`});self.postMessage({type:"info",message:"Loading models...",duration:"until_next"});const wE=await nk.from_pretrained("onnx-community/silero-vad",{config:{model_type:"custom"},dtype:"fp32",device:"webgpu"}).catch(a=>{throw self.postMessage({error:a}),a}),kE={webgpu:{encoder_model:"fp32",decoder_model_merged:"fp32"},wasm:{encoder_model:"fp32",decoder_model_merged:"q8"}},b6=await ck("automatic-speech-recognition","onnx-community/whisper-base",{device:Ou,dtype:kE[Ou]}).catch(a=>{throw self.postMessage({error:a}),a});await b6(new Float32Array(ac));const EE=new Gr({apiKey:"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",dangerouslyAllowBrowser:!0}),ME={role:"system",content:String.raw`**CONTEXT**

You are a high-performing sales coach helping HubSpot sales reps improve their discovery skills through realistic role-play practice. During role-play, you embody a prospect who responded to their outreach email and agreed to a 30-minute conversation.

**SCENARIO**

When a sales rep first connects, you will receive a special message <<CONNECT>>. When received:
1. Introduce yourself as their sales coach. Your name is Emma.
2. Explain you'll be role-playing as a prospect (default: Olivia Chen, 39 years old, female, asian, Commercial Director at Tratos Group)
3. Provide brief context: "I'm a Commercial Director at Tratos Group. I don't know much about HubSpot but I'm curious to learn more."
4. Give clear instructions: "When you're ready to begin, greet me with 'Hello Olivia, how is your day?'"
5. Offer flexibility: "If you'd prefer a different persona, let me know the company name/website and role you'd like to practice with, plus which competitor they're currently using (e.g., Salesforce, Microsoft Dynamics, Zoho)."

**OUTPUT FORMAT**
1. Your output is used as input for a Text-To-Speech (TTS) engine, which takes everything literally.
2. Avoid any system-level messages and special characters.
3. You must ALWAYS generate dialogue lines: plain text that represents speech of either Emma or one of the personas.
4. Do not be overly verbose. Try to split your responces into short, concise sentences.
5. During the role-play, do not try to satisfy the user or be compliant. REMEMBER: your objective is to help the user to improve their sales skills.
6. When the role-play starts, add the following prefix:
'''
<<PERSONA
Name: {name}
Position: {position}
Company: {company}
Age: {age}
Gender: {gender}
Race: {race}
C-Level: {c-level}
>>
'''
to the first (!) message from this persona, where:
- '{name}' is a full name of the persona (default: Olivia Chen);
- '{position}' is the position in a company (default: Commercial Director);
- '{company}' is the company name where the persona works;
- '{age}' is a numeric value, your guess about the age of the persona, based on what you know about them (for instance, startup founders are usually younger than C-levels in large companies);
- '{gender}' is either 'male' or 'female'. This is your guess about the gender of the persona, mostly based on their name and (optionally) on other data you have;
- '{race}' is either 'caucasian' or 'asian'. This is your guess about the race based on what you know about the persona. Could be based on name, explicit data about gender (if you have it), company location, etc.;
- '{c-level}' is either 'true' or 'false' and is based on whether the '{position}' field a C-level position within the company.

Example for the default persona:
'''
<<PERSONA
Name: Olivia Chen
Position: Commercial Director
Company: Tratos Group
Age: 39
Gender: female
Race: asian
C-Level: false
>>
'''

Only add it to the first message when the role-play begins and NEVER add it to any other messages. If the sales rep requested a different persona and the persona was changed from the default one, generate the '<<PERSONA ... >>' prefix based on the new persona.


**OBJECTIVES**

The sales rep has the following objectives:
1. Make the persona count to five (considered accomplished only if the persona had counting a part of their reply).

2. Find out if she turned off the iron this morning (considered accomplished only if the persona actually answered this, the question from the sales rep alone is not enough).

Before generating any reply of the persona, check if the objectives were met. If yes, add the following prefix containing the numeric ID of the accomplished objective, in the beginning of the persona's reply, for example:
'''
<<OBJ 1>>
'''
in the beginning of the message would mean the objective #1 is accomplished.
'''
<<OBJ 2>>
'''
in the beginning of the message would mean the objective #2 is accomplished.
Do it only once per objective.


**IF SALES REP REQUESTS DIFFERENT PERSONA:**

1. Confirm the company name/website and role/title
2. Ask: "Which competitor are they currently using?" (so you know what challenges to discuss)
3. Say: "Give me a moment to research this company" then complete the research checklist below
4. Once ready, provide brief context about the new persona and begin

**COMPANY & ROLE RESEARCH**

**Default Persona**: Olivia Chen, Commercial Director at Tratos Group ([tratosgroup.com](http://tratosgroup.com))

**Research Checklist** (complete before EVERY role-play using web search):

1. **Company Overview**
    - Industry and sector
    - Company size (employees, revenue if available)
    - Primary products/services
    - Geographic presence/markets served
2. **Business Context**
    - Recent news, growth, acquisitions or changes
    - Key business initiatives or strategic priorities
    - Market position and competitors
3. **Role-Specific Insights**
    - Typical responsibilities for this role/title at a company this size
    - Common challenges this role faces in this industry
    - Key metrics they likely care about
4. **Potential Pain Points**
    - Industry-specific challenges (e.g., manufacturing = high competition on the market. Major global players with significant market share and R&D capabilities)
    - Common tech stack issues for companies in this sector  (e.g. users are not tech savvy and adoption of new systems is low)
    - Typical sales/marketing challenges for this company size and industry

**Use Research to:**

- Answer questions with realistic, company-specific context
- Reference actual company details naturally ("Given our project-based sales model..." or "With our international operations...")
- Identify plausible pain points that align with their industry and the competitor they're using
- Create a believable root cause challenge that could justify a CRM change

**Example**: If researching Tratos Group, you'd discover they're a cable manufacturer with complex, project-based B2B sales (£25K-£2M deals) competing with companies like Prysmian Group who are dominant forces in the cable market. They likely face challenges with capturing demand and long sales cycles. They also actively grow through acquisition which means they likely struggle with disparate CRM systems, scattered customer data and standardising sales and marketing processes.

**ROLE-PLAY BEHAVIOR**

- Act as a realistic prospect who joined a scheduled call
- Greet the rep warmly and wait for them to lead
- NEVER say "How can I help you?" or "What can I assist with?"—you're the prospect, not the helper
- Answer questions directly but concisely—don't volunteer extra information
- Make the rep work to uncover details through good questioning

**CURRENT TECH STACK.** Default for Tratos only. 

Share only if asked:

- CRM: Microsoft Dynamics
- Marketing: SEMrush (SEO/social media)
- Analytics: Lead Forensics (website visitor tracking)

*Note:* If a sales rep requests a different persona, *Adjust tech stack based on which competitor a sales rep names.*

**TECH CHALLENGES - PROGRESSIVE REVEAL**

Reveal information in layers—don't give everything at once:

**Surface Level** (first mention):

- "Our CRM [name] is quite complex for the team"

**Mid Level** (if they probe deeper):

- "We have fragmented data across multiple systems"
- "Heavy reliance on manual data entry"

**Deeper Level** (if they continue digging):

- "no ability to track full customer journey"
- "lack of lead to revenue reporting and visibility what works well and what doesn’t”

**ROOT CAUSE** (only if rep digs deep with great questions):

Reveal the financial impact of disconnected tools. Scale appropriately:

- **Small business (10-50 employees)**: "We're losing £50K-£500K annually in missed opportunities from 25-30% lead follow-up failures"
- **Mid-market (50-500 employees)**: "We're losing £500K-£5M annually—with 25-30% lead follow-up failure and average deal sizes of [appropriate range], we're missing significant revenue"
- **Enterprise (500+ employees)**: "We're losing £5M-£50M+ annually in missed opportunities from poor lead management"

**For Tratos Group specifically**: "25-30% lead follow-up failure with average deal sizes of £25K-£2M means we're potentially missing £1.5-15M in opportunities annually"

**If rep reaches root cause, ask**: "How specifically can HubSpot help solve this issue?"

**ANSWERING STRATEGY**

- Give ONE piece of information per answer
- Create opportunities for follow-up questions
- Example: If asked about challenges, say "Microsoft Dynamics is complex for our team" and STOP—let them ask "What do you mean by complex?" rather than explaining everything
- Challenge reps on specifics - ask "how does that work for *my* industry?"
- Leading with business outcomes and challenges before features

**ENDING THE ROLE-PLAY**

The role-play ends when:

- You agree on clear next steps (meeting, proposal, demo, etc.), OR
- The rep says goodbye or indicates they're finished

**POST ROLE-PLAY COACHING**

1. Thank them for the practice
2. Provide specific, actionable feedback:
    - **One thing done well** (be specific—avoid generic comments like "good rapport")
    - **One thing to improve** (actionable, tied to "PROVES" methodology)
3. Ask: "Would you like to discuss anything about "PROVES" or sales methodology?"

**COACHING FRAMEWORK**

All feedback and guidance must be rooted in:

- HubSpot's "PROVES" methodology
- Specific behaviors observed during the role-play

**VOICE & TONE**

- **As Prospect**: Professional but approachable, busy, mildly interested, needs convincing, realistic
- **As Coach**: Supportive, specific, developmental, encouraging
- Balance challenge (as prospect) with encouragement (as coach)`};let Fo=[],fi=null;self.postMessage({type:"status",status:"ready",message:"Ready!",voices:M1.voices});const Lo=new Float32Array(mE*ac);let gi=0;const vE=new Wo("int64",[ac],[]);let gu=new Wo("float32",new Float32Array(2*1*128),[2,1,128]),Ki=!1,pi=!1,Ol=!1,hi={authToken:"",initiatorCommand:"",dbgIsUserMuted:!1,dbgIsSystemMuted:!1,systemPrompt:""},$l=0,_u=0;const zn=[];let pu=!1;const F0={Speech:"Speech",NotSpeech:"NotSpeech",Failure:"Failure"};function xE(a){let n=0;for(let c=0;c<a.length;c++)n=n*31+a.charCodeAt(c)>>>0;function i(c){return function(){c|=0,c=c+1831565813|0;let p=Math.imul(c^c>>>15,1|c);return p=p+Math.imul(p^p>>>7,61|p)^p,((p^p>>>14)>>>0)/4294967296}}return i(n)}async function yE(a){const n=new Wo("float32",a,[1,a.length]);try{const{stateN:i,output:c}=await wE({input:n,sr:vE,state:gu});gu=i;const p=c.data[0];return p>uE||Ki&&p>=dE?F0.Speech:F0.NotSpeech}catch{return console.error("exception inside vad()"),gu=new Wo("float32",new Float32Array(2*1*128),[2,1,128]),F0.Failure}}const BE=async a=>{const n=a.split(`
`);if(n[0]==="PERSONA"){const i={name:"Olivia Chen",position:"Commercial Director",company:"Tratos Group",age:39,gender:"female",race:"asian",clevel:!1};for(let I=1;I<n.length;I++){const E=n[I],x=E.indexOf(":");if(x!==-1){const D=E.substring(0,x).trim(),y=E.substring(x+1).trim();if(D==="Name")i.name=y;else if(D==="Position")i.position=y;else if(D==="Company")i.company=y;else if(D==="Age"){const M=parseInt(y,10);isNaN(M)?console.log("SYSTEM PREFIX PARSING ERROR: Age"):i.age=M}else D==="Gender"?i.gender=y:D==="Race"?i.race=y:D==="C-Level"&&(i.clevel=y.toLowerCase()==="true")}}const c=(i.gender==="female"?"f":"m")+(i.age<35?"y":"o")+(i.race==="asian"?"a":"c")+(i.clevel===!0?"t":"f")+"-0.jpg",p=xE(i.name),m=I=>I[Math.floor(p()*I.length)],C=i.gender==="female"?m(["af_heart","af_kore","af_nova"]):i.age<35?i.race==="asian"?"am_fenrir":m(["am_puck","bm_daniel"]):i.race==="asian"?"am_michael":m(["am_michael","bm_george"]);self.postMessage({type:"update_persona",name:i.name,position:i.position,company:i.company,photo:c,voice:C})}else if(n[0].startsWith("OBJ")){const i=parseInt(n[0].substring(3).trim(),10);isNaN(i)||self.postMessage({type:"update_objective",id:i})}},I6=async a=>{Fo.push({role:"user",content:a}),console.log(`USER: ${a}`),self.postMessage({type:"transcription",author:"You",text:a,isMe:!0});const n=new Xl,i=performance.now(),c=M1.stream(n,{voice:E1});fi=new AbortController,fi.signal.addEventListener("abort",()=>{pi=!1,console.log("Aborting TTS stream"),n._closed||n.close()});let p=null;(async()=>{Ol=!0;for await(const{text:C,phonemes:I,audio:E}of c){if(console.log(`abortController?.signal.aborted=${fi?.signal.aborted} isPlaying=${pi}`),fi?.signal.aborted){console.log("TTS stream interrupted"),n._closed||(console.log("Splitter was not closed. Closing"),n.close()),Ol=!1;return}p||(p=performance.now(),console.log(`TTS first chunk latency: ${(p-i).toFixed(2)}ms`)),pi=!0,console.log("Posting audio for playing..."),self.postMessage({type:"output",text:C,result:E})}Ol=!1;const m=performance.now();console.log(`TTS total time: ${(m-i).toFixed(2)}ms`)})();try{console.log("Calling Claude API with messages:",Fo);const m=await EE.messages.stream({model:"claude-3-7-sonnet-20250219",max_tokens:500,temperature:1,system:hi.systemPrompt===""?ME.content:hi.systemPrompt,messages:Fo},{signal:fi.signal});console.log("Claude stream created successfully");let C="",I=0,E="",x=!1,D=!0;for await(const y of m)if(I++,I===1&&console.log("Started receiving Claude events..."),y.type==="content_block_delta"&&y.delta.type==="text_delta"){console.log("EVENT");let M=D?y.delta.text.trimStart():y.delta.text,S,F=!1;do{if(S=!1,M.length===0){F=!0;break}if(D&&M==="<"){E="<",F=!0;break}if(D&&E==="<"&&(M[0]!=="<"||M.length>1&&M[1]==="<"?M="<"+M:(M=M.substring(1),x=!0),E="",D=!1),x&&E.endsWith(">")&&(M[0]!==">"||M.length>1&&M[1]===">"?(M=E+M,E=""):(M=M.substring(1),E.slice(0,-1)),x=!1),M.startsWith("<<")&&D||x){const L=M.indexOf(">>");L!==-1?(E+=M.substring(x?0:2,L),console.log(`PREFIX FINALIZED: ${E}`),M=M.substring(L+2),x=!1,await BE(E),E="",D=!0,S=!0):(E+=x?M:M.substring(2),console.log(`PREFIX UPDATED: ${E}`),M="",x=!0)}}while(S);if(F){F=!1;continue}C+=M,!hi.dbgIsSystemMuted&&M!==""&&n.push(M),D=!1}console.log(`Total events received: ${I}`),n.close(),Fo.push({role:"assistant",content:C}),self.postMessage({type:"transcription",author:"System",text:C,isMe:!1})}catch(m){if(console.log("Exception caught"),fi=null,m.name==="AbortError")n.close();else throw console.error("Claude API error:",m),n.close(),m}finally{}},DE=async(a,n)=>{console.log("_speechToSpeechInternal()");let i;if(n?.type!=="dbg_text_user_speech"){for(;$l>0;)console.log(`Waiting for ${$l} pending VAD calls to finish...`),await new Promise(c=>setTimeout(c,10));if(i=await b6(a).then(({text:c})=>c.trim()),["","[BLANK_AUDIO]"].includes(i))return}else i=a;await I6(i)},PE=async()=>{if(pu||zn.length===0)return;pu=!0,_u++;const{buffer:a,data:n}=zn.shift();if(console.log(`Processing queued speechToSpeech (${zn.length} remaining in queue)`),await DE(a,n),zn.length>0){const i=zn.filter(p=>p.data?.type==="dbg_text_user_speech"),c=zn.length-i.length;c>0&&(console.log(`Clearing ${c} queued speechToSpeech calls (keeping ${i.length} dbg_text_user_speech)`),zn.length=0,zn.push(...i))}_u--,pu=!1},w6=async(a,n={})=>{console.log("speechToSpeech() - adding to queue"),zn.push({buffer:a,data:n}),PE()};let _l=0;const TE=(a=0)=>{Lo.fill(0,a),gi=a,Ki=!1,_l=0},k6=(a=0)=>{self.postMessage({type:"status",status:"recording_end",message:"Transcribing...",duration:"until_next"}),TE(a)},X4=a=>{const n=a?.length??0,i=Lo.slice(0,gi+C6),c=O0.reduce((C,I)=>C+I.length,0),p=new Float32Array(c+i.length);let m=0;for(const C of O0)p.set(C,m),m+=C.length;p.set(i,m),w6(p),a&&Lo.set(a,0),k6(n)};let O0=[];self.onmessage=async a=>{const{type:n,buffer:i}=a.data;if(n==="audio"&&(pi||Ol))return;switch(n!=="audio"&&console.log(`onmessage(type=${n}, buffer.length=${i===void 0?0:i.length}): isPlaying=${pi} isRecording=${Ki}`),n){case"start_call":{hi.initiatorCommand!=""?await QE(hi.initiatorCommand):GE("Hi, it's Emma. How are you?");return}case"end_call":Fo=[];case"interrupt":fi?.abort();return;case"set_voice":console.log(`VOICE UPDATE RECEIVED: ${a.data.voice}`),console.log(a),E1=a.data.voice;return;case"playback_ended":pi=!1;return;case"dbg_text_user_speech":w6(a.data.text,{type:"dbg_text_user_speech"});return;case"set_config":hi=a.data.config,console.log("SYSTEM CONFIG RECEIVED:"),console.log(hi);return}const c=Ki;let p=!1;if(_u===0&&($l++,p=await yE(i),$l--),p===F0.Failure){console.warn("VAD failure");return}const m=p===F0.Speech;if(m===!0&&console.log(`isRecording=${Ki} isSpeech=${m}`),!c&&!m){O0.length>=bE&&O0.shift(),O0.push(i);return}const C=Lo.length-gi;if(i.length>=C){Lo.set(i.subarray(0,C),gi),gi+=C;const I=i.subarray(C);console.log("onmessage() -> dispatchForTranscriptionAndResetAudioBuffer()"),X4(I);return}else Lo.set(i,gi),gi+=i.length;if(m){Ki||(pi=!1,fi?.abort(),self.postMessage({type:"status",status:"recording_start",message:"Listening...",duration:"until_next"})),Ki=!0,_l=0;return}if(_l+=i.length,c===!0){if(_l<gE)return;if(gi<hE){k6();return}}X4()};function GE(a){if(console.log("greet_plain(): "+a),!hi.dbgIsSystemMuted){pi=!0;const n=new Xl,i=M1.stream(n,{voice:E1});(async()=>{for await(const{text:c,audio:p}of i)self.postMessage({type:"output",text:c,result:p})})(),n.push(a),n.close()}Fo.push({role:"assistant",content:a}),self.postMessage({type:"transcription",author:"System",text:a,isMe:!1})}async function QE(a){(async()=>await I6(a))()}
